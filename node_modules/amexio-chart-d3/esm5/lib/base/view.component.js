/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { GroupbarComponent } from '../groupbar/groupbar.component';
import { AmexioD3BarChartComponent } from '../bar/bar.component';
import { AmexioD3DounutChartComponent } from '../dounut/dounut.component';
import { AmexioD3PieChartComponent } from '../pie/pie.component';
import { AmexioD3LineComponent } from '../line/line.component';
import { BarstackComponent } from '../barstack/barstack.component';
import { CombochartComponent } from '../combochart/combochart.component';
import { HistogramComponent } from '../histogram/histogram.component';
import { ScatterchartComponent } from '../scatterchart/scatterchart.component';
import { MultiareaComponent } from '../multiarea/multiarea.component';
import { CandlestickComponent } from '../candlestick/candlestick.component';
import { BubbleComponent } from '../bubble/bubble/bubble.component';
import { ContentChildren, QueryList } from '@angular/core';
var ViewDrillableComponent = /** @class */ (function () {
    function ViewDrillableComponent() {
    }
    /**
     * @return {?}
     */
    ViewDrillableComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    ViewDrillableComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        return this.getComponentData();
    };
    /**
     * @return {?}
     */
    ViewDrillableComponent.prototype.getComponentData = /**
     * @return {?}
     */
    function () {
        this.chartInputArray = [];
        this.barchartinput = this.queryBarchartinput.toArray();
        this.groupbarchartinput = this.QueryGroupbarchartinput.toArray();
        this.linechartinput = this.QueryLinechartinput.toArray();
        this.donutchartinput = this.QueryDonutchartinput.toArray();
        this.piechartinput = this.QueryPiechartinput.toArray();
        this.barstackchartinput = this.QueryBarStackchartinput.toArray();
        this.combochartinput = this.QueryCombochartinput.toArray();
        this.histogramchartinput = this.QueryHistogramchartinput.toArray();
        this.scatterchartinput = this.QuerySatterchartinput.toArray();
        this.multiareachartinput = this.QueryMultiareachartinput.toArray();
        this.candlestickchartinput = this.QueryCandlestickchartinput.toArray();
        this.bubblechartinput = this.QueryBubblechartinput.toArray();
        this.chartInputArray = this.chartInputArray.concat(this.barchartinput, this.groupbarchartinput, this.linechartinput, this.donutchartinput, this.piechartinput, this.barstackchartinput, this.combochartinput, this.histogramchartinput, this.scatterchartinput, this.multiareachartinput, this.candlestickchartinput, this.bubblechartinput);
        return this.chartInputArray;
    };
    ViewDrillableComponent.propDecorators = {
        queryBarchartinput: [{ type: ContentChildren, args: [AmexioD3BarChartComponent, { descendants: true },] }],
        QueryGroupbarchartinput: [{ type: ContentChildren, args: [GroupbarComponent, { descendants: true },] }],
        QueryLinechartinput: [{ type: ContentChildren, args: [AmexioD3LineComponent, { descendants: true },] }],
        QueryPiechartinput: [{ type: ContentChildren, args: [AmexioD3PieChartComponent, { descendants: true },] }],
        QueryDonutchartinput: [{ type: ContentChildren, args: [AmexioD3DounutChartComponent, { descendants: true },] }],
        QueryBarStackchartinput: [{ type: ContentChildren, args: [BarstackComponent, { descendants: true },] }],
        QueryCombochartinput: [{ type: ContentChildren, args: [CombochartComponent, { descendants: true },] }],
        QueryHistogramchartinput: [{ type: ContentChildren, args: [HistogramComponent, { descendants: true },] }],
        QuerySatterchartinput: [{ type: ContentChildren, args: [ScatterchartComponent, { descendants: true },] }],
        QueryMultiareachartinput: [{ type: ContentChildren, args: [MultiareaComponent, { descendants: true },] }],
        QueryCandlestickchartinput: [{ type: ContentChildren, args: [CandlestickComponent, { descendants: true },] }],
        QueryBubblechartinput: [{ type: ContentChildren, args: [BubbleComponent, { descendants: true },] }]
    };
    return ViewDrillableComponent;
}());
export { ViewDrillableComponent };
if (false) {
    /** @type {?} */
    ViewDrillableComponent.prototype.queryBarchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.barchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryGroupbarchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.groupbarchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryLinechartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.linechartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryPiechartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.piechartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryDonutchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.donutchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryBarStackchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.barstackchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryCombochartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.combochartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryHistogramchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.histogramchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QuerySatterchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.scatterchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryMultiareachartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.multiareachartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryCandlestickchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.candlestickchartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.QueryBubblechartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.bubblechartinput;
    /** @type {?} */
    ViewDrillableComponent.prototype.chartInputArray;
}
//# sourceMappingURL=data:application/json;base64,