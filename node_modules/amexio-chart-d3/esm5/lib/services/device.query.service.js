/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { isPlatformBrowser } from '@angular/common';
import { Inject, Injectable, PLATFORM_ID } from '@angular/core';
var DeviceQueryService = /** @class */ (function () {
    function DeviceQueryService(platformId) {
        this.platformId = platformId;
        this.rules = {
            print: 'print',
            screen: 'screen',
            phone: '(max-width: 767px)',
            tablet: '(min-width: 768px) and (max-width: 1024px)',
            desktop: '(min-width: 1025px)',
            portrait: '(orientation: portrait)',
            landscape: '(orientation: landscape)',
            retina: '(-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi)',
        };
        this.Check = function (mq) {
            if (isPlatformBrowser(this.platformId)) {
                if (!mq) {
                    return;
                }
                return window.matchMedia(mq).matches;
            }
            else {
                return;
            }
        };
        this.IsTablet = function () {
            if (isPlatformBrowser(this.platformId)) {
                return window.matchMedia(this.rules.tablet).matches;
            }
            else {
                return null;
            }
        };
        this.IsDesktop = function () {
            if (isPlatformBrowser(this.platformId)) {
                return window.matchMedia(this.rules.desktop).matches;
            }
            else {
                return null;
            }
        };
        this.IsPortrait = function () {
            if (isPlatformBrowser(this.platformId)) {
                return window.matchMedia(this.rules.portrait).matches;
            }
            else {
                return null;
            }
        };
        this.IsLandscape = function () {
            if (isPlatformBrowser(this.platformId)) {
                return window.matchMedia(this.rules.landscape).matches;
            }
            else {
                return null;
            }
        };
        this.IsRetina = function () {
            if (isPlatformBrowser(this.platformId)) {
                return window.matchMedia(this.rules.retina).matches;
            }
            else {
                return null;
            }
        };
        this.browserWindow = function () {
            return window;
        };
    }
    /**********************************************
     METHODS FOR CHECKING TYPE
     **********************************************/
    /**
     * *******************************************
     * METHODS FOR CHECKING TYPE
     * ********************************************
     * @return {?}
     */
    DeviceQueryService.prototype.IsPhone = /**
     * *******************************************
     * METHODS FOR CHECKING TYPE
     * ********************************************
     * @return {?}
     */
    function () {
        if (isPlatformBrowser(this.platformId)) {
            return window.matchMedia(this.rules.phone).matches;
        }
        else {
            return null;
        }
    };
    /**********************************************
     EVENT LISTENERS BY TYPE
     **********************************************/
    /**
     * *******************************************
     * EVENT LISTENERS BY TYPE
     * ********************************************
     * @param {?} callBack
     * @return {?}
     */
    DeviceQueryService.prototype.OnPhone = /**
     * *******************************************
     * EVENT LISTENERS BY TYPE
     * ********************************************
     * @param {?} callBack
     * @return {?}
     */
    function (callBack) {
        if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {
            /** @type {?} */
            var mql = window.matchMedia(this.rules.phone);
            this.mqlMethod(callBack, mql);
        }
    };
    /**
     * @param {?} callBack
     * @return {?}
     */
    DeviceQueryService.prototype.OnTablet = /**
     * @param {?} callBack
     * @return {?}
     */
    function (callBack) {
        if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {
            /** @type {?} */
            var mql = window.matchMedia(this.rules.tablet);
            this.mqlMethod(callBack, mql);
        }
    };
    /**
     * @param {?} callBack
     * @return {?}
     */
    DeviceQueryService.prototype.OnDesktop = /**
     * @param {?} callBack
     * @return {?}
     */
    function (callBack) {
        if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {
            /** @type {?} */
            var mql = window.matchMedia(this.rules.desktop);
            this.mqlMethod(callBack, mql);
        }
    };
    /**
     * @param {?} callBack
     * @return {?}
     */
    DeviceQueryService.prototype.OnPortrait = /**
     * @param {?} callBack
     * @return {?}
     */
    function (callBack) {
        if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {
            /** @type {?} */
            var mql = window.matchMedia(this.rules.portrait);
            this.mqlMethod(callBack, mql);
        }
    };
    /**
     * @param {?} callBack
     * @return {?}
     */
    DeviceQueryService.prototype.OnLandscape = /**
     * @param {?} callBack
     * @return {?}
     */
    function (callBack) {
        if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {
            /** @type {?} */
            var mql = window.matchMedia(this.rules.landscape);
            this.mqlMethod(callBack, mql);
        }
    };
    /**
     * @param {?} callBack
     * @param {?} mql
     * @return {?}
     */
    DeviceQueryService.prototype.mqlMethod = /**
     * @param {?} callBack
     * @param {?} mql
     * @return {?}
     */
    function (callBack, mql) {
        mql.addListener(function (mql1) {
            if (mql1.matches) {
                callBack(mql);
            }
        });
    };
    DeviceQueryService.decorators = [
        { type: Injectable },
    ];
    DeviceQueryService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
    ]; };
    return DeviceQueryService;
}());
export { DeviceQueryService };
if (false) {
    /** @type {?} */
    DeviceQueryService.prototype.rules;
    /** @type {?} */
    DeviceQueryService.prototype.Check;
    /** @type {?} */
    DeviceQueryService.prototype.IsTablet;
    /** @type {?} */
    DeviceQueryService.prototype.IsDesktop;
    /** @type {?} */
    DeviceQueryService.prototype.IsPortrait;
    /** @type {?} */
    DeviceQueryService.prototype.IsLandscape;
    /** @type {?} */
    DeviceQueryService.prototype.IsRetina;
    /** @type {?} */
    DeviceQueryService.prototype.browserWindow;
    /** @type {?} */
    DeviceQueryService.prototype.platformId;
}
//# sourceMappingURL=data:application/json;base64,