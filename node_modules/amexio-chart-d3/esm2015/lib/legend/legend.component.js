/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from "@angular/core";
export class AmexioD3Legend {
    constructor() {
        this.horizontal = false;
        this.onClick = new EventEmitter();
    }
    /**
     * @param {?} node
     * @return {?}
     */
    onLegendClick(node) {
        this.onClick.emit(node);
    }
}
AmexioD3Legend.decorators = [
    { type: Component, args: [{
                selector: 'amexio-d3-legend',
                template: `<div style =" width: 100% ; padding-left: 20px; padding-top: 8px; ">
<table *ngIf="!horizontal" style="height: 100%;">
    <tr *ngFor = "let node of data" style="cursor: pointer;" (click)="onLegendClick(node)">
        <td style="height: 10px; width: 23px; padding-left: 2px;"
            [ngStyle]="{'background-color': node.color}"></td>
        <td>{{node.label}}</td>
    </tr>
</table>
</div>

<table *ngIf="horizontal" style="height: 100%;">
    <tr>
        <td *ngFor = "let node of data" 
                    (click)="onLegendClick(node)" 
                    style="cursor: pointer;">
            
            <div style=" display: inline-block; display: inline-block; padding: 2px;">
                    <div style=" width: 10px; display: inline-block; padding: 2px; " 
                    [ngStyle]="{'background-color': node.color}"></div>
                {{node.label}}
            </div>
        </td>
        
    </tr>
</table>`
            },] },
];
AmexioD3Legend.ctorParameters = () => [];
AmexioD3Legend.propDecorators = {
    data: [{ type: Input, args: ['data',] }],
    horizontal: [{ type: Input, args: ['horizontal',] }],
    onClick: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    AmexioD3Legend.prototype.data;
    /** @type {?} */
    AmexioD3Legend.prototype.horizontal;
    /** @type {?} */
    AmexioD3Legend.prototype.onClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGVnZW5kLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FtZXhpby1jaGFydC1kMy8iLCJzb3VyY2VzIjpbImxpYi9sZWdlbmQvbGVnZW5kLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQThCdkUsTUFBTTtJQVNGO1FBSnFCLGVBQVUsR0FBYSxLQUFLLENBQUM7UUFFeEMsWUFBTyxHQUFTLElBQUksWUFBWSxFQUFPLENBQUM7SUFJbEQsQ0FBQzs7Ozs7SUFFRCxhQUFhLENBQUMsSUFBUTtRQUNsQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1QixDQUFDOzs7WUEzQ0osU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRyxrQkFBa0I7Z0JBQzdCLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1NBd0JMO2FBQ1I7Ozs7bUJBSUksS0FBSyxTQUFDLE1BQU07eUJBRVosS0FBSyxTQUFDLFlBQVk7c0JBRWxCLE1BQU07Ozs7SUFKUCw4QkFBMEI7O0lBRTFCLG9DQUFrRDs7SUFFbEQsaUNBQWtEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvciA6ICdhbWV4aW8tZDMtbGVnZW5kJyxcbiAgICB0ZW1wbGF0ZTogYDxkaXYgc3R5bGUgPVwiIHdpZHRoOiAxMDAlIDsgcGFkZGluZy1sZWZ0OiAyMHB4OyBwYWRkaW5nLXRvcDogOHB4OyBcIj5cbjx0YWJsZSAqbmdJZj1cIiFob3Jpem9udGFsXCIgc3R5bGU9XCJoZWlnaHQ6IDEwMCU7XCI+XG4gICAgPHRyICpuZ0ZvciA9IFwibGV0IG5vZGUgb2YgZGF0YVwiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyO1wiIChjbGljayk9XCJvbkxlZ2VuZENsaWNrKG5vZGUpXCI+XG4gICAgICAgIDx0ZCBzdHlsZT1cImhlaWdodDogMTBweDsgd2lkdGg6IDIzcHg7IHBhZGRpbmctbGVmdDogMnB4O1wiXG4gICAgICAgICAgICBbbmdTdHlsZV09XCJ7J2JhY2tncm91bmQtY29sb3InOiBub2RlLmNvbG9yfVwiPjwvdGQ+XG4gICAgICAgIDx0ZD57e25vZGUubGFiZWx9fTwvdGQ+XG4gICAgPC90cj5cbjwvdGFibGU+XG48L2Rpdj5cblxuPHRhYmxlICpuZ0lmPVwiaG9yaXpvbnRhbFwiIHN0eWxlPVwiaGVpZ2h0OiAxMDAlO1wiPlxuICAgIDx0cj5cbiAgICAgICAgPHRkICpuZ0ZvciA9IFwibGV0IG5vZGUgb2YgZGF0YVwiIFxuICAgICAgICAgICAgICAgICAgICAoY2xpY2spPVwib25MZWdlbmRDbGljayhub2RlKVwiIFxuICAgICAgICAgICAgICAgICAgICBzdHlsZT1cImN1cnNvcjogcG9pbnRlcjtcIj5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgPGRpdiBzdHlsZT1cIiBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IGRpc3BsYXk6IGlubGluZS1ibG9jazsgcGFkZGluZzogMnB4O1wiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPVwiIHdpZHRoOiAxMHB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHBhZGRpbmc6IDJweDsgXCIgXG4gICAgICAgICAgICAgICAgICAgIFtuZ1N0eWxlXT1cInsnYmFja2dyb3VuZC1jb2xvcic6IG5vZGUuY29sb3J9XCI+PC9kaXY+XG4gICAgICAgICAgICAgICAge3tub2RlLmxhYmVsfX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L3RkPlxuICAgICAgICBcbiAgICA8L3RyPlxuPC90YWJsZT5gXG59KVxuZXhwb3J0IGNsYXNzIEFtZXhpb0QzTGVnZW5kXG57XG5cbiAgICBASW5wdXQoJ2RhdGEnKSBkYXRhIDogYW55O1xuXG4gICAgQElucHV0KCdob3Jpem9udGFsJykgaG9yaXpvbnRhbCA6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIEBPdXRwdXQoKSBvbkNsaWNrIDogYW55ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgXG4gICAgfVxuXG4gICAgb25MZWdlbmRDbGljayhub2RlOmFueSl7XG4gICAgICAgIHRoaXMub25DbGljay5lbWl0KG5vZGUpO1xuICAgIH1cbn0iXX0=