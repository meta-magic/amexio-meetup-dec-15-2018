{"version":3,"sources":["null","ng://amexio-chart-d3/lib/base/base.component.ts","ng://amexio-chart-d3/lib/services/comman.data.service.ts","ng://amexio-chart-d3/lib/dounut/dounut.component.ts","ng://amexio-chart-d3/lib/pie/pie.component.ts","ng://amexio-chart-d3/lib/legend/legend.component.ts","ng://amexio-chart-d3/lib/services/device.query.service.ts","ng://amexio-chart-d3/lib/bar/bar.component.ts","ng://amexio-chart-d3/lib/line/baseline.component.ts","ng://amexio-chart-d3/lib/line/line.component.ts","ng://amexio-chart-d3/lib/barstack/barstack.component.ts","ng://amexio-chart-d3/lib/groupbar/groupbar.component.ts","ng://amexio-chart-d3/lib/combochart/combochart.component.ts","ng://amexio-chart-d3/lib/histogram/histogram.component.ts","ng://amexio-chart-d3/lib/scatterchart/scatterchart.component.ts","ng://amexio-chart-d3/lib/multiarea/multiarea.component.ts","ng://amexio-chart-d3/lib/candlestick/candlestick.component.ts","ng://amexio-chart-d3/lib/bubble/bubble/bubble.component.ts","ng://amexio-chart-d3/lib/base/view.component.ts","ng://amexio-chart-d3/lib/drillable/drillable/drillable.component.ts","ng://amexio-chart-d3/lib/amexio-chart-d3-components.ts","ng://amexio-chart-d3/lib/amexio-chart-d3.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","AmexioD3BaseChartComponent","charttype","onLegendClick","EventEmitter","onChartClick","onLineClick","drillableEvent","legend","height","width","title","possible","colorIndex","colors","predefinedcolors","componentId","generateId","initializeData","_this","data","forEach","element","color","getColor","getMultipleDrillbleKeyData","drillablekeys","nodeObject","index","_a","tslib_1.__values","entries","_b","_c","key","id","charAt","Math","floor","random","Date","getTime","object","legendClick","node","emit","chartClick","comboLineClick","fordrillableClick","ref","event","toolTip","d3","select","append","attr","style","toolTipContent","tooltipdata","tooltiphtml","toolTipWithLegendandAxis","xaxis","yaxis","toolTipForBar","tooltipData","Output","Input","args","CommanDataService","http","fetchUrlData","serviceUrl","methodType","headers","HttpHeaders","post","get","postfetchData","requestJson","Injectable","providedIn","HttpClient","AmexioD3DounutChartComponent","myservice","cdf","_super","pie","svgwidth","svgheight","labelcolor","labelflag","level","drillableFlag","keyArray","transformeddata","legendArray","tslib_1.__extends","ngOnInit","resp_1","httpmethod","httpurl","subscribe","response","setTimeout","getResponseData","drawChart","plotD3Chart","transformData","fetchData","drillData","resp","drillabledatakey","httpResponse","responsedata","datareader","dr","split","dr_1","dr_1_1","formLegendData","outerRadius","innerRadius","tooltip","arc","d3.arc","d3.pie","keys","svg","d3.select","selectAll","enter","on","html","formTooltipData","d3.event","pageY","pageX","DonutChartClick","transition","duration","centroid","text","legendobject","onDonutLegendClick","legendevent","obj","label","DummyObject_1","individualvalue","keyindex","Component","selector","template","ChangeDetectorRef","ViewChild","AmexioD3PieChartComponent","donutref","AmexioD3Legend","horizontal","onClick","DeviceQueryService","platformId","rules","print","screen","phone","tablet","desktop","portrait","landscape","retina","Check","mq","isPlatformBrowser","window","matchMedia","matches","IsTablet","IsDesktop","IsPortrait","IsLandscape","IsRetina","browserWindow","IsPhone","OnPhone","callBack","mql","mqlMethod","OnTablet","OnDesktop","OnPortrait","OnLandscape","addListener","mql1","Inject","PLATFORM_ID","AmexioD3BarChartComponent","device","hScale","resizeflag","colorflag","chartId","nativeElement","offsetWidth","x","y","margin","g","d3.scaleBand","rangeRound","padding","d3.scaleLinear","domain","map","d3.max","d3.axisBottom","d3.axisLeft","ticks","plotLine","bandwidth","barChartClick","parseInt","tickSize","tickFormat","onBarLegendClick","resize","remove","divid","detectChanges","AmexioD3BaseLineComponent","deviceQueryService","vScale","defineProperty","_data","v","createXYAxisData","xaxisdata","yaxisdata","multiseriesdata","legenddata","legends","xaxisname","msdarray","j_1","a","md","j","initChart","plotScale","type","AmexioD3LineComponent","linechart","line","d3.line","datum","callTooltip","lineChartClick","BarstackComponent","maxYValue","barwidth","httpresponse","plotChart","data1","tempinnerarray","innerelement","obj_1","innerindex","maxY","yaxismaxArray","key1","keysetarray","splice","series","d3.stack","offset","d3.stackOffsetDiverging","offsetheight","offsetHeight","d3.min","stackMin","svgRect","setKey","setBarClickText","serie","diff","styles","GroupbarComponent","groupbarchartArray","urllegendArray","res_1","convertToJSON","plotGroupBarChart","x0","x1","years","labels","values","slice","groupbarClick","xaxisData","groupChartObj","firstRowOfData","multiSeriesArray","valueOfJ","singleBarObj","newLabelsValues","newGroupDataObj","assign","transformto2dArray","result","element2","temparray","year","CombochartComponent","lineColor","lineName","lineInput","console","log","barRange","lineRange","range","valueline","shift","points1","merge","formTooltipLineData","onComboLineClick","HistogramComponent","array","xaxisArray","yaxisArray","yaxisData","histogramarray","histogramdata","lengtharray","arrayofLength","chartData","finaldataarray","tooltipArray","res","datahisto","plotXaxis","plotYaxis","dataforChart","transformData1","tempdata","singletooltip","chartdata","barWidth","d3.scalePoint","d3.scaleOrdinal","d3.schemeCategory10","histogramBar","histogramBar1","abs","clickdata","histogramClick","data2","label1","label2","newvalue","ceil","quotient","tempvalue","lengthofArray","templength","element1","initialArray","maxElement","max","apply","maxlength","arrayofTooltip","value1","value2","this_1","tooltipobj","ScatterchartComponent","legendarray","dataFormatted","colorGeneration","legendCreation","plotScatterChart","xAxis","yAxis","scatterChartClick","onScatterLegendClick","names","filter","indexOf","legendData","MultiareaComponent","togglelabel","onTooltipClick","initAreaChart","top","right","bottom","left","maximumValue","findMaxData","areaArray","predefinedColors","counter","increment","innerGroup","plotAreaChart","PlotLineDot","thisa","flag","onAreaTooltipClick","area","d3.area","y0","y1","count","tempArray","largeValues","value_1","findLargestValue","parsedtransformeddata","JSON","parse","stringify","onAreaLegendClick","CandlestickComponent","predefinedColor","plotXYAxis","candlestickArray","end","bar","class","start","onCandlestickClick","addDataKeys","cumulative","onCandlestickLegendClick","BubbleComponent","xarray","minxvalue","maxxvalue","bubblechartdata","transformdata","plotBubbleChart","colordata","rScale","d3.scaleSqrt","bubbleChartClick","minvalue","maxvalue","onBubbleLegendClick","buubledata","sort","this_2","ViewDrillableComponent","ngAfterViewInit","getComponentData","chartInputArray","barchartinput","queryBarchartinput","toArray","groupbarchartinput","QueryGroupbarchartinput","linechartinput","QueryLinechartinput","donutchartinput","QueryDonutchartinput","piechartinput","QueryPiechartinput","barstackchartinput","QueryBarStackchartinput","combochartinput","QueryCombochartinput","histogramchartinput","QueryHistogramchartinput","scatterchartinput","QuerySatterchartinput","multiareachartinput","QueryMultiareachartinput","candlestickchartinput","QueryCandlestickchartinput","bubblechartinput","QueryBubblechartinput","concat","ContentChildren","descendants","DrillableComponent","mouseLocation","componentcounter","disableFlag","ComponentDataArray","getData","eventdata","hideUI","sameLevelChart","ShowUI","eventRef","eventData","target","arrayofsameLevel","contextmenuFlag","clientX","clientY","contextStyle","getContextMenuStyle","previouschartClick","chartLevel","cursor","position","display","box-shadow","getListPosition","elementRef","getBoundingClientRect","onContextNodeClick","onCloseClick","D3_COMPONENTS","AmexioChartD3Module","NgModule","imports","FormsModule","CommonModule","declarations","providers","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Input, Output, EventEmitter } from \"@angular/core\";\n\nexport class AmexioD3BaseChartComponent{\n\n   \n\n    @Output() onLegendClick: any = new EventEmitter<any>();\n\n    @Output() onChartClick: any = new EventEmitter<any>();\n\n    @Output() onLineClick: any = new EventEmitter<any>();\n   \n    @Output() drillableEvent = new EventEmitter();\n    \n    @Input('data') data: any;\n\n    @Input('http-url') httpurl: any;\n    \n    @Input('http-method') httpmethod: any;\n\n    @Input('legend') legend: boolean = true ;\n\n    @Input('color') colors: any;\n\n    @Input('height') height: any = \"300\";\n\n    @Input('width') width : any = \"300\";\n\n    @Input('title') title: any = \"\";\n\n    predefinedcolors: string[];\n    \n    componentId : string;\n\n    private  possible : string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcddefghijklmonpqrstuvwxyz\";\n\n    colorIndex: number = 0;\n\n    charttype : string;\n\n    constructor(charttype:string) {\n        this.colors = [];\n        this.charttype = charttype;\n        this.predefinedcolors = [\"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\", \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\", \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\", \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\", \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\"];\n        this.componentId = this.charttype  + \"-\" + this.generateId();\n    }\n  \n    protected initializeData() {\n        \n        \n            this.data.forEach(element => {\n             element.color = this.getColor(element);\n           });\n     }\n\n      protected getMultipleDrillbleKeyData(data:any,drillablekeys:any)\n      {\n       \n          let nodeObject={};\n          if(data)\n          {\n      for (let index = 0; index < drillablekeys.length; index++) {\n                \n           let element = drillablekeys[index];\n           for (let [key,value] of Object.entries(data)) {\n                   if (key == element) \n                      {\n                            nodeObject[key] = value;\n                       }\n                   };\n              }\n              return nodeObject;\n            }\n       \n }\n     \n private generateId(){\n       let id = \"\";\n       for(let i = 0; i<5; i++){\n        id = id + this.possible\n                           .charAt(Math.floor(Math.random()*this.possible.length));\n       }\n       id = id + \"-\"+new Date().getTime();\n       return id;\n    }\n\n    private  getColor(object : any){\n        if (object.color) {\n            return object.color;\n        }\n        else if (this.colors.length > this.colorIndex) {\n            const color = this.colors[this.colorIndex];\n            this.colorIndex++;\n            return color;\n        }\n        else if ((this.colors.length > 0) && (this.colors.length <= this.colorIndex)) {\n            this.colorIndex = 0;\n            const color = this.colors[this.colorIndex];\n            return color;\n        }\n        else {\n            const color = this.predefinedcolors[this.colorIndex];\n            this.colorIndex++;\n            return color;\n        }\n    }\n\n\n    legendClick(node:any){\n        this.onLegendClick.emit(node);\n    }\n\n    chartClick(node:any){\n        this.onChartClick.emit(node);\n    }\n    \n    comboLineClick(node: any){\n        this.onLineClick.emit(node);\n    }\n    fordrillableClick(ref: any,node: any,event: any)\n     {\n        this.drillableEvent.emit({ref: ref,node: node,event: event});\n    }\n    protected toolTip (d3:any) :any{\n       return  d3.select(\"body\")\n                      .append(\"div\")\n                      .attr('id','tooltipid')\n                      .attr('class','amexiod3tooltip')\n                      .style(\"position\", \"absolute\")\n                      .style(\"z-index\", \"10\")\n                      .style(\"visibility\", \"hidden\");\n    }\n\n    protected toolTipContent(tooltipdata:any) :any{\n       let tooltiphtml = \"<table>\";\n      for (const key in tooltipdata) {\n        if (tooltipdata.hasOwnProperty(key)) {\n          const value = tooltipdata[key];\n          tooltiphtml = tooltiphtml + \"<tr>\";\n//------------------\n        //   tooltiphtml = tooltiphtml + \"<td>\";\n        //   tooltiphtml = tooltiphtml + key+':';\n        //   tooltiphtml = tooltiphtml + \"</td>\";\n//------------------\n          tooltiphtml = tooltiphtml + \"<td>\";\n          tooltiphtml = tooltiphtml + value;\n          tooltiphtml = tooltiphtml + \"</td>\";\n          tooltiphtml = tooltiphtml + \"</tr>\";\n        }\n      }\n      tooltiphtml = tooltiphtml + \"</table>\";\n\n      return tooltiphtml;\n    }\n\n    protected toolTipWithLegendandAxis(legend: string, xaxis:string, yaxis: string) :any{\n        let tooltiphtml = \"<div>\";\n        tooltiphtml = tooltiphtml + \"<b>\"+xaxis+\"</b>, \";\n        tooltiphtml = tooltiphtml + legend+\"</b> \";\n        tooltiphtml = tooltiphtml + \"<b>\"+yaxis+\"</b> \";\n        tooltiphtml = tooltiphtml + \"</div>\";\n        return tooltiphtml;\n    }\n\n    protected toolTipForBar(tooltipData: any): any{\n         let tooltiphtml= \"<div>\";\n        for (let [key, value] of Object.entries(tooltipData)) {\n            let sideStyle=\"float:left\";\n            tooltiphtml = tooltiphtml + \"<div>\";\n         tooltiphtml = tooltiphtml + \"<span style =\"+sideStyle+\" ><b>\" + key +\" \"+ \"</b>\" +value + \"</br></span>\";\n         tooltiphtml = tooltiphtml + \"</div>\";\n        }\n\n         return tooltiphtml;\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpClientModule,HttpHeaders } from '@angular/common/http';\n\nimport {Observable} from 'rxjs/index';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommanDataService {\n\n  constructor(private http:HttpClient) { }\n  serviceUrl: string;\n\n  fetchUrlData(serviceUrl: string, methodType: string): Observable<any> {\n    const requestJson = {};\n    const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8');\n    if (methodType === 'post') {\n    return this.http.post(serviceUrl, requestJson, {headers});\n    }else if (methodType === 'get') {\n    return this.http.get(serviceUrl, {headers});\n    }\n}\n\n\npostfetchData(serviceUrl: string, methodType: string,requestJson:any): Observable<any> {\n \n  const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8');\n  if (methodType === 'post') {\n  return this.http.post(serviceUrl, requestJson, {headers});\n  }else if (methodType === 'get') {\n  return this.http.get(serviceUrl, {headers});\n  }\n}\n\n\n\n\n\n\n}","import { Component, EventEmitter, Input, OnInit, Output, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport * as d3 from 'd3';\nimport { AmexioD3BaseChartComponent } from '../base/base.component';\nimport { PlotCart } from '../base/chart.component';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { CommanDataService } from '../services/comman.data.service';\n\n@Component({\n  selector: 'amexio-d3-chart-donut',\n  template: `<div *ngIf=\"drillableFlag\" #chartId>\n\n\n    <div colspan=\"2\" style=\"font-size: 18px; font-weight: bold; \">\n        {{title}}\n    </div>\n        <div style=\"display: flex;flex-direction: row\">\n            <svg preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 300 300\" [attr.height]=\"height\" [attr.width]=\"width\" [attr.id]=\"componentId\">\n            </svg>\n            <div>\n\n           <div style=\"display: block; padding: 1%;\">\n                    <amexio-d3-legend *ngIf=\"legend\" (onClick)=\"onDonutLegendClick($event)\" [data]=\"legendArray\" style=\"height:100%;\"></amexio-d3-legend>\n          </div>\n   </div>\n    `\n})\nexport class AmexioD3DounutChartComponent extends AmexioD3BaseChartComponent implements PlotCart {\n\n  @Input('pie') pie: boolean = false;\n  @Input('width') svgwidth: number = 300;\n  @Input('height') svgheight: number = 300;\n  @ViewChild('chartId') chartId: ElementRef;\n  @Input('label-color') labelcolor: string = \"black\";\n  @Input('label') labelflag: boolean = false;\n  @ViewChild('divid') divid: ElementRef;\n  @ViewChild('drillid') drillid: any;\n  @Input('data-reader') datareader: string;\n  @Input('level') level: number = 0;\n  @Input('target') target: number;\n  @Input() drillData: any;\n  @Input('drillable-data') drillabledatakey: any\n  drillableFlag: boolean = true;\n  keyArray: any[] = [];\n  transformeddata: any[] = [];\n  legendArray: any[] = [];\n  response: any;\n  svg: any;\n  constructor(private myservice: CommanDataService, private cdf: ChangeDetectorRef) {\n    super('DONUTCHART');\n  }\n\n  ngOnInit() {\n\n    if (this.level <= 1) {\n      let resp: any;\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          resp = response;\n        }, (error) => {\n        }, () => {\n\n          setTimeout(() => {\n\n            this.data = this.getResponseData(resp);\n            this.drawChart();\n\n            this.data = this.getResponseData(resp);\n            //this.transformData(this.data);\n            this.initializeData();\n            this.plotD3Chart();\n          }, 0);\n        });\n\n      } else\n        if (this.data) {\n\n\n          setTimeout(() => {\n            this.data = this.getResponseData(this.data);\n            this.transformData(this.data);\n            this.initializeData();\n            this.plotD3Chart();\n          }, 0);\n        }\n    } else {\n\n      this.fetchData(this.drillData);\n    }\n  }\n\n\n  fetchData(data: any) {\n\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n        this.response = resp;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          this.data = this.getResponseData(resp);\n\n          this.drawChart();\n\n        }, 0);\n      });\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n      this.drillableFlag = true;\n      this.initializeData();\n      this.plotD3Chart();\n    }, 0);\n\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n  plotD3Chart() {\n    this.formLegendData();\n    //this.transformData(this.data);\n    //  this.data = this.transformeddata;\n    let outerRadius = 0;\n    let innerRadius = 0;\n\n    outerRadius = this.svgwidth / 2;\n    innerRadius = this.svgwidth / 4;\n\n    if (this.pie) {\n      innerRadius = 0;\n    }\n\n    const tooltip = this.toolTip(d3);\n\n    const arc = d3.arc()\n      .outerRadius(outerRadius)\n      .innerRadius(innerRadius);\n\n    const pie = d3.pie()\n      .value((d) => {\n        return d[Object.keys(d)[1]];\n        //  return d.value\n      });\n\n    this.svg = d3.select(\"#\" + this.componentId)\n      .append('g')\n      .attr('transform', 'translate(' + this.svgwidth / 2 + ',' + this.svgheight / 2 + ')')\n      .selectAll('path')\n      .data(pie(this.data))\n      .enter();\n\n    const path = this.svg.append('path')\n      .attr('d', arc)\n      .attr('fill', function (d, i) {\n        if (d.data.color) {\n          return d.data.color;\n        }\n        else {\n          return \"black\";\n        }\n        //  return (d && d.data && d.data.color) ? d.data.color : \"black\"\n      })\n      .attr('cursor', 'pointer')\n      .on(\"mouseover\", (d) => {\n        return tooltip.style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", (d) => {\n        return tooltip.html(\n          this.formTooltipData(d.data)\n\n          //  this.formLegendData(d.data)\n          // this.toolTipContent(d.data)\n        )\n          .style(\"top\", (d3.event.pageY - 10) + \"px\")\n          .style(\"left\", (d3.event.pageX + 10) + \"px\");\n      })\n      .on(\"mouseout\", (d) => {\n        return tooltip.style(\"visibility\", \"hidden\");\n      })\n      .on(\"click\", (d) => {\n        this.DonutChartClick(d.data);\n        this.fordrillableClick(this, d.data, event);\n        return tooltip.style(\"visibility\", \"hidden\");\n        //this.chartClick(d.data);\n      });\n    if (this.labelflag) {\n      const text = this.svg.append(\"text\")\n        .transition()\n        .duration(200)\n        .attr(\"transform\", function (d) {\n          return \"translate(\" + arc.centroid(d) + \")\";\n        })\n        .attr(\"text-anchor\", \"middle\")\n        .text(function (d) {\n\n          return d.data[Object.keys(d.data)[1]]\n\n          //return d.data.value;\n        })\n        .style('fill', function (d) {\n          if(this.labelcolor.length>0){\n            return this.labelcolor;\n          } else {\n            return \"black\";\n          }\n          // return (d && d.data && d.data.textcolor) ? d.data.textcolor : \"black\";\n        })\n        .style('font-size', '12px');\n    }\n  }\n\n  formLegendData() {\n    this.legendArray = [];\n    this.data.forEach(element => {\n      let legendobject = {};\n      legendobject['label'] = element[Object.keys(element)[0]];\n      legendobject['value'] = element[Object.keys(element)[1]];\n      legendobject['color'] = element.color;\n      this.legendArray.push(legendobject);\n    });\n  }\n\n  onDonutLegendClick(legendevent: any) {\n    let obj = {};\n\n    //  obj['label'] = legendevent.label;\n    //  obj['value'] = legendevent.value \n    obj[this.keyArray[0]] = legendevent.label;\n    obj[this.keyArray[1]] = legendevent.value;\n    //delete event.color;\n    this.legendClick(obj);\n  }\n\n\n  transformData(data: any) {\n    this.keyArray = data[0];\n    data.forEach((element, index) => {\n      if (index > 0) {\n        let DummyObject = {};\n        element.forEach((individualvalue, keyindex) => {\n          DummyObject[this.keyArray[keyindex]] = individualvalue;\n        });//inner for loop ends\n        this.transformeddata.push(DummyObject);\n      }//if ends\n    });//outer for loop ends\n    this.data = this.transformeddata;\n  }\n\n  formTooltipData(tooltipData: any) {\n    let object = {};\n    for (let [key, value] of Object.entries(tooltipData)) {\n      if (key != 'color' && key != 'textcolor') {\n        object[key] = value;\n      }\n    }\n    return this.toolTipForBar(object);\n  }\n\n  DonutChartClick(event: any) {\n    let object = {};\n    for (let [key, value] of Object.entries(event)) {\n      if (key != 'color') {\n        object[key] = value;\n      }\n    }\n    this.chartClick(object);\n  }\n\n}\n","import {Component, OnInit, Input, Output, EventEmitter,ViewChild, ElementRef} from '@angular/core';\nimport { HttpClient,HttpClientModule } from '@angular/common/http';\nimport * as d3 from 'd3';\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\n@Component({\n  selector: 'amexio-d3-chart-pie',\n  template: `<div   *ngIf=\"drillableFlag\">\n<amexio-d3-chart-donut #id (onLegendClick)=\"legendClick($event)\" \n                       (onChartClick)=\"chartClick($event)\" \n                       (drillableEvent)=\" fordrillableClick($event)\"\n                        [height]=\"height\"\n                        [width]=\"width\"\n                        [title]=\"title\"\n                        [data] = \"data\"\n                        [pie]  = \"true\"\n                        [color]=\"colors\"\n                        [http-url]=\"httpurl\"\n                        [http-method]=\"httpmethod\"\n                        [data-reader]=\"datareader\"\n                        [label]=\"labelflag\"\n                        [label-color]=\"labelcolor\"\n                        [level]=\"level\"\n                        [target]=\"target\"\n                        [drillable-data]=\"drillabledatakey\"\n                        [drillData]=\"drillData\">\n</amexio-d3-chart-donut>\n</div>\n`\n})\nexport class AmexioD3PieChartComponent  implements  OnInit {\n\n  @Input('data') data: any;\n\n  @Output() onLegendClick: any = new EventEmitter<any>();\n\n  @Output() onChartClick: any = new EventEmitter<any>();\n\n  @Output() drillableEvent = new EventEmitter();\n\n  @ViewChild('id') donutref: any;\n\n  @Input() legend: boolean = true ;\n\n  @Input('color') colors: any = [];\n\n  @Input('width') width: any = \"300\";\n\n  @Input('height') height: any = \"300\";\n\n  @Input() title: any = \"\";\n\n   @Input('http-url') httpurl: any;\n    \n   @Input('http-method') httpmethod: any;\n\n   @Input('data-reader') datareader: string;\n\n   @Input('level') level = 0 ;\n\n   @Input('target') target:number;\n\n   @Input('drillable-data') drillabledatakey:any\n\n   @Input('label-color') labelcolor: string = \"black\";\n\n   @Input('label') labelflag: boolean = false;\n   \n   drillableFlag:boolean = true;\n\n   drillData: any;\n  \n  \n  ngOnInit(){\n  \n  }\n  \n  legendClick(node:any){\n    this.onLegendClick.emit(node);\n  }\n\n  chartClick(node:any){\n       this.onChartClick.emit(node);\n  }\n\n\n  fordrillableClick(ref:any)\n  {\n     this.drillableEvent.emit(ref,);\n  }\n\n fetchData(data:any)\n   {\n          this.drillData = data;   \n   }\n\n  drawChart()\n  {\n    \n          this.donutref.drillableFlag=true;\n          this.donutref.drawChart();\n\n  }\n}\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\n\n@Component({\n    selector : 'amexio-d3-legend',\n    template: `<div style =\" width: 100% ; padding-left: 20px; padding-top: 8px; \">\n<table *ngIf=\"!horizontal\" style=\"height: 100%;\">\n    <tr *ngFor = \"let node of data\" style=\"cursor: pointer;\" (click)=\"onLegendClick(node)\">\n        <td style=\"height: 10px; width: 23px; padding-left: 2px;\"\n            [ngStyle]=\"{'background-color': node.color}\"></td>\n        <td>{{node.label}}</td>\n    </tr>\n</table>\n</div>\n\n<table *ngIf=\"horizontal\" style=\"height: 100%;\">\n    <tr>\n        <td *ngFor = \"let node of data\" \n                    (click)=\"onLegendClick(node)\" \n                    style=\"cursor: pointer;\">\n            \n            <div style=\" display: inline-block; display: inline-block; padding: 2px;\">\n                    <div style=\" width: 10px; display: inline-block; padding: 2px; \" \n                    [ngStyle]=\"{'background-color': node.color}\"></div>\n                {{node.label}}\n            </div>\n        </td>\n        \n    </tr>\n</table>`\n})\nexport class AmexioD3Legend\n{\n\n    @Input('data') data : any;\n\n    @Input('horizontal') horizontal : boolean = false;\n\n    @Output() onClick : any = new EventEmitter<any>();\n\n    constructor(){\n   \n    }\n\n    onLegendClick(node:any){\n        this.onClick.emit(node);\n    }\n}","\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { HttpClient,HttpClientModule,HttpHeaders } from '@angular/common/http';\n\n\n@Injectable()\nexport class DeviceQueryService {\n\n  constructor( @Inject(PLATFORM_ID) private platformId: any) {\n\n  }\n\n  rules = {\n    print: 'print',\n    screen: 'screen',\n    phone: '(max-width: 767px)',\n    tablet: '(min-width: 768px) and (max-width: 1024px)',\n    desktop: '(min-width: 1025px)',\n    portrait: '(orientation: portrait)',\n    landscape: '(orientation: landscape)',\n    retina: '(-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi)',\n  };\n\n  Check = function(mq: any) {\n    if (isPlatformBrowser(this.platformId)) {\n      if (!mq) {\n        return;\n      }\n      return window.matchMedia(mq).matches;\n    } else {\n      return;\n    }\n  };\n\n  /**********************************************\n   METHODS FOR CHECKING TYPE\n   **********************************************/\n  IsPhone() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.phone).matches;\n    } else {\n      return null;\n    }\n  }\n\n  IsTablet = function() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.tablet).matches;\n    } else {\n      return null;\n    }\n  };\n\n  IsDesktop = function() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.desktop).matches;\n    } else {\n      return null;\n    }\n  };\n\n  IsPortrait = function() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.portrait).matches;\n    } else {\n      return null;\n    }\n  };\n\n  IsLandscape = function() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.landscape).matches;\n    } else {\n      return null;\n    }\n  };\n\n  IsRetina = function() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.retina).matches;\n    } else {\n      return null;\n    }\n  };\n\n  browserWindow = () => {\n    return window;\n  }\n\n  /**********************************************\n   EVENT LISTENERS BY TYPE\n   **********************************************/\n  OnPhone(callBack: any) {\n    if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {\n        const mql: MediaQueryList = window.matchMedia(this.rules.phone);\n        this.mqlMethod(callBack, mql);\n    }\n  }\n\n  OnTablet(callBack: any) {\n    if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {\n        const mql: MediaQueryList = window.matchMedia(this.rules.tablet);\n        this.mqlMethod(callBack, mql);\n    }\n  }\n\n  OnDesktop(callBack: any) {\n    if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {\n        const mql: MediaQueryList = window.matchMedia(this.rules.desktop);\n        this.mqlMethod(callBack, mql);\n    }\n  }\n\n  OnPortrait(callBack: any) {\n    if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {\n        const mql: MediaQueryList = window.matchMedia(this.rules.portrait);\n        this.mqlMethod(callBack, mql);\n    }\n  }\n\n  OnLandscape(callBack: any) {\n    if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {\n        const mql: MediaQueryList = window.matchMedia(this.rules.landscape);\n        this.mqlMethod(callBack, mql);\n    }\n  }\n\n  mqlMethod(callBack: any, mql: any) {\n    mql.addListener((mql1: MediaQueryList) => {\n      if (mql1.matches) {\n        callBack(mql);\n      }\n    });\n  }\n}\n","import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef, } from \"@angular/core\";\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport { PlotCart } from \"../base/chart.component\";\nimport { CommanDataService } from '../services/comman.data.service';\nimport{DeviceQueryService} from '../services/device.query.service';\n\nimport * as d3 from 'd3';\n\n\n@Component({\n    selector: 'amexio-d3-chart-bar',\n    template: `<div *ngIf=\"drillableFlag\"  #divid (window:resize)=\"resize($event)\" >\n<table style=\"width: 100%;\" position=\" relative\" #chartId >\n    <tr>\n        <td style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n    </tr>\n    <tr>\n        <td>\n            <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\" \n          >\n            </svg>\n        </td>\n    </tr>\n    <tr>\n        <td style=\"display: block; padding: 5px;\">\n            <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"onBarLegendClick($event)\" [data]=\"legendArray\" style=\"height:100%;\">\n            </amexio-d3-legend>\n        </td>\n    </tr>\n</table>\n</div>`\n})\nexport class AmexioD3BarChartComponent extends AmexioD3BaseChartComponent implements PlotCart {\n    @Input('width') svgwidth: number;\n    @Input('height') svgheight: number = 300;\n    @Input() horizontal: boolean = false;\n    @Input('label-color') labelcolor: string = \"black\";\n    @Input('label') labelflag: boolean = false;\n    @ViewChild('chartId') chartId: ElementRef;\n    @ViewChild('divid')  divid:ElementRef;\n    @ViewChild('drillid') drillid: any;\n    @Input('data-reader') datareader: string;\n    @Input('level') level: number = 0;\n    @Input('target') target: number;\n    @Input('drillable-data') drillabledatakey: any[] = [];\n    @Input('horizontal-scale') hScale: boolean = true;\n    resizeflag: boolean = false;\n    checkmob: boolean;\n    resizeg:any;\n    drillableFlag: boolean = true;\n    data: any;\n    xaxis:any;\n    yaxis:any;\n    svg:any;\n    colorflag: boolean = false;\n    keyArray: any[] = [];\n    transformeddata: any[] = [];\n    object: any;\n    legendArray: any[] = [];\n    constructor(private myservice: CommanDataService, private cdf: ChangeDetectorRef,private device:DeviceQueryService) {\n\n        super('bar');\n       \n\n    }\n    ngOnInit() {\n      \n\n        if (this.level <= 1) {\n            let resp: any;\n            if (this.httpmethod && this.httpurl) {\n                this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n                    resp = response;\n                }, (error) => {\n                }, () => {\n                    setTimeout(() => {\n                        this.data = this.getResponseData(resp);\n                        this.drawChart();\n\n                    }, 0);\n                });\n\n            } else if (this.data) {\n\n                setTimeout(() => {\n                    this.data = this.getResponseData(this.data);\n\n                    this.transformData(this.data)\n                    this.initializeData();\n                    this.plotD3Chart();\n\n                }, 0);\n\n            }\n        }\n    }\n    fetchData(data: any) {\n\n        let requestJson;\n        let key = this.drillabledatakey;\n        let resp: any;\n        if (this.drillabledatakey.length) {\n            let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n            requestJson = drillabledata;\n\n        }\n        else {\n            requestJson = data;\n\n        }\n\n        if (this.httpmethod && this.httpurl) {\n            this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n                resp = response;\n            }, (error) => {\n            }, () => {\n                setTimeout(() => {\n                    this.data = this.getResponseData(resp);\n                    this.drawChart();\n                }, 0);\n\n\n            });\n\n        }\n    }\n\n    drawChart() {\n        setTimeout(() => {\n\n            this.initializeData();\n            this.plotD3Chart();\n        }, 0);\n\n    }\n    getResponseData(httpResponse: any) {\n        let responsedata = httpResponse;\n        if (this.datareader != null) {\n            const dr = this.datareader.split('.');\n            for (const ir of dr) {\n                responsedata = responsedata[ir];\n            }\n        } else {\n            responsedata = httpResponse;\n        }\n        return responsedata;\n    }\n\n    plotD3Chart(): any {\n\n        this.formLegendData();\n           if(this.resizeflag==false){\n           if(this.chartId ){\n\n             this.svgwidth = this.chartId.nativeElement.offsetWidth;\n             \n          } else{\n\n                    this.svgwidth = this.svgwidth;\n               }\n            }\n\n    \n        \n        const tooltip = this.toolTip(d3);\n        this.svg = d3.select(\"#\" + this.componentId) ;\n        const margin = { top: 20, right:60, bottom: 30, left: 60 };\n      \n        const width = this.svgwidth - margin.left - margin.right;\n        const height = this.svgheight - margin.top - margin.bottom;\n   \n        //const height = +svg.attr(\"height\") - margin.top - margin.bottom;\n      \n        let x, y;\n        const g = this.svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        if (this.horizontal == false) {\n            x = d3.scaleBand()\n                .rangeRound([0, width])\n                .padding(0.1);\n            y = d3.scaleLinear()\n                .rangeRound([height, 0]);\n\n            //setting content for x and y axis\n            x.domain(this.data.map((d) => {\n\n                return d[Object.keys(d)[0]];\n                //    return d.label\n            }));\n            y.domain([0, d3.max(this.data, (d) => {\n                return d[Object.keys(d)[1]];\n                //return d.value;\n            })]);\n        \n          \n            // add x axis to svg\n            if(this.device.IsDesktop()==true)\n            {\n              g.append(\"g\")\n                  .attr(\"transform\", \"translate(0,\" + height + \")\")\n                  .call(d3.axisBottom(x))\n            }\n          else\n           {\n            g.append(\"g\")\n                  .attr(\"transform\", \"translate(0,\" + height + \")\")\n                  .call(d3.axisBottom(x)).\n                   selectAll(\"text\")\n                   .attr(\"y\", 0)\n                   .attr(\"x\", 9)\n                   .attr(\"dy\", \".35em\")\n                   .attr(\"transform\", \"rotate(60)\")\n                   .style(\"text-anchor\", \"start\");\n     \n          }\n         \n            //add y axis to svg\n          g.append(\"g\")\n                .call(d3.axisLeft(y)\n                    .ticks(10))\n        \n          this.plotLine(g, x, y, height, width);\n\n           //add bar chart\n            g.selectAll(\".bar\")\n                .data(this.data)\n                .enter()\n                .append(\"rect\")\n                .attr(\"class\", \"bar\")\n                .attr(\"x\", (d) => {\n                    return x(d[Object.keys(d)[0]]);\n                    // return x(d.label); \n                })\n                .attr(\"y\", (d) => {\n                    return y(d[Object.keys(d)[1]]);\n                    // return y(d.value); \n                })\n                .attr(\"cursor\", \"pointer\")\n                .attr(\"width\", x.bandwidth())\n                .attr(\"height\", (d) => { return height - y(d[Object.keys(d)[1]]); })\n\n                .style(\"fill\", (d) => {\n                    // return \"blue\";\n                    return d.color;\n                })\n                .on(\"mouseover\", (d) => {\n                    return tooltip.style(\"visibility\", \"visible\");\n                })\n                .on(\"mousemove\", (d) => {\n                    return tooltip.html(\n                        this.formTooltipData(d)\n                        //  this.toolTipForBar(d)\n                        // this.toolTipContent(d)\n                    )\n                        .style(\"top\", (d3.event.pageY - 10) + \"px\")\n                        .style(\"left\", (d3.event.pageX + 10) + \"px\");\n                })\n                .on(\"mouseout\", (d) => {\n                    return tooltip.style(\"visibility\", \"hidden\");\n                })\n                .on(\"click\", (d) => {\n                    this.barChartClick(d);\n                    this.fordrillableClick(this, d, event);\n                    return tooltip.style(\"visibility\", \"hidden\");\n                    //this.chartClick(d);\n                });\n\n                if(this.labelflag)\n            {\n                var yTextPadding = 40;\n                this.svg.selectAll(\".label\")\n                .data(this.data)\n                .enter()\n                .append(\"text\")\n                .style(\"font-weight\",\"bold\")\n                .style(\"font-size\",\"1vw\")\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"fill\", (d)=>{\n                  if(this.labelcolor.length>0){\n                    return this.labelcolor;\n                  } else {\n                    return \"black\";\n                  }\n                })\n                .attr(\"x\", (d,i) => {\n                    return x(d[Object.keys(d)[0]])+ margin.left + x.bandwidth()/2;\n                })\n                .attr(\"y\", (d,i) => {\n                     return y(d[Object.keys(d)[1]])+yTextPadding;\n                })\n                .text((d) => {\n                     return d[Object.keys(d)[1]];\n                });\n          }//if ends fr \n        }\n\n        else if (this.horizontal == true) {\n\n            x = d3.scaleLinear()\n                .rangeRound([0, width])\n                ;\n            y = d3.scaleBand()\n                .rangeRound([height, 0]).padding(0.1);\n\n            //setting content for x and y axis\n            x.domain([0, d3.max(this.data,\n                (d) => {\n                    return parseInt(\n                        d[Object.keys(d)[1]]\n                        // d.value\n                    );\n                })]);\n            // d[Object.keys(d)[1]]\n\n            y.domain(this.data.map((d) => {\n                return d[Object.keys(d)[0]]\n                //return d.label;\n            }))\n\n            // add x axis to svg\n            g.append(\"g\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(d3.axisBottom(x).ticks(10));\n\n            //add y axis to svg\n            g.append(\"g\")\n                .call(d3.axisLeft(y))\n              \n            this.plotLine(g, x, y, height, width);\n            //add bar chart\n            g.selectAll(\".bar\")\n                .data(this.data)\n                .enter()\n                .append(\"rect\")\n                .attr(\"class\", \"bar\")\n                .attr(\"x\", 0)\n                .attr(\"y\", (d) => {\n                    return y(\n                        d[Object.keys(d)[0]]\n                        // d.label\n                    );\n                })\n                .attr(\"cursor\", \"pointer\")\n                .attr(\"width\", (d) => {\n                    return x(\n                        d[Object.keys(d)[1]]\n                        // d.value\n                    )\n                })\n                .attr(\"height\", y.bandwidth())\n                .style(\"fill\", (d) => { return d.color; })\n                .on(\"mouseover\", (d) => {\n                    return tooltip.style(\"visibility\", \"visible\");\n                })\n                .on(\"mousemove\", (d) => {\n                    return tooltip.html(\n                        this.formTooltipData(d)\n                        // this.formLegendData(d)\n                        // this.toolTipContent(d)\n                    )\n                        .style(\"top\", (d3.event.pageY - 10) + \"px\")\n                        .style(\"left\", (d3.event.pageX + 10) + \"px\");\n                })\n                .on(\"mouseout\", (d) => {\n                    return tooltip.style(\"visibility\", \"hidden\");\n                })\n                .on(\"click\", (d) => {\n                    this.barChartClick(d);\n                    this.fordrillableClick(this, d, event);\n                    return tooltip.style(\"visibility\", \"hidden\");\n                    //this.chartClick(d);\n                });\n\n                 if(this.labelflag)\n                 {\n                let yTextPadding = 40;\n                this.svg.selectAll(\".label\")\n                .data(this.data)\n                .enter()\n                .append(\"text\")\n                .style(\"font-weight\",\"bold\")\n                .attr(\"text-anchor\",\"middle\")\n                .attr(\"vertical-align\",\"middle\")\n                .attr(\"margin-top\",margin.top)\n                .attr(\"fill\", (d)=>{\n                  if(this.labelcolor.length>0){\n                    return this.labelcolor;\n                  } else {\n                    return \"black\";\n                  }\n                })\n                .attr(\"x\", (d,i) => {\n                  return x(d[Object.keys(d)[1]])+yTextPadding;\n                 })\n                .attr(\"y\", (d,i) => {\n                     return y(d[Object.keys(d)[0]])\n                     + margin.top + y.bandwidth()/2;\n                })\n                .text( (d) => {\n                     return d[Object.keys(d)[1]];\n                });\n          }\n        \n\n        }//else ends(horizontal bar logic ends)\n\n     \n\n    }\n\n    plotLine(g, x, y, height, width) {\n\n        if (this.hScale) {\n            g.append('g')\n                .attr(\"color\", \"lightgrey\")\n                .call(d3.axisLeft(y)\n                    .tickSize(-width).tickFormat(''));\n        }\n    }\n\n\n    formTooltipData(tooltipData: any) {\n        let object = {};\n        for (let [key, value] of Object.entries(tooltipData)) {\n            if (key != 'color') {\n                object[key] = value;\n            }\n        }\n        return this.toolTipForBar(object);\n    }\n\n    transformData(data: any) {\n\n        this.keyArray = data[0];\n        data.forEach((element, index) => {\n            if (index > 0) {\n                let DummyObject = {};\n                element.forEach((individualvalue, keyindex) => {\n                    DummyObject[this.keyArray[keyindex]] = individualvalue;\n                });//inner for loop ends\n                this.transformeddata.push(DummyObject);\n            }//if ends\n        });//outer for loop ends\n        this.data = this.transformeddata;\n    }\n\n    formLegendData() {\n        this.legendArray = [];\n        this.data.forEach(element => {\n            let legendobject = {};\n            legendobject['label'] = element[Object.keys(element)[0]];\n            legendobject['value'] = element[Object.keys(element)[1]];\n            legendobject['color'] = element.color;\n            this.legendArray.push(legendobject);\n        });\n    }\n\n    onBarLegendClick(legendevent: any) {\n        let obj = {};\n        //  obj['label'] = legendevent.label;\n        //  obj['value'] = legendevent.value;\n        obj[this.keyArray[0]] = legendevent.label;\n        obj[this.keyArray[1]] = legendevent.value;\n        //obj[legendevent.label] = legendevent.value;\n        //delete event.color;\n        this.legendClick(obj);\n    }\n\n\n    barChartClick(event: any) {\n        let object = {};\n        for (let [key, value] of Object.entries(event)) {\n            if (key != 'color') {\n                object[key] = value;\n            }\n        }\n        this.chartClick(object);\n    }\n\n    resize(data: any) {\n      \n        this.svg.selectAll(\"*\").remove();\n  \n        this.resizeflag=true;\n        this.svgwidth = this.divid.nativeElement.offsetWidth;\n     \n        this.cdf.detectChanges();\n        this.plotD3Chart();\n   \n    }\n\n\n\n    \n\n}","import { Input } from \"@angular/core\";\nimport * as d3 from 'd3';\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport{DeviceQueryService} from '../services/device.query.service';\n\nexport class AmexioD3BaseLineComponent extends AmexioD3BaseChartComponent\n{\n    svgwidth : any;\n    svgheight=300;\n    private _data      : any;\n    private xaxisdata  : any[];\n    private yaxisdata  : any[];\n    private legenddata : any[];\n    legends    : any[];\n    protected xaxisname : any;\n    protected multiseriesdata : any[];\n    svg:any;\n\n    @Input('horizontal-scale') hScale : boolean = true;\n\n    @Input('vertical-scale')   vScale : boolean = false;\n\n    @Input('data') \n\n    @Input('http-url') httpurl: any;\n    \n    @Input('http-method') httpmethod: any;\n\n    constructor(public deviceQueryService: DeviceQueryService) {\n        super('line');\n    }\n\n\n    set data(v:any){\n        this._data = v;\n        this.createXYAxisData();\n    }\n\n    get data(){\n        return this._data;\n    }\n\n\n    protected createXYAxisData() : void {\n\n        this.xaxisdata = [];\n        this.yaxisdata = [];\n        this.multiseriesdata = [];\n        this.legenddata = [];\n        this.legends = [];\n        this.xaxisname = this.data[0][0].label;\n         const msdarray : any [] =[];\n         for (let index = 0; index < this._data[0].length; index++) {\n            const legend = this._data[0][index];\n            msdarray[index]=[];\n            this.legenddata.push({'label':legend.label,'color':this.predefinedcolors[index+1]});\n            if(index > 0)\n                this.legends.push({'label':legend.label,'color':this.predefinedcolors[index]});\n        }\n\n        let i = 0;\n        this._data.forEach(object => {\n            if(i>0){\n                let j = 0;\n                object.forEach(a =>{\n                     if(j===0){\n                        this.xaxisdata.push({'label':a, 'value':a});\n                    }else{\n                        this.yaxisdata.push({'label':a, 'value':a});\n                    }\n                    msdarray[j].push(a);\n                    j++;\n                });\n            }\n            i++;\n        });\n\n        for (let index = 0; index < msdarray.length; index++) {\n            const element = msdarray[index];\n            if(index >0){\n                let md : any [] = [];\n                for (let j = 0; j < element.length; j++) {\n                    const v = element[j];\n                    md.push({'legend':this.legenddata[index].label,'label':this.xaxisdata[j].value, 'value':v});\n                }\n                this.multiseriesdata.push(md);\n                this.legends[index-1].data = md;\n            }\n        }\n    }\n\n    protected initChart() : any {\n\n        this.svg       = d3.select(\"#\"+this.componentId);\n        const margin    = { top: 40, right: 20, bottom: 30, left: 40 };\n        const width     = +this.svgwidth - margin.left - margin.right;\n        const height    = +this.svgheight - margin.top - margin.bottom;\n        const g         = this.svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        const x = d3.scaleBand()\n                    .rangeRound([0, width])\n                    .padding(0.1);                    \n    \n        const y = d3.scaleLinear()\n                     .rangeRound([height, 0]);\n\n        x.domain(this.xaxisdata.map( (d) => { return d.label;}));\n        y.domain([0, d3.max(this.yaxisdata,  (d) => { return d.value; })]);\n\n        //add axis \n        if(this.deviceQueryService.IsDesktop()==true)\n        {\n          g.append(\"g\")\n              .attr(\"transform\", \"translate(0,\" + height + \")\")\n              .attr(\"color\", \"grey\")\n              .call(d3.axisBottom(x))\n        }\n      else\n       {\n        g.append(\"g\")\n              .attr(\"transform\", \"translate(0,\" + height + \")\")\n              .attr(\"color\", \"grey\")\n              .call(d3.axisBottom(x)).\n               selectAll(\"text\")\n               .attr(\"y\", 0)\n               .attr(\"x\", 9)\n               .attr(\"dy\", \".35em\")\n               .attr(\"transform\", \"rotate(60)\")\n               .style(\"text-anchor\", \"start\");\n      }\n     \n        g.append(\"g\")\n            .attr(\"color\", \"grey\")\n            .call(d3.axisLeft(y));\n\n\n        return{\n             g, x, y, height, width\n        }\n\n    }    \n\n\n    protected plotScale(g:any,x:any, y:any,height:any,width:any) : void \n    {\n        if(this.vScale){\n            g.append('g')\n                .attr(\"color\", \"lightgrey\")\n                .attr('transform', 'translate(0,' + height + ')')\n                .call(d3.axisBottom(x).\n                 tickSize(-this.width).tickFormat('')\n            );\n        }\n        if(this.hScale){\n            g.append('g')\n                .attr(\"color\", \"lightgrey\")\n                .call(d3.axisLeft(y)\n                . tickSize(-width).tickFormat(''));     \n        }\n    }\n\n \n    legendClick(node:any){\n \n        // const legendNode = JSON.parse(JSON.stringify(node));\n        // delete legendNode.color;\n        // legendNode.data.forEach(element => {\n        //     delete element.legend;\n        // });\n\n        let obj = {};\n    obj[\"label\"] = node.label;\n    let data = [];\n    node.data.forEach(element => {\n      let object = {};\n     \n      object[element.legend] = element.value;\n      object[this.xaxisname] = element.label;\n    //   object[element.label] = element.value;\n      data.push(object);\n    });\n    obj[\"data\"] = data;\n    this.onLegendClick.emit(obj);\n    \n        // this.onLegendClick.emit(legendNode);\n    }\n}","import { Component, ViewChild, ElementRef, Input } from \"@angular/core\";\nimport * as d3 from 'd3';\nimport { AmexioD3BaseLineComponent } from \"./baseline.component\";\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport { PlotCart } from \"../base/chart.component\";\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { CommanDataService } from '../services/comman.data.service';\nimport { DeviceQueryService } from \"../services/device.query.service\";\n\n@Component({\n    selector: 'amexio-d3-chart-line',\n    template: `\n<div *ngIf=\"drillableFlag\" #divid (window:resize)=\"resize()\"> \n<table style=\"width: 100%;\" #chartId  >\n        <tr><td style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td></tr>\n        <tr>\n            <td>\n                <svg [attr.height]=\"height\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n                </svg>            \n            </td>\n        </tr>\n        <tr>\n            <td style=\"display: block; padding: 5px;\">\n                    <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"legendClick($event)\" \n                                        [data]=\"legends\" style=\"height:100%;\">\n                    </amexio-d3-legend>\n            </td>\n        \n        </tr>\n</table>\n</div>\n    `\n})\nexport class AmexioD3LineComponent extends AmexioD3BaseLineComponent implements PlotCart {\n\n    @ViewChild('chartId') chartId: ElementRef;\n    @ViewChild('divid') divid: ElementRef;\n    @ViewChild('drillid') drillid:any;\n    @Input('data-reader') datareader: string;\n    @Input('level') level:number=0;\n    @Input('label') labelflag: boolean = false;\n    @Input('label-color') labelcolor: string = \"black\";\n    @Input('target') target:number;\n    @Input('drillable-data') drillabledatakey:any[]=[]\n    drillableFlag:boolean = true;\n    resizeflag:boolean=false;\n \n    constructor(public deviceQueryService: DeviceQueryService,public myservice:CommanDataService) {\n          super(deviceQueryService);\n    }\n\n    ngOnInit() {\n\n        if (this.level <= 1){\n        let resp: any\n        if (this.httpmethod && this.httpurl) {\n            this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n                resp = response;\n            }, (error) => {\n            }, () => {\n                setTimeout(() => {\n                    this.data = this.getResponseData(resp);\n                    this.plotD3Chart();\n                }, 0);\n            });\n        } else\n            if (this.data) {\n                setTimeout(() => {\n                    this.data = this.getResponseData(this.data);\n                    this.plotD3Chart();\n                }, 0);\n            }\n        }      \n    }\n\n\n    fetchData(data: any) {\n   \n        let requestJson;\n        let key=this.drillabledatakey;\n        let resp: any;\n        if(this.drillabledatakey.length)\n        {\n             let drillabledata= this.getMultipleDrillbleKeyData(data,key);\n             requestJson=drillabledata;\n        }\n        else{\n                 requestJson=data;\n             }\n      \n   if (this.httpmethod && this.httpurl) {\n     this.myservice.postfetchData(this.httpurl,this.httpmethod, requestJson).subscribe((response) => {\n                resp = response;\n            }, (error) => {\n            }, () => {\n                setTimeout(() => {\n                    this.data = this.getResponseData(resp);\n                    this.drawChart();             \n                }, 0);\n           });    \n        }\n    }\n    \n    drawChart() {\n        setTimeout(() => {\n          this.plotD3Chart();\n      }, 0);\n    } \n\n    resize() {\n\n    this.svgwidth = 0;\n    this.svg.selectAll(\"*\").remove();\n\n    this.resizeflag = true;\n    this.svgwidth = this.divid.nativeElement.offsetWidth;\n    this.plotD3Chart();\n  \n\n    }\n\n    getResponseData(httpResponse: any) {\n        let responsedata = httpResponse;\n        if (this.datareader != null) {\n            const dr = this.datareader.split('.');\n            for (const ir of dr) {\n                responsedata = responsedata[ir];\n            }\n        } else {\n            responsedata = httpResponse;\n        }\n        return responsedata;\n    }\n\n  plotD3Chart(): void {\n\n    \n       if(this.resizeflag==false)\n       {\n  if(this.chartId){\n            this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    } else{\n               this.svgwidth = this.svgwidth;\n        }\n    }\n        const tooltip = this.toolTip(d3);\n\n        const linechart = this.initChart();\n\n        this.plotScale(linechart.g, linechart.x, linechart.y, linechart.height, linechart.width);\n\n        this.plotLine(linechart.g, linechart.x, linechart.y, linechart.height,\n            linechart.width, [], tooltip, (1));\n\n        for (let index = 0; index < this.multiseriesdata.length; index++) {\n            this.plotLine(linechart.g, linechart.x, linechart.y, linechart.height,\n                linechart.width, this.multiseriesdata[index], tooltip, (index + 1));\n        }\n\n\n    }\n\n    private plotLine(g: any, x: any, y: any, height: any, width: any, data: any, tooltip: any, i: number): void {\n\n        const line = d3.line()\n            .x(function (d) { return x(d.label); })\n            .y(function (d) { return y(d.value); });\n\n        g.append(\"path\")\n            .datum(data)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", this.predefinedcolors[i])\n            .attr(\"stroke-width\", 1.5)\n            .attr(\"d\", line);\n\n        g.selectAll('dot')\n            .data(data)\n            .enter()\n            .append('circle')\n            .attr(\"cx\", (d) => { return x(d.label); })\n            .attr(\"cy\", (d) => { return y(d.value); })\n            .attr('r', 2)\n            .attr(\"cursor\", \"pointer\")\n            .on(\"mouseover\", (d) => {\n                return tooltip.style(\"visibility\", \"visible\");\n            })\n            .on(\"mousemove\", (d) => {\n                return tooltip.html(\n                    this.callTooltip(d)\n                    //  this.toolTipForLine(d)\n\n                    //  this.toolTipWithLegendandAxis(d.legend,d.label,d.value)\n\n                )\n                    .style(\"top\", (d3.event.pageY - 10) + \"px\")\n                    .style(\"left\", (d3.event.pageX + 10) + \"px\");\n            })\n            .on(\"mouseout\", (d) => {\n                return tooltip.style(\"visibility\", \"hidden\");\n            })\n            .on(\"click\", (d) => {\n                 this.lineChartClick(d);\n                 this.fordrillableClick(this,d,event);\n                 return tooltip.style(\"visibility\", \"hidden\");\n            });\n\n      //lets plot labels here\n      if (this.labelflag) {\n        g.selectAll('label')\n          .data(data)\n          .enter()\n          .append('text')\n          .style(\"font-weight\", \"bold\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"fill\", (d) => {\n            if (this.labelcolor.length > 0) {\n              return this.labelcolor;\n            } else {\n              return \"black\";\n            }\n          })\n          .attr(\"x\", function (d, i) {\n            return x(d.label);\n          })\n          .attr(\"y\", function (d, i) {\n            return y(d.value) - 10;\n          })\n          .text(function (d) {\n            return d.value;\n          })\n      }\n\n    }\n\nlineChartClick(d: any){\n    let obj = {};\n    obj[d.legend] = d.value;\n    obj[this.xaxisname] = d.label;\n    this.chartClick(obj);\n}\n\n    callTooltip(tooltipdata: any) {\n        let obj = {};\n        obj[tooltipdata.legend] = tooltipdata.value;\n        obj[this.xaxisname] = tooltipdata.label;\n        return this.toolTipForBar(obj);\n    }\n}","import { Component, OnInit, Input, Output, ViewChild, ElementRef, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport * as d3 from 'd3';\nimport { AmexioD3BaseChartComponent } from '../base/base.component';\nimport { CommanDataService } from '../services/comman.data.service';\nimport{DeviceQueryService} from '../services/device.query.service';\n\n@Component({\n  selector: 'amexio-d3-chart-barstack',\n  template: `<div   *ngIf=\"drillableFlag\" #divid (window:resize)=\"resize()\">\n<table style=\"width: 100%;\" #chartId  (window:resize)=\"resize()\">\n  <tr><td style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td></tr>\n  <tr>\n      <td>\n          <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n          </svg>            \n      </td>\n  </tr>\n  <tr>\n      <td style=\"display: block; padding: 5px;\">\n              <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"legendClick($event)\" \n                                  [data]=\"legends\" style=\"height:100%;\">\n              </amexio-d3-legend>\n      </td>\n  \n  </tr>\n</table>\n</div>`,\n  styles: [``]\n})\nexport class BarstackComponent extends AmexioD3BaseChartComponent implements OnInit {\n  legendArray: any[];\n  maxYValue: number = 0;\n  keyArray: any[];\n  predefinedcolors: any[];\n  legends: any[];\n  charttype: string;\n  data: any[];\n  datareaderdata: any[];\n  xaxis: any;\n  @Input('data') data1: any\n  @Input() barwidth: number = 0;\n  @Input('label') labelflag: boolean = false;\n  @Input() title: String = \"\";\n  @Input() legend: boolean = true;\n  @Input('label-color') labelcolor: string = \"black\";\n  @Input() color: string[] = [];\n  @Input('width') svgwidth: number=300;\n  @Input('data-reader') datareader: any;\n  @Input('level') level: number = 0;\n  @Input('target') target: number;\n  @Input('drillable-data') drillabledatakey: any[] = []\n  @Input('horizontal-scale') hScale: boolean = true;\n  drillableFlag: boolean = true;\n  resizeflag: boolean = false;\n  @Input('height') svgheight: number = 300;\n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  @ViewChild('drillid') drillid: any;\n  @Output() onLegendClick: any = new EventEmitter<any>();\n  httpresponse: any;\n  svg: any;\n  offsetheight:any;\n  constructor(private myservice: CommanDataService,private device:DeviceQueryService) {\n    super('barstack');\n  }\n\n  ngOnInit() {\n\n    if (this.level <= 1) {\n      let res;\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          //this.data = response;\n          this.httpresponse = response;\n          this.data = this.getResponseData(response);\n        }, (error) => {\n        }, () => {\n          setTimeout(() => {\n            this.transformData(this.data);\n            this.plotChart();\n          }, 0);\n        });\n      } else if (this.data1) {\n\n        setTimeout(() => {\n          this.transformData(this.data1);\n          this.plotChart();\n        }, 0);\n      }\n    }\n  }\n\n\n  fetchData(data: any) {\n\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n\n\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n        this.httpresponse = response;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          //this.data = this.getResponseData(resp);\n          this.drawChart();\n        }, 0);\n      });\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n      this.data = this.getResponseData(this.httpresponse);\n      this.transformData(this.data);\n      this.plotChart();\n    }, 0);\n\n  }\n\n\n  transformData(data1: any) {\n\n    this.keyArray = [];\n    this.legendArray = [];\n\n    data1.forEach((element, i) => {\n      if (i == 0) {\n        element.forEach((innerelement, index) => {\n          if (index > 0) {\n            this.legendArray[innerelement] = { 'data': [] };\n            this.keyArray.push(innerelement);\n          }\n          else if (index == 0) {\n            this.xaxis = innerelement;\n          }\n        });\n      }\n    });\n\n    let tempinnerarray: any[];\n    tempinnerarray = [];\n    data1.forEach((element, index) => {\n      if (index > 0) {\n        let obj: any = {};\n        element.forEach((innerelement, innerindex) => {\n          if (innerindex >= 0) {\n            const key = this.keyArray[innerindex - 1];\n            obj[key] = element[innerindex];\n            const legenddata = this.legendArray[key];\n            if (legenddata) {\n              legenddata.data.push({ 'value': element[innerindex], 'label': element[0] });\n            }\n          }\n        });\n        tempinnerarray.push(obj);\n      }\n\n    });\n    this.data = [];\n    tempinnerarray.forEach(element => {\n      this.data.push(element);\n    });\nlet maxY: any = 0;\n\nlet yaxismaxArray =  []; \n   //find max for yaxis\n    this.data.forEach((element) => {\n     for (let [key, value] of Object.entries(element) ){\n     \n     this.keyArray.forEach(key1 => {\n       if(key == key1){\n      maxY = maxY + value;\n       }\n     });//keyarray loop ends here\n\n     }//for ends here\nyaxismaxArray.push(maxY);\nmaxY = 0;\n    });// foreach ends\nlet tempLarge = 0, i;\nfor(i = 0; i < yaxismaxArray.length; i++) {\nif(yaxismaxArray[i] > tempLarge) {\n  this.maxYValue = yaxismaxArray[i];\n}//if ends\n}// for ends\n\n     this.legends = []\n    this.keyArray.forEach((element, index) => {\n      const legenddata = this.legendArray[element];\n      if (this.color.length > 0) {\n        let object = { 'label': element, 'color': this.color[index], 'data': legenddata.data };\n        this.legends.push(object);\n      } else {\n        let object = { 'label': element, 'color': this.predefinedcolors[index], 'data': legenddata.data };\n        this.legends.push(object);\n      }\n    });\n  }\n\n  plotChart() {\n    const tooltip = this.toolTip(d3);\n    let margin = { top: 20, right: 30, bottom:90, left: 60 };\n    let colors = this.predefinedcolors;\n  \n    if (this.device.IsDesktop()) {\n      if (this.chartId) {\n        this.svgwidth = this.chartId.nativeElement.offsetWidth;\n      } else {\n\n         this.svgwidth = this.svgwidth;\n      }\n    }\n    //this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    let data;\n     data = this.data;\n    let keysetarray: string[] = [];\n    if (this.httpmethod && this.httpurl) {\n      for (let [key, value] of Object.entries(this.data[0])) {\n        keysetarray.push(key);\n      }\n      this.keyArray = keysetarray;\n      this.keyArray.splice(0, 1);\n    }\n\n\n    let series = d3.stack().keys(this.keyArray)\n      .offset(d3.stackOffsetDiverging)\n      (this.data);\n    series\n    this.svg = d3.select(\"#\" + this.componentId);\n\n    let width = this.svgwidth - margin.left - margin.right;\n    let height;\n   // height=this.chartId.nativeElement.offsetHeight-20;\n   \n    if(this.device.IsDesktop())\n        {\n            \n               this.offsetheight = this.chartId.nativeElement.offsetHeight;\n               height =  this.offsetheight;\n        }\n        else{\n                 height=this.chartId.nativeElement.offsetHeight-10;\n          }\n\n    let x = d3.scaleBand()\n      .domain(data.map((d) => {\n        return d[Object.keys(d)[0]];\n      }))\n      .rangeRound([margin.left, width - margin.right])\n      .padding(0.35);\n\n    let y = d3.scaleLinear()\n      .domain([d3.min(this.stackMin(series)), \n        this.maxYValue\n        // d3.max(this.stackMax(series))\n    ])\n      .rangeRound([height - margin.bottom, margin.top]);\n\n   \n    // if (this.barwidth > 0) {\n    //   this.barwidth = this.barwidth;\n    // }\n    // else {\n    //   this.barwidth = x.bandwidth();\n    // }\n\n\n    if(this.device.IsDesktop()==true)\n    {\n      this.svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + y(0) + \")\")\n      .call(d3.axisBottom(x));\n    }\n  else\n   {\n    this.svg.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + y(0) + \")\")\n    .call(d3.axisBottom(x)).\n           selectAll(\"text\")\n           .attr(\"y\", 0)\n           .attr(\"x\", 9)\n           .attr(\"dy\", \".35em\")\n           .attr(\"transform\", \"rotate(60)\")\n           .style(\"text-anchor\", \"start\");\n\n  }\n   \n    this.svg.append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",0)\")\n      .call(d3.axisLeft(y));\n\n    this.plotLine(this.svg, x, y, height, width, margin.left)\n\n   let svgRect =   this.svg.append(\"g\")\n      .selectAll(\"g\")\n      .data(series)\n      .enter().append(\"g\")\n      .attr(\"fill\", (d, index) => {\n        if (this.color.length > 0) {\n          if (this.color[index]) {\n            return this.color[index];\n          }\n          else {\n            return colors[index];\n          }\n        }\n        else {\n          return colors[index];\n        }\n      })\n      .selectAll(\"rect\")\n      .data((d) => {\n         return d;\n      })\n\n      svgRect.enter().append(\"rect\")\n      .attr(\"width\", x.bandwidth()).attr('id', (d, i) => {\n        return d.data[i];\n      })\n      .attr(\"x\", (d) => {\n        return x(+d.data[Object.keys(d.data)[0]]);\n      })\n      .attr(\"y\", (d, index) => {\n        return y(d[1]);\n      })\n      .attr(\"cursor\", \"pointer\")\n      .attr(\"height\", (d, index) => {\n        return y(d[0]) - y(d[1]);\n      })\n      .on(\"mouseover\", (d) => {\n        return tooltip.style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", (d: any) => {\n        return tooltip.html(this.setKey(d))\n          .style(\"top\", (d3.event.pageY - 10) + \"px\")\n          .style(\"left\", (d3.event.pageX + 10) + \"px\");\n      })\n      .on(\"mouseout\", (d) => {\n        return tooltip.style(\"visibility\", \"hidden\");\n      })\n      .on(\"click\", (d) => {\n        this.setBarClickText(d);\n        this.fordrillableClick(this, d, event);\n        return tooltip.style(\"visibility\", \"hidden\");\n        // this.chartClick(d);\n      });\n// -------------------------\nif(this.labelflag) {\nsvgRect.enter()\n.append(\"text\")\n.style(\"font-weight\",\"bold\")\n.style(\"font-size\",\"1vw\")\n.attr(\"text-anchor\", \"middle\")\n.attr(\"fill\", (d)=>{\n  if(this.labelcolor.length>0){\n    return this.labelcolor;\n  } else {\n    return \"black\";\n  }\n})\n .attr(\"x\", (d) => {\n  return x(+d.data[Object.keys(d.data)[0]]) + x.bandwidth()/2;\n  // +  margin.left;\n})\n.attr(\"y\", (d, index) => {\n  return y(d[1]) + 20;\n})\n.text(function(d){\n     return  d[Object.keys(d)[1]] - d[Object.keys(d)[0]];\n})\n}\n \n  }\n\n  stackMin(serie) {\n    return d3.min(serie, function (d) { return d[0]; });\n  }\n\n  // stackMax(serie) {\n  //   return d3.max(serie, function (d) { return d[1]; });\n  // }\n\n  resize() {\n\n    this.svgwidth = 0;\n    this.svg.selectAll(\"*\").remove();\n\n    this.resizeflag = true;\n    this.svgwidth = this.divid.nativeElement.offsetWidth;\n    this.plotChart();\n\n  }\n\n\n  plotLine(svg, x, y, height, width, m) {\n    if (this.hScale) {\n      svg.append('g')\n        .attr(\"transform\", \"translate(\" + m + \",0)\")\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y)\n          .tickSize(-width).tickFormat(''));\n    }\n  }\n\n\n  legendClick(event: any) {\n    let obj = {};\n    obj[\"label\"] = event.label;\n    let data = [];\n    event.data.forEach(element => {\n      let object = {};\n      object[element.label] = element.value;\n      data.push(object);\n    });\n    obj[\"data\"] = data;\n    this.onLegendClick.emit(obj);\n  }\n\n  setKey(d: any) {\n    let diff = d[0] - d[1];\n    if (diff < 0) {\n      diff = (diff * (-1));\n    }\n    for (let [key, value] of Object.entries(d.data)) {\n      if (value == diff) {\n        //  let object = { 'label': key, 'value': value , 'legend': d.data[Object.keys(d.data)[0]]};\n        let object = {};\n        object[key] = value;\n        object[this.xaxis] = d.data[Object.keys(d.data)[0]];\n\n        return (this.toolTipForBar(object));\n      }\n    }\n  }\n\n  setBarClickText(d: any) {\n    let diff = d[0] - d[1];\n    if (diff < 0) {\n      diff = (diff * (-1));\n    }\n    // let object = {};\n    let object = {};\n    for (let [key, value] of Object.entries(d.data)) {\n      if (value == diff) {\n        object[key] = value;\n        object[this.xaxis] = d.data[Object.keys(d.data)[0]];\n      }\n    }\n    this.chartClick(object);\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n\n}\n","\nimport { Component, OnInit,Input, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport {CommanDataService} from '../services/comman.data.service'\nimport{DeviceQueryService} from '../services/device.query.service';\nimport * as d3 from 'd3';\n@Component({\n  selector: 'amexio-d3-chart-multiseries',\n  template: `<div   *ngIf=\"drillableFlag\" #divid (window:resize)=\"resize($event)\"> \n<table style=\"width: 100%;\" #chartId>\n    <tr>\n        <td colspan=\"2\" style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n    </tr>\n    <tr>\n        <td>\n            <svg [attr.height]=\"height\" [attr.width]=\"width\" [attr.id]=\"componentId\">\n            </svg>\n        </td>\n    </tr>\n    <tr>\n        <td style=\"display: block; padding: 5px;\">\n            <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"legendClick($event)\" [data]=\"legends\" style=\"height:100%;\"></amexio-d3-legend>\n        </td>\n    </tr>\n</table>\n</div>\n\n\n`,\n  styles: [``]\n})\nexport class GroupbarComponent extends AmexioD3BaseChartComponent implements OnInit {\n  \n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  @ViewChild('drillid') drillid: any;\n  //@Input() data: any;\n  @Input('data') data: any\n  @Input() legend: boolean = true;\n  @Input() barwidth: number = 0;\n  @Input('label-color') labelcolor: string = \"black\";\n  @Input('label') labelflag: boolean = false;\n  @Output() onLegendClick: any = new EventEmitter<any>();\n  @Input('width') svgwidth: number = 300;\n  @Input('height') svgheight: number = 300;\n  @Input('data-reader') datareader: string;\n  @Input('level') level: number = 0;\n  @Input('target') target: number;\n  @Input('drillable-data') drillabledatakey: any[] = []\n  @Input('horizontal-scale') hScale: boolean = true;\n\n  drillableFlag: boolean = true;\n  resizeflag: boolean = false;\n  groupbarchartArray: any[] = [];\n  legendArray: any;\n  xaxisData: any;\n  keyArray: any;\n  legends: any;\n  years: any;\n  urllegendArray = [];\n  svg: any;\n  constructor(private myservice: CommanDataService,private device:DeviceQueryService) {\n    super('multibar');\n    this.predefinedcolors = [\"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\", \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\", \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\", \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\", \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\"];\n  }\n\n  ngOnInit() {\n    if (this.level <= 1) {\n      let res: any;\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          res = response;\n\n        }, (error) => {\n        }, () => {\n          setTimeout(() => {\n\n            this.data = this.getResponseData(res);\n            this.initializeData();\n            this.plotD3Chart();\n          }, 0);\n\n        });\n\n      } else if (this.data) {\n\n\n        setTimeout(() => {\n          this.data = this.getResponseData(this.data);\n          this.initializeData();\n          this.plotD3Chart();\n        }, 0);\n\n      }\n    }\n  }\n\n  fetchData(data: any) {\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          this.data = this.getResponseData(resp);\n          this.drawChart();\n        }, 0);\n      });\n\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n\n      this.initializeData();\n      this.plotD3Chart();\n\n    }, 0);\n\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  plotD3Chart(): void {\n    this.convertToJSON();\n    this.plotGroupBarChart();\n    this.transformData(this.data);\n  }\n\n  private plotGroupBarChart(): void {\n    const tooltip = this.toolTip(d3);\n    let colors = this.predefinedcolors;\n    // this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    if (this.resizeflag == false) {\n      if (this.chartId) {\n        this.svgwidth = this.chartId.nativeElement.offsetWidth;\n      } else {\n\n        this.svgwidth = this.svgwidth;\n      }\n    }\n    const margin = { top: 20, right: 20, bottom: 50, left: 40 };\n    const width = this.svgwidth - margin.left - margin.right;\n    const height = this.svgheight - margin.top - margin.bottom;\n\n    this.svg = d3.select(\"#\" + this.componentId)\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    const x0 = d3.scaleBand()\n      .rangeRound([0, width])\n      .padding(0.2);\n\n    const x1 = d3.scaleBand().padding(0.1);\n\n    const y = d3.scaleLinear()\n      .rangeRound([height, 0]);\n\n    //setting x and y domains\n    this.years = this.groupbarchartArray.map(function (d) { return d.labels; });\n    let label = this.groupbarchartArray[0].values.map(function (d) { return d.label; });\n\n    x0.domain(this.years);\n    x1.domain(label).rangeRound([0, x0.bandwidth()]);\n    y.domain([0, d3.max(this.groupbarchartArray, function (labels) { return d3.max(labels.values, function (d) { return d.value; }); })]);\n\n    //dynamic barwidth\n    if (this.barwidth > 0) {\n      this.barwidth = this.barwidth;\n    }\n    else {\n      this.barwidth = x0.bandwidth;\n    }\n\n    // add x axis to svg\n\n\n\n    if(this.device.IsDesktop()==true)\n            {\n              this.svg.append(\"g\")\n                  .attr(\"transform\", \"translate(0,\" + height + \")\")\n                  .call(d3.axisBottom(x0))\n            }\n          else\n           {\n            this.svg.append(\"g\")\n                  .attr(\"transform\", \"translate(0,\" + height + \")\")\n                  .call(d3.axisBottom(x0)).\n                   selectAll(\"text\")\n                   .attr(\"y\", 0)\n                   .attr(\"x\", 9)\n                   .attr(\"dy\", \".35em\")\n                   .attr(\"transform\", \"rotate(60)\")\n                   .style(\"text-anchor\", \"start\");\n     \n          }\n\n  \n\n    //add y axis to svg\n    this.svg.append(\"g\")\n      .call(d3.axisLeft(y)\n        .ticks(10))\n\n    this.plotLine(this.svg, y, height, width);\n\n    // svg.select('.y').transition().duration(500).delay(1300).style('opacity', '1');\n     //adding bars\n    let slice = this.svg.selectAll(\".slice\")\n      .data(this.groupbarchartArray)\n      .enter().append(\"g\")\n      .attr(\"class\", \"g\")\n      .attr(\"transform\", function (d) { return \"translate(\" + x0(d.labels) + \",0)\"; });\n    \n      slice.selectAll(\"rect\")\n      .data(function (d) { return d.values; })\n      .enter().append(\"rect\")\n      .attr(\"width\", x1.bandwidth)\n      .attr(\"x\", function (d) {\n        return x1(d.label)\n      })\n      .style(\"fill\", function (d, index) { return colors[index] })\n      .attr(\"y\", function (d) { return y(0); })\n      .attr(\"height\", function (d) { return height - y(0); })\n      .attr(\"cursor\", \"pointer\")\n      .on(\"mouseover\", (d) => {\n        return tooltip.style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", (d) => {\n        return tooltip.html(\n          this.setKey(d)\n          //  this.toolTipContent(d)\n        )\n          .style(\"top\", (d3.event.pageY - 10) + \"px\")\n          .style(\"left\", (d3.event.pageX + 10) + \"px\");\n      }).on(\"mouseout\", (d) => {\n        return tooltip.style(\"visibility\", \"hidden\");\n      })\n      .on(\"click\", (d) => {\n        this.groupbarClick(d);\n        this.fordrillableClick(this, d, event);\n        return tooltip.style(\"visibility\", \"hidden\");\n        // this.chartClick(d);\n      })\n\n      // -------------------------------------------------------\n      if(this.labelflag) {\n      slice.selectAll(\"text\")\n      .data(function (d) { return d.values; })\n      .enter().append(\"text\")\n      .attr(\"width\", x1.bandwidth)\n      .attr(\"x\", function (d) {\n        return x1(d.label) + x1.bandwidth()/2\n      })\n       .attr(\"y\", function (d) { return y(d.value); })\n      .attr(\"height\", function (d) { return height - y(0); })\n      .style(\"font-weight\",\"bold\")\n      .style(\"font-size\",\"1vw\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", (d)=>{\n        if(this.labelcolor.length>0){\n          return this.labelcolor;\n        } else {\n          return \"black\";\n        }\n      })\n      .text(function(d){\n          return d.value;\n         });\n}\n    slice.selectAll(\"rect\")\n      .attr(\"y\", function (d) { \n         return y(d.value); })\n      .attr(\"height\", function (d) { return height - y(d.value); });\n  }\n\n  groupbarClick(d: any) {\n    let object = {};\n    object[d.label] = d.value;\n    object[this.xaxisData] = d.xaxis;\n    this.chartClick(object);\n  }\n\n  resize(event: any) {\n    this.svgwidth = 0;\n    this.svg.selectAll(\"*\").remove();\n    this.resizeflag = true;\n    this.svgwidth = this.divid.nativeElement.offsetWidth;\n    this.plotGroupBarChart();\n  }\n\n  legendClick(event: any) {\n    // const legendNode = JSON.parse(JSON.stringify(event));\n    // delete legendNode.color;\n\n    let obj = {};\n    obj[\"label\"] = event.label;\n    let data = [];\n    event.data.forEach(element => {\n      let object = {};\n      object[element.label] = element.value;\n      data.push(object);\n    });\n    obj[\"data\"] = data;\n    this.onLegendClick.emit(obj);\n\n    // this.onLegendClick.emit(legendNode);\n  }\n\n  //2d array to json conversion\n  convertToJSON() {\n    let groupChartObj = { \"labels\": \"\", values: [] };\n    let firstRowOfData = this.data[0];\n    this.xaxisData = this.data[0][0];\n\n    for (let i = 1; i < this.data.length; i++) {\n      let multiSeriesArray = [];\n      let valueOfJ: any;\n\n      for (let j = 1; j < this.data[i].length; j++) {\n\n        valueOfJ = this.data[i][0];\n        let singleBarObj = {};\n        singleBarObj[\"value\"] = this.data[i][j];\n        singleBarObj[\"label\"] = firstRowOfData[j];\n        singleBarObj[\"xaxis\"] = this.data[i][0];\n        multiSeriesArray.push(singleBarObj);\n      }\n      if (multiSeriesArray.length) {\n        groupChartObj[\"values\"] = multiSeriesArray;\n        let newLabelsValues: any = valueOfJ;\n        let newGroupDataObj = Object.assign({}, groupChartObj);\n        newGroupDataObj['labels'] = newLabelsValues + '';\n        this.groupbarchartArray.push(newGroupDataObj);\n      }\n    }\n\n  }\n\n\n  transformto2dArray() {\n    let i = 0\n    let result = [];\n    result.push(\"years\");\n    this.data.forEach((element, i) => {\n      if (i == 0) {\n        element.values.forEach(element2 => {\n          result.push(element2.label);\n\n        });\n      }\n\n    });\n    this.urllegendArray.push(result);\n\n    let temparray = [];\n    this.data.forEach(element => {\n      temparray = [];\n      let values: any;\n      let year = element.labels;\n      temparray.push(year);\n      element.values.forEach(element2 => {\n        values = element2.value;\n        temparray.push(values);\n      });\n      this.urllegendArray.push(temparray);\n    })\n  }\n\n  transformData(data: any) {\n    this.keyArray = [];\n    this.legendArray = [];\n    data.forEach((element, i) => {\n      if (i == 0) {\n        element.forEach((innerelement, index) => {\n          if (index > 0) {\n            this.legendArray[innerelement] = { 'data': [] };\n            this.keyArray.push(innerelement);\n          }\n        });\n      }\n    });\n    data.forEach((element, index) => {\n      if (index > 0) {\n        let obj: any = {};\n        element.forEach((innerelement, innerindex) => {\n          if (innerindex >= 0) {\n            const key = this.keyArray[innerindex - 1];\n            obj[key] = element[innerindex];\n            const legenddata = this.legendArray[key];\n            if (legenddata) {\n              legenddata.data.push({ 'value': element[innerindex], 'label': element[0] });\n            }\n          }\n\n        });\n      }\n    });\n\n    this.legends = [];\n    this.keyArray.forEach((element, index) => {\n      const legenddata = this.legendArray[element];\n      let object = { 'label': element, 'color': this.predefinedcolors[index], 'data': legenddata.data };\n      this.legends.push(object);\n    });\n  }\n\n  setKey(d: any) {\n    let object = {};\n    object[d.label] = d.value;\n    object[this.xaxisData] = d.xaxis;\n    return (this.toolTipForBar(object));\n  }\n\n  plotLine(g, y, height, width) {\n    if (this.hScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y)\n          .tickSize(-width).tickFormat(''));\n    }\n  }\n\n}\n","import { Component, Input, ViewChild, ElementRef, } from \"@angular/core\";\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport { PlotCart } from \"../base/chart.component\";\nimport { CommanDataService } from '../services/comman.data.service';\nimport * as d3 from 'd3';\nimport { stringify } from \"@angular/core/src/render3/util\";\nimport{DeviceQueryService} from '../services/device.query.service';\n@Component({\n    selector: 'amexio-d3-combochart',\n    template: `<div *ngIf=\"drillableFlag\" #divid (window:resize)=\"resize()\">\n<table style=\"width: 100%;\" #chartId >\n  <tr>\n      <td style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n  </tr>\n  <tr>\n      <td>\n          <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n          </svg>\n      </td>\n  </tr>\n  <tr>\n      <td style=\"display: block; padding: 5px;\">\n          <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"onBarLegendClick($event)\" [data]=\"legendArray\" style=\"height:100%;\">\n          </amexio-d3-legend>\n      </td>\n  </tr>\n</table>\n</div>`,\n    styles: [``]\n})\nexport class CombochartComponent extends AmexioD3BaseChartComponent implements PlotCart {\n    @Input('width') svgwidth: number = 300;\n    @Input('height') svgheight: number = 300;\n    @Input('line-color') lineColor: string = \"black\";\n    @Input() horizontal: boolean = false;\n    @ViewChild('chartId') chartId: ElementRef;\n    @ViewChild('divid') divid: ElementRef;\n    @Input('data-reader') datareader: string;\n    @Input('level') level: number = 0;\n    @Input('target') target: number;\n    @Input('drillable-data') drillabledatakey: any[] = []\n    @Input('line-data-index') lineInput: any;\n    @Input('horizontal-scale') hScale : boolean = true;\n    drillableFlag: boolean = true;\n    resizeflag:boolean=false;\n    data: any;\n    svg:any;\n    colorflag: boolean = false;\n    keyArray: any[] = [];\n    transformeddata: any[] = [];\n    object: any;\n    legendArray: any[] = [];\n    httpresponse:any;\n    offsetheight:any;\n   \n    constructor(private myservice: CommanDataService,private device:DeviceQueryService) {\n        super('combochart');\n    }\n    ngOnInit() {\n      \n        if (this.level <= 1) {\n            let resp: any;\n            if (this.httpmethod && this.httpurl) {\n                this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n                    resp = response;\n                    this.httpresponse=response;\n                }, (error) => {\n                }, () => {\n                    setTimeout(() => {\n                        this.data = this.getResponseData(resp);\n                        this.transformData(this.data)\n                        this.initializeData();\n                        this.plotD3Chart();\n                    \n                    }, 0);\n                });\n\n            } else if (this.data) {\n\n                setTimeout(() => {\n                    this.data = this.getResponseData(this.data);\n                    this.transformData(this.data)\n                    this.initializeData();\n                    this.plotD3Chart();\n\n                }, 0);\n\n            }\n        }\n    }\n    fetchData(data: any) {\n\n        let requestJson;\n        let key = this.drillabledatakey;\n        let resp: any;\n        if (this.drillabledatakey.length) {\n            let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n            requestJson = drillabledata;\n\n        }\n        else {\n            requestJson = data;\n        }\n        if (this.httpmethod && this.httpurl) {\n            this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n                resp = response;\n                this.httpresponse=response;\n            }, (error) => {\n            }, () => {\n                setTimeout(() => {\n                   // this.data = this.getResponseData(resp);\n                    this.drawChart();\n                }, 0);\n            });\n        }\n    }\n\n    drawChart() {\n        setTimeout(() => { \n            this.data = this.getResponseData(this.httpresponse);\n            this.transformData(this.data)\n            this.initializeData();\n            this.plotD3Chart();\n        }, 0);\n\n    }\n    getResponseData(httpResponse: any) {\n        let responsedata = httpResponse;\n        if (this.datareader != null) {\n            const dr = this.datareader.split('.');\n            for (const ir of dr) {\n                responsedata = responsedata[ir];\n            }\n        } else {\n            responsedata = httpResponse;\n        }\n        return responsedata;\n    }\n\n    plotD3Chart() {\n\n        this.formLegendData();\n        if(this.resizeflag==false)\n        {\n        if (this.chartId) {\n            this.svgwidth = this.chartId.nativeElement.offsetWidth;\n        } else {\n\n            this.svgwidth = this.svgwidth;\n        }\n    }  \n        let lineName: any = this.lineInput;\n\n        const tooltip = this.toolTip(d3);\n        this.svg = d3.select(\"#\" + this.componentId);\n        const margin = { top: 20, right: 20, bottom: 85, left: 60 };\n        const width = this.svgwidth - margin.left - margin.right;\n        let height;\n     \n\n        console.log(\"offsetheight\",this.offsetheight);\n        if(this.device.IsDesktop()==true)\n        {\n            \n            this.offsetheight = this.chartId.nativeElement.offsetHeight-20-90;\n               height =  this.offsetheight;\n        }\n        else{\n                 height=this.svgheight-margin.top-margin.bottom;\n          }\n        let x, y;\n        const g = this.svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n        if (this.horizontal == false) {\n            x = d3.scaleBand()\n                .rangeRound([0, width])\n                .padding(0.1);\n            y = d3.scaleLinear()\n                .rangeRound([height, 0]);\n\n            //setting content for x and y axis\n            x.domain(this.data.map((d) => {\n                return d[Object.keys(d)[0]];\n            }));\n            let barRange = d3.max(this.data, (d) => {\n                return d[Object.keys(d)[1]];\n            });\n\n            let lineRange = d3.max(this.data, (d) => {\n                return d[this.lineInput];\n            })\n            let range;\n            if (barRange > lineRange) {\n                range = barRange;\n            }\n            else {\n                range = lineRange;\n            }\n            y.domain([0, range]);\n\n\n            if(this.device.IsDesktop()==true)\n            {\n              g.append(\"g\")\n                  .attr(\"transform\", \"translate(0,\" + height + \")\")\n                  .call(d3.axisBottom(x))\n            }\n          else\n           {\n            g.append(\"g\")\n                  .attr(\"transform\", \"translate(0,\" + height + \")\")\n                  .call(d3.axisBottom(x)).\n                   selectAll(\"text\")\n                   .attr(\"y\", 0)\n                   .attr(\"x\", 9)\n                   .attr(\"dy\", \".35em\")\n                   .attr(\"transform\", \"rotate(65)\")\n                   .style(\"text-anchor\", \"start\");\n     \n          }\n            //add y axis to svg\n            g.append(\"g\")\n                .call(d3.axisLeft(y)\n                    .ticks(10))\n\n           this.plotLine(g,x,y,height,width); \n           \n            //add bar chart\n            g.selectAll(\".bar\")\n                .data(this.data)\n                .enter()\n                .append(\"rect\")\n                .attr(\"class\", \"bar\")\n                .attr(\"x\", (d) => {\n                    return x(d[Object.keys(d)[0]]);\n                })\n                .attr(\"y\", (d) => {\n                    return y(d[Object.keys(d)[1]]);\n                })\n                .attr(\"cursor\", \"pointer\")\n                .attr(\"width\", x.bandwidth())\n                .attr(\"height\", (d) => { return height - y(d[Object.keys(d)[1]]); })\n                .style(\"fill\", (d) => {\n                    return d.color;\n                })\n                .on(\"mouseover\", (d) => {\n                    return tooltip.style(\"visibility\", \"visible\");\n                })\n                .on(\"mousemove\", (d) => {\n                    return tooltip.html(\n                        this.formTooltipData(d))\n                        .style(\"top\", (d3.event.pageY - 10) + \"px\")\n                        .style(\"left\", (d3.event.pageX + 10) + \"px\");\n                })\n                .on(\"mouseout\", (d) => {\n                    return tooltip.style(\"visibility\", \"hidden\");\n                })\n                .on(\"click\", (d) => {\n\n                    this.barChartClick(d);\n                    this.fordrillableClick(this, d,event);\n                    return tooltip.style(\"visibility\", \"hidden\");\n                });\n            //line code start\n            let valueline = d3.line()\n                .x(function (d) {\n                    return x(\n                        d[Object.keys(d)[0]]\n                    );\n                })\n                .y(function (d) {\n                    return y(\n                        d[lineName]\n                    );\n                });\n\n            let shift = margin.left + x.bandwidth() / 2;\n            this.svg.append(\"path\")\n                .data([this.data])\n                .attr(\"fill\", \"none\")\n                .style(\"stroke\", this.lineColor)\n                .attr(\"stroke-width\", 1.5)\n                .attr(\"transform\", \"translate( \" + shift + \", 20 )\")\n                .attr(\"d\", valueline);\n            let points1 = this.svg.selectAll(\"circle.point1\")\n                .data(this.data)\n\n            points1.enter().append(\"circle\")\n                .merge(points1)\n                .attr(\"class\", \"point1\")\n                .attr(\"cursor\", \"pointer\")\n                .style(\"stroke\", this.lineColor)\n                .style(\"fill\", this.lineColor)\n                .attr(\"cx\", (d) => {\n                    return x(\n                        d[Object.keys(d)[0]]\n                    );\n                })\n                .attr(\"cy\", (d) => {\n                    return y(\n                        d[lineName]\n                    );\n                })\n                .attr(\"r\", (d) => { return 5; })\n                .attr(\"transform\", \"translate( \" + shift + \", 20 )\")\n                .on(\"mouseover\", (d) => {\n                    return tooltip.style(\"visibility\", \"visible\");\n                })\n                .on(\"mousemove\", (d) => {\n                    return tooltip.html(\n                        this.formTooltipLineData(d))\n                        .style(\"top\", (d3.event.pageY - 10) + \"px\")\n                        .style(\"left\", (d3.event.pageX + 10) + \"px\");\n                })\n                .on(\"mouseout\", (d) => {\n                    return tooltip.style(\"visibility\", \"hidden\");\n                })\n                .on(\"click\", (d) => {\n                    this.onComboLineClick(d);\n                    this.fordrillableClick(this, d,event);\n                    return tooltip.style(\"visibility\", \"hidden\");\n                });\n            //line code ends\n        }\n\n\n    }\n\n    plotLine(g,x,y,height,width)\n{\n\n    if(this.hScale){\n        g.append('g')\n            .attr(\"color\", \"lightgrey\")\n            .call(d3.axisLeft(y)\n            . tickSize(-width).tickFormat(''));     \n    }\n}\n    formTooltipData(tooltipData: any) {\n        let object = {};\n        for (let [key, value] of Object.entries(tooltipData)) {\n            if (key != 'color') {\n                object[key] = value;\n            }\n        }\n        return this.toolTipForBar(object);\n    }\n\n    transformData(data: any) {\n        this.transformeddata=[];\n        this.keyArray = data[0];\n   \n        data.forEach((element, index) => {\n            if (index > 0) {\n                let DummyObject = {};\n                element.forEach((individualvalue, keyindex) => {\n                    DummyObject[this.keyArray[keyindex]] = individualvalue;\n                });//inner for loop ends\n                this.transformeddata.push(DummyObject);\n            }//if ends\n        });//outer for loop ends\n        this.data = this.transformeddata;\n    }\n\n    formLegendData() {\n        this.legendArray = [];\n        this.data.forEach(element => {\n            let legendobject = {};\n            legendobject['label'] = element[Object.keys(element)[0]];\n            legendobject['value'] = element[Object.keys(element)[1]];\n            legendobject['color'] = element.color;\n            this.legendArray.push(legendobject);\n        });\n    }\n\n    onBarLegendClick(legendevent: any) {\n        let obj = {};\n        obj[this.keyArray[0]] = legendevent.label;\n        obj[this.keyArray[1]] = legendevent.value;\n        this.legendClick(obj);\n    }\n\n\n    barChartClick(event: any) {\n        let object = {};\n        for (let [key, value] of Object.entries(event)) {\n            if (key != 'color') {\n                object[key] = value;\n            }\n        }\n        this.chartClick(object);\n    }\n\n    onComboLineClick(data: any) {\n        let object = {};\n        for (let [key, value] of Object.entries(data)) {\n            if (key != \"color\") {\n                object[key] = value;\n            }\n        }\n        this.comboLineClick(object);\n        //this.chartClick(object);\n    }\n\n    formTooltipLineData(data: any) {\n        let object = {};\n        for (let [key, value] of Object.entries(data)) {\n            if (key == this.lineInput) {\n                object[key] = value;\n            }\n        }\n        return this.toolTipForBar(object);\n    }\n\n    resize() {\n\n        this.svgwidth = 0;\n      this.svg.selectAll(\"*\").remove();\n\n     this.resizeflag = true;\n     this.svgwidth = this.divid.nativeElement.offsetWidth;\n   //  this.svgheight=this.offsetheight;\n     this.plotD3Chart();\n\n    }\n\n\n}\n","import { Component, Input, ViewChild, ElementRef, OnInit } from \"@angular/core\";\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport { PlotCart } from \"../base/chart.component\";\nimport { CommanDataService } from '../services/comman.data.service';\nimport { DeviceQueryService } from '../services/device.query.service';\nimport * as d3 from 'd3';\n@Component({\n  selector: 'amexio-d3-chart-histogram',\n  template: `<div   *ngIf=\"drillableFlag\" #divid (window:resize)=\"resize()\" >\n<table style=\"width: 100%;\" #chartId >\n        <tr>\n            <td colspan=\"2\" style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n        </tr>\n        <tr>\n            <td>\n                <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n                </svg>\n            </td>\n        </tr>\n        <tr>\n            <td style=\"display: block; padding: 5px;\">\n                <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"legendClick($event)\" [data]=\"legends\" style=\"height:100%;\"></amexio-d3-legend>\n            </td>\n        </tr>\n    </table>\n</div>\n`,\n  styles: [`.bar{background-color:#3943cf;padding:.02px}`]\n})\nexport class HistogramComponent extends AmexioD3BaseChartComponent implements OnInit {\n  @Input('width') svgwidth: number = 300;\n  @Input('height') svgheight: number = 400;\n  @Input('color') color: string = \"blue\";\n  @Input('data') datahisto: any;\n  @Input('label') labelflag: boolean = false;\n  @Input('label-color') labelcolor: string = \"black\";\n  @Input('horizontal-scale') hScale: boolean = true;\n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  @Input('data-reader') datareader: string;\n  @Input('level') level: number = 0;\n  @Input('target') target: number;\n  @Input('drillable-data') drillabledatakey: any[] = []\n  httpresponse: any;\n  svg: any;\n  resizeflag: boolean = false;\n  drillableFlag: boolean = true;\n  data1: any;\n  values: any[] = [];\n  array: any[] = [];\n  xaxisArray: any[] = [];\n  yaxisArray: any[] = [];\n  yaxisData: any[] = [];\n  histogramarray: any[] = [];\n  histogramdata: any[] = []\n  lengtharray: any[] = [];\n  arrayofLength: any[] = [];\n  chartData: any[] = [];\n  finaldataarray: any[] = [];\n  legendArray: any[];\n  keyArray: any[];\n  predefinedcolors: any[];\n  legends: any[];\n  charttype: string;\n  data: any[];\n  datareaderdata: any[];\n  xaxis: any;\n  tempp: any;\n  tooltipArray: any[] = [];\n  index = 0;\n  constructor(private myservice: CommanDataService, private device: DeviceQueryService) {\n    super('histogram');\n  }\n\n  ngOnInit() {\n    let res: any\n    if (this.level <= 1) {\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          res = response;\n          this.httpresponse = response;\n        }, (error) => {\n        }, () => {\n          setTimeout(() => {\n            this.datahisto = [];\n            this.datahisto = this.getResponseData(res);\n            this.transformData()\n            this.plotXaxis();\n            this.plotYaxis();\n            this.tooltipData();\n            this.dataforChart();\n            this.transformData1(this.finaldataarray);\n            this.plotChart();\n\n          }, 0);\n\n        });\n\n      } else if (this.datahisto) {\n\n\n        setTimeout(() => {\n          this.datahisto = this.getResponseData(this.datahisto);\n          this.transformData()\n          this.plotXaxis();\n          this.plotYaxis();\n          this.tooltipData();\n          this.dataforChart();\n          this.transformData1(this.finaldataarray);\n          this.plotChart();\n\n        }, 0);\n\n      }\n    }\n  }\n\n  fetchData(data: any) {\n\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n\n\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n        this.httpresponse = response;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          //this.data = this.getResponseData(resp);\n          this.drawChart();\n        }, 0);\n      });\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n      this.datahisto = this.getResponseData(this.httpresponse);\n      this.transformData()\n      this.plotXaxis();\n      this.plotYaxis();\n      this.tooltipData();\n      this.dataforChart();\n      this.transformData1(this.finaldataarray);\n      this.plotChart();\n    }, 0);\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  transformData1(data1: any) {\n    this.keyArray = [];\n    this.legendArray = [];\n    data1.forEach((element, i) => {\n      if (i == 0) {\n        element.forEach((innerelement, index) => {\n          if (index > 0) {\n            this.legendArray[innerelement] = { 'data': [] };\n            this.keyArray.push(innerelement);\n          }\n          else if (index == 0) {\n            this.xaxis = innerelement;\n          }\n        });\n      }\n    });\n    let tempinnerarray: any[];\n    tempinnerarray = [];\n    data1.forEach((element, index) => {\n      if (index > 0) {\n        let obj: any = {};\n        element.forEach((innerelement, innerindex) => {\n          if (innerindex >= 0) {\n            const key = this.keyArray[innerindex - 1];\n            obj[key] = element[innerindex];\n            const legenddata = this.legendArray[key];\n            if (legenddata) {\n              legenddata.data.push({ 'value': element[innerindex], 'label': element[0] });\n            }\n          }\n        });\n        tempinnerarray.push(obj);\n      }\n\n    });\n    this.data = [];\n    tempinnerarray.forEach(element => {\n      this.data.push(element);\n    });\n    this.legends = [];\n    let element = this.datahisto[0];\n    let object = { 'label': element[1] + \" \" + \"of\" + \" \" + element[0], 'color': this.color };\n    this.legends.push(object);\n  }\n\n  plotChart() {\n\n    const tooltip = this.toolTip(d3);\n    let data;\n    data = this.data;\n    let keysetarray: string[] = [];\n    let series;\n    series = [];\n    series = d3.stack().keys(this.keyArray)\n      .offset(d3.stackOffsetDiverging)\n      (this.data);\n    let i = 0;\n    let tempdata;\n    tempdata = [];\n    tempdata = series;\n    tempdata.forEach(element => {\n      element.forEach(innerelement => {\n        let singletooltip = [];\n        singletooltip.push(innerelement.data.tooltipdata[i]);\n        innerelement.push(singletooltip);\n      });\n      i++;\n    });\n\n    let chartdata = [];\n    for (i = 0; i < tempdata.length - 1; i++) {\n      chartdata.push(tempdata[i]);\n    }\n    if (this.resizeflag == false) {\n      if (this.chartId) {\n        this.svgwidth = this.chartId.nativeElement.offsetWidth;\n      } else {\n\n        this.svgwidth = this.svgwidth;\n      }\n    }\n    const margin = { top: 20, right: 20, bottom: 50, left: 60 };\n    const width = this.svgwidth - margin.left - margin.right;\n    const height = this.svgheight - margin.top - margin.bottom;\n\n    //const height = +svg.attr(\"height\") - margin.top - margin.bottom;\n\n    let x, y;\n\n    this.svg = d3.select(\"#\" + this.componentId)\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    let barWidth = (width / this.chartData.length);\n    let inc = barWidth / 2;\n    x = d3.scalePoint()\n      .domain(this.xaxisArray, function (d) { return d; })\n      .rangeRound([0, width]);\n\n\n    y = d3.scaleLinear().rangeRound([height, 0]);\n    y.domain([0, d3.max(this.arrayofLength)]);\n\n    let z = d3.scaleOrdinal(d3.schemeCategory10);\n    this.arrayofLength = [];\n    // add x axis to svg\n\n    if (this.device.IsDesktop() == true) {\n      this.svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x))\n    }\n    else {\n      this.svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x)).\n        selectAll(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\", \"rotate(60)\")\n        .style(\"text-anchor\", \"start\");\n\n    }\n\n    let horizontalpadding = 0.05;\n    //add y axis to svg\n    this.svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n    this.plotLine(this.svg, x, y, height, width);\n   \n let histogramBar = this.svg.append(\"g\")\n      .selectAll(\"g\")\n      .data(chartdata)\n      .enter().append(\"g\")\n      .attr(\"fill\", this.color)\n      .selectAll(\"rect\")\n      .data((d) => {\n        return d;\n      })\n\n    let histogramBar1 = this.svg.append(\"g\")\n      .selectAll(\"g\")\n      .data(chartdata)\n      .enter().append(\"g\")\n      // .attr(\"fill\", this.color)\n      .selectAll(\"labels\")\n      .data((d) => {\n        return d;\n      })\n    let cnt = 0;\n\n\n    histogramBar.enter().append(\"rect\")\n      .attr(\"width\", barWidth - 1)\n      .attr(\"y\", (d, index) => {\n        cnt++;\n        return y(d[1]);\n      })\n      .attr(\"cursor\", \"pointer\")\n      .attr(\"height\", (d, index) => {\n        return Math.abs(y(d[0]) - y(d[1] - horizontalpadding));\n      })\n      .attr(\"transform\", function (d, i) {\n        var translate = [barWidth * i, 0];\n        return \"translate(\" + translate + \")\";\n      })\n      .on(\"mouseover\", (d) => {\n        return tooltip.style(\"visibility\", \"visible\");\n      }).on(\"mousemove\",\n        (d: any) => {\n          let data = d[2];\n          return tooltip.html(this.setKey(data[0]))\n            .style(\"top\", (d3.event.pageY - 10) + \"px\")\n            .style(\"left\", (d3.event.pageX + 10) + \"px\");\n\n        }).on(\"mouseout\", (d) => {\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n      .on(\"click\", (d) => {\n        let clickdata = d[2];\n        this.histogramClick(clickdata[0]);\n        this.fordrillableClick(this, d, event);\n        return tooltip.style(\"visibility\", \"hidden\");\n      });\n   if(this.labelflag) {\n    histogramBar1.enter()\n      .append(\"text\")\n      .style(\"font-weight\", \"bold\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", (d) => {\n        if(this.labelcolor.length>0){\n          return this.labelcolor;\n        } else {\n        return \"black\";\n        }\n      })\n      .attr(\"y\", function (d, i) {\n        return y(d[1]);\n      })\n      .text(function (d) {\n       \n        let data: any;\n        let data2: any;\n        data = d[2];\n        data2 = data[0];\n        if (data2) {\n          return data2.value;\n        }\n        else {\n          return null;\n        }\n      })\n      .attr(\"transform\", function (d, i) {\n        var translate = [((barWidth * i) + barWidth / 2), (Math.abs(y(d[0]) - y(d[1] - horizontalpadding)))];\n        return \"translate(\" + translate + \")\";\n      });\n    }\n\n    //  .append(\"label\")\n    // //  .attr(\"width\", barWidth - 1)\n    //  .attr(\"y\", (d, index) => {\n    //    return y(d[1]);\n    //  })\n    // ---------------------------------------------------------\n\n    //   this.svg.append(\"g\")\n    //   .selectAll(\"g\")\n    //   .data( chartdata)\n    //   .enter( ).append(\"g\")\n    //   // .attr(\"fill\", this.color)\n    //   // .selectAll(\"rect\")\n    //   .data((d) => {\n    //     return d;\n    //   })\n    //   histogramBar.enter(  )\n    //   .append(\"text\")\n    //   // .attr(\"width\", barWidth - 1)\n    //   .attr(\"y\", (d, index) => {\n    //     return y(d[1]);\n    //   })\n    //    .attr(\"height\", (d, index) => {\n    //     return Math.abs(y(d[0]) - y(d[1] - horizontalpadding));\n    //   })\n    //   .attr(\"transform\", function (d, i) {\n    //     var translate = [barWidth * i, 0];\n    //     return \"translate(\" + translate + \")\";\n    //   })\n    //   .text(function(d){\n    //     console.log(\"aksa\");\n    //       return \"aksa\";\n    //   })\n    //   .style(\"font-weight\",\"bold\")\n    // .attr(\"text-anchor\", \"middle\")\n    // .attr(\"fill\", (d)=>{\n    //     return \"black\";\n    // });\n\n\n  }\n\n  histogramClick(obj: any) {\n\n    let object = {};\n    let data = this.datahisto[0];\n    let label1 = data[1];\n    let label2 = data[0];\n    if (obj.label.length) {\n      object[label2 + \":\"] = obj.label;\n      object[label1 + \":\"] = obj.value;\n    }\n\n    this.chartClick(object);\n  }\n\n\n  legendClick(event: any) {\n\n    this.onLegendClick.emit(this.datahisto);\n\n  }\n\n  transformData() {\n    this.array = [];\n    this.values = [];\n    this.datahisto.forEach(element => {\n      this.values.push(element[1]);\n    });\n    for (let i = 1; i < this.values.length; i++) {\n      this.array.push(this.values[i]);\n    }\n  }\n\n  plotXaxis() {\n\n    this.xaxisArray = [];\n    this.xaxisArray.push(0);\n    let newvalue: number = 0;\n    let value = Math.ceil(d3.max(this.array));\n\n    if (value % 10 == 0) {\n      value = value;\n    } else {\n      value = (10 - value % 10) + value;\n    }\n    let quotient = value / 5;\n    while (newvalue < value) {\n      newvalue = newvalue + quotient;\n      this.xaxisArray.push(newvalue);\n    }\n  }\n\n  plotYaxis() {\n\n    let tempvalue = 0;\n    let lengthofArray = 0;\n    let lengthcount = 0;\n    let templength = 0;\n    let newvalue: number = 0;\n    this.yaxisArray = [];\n    this.histogramarray = [];\n    this.lengtharray = [];\n    this.histogramdata = [];\n    this.arrayofLength = [];\n    this.chartData = [];\n    this.xaxisArray.forEach(element1 => {\n      this.yaxisArray = [];\n      this.array.forEach(element2 => {\n\n        if (tempvalue < element2 && element2 <= element1) {\n          this.yaxisArray.push(element2);\n        }\n        lengthofArray = this.yaxisArray.length;\n      });\n      if (templength > lengthofArray) {\n        lengthcount = templength;\n      }\n      else {\n        lengthcount = lengthofArray;\n      }\n      templength = lengthcount;\n      tempvalue = element1;\n      //this.histogramarray.push(this.yaxisArray);\n      this.lengtharray.push(lengthofArray);\n    });\n\n    let value = Math.ceil(templength);\n    let quotient = value / 5;\n    while (newvalue <= value) {\n      newvalue = newvalue + quotient;\n      this.yaxisData.push(newvalue)\n    }\n\n    for (let i = 1; i < this.histogramarray.length; i++) {\n      this.histogramdata.push(this.histogramarray[i]);\n    }\n\n    for (let i = 1; i < this.lengtharray.length; i++) {\n      this.arrayofLength.push(this.lengtharray[i]);\n    }\n    for (let i = 0; i < this.arrayofLength.length; i++) {\n      let data = {};\n      data[\"value\"] = this.arrayofLength[i];\n      this.chartData.push(data);\n    }\n    this.array = [];\n\n  }\n\n  resize() {\n\n    this.svgwidth = 0;\n    this.svg.selectAll(\"*\").remove();\n\n    this.resizeflag = true;\n    this.svgwidth = this.divid.nativeElement.offsetWidth;\n\n    this.transformData()\n    this.plotXaxis();\n    this.plotYaxis();\n    this.tooltipData();\n    this.dataforChart();\n    this.transformData1(this.finaldataarray);\n    this.plotChart();\n  }\n\n  dataforChart() {\n    this.finaldataarray = [] = [];\n    let initialArray: any[] = [];\n    let temparray: any[] = [];\n    initialArray.push('level');\n    let maxElement = Math.max.apply(null, this.arrayofLength);\n    let maxlength = maxElement;\n    let n = 1;\n    while (n <= maxElement) {\n      initialArray.push('' + n)\n      n++;\n    }\n    initialArray.push('tooltipdata');\n    let length = this.arrayofLength.length;\n    let num = 1;\n    let number = 1;\n    let j = 0;\n    this.finaldataarray.push(initialArray);\n\n    for (let i = 0; i < this.arrayofLength.length; i++) {\n      let value = this.arrayofLength[i];\n      let tempvalue = value;\n      temparray = [];\n      temparray.push('' + i);\n      maxElement = maxlength;\n      if (value > 0) {\n        while (value != 0) {\n          temparray.push(number);\n          value--\n        }\n        maxElement = maxElement - tempvalue;\n\n        while (maxElement != 0) {\n          temparray.push(0);\n          maxElement--;\n        }\n      }\n      else {\n        while (maxElement != 0) {\n          temparray.push(0);\n          maxElement--;\n        }\n      }\n      temparray.push(this.tooltipArray[j])\n      this.finaldataarray.push(temparray);\n      j++;\n    }\n  }\n\n\n  tooltipData() {\n\n    let arrayofTooltip: any[] = [];\n    let obj = { \"label\": \"\", \"value\": \"\" };\n    this.datahisto.forEach(element => {\n      obj = { \"label\": \"\", \"value\": \"\" };\n      obj[\"label\"] = element[0];\n      obj[\"value\"] = element[1];\n      arrayofTooltip.push(obj);\n    });\n\n    let value1 = this.xaxisArray[0];\n\n    let tooltipdata: any[] = [];\n    for (let j = 1; j < this.xaxisArray.length; j++) {\n      tooltipdata = [];\n      let value2 = this.xaxisArray[j];\n\n      arrayofTooltip.forEach(element => {\n\n        if (value1 <= element.value && element.value <= value2) {\n\n          let tooltipobj = { \"label\": \"\", \"value\": \"\" }\n          tooltipobj[\"label\"] = element[\"label\"];\n          tooltipobj[\"value\"] = element[\"value\"];\n          tooltipdata.push(tooltipobj);\n\n\n        }\n\n      });\n      this.tooltipArray.push(tooltipdata);\n      value1 = value2;\n    }\n  }\n\n\n  setKey(obj: any) {\n\n    let object = {};\n    let data = this.datahisto[0];\n    let label1 = data[1];\n    let label2 = data[0];\n\n    object[label2 + \":\"] = obj.label;\n    object[label1 + \":\"] = obj.value;\n\n    return (this.toolTipForBar(object))\n  }\n\n  plotLine(g, x, y, height, width) {\n    if (this.hScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y)\n          .tickSize(-width).tickFormat(''));\n    }\n  }\n}\n","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { AmexioD3BaseChartComponent } from '../base/base.component';\nimport { CommanDataService } from '../services/comman.data.service';\nimport{DeviceQueryService} from '../services/device.query.service';\n\nimport * as d3 from 'd3';\n\n@Component({\n  selector: 'amexio-d3-chart-scatter',\n  template: `<div *ngIf=\"drillableFlag\" #divid (window:resize)=\"resize()\">\n    <table style=\"width: 100%;\" #chartId >\n        <tr>\n            <td colspan=\"2\" style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n        </tr>\n        <tr>\n            <td>\n                <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n                </svg>\n            </td>\n        </tr>\n        <tr>\n            <td style=\"display: block; padding: 5px;\">\n                <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"onScatterLegendClick($event)\" [data]=\"legends\" style=\"height:100%;\"></amexio-d3-legend>\n            </td>\n        </tr>\n    </table>\n</div>`,\n  styles: [``]\n})\nexport class ScatterchartComponent extends AmexioD3BaseChartComponent implements OnInit {\n  @Input('width') svgwidth: number = 300;\n  @Input('height') svgheight: number = 300;\n  @Input('color') color: any = \"blue\";\n  @Input('label-color') labelcolor: string = \"black\";\n  @Input('label') labelflag: boolean = false;\n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  @Input('data-reader') datareader: string;\n  @Input('level') level: number = 0;\n  @Input('target') target: number;\n  @Input('drillable-data') drillabledatakey: any[] = [];\n  @Input('horizontal-scale') hScale: boolean = true;\n  @Input('vertical-scale') vScale: boolean = true;\n  drillableFlag: boolean = true;\n  resizeflag: boolean = false;\n  svg: any;\n  keyArray: any[] = [];\n  transformeddata: any[] = [];\n  data: any;\n  dataFormatted: any;\n  colordata: any;\n  legends: any[];\n  legendarray: any[] = [];\n  legendData: any;\n  httpresponse: any;\n  constructor(private myservice: CommanDataService, private device: DeviceQueryService) {\n    super('scatter');\n  }\n\n  ngOnInit() {\n    this.dataFormatted = [];\n    if (this.level <= 1) {\n      let resp: any;\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          resp = response;\n          this.httpresponse = resp;\n        }, (error) => {\n        }, () => {\n          setTimeout(() => {\n            this.data = this.getResponseData(resp);\n            this.dataFormatted = this.data;\n            this.transformData(this.dataFormatted);\n            this.colorGeneration();\n            this.legendCreation();\n            this.plotScatterChart();\n          }, 0);\n        });\n\n      } else if (this.data) {\n\n        setTimeout(() => {\n          this.dataFormatted = this.data;\n          this.data = this.getResponseData(this.data);\n\n          this.transformData(this.data);\n          this.colorGeneration();\n          this.legendCreation();\n          this.plotScatterChart();\n\n        }, 0);\n\n      }\n    }\n\n  }\n\n  fetchData(data: any) {\n\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n\n\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n        this.httpresponse = response;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          //this.data = this.getResponseData(resp);\n          this.drawChart();\n        }, 0);\n      });\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n      this.data = this.getResponseData(this.httpresponse);\n      this.dataFormatted = this.data;\n\n\n      this.transformData(this.data);\n      this.colorGeneration();\n      this.legendCreation();\n      this.plotScatterChart();\n    }, 0);\n  }\n\n  // Method to transform data in key value pair \n  transformData(data: any) {\n    this.keyArray = data[0];\n    data.forEach((element, index) => {\n      if (index > 0) {\n        let DummyObject = {};\n        element.forEach((individualvalue, keyindex) => {\n          DummyObject[this.keyArray[keyindex]] = individualvalue;\n        });\n        this.transformeddata.push(DummyObject);\n      }\n    });\n    this.data = this.transformeddata;\n  }\n\n  // Method get response data using data reader\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  // Method to plot d3 chart\n  plotScatterChart() {\n    if (this.resizeflag == false) {\n      if (this.chartId) {\n        this.svgwidth = this.chartId.nativeElement.offsetWidth;\n      } else {\n\n        this.svgwidth = this.svgwidth;\n      }\n    }\n    const tooltip = this.toolTip(d3);\n    const margin = { top: 20, right: 20, bottom: 30, left: 60 };\n    const width = this.svgwidth - margin.left - margin.right;\n    const height = this.svgheight - margin.top - margin.bottom;\n\n    let x, y;\n\n    x = d3.scaleLinear()\n      .rangeRound([0, width]);\n\n    y = d3.scaleLinear()\n      .rangeRound([height, 0]);\n\n    let xAxis = d3.axisBottom(x);\n\n    let yAxis = d3.axisLeft(y);\n\n    this.svg = d3.select(\"#\" + this.componentId)\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    x.domain([0, d3.max(this.data, function (d) { return d[Object.keys(d)[0]] })]);\n    y.domain([0, d3.max(this.data, function (d) { return d[Object.keys(d)[1]] })]);\n\n    if (this.device.IsDesktop() == true) {\n      this.svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .append(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\")\n        .style(\"text-anchor\", \"start\");\n    }\n    else {\n      this.svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis).\n        selectAll(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", 9)\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\", \"rotate(60)\")\n        .style(\"text-anchor\", \"start\");\n    }\n\n\n\n    // this.svg.append(\"g\")\n    //   .attr(\"class\", \"x axis\")\n    //   .attr(\"transform\", \"translate(0,\" + height + \")\")\n    //   .call(xAxis)\n    //   .append(\"text\")\n    //   .attr(\"class\", \"label\")\n    //   .attr(\"x\", width)\n    //   .attr(\"y\", -6)\n    //   .style(\"text-anchor\", \"end\");\n\n    this.svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n\n    if (this.dataFormatted[0].length == 2) {\n      this.plotLine(this.svg, x, y, height, width);\n\n      this.svg.selectAll(\".dot\")\n        .data(this.data)\n        .enter().append(\"circle\")\n        .attr(\"class\", \"dot\")\n        .attr(\"fill\", this.color)\n        .attr(\"r\", 4.5)\n        .attr(\"cursor\", \"pointer\")\n        .attr(\"cx\", function (d) {\n          debugger;\n          return x(d[Object.keys(d)[0]]);\n        })\n        .attr(\"cy\", function (d) { return y(d[Object.keys(d)[1]]); })\n        .on(\"mouseover\", (d) => {\n          return tooltip.style(\"visibility\", \"visible\");\n        })\n        .on(\"mousemove\", (d) => {\n          return tooltip.html(\n            this.formTooltipData(d)\n          )\n            .style(\"top\", (d3.event.pageY - 10) + \"px\")\n            .style(\"left\", (d3.event.pageX + 10) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n        .on(\"click\", (d) => {\n          this.scatterChartClick(d);\n          this.fordrillableClick(this, d, event);\n          return tooltip.style(\"visibility\", \"hidden\");\n        });\n      // ------------------------------------------------------------------------------\n      if (this.labelflag) {\n        this.svg.selectAll(\"labels\")\n          .data(this.data)\n          .enter().append(\"text\")\n          .style(\"font-weight\", \"bold\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"vertical-align\", \"middle\")\n          .attr(\"margin-top\", margin.top)\n          .attr(\"fill\", (d) => {\n            if (this.labelcolor.length > 0) {\n              return this.labelcolor;\n            } else {\n              return \"black\";\n            }\n          })\n          .attr(\"x\", (d, i) => {\n            return x(d[Object.keys(d)[0]]) + 11;\n          })\n          .attr(\"y\", (d, i) => {\n            return y(d[Object.keys(d)[1]])\n          })\n          .text((d) => {\n            return d[Object.keys(d)[1]];\n          });\n      }\n\n    } else {\n      this.plotLine(this.svg, x, y, height, width);\n\n      this.svg.selectAll(\".dot\")\n        .data(this.transformeddata)\n        .enter().append(\"circle\")\n        .attr(\"class\", \"dot\")\n        .attr(\"r\", 4.5)\n        .attr(\"cursor\", \"pointer\")\n        .attr(\"cx\", function (d) {\n          return x(d[Object.keys(d)[0]]);\n        })\n        .attr(\"cy\", function (d) { return y(d[Object.keys(d)[1]]); })\n        .attr(\"fill\", function (d, ) { return d[Object.keys(d)[4]] })\n\n        .on(\"mouseover\", (d) => {\n          return tooltip.style(\"visibility\", \"visible\");\n        })\n        .on(\"mousemove\", (d) => {\n          return tooltip.html(\n            this.formTooltipData(d)\n          )\n            .style(\"top\", (d3.event.pageY - 10) + \"px\")\n            .style(\"left\", (d3.event.pageX + 10) + \"px\");\n        })\n        .on(\"mouseout\", (d) => {\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n        .on(\"click\", (d) => {\n          this.scatterChartClick(d);\n          this.fordrillableClick(this, d, event);\n          return tooltip.style(\"visibility\", \"hidden\");\n        })\n\n        if (this.labelflag) {\n          this.svg.selectAll(\"labels\")\n            .data(this.data)\n            .enter().append(\"text\")\n            .style(\"font-weight\", \"bold\")\n            .attr(\"text-anchor\", \"middle\")\n            .attr(\"vertical-align\", \"middle\")\n            .attr(\"margin-top\", margin.top)\n            .attr(\"fill\", (d) => {\n              if (this.labelcolor.length > 0) {\n                return this.labelcolor;\n              } else {\n                return \"black\";\n              }\n            })\n            .attr(\"x\", (d, i) => {\n              return x(d[Object.keys(d)[0]]) + 11;\n            })\n            .attr(\"y\", (d, i) => {\n              return y(d[Object.keys(d)[1]])\n            })\n            .text((d) => {\n              return d[Object.keys(d)[1]];\n            });\n        }\n\n    }\n\n  }\n\n  // Method to form tooltip data\n  formTooltipData(tooltipData: any) {\n    let object = {};\n    for (let [key, value] of Object.entries(tooltipData)) {\n      if (key != 'color') {\n        object[key] = value;\n      }\n    }\n    return this.toolTipForBar(object);\n  }\n\n  // Method on chart click\n  scatterChartClick(event: any) {\n    let object = {};\n    for (let [key, value] of Object.entries(event)) {\n      object[key] = value;\n    }\n    this.chartClick(object);\n  }\n\n  // method to create Legend\n  legendCreation() {\n    if (this.dataFormatted[0].length == 2) {\n      this.legends = [];\n      let element = this.dataFormatted[0];\n\n      let object = { 'label': element[0] + \" \" + \"vs\" + \" \" + element[1], 'color': this.color };\n      this.legends.push(object);\n    }\n    else {\n      this.legends = [];\n      this.legendarray.forEach(element => {\n        let legendobject = {};\n        legendobject['label'] = element.label;\n        legendobject['color'] = element.color;\n        this.legends.push(legendobject);\n      });\n\n    }\n\n  }\n\n  // Method on Legend Click\n  onScatterLegendClick(legendevent: any) {\n    if (this.dataFormatted[0].length == 2) {\n      this.onLegendClick.emit(this.data);\n    } else {\n      this.legendarray.forEach(element => {\n        if (legendevent.label == element.label) {\n          this.legendClick(element.value);\n        }\n      });\n    }\n  }\n\n  // Method for responsiveness\n  resize() {\n    this.svgwidth = 0;\n    this.svg.selectAll(\"*\").remove();\n\n    this.resizeflag = true;\n    this.svgwidth = this.divid.nativeElement.offsetWidth;\n    this.plotScatterChart();\n\n\n  }\n\n  plotLine(g, x, y, height, width) {\n    if (this.vScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(d3.axisBottom(x).\n          tickSize(-this.width).tickFormat('')\n        );\n    }\n    if (this.hScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y)\n          .tickSize(-width).tickFormat(''));\n    }\n  }\n\n  colorGeneration() {\n    this.legendarray = [];\n    let i = 0;\n    let names = this.dataFormatted\n      .map(e => e[2])\n      .filter((e, i, a) => a.indexOf(e) === i);\n    for (let j = 1; j < names.length; j++) {\n      let value = [];\n      let obj = { \"label\": \"\", \"color\": \"\", \"value\": [] };\n      this.transformeddata.forEach(element => {\n        if (element[Object.keys(element)[2]] == names[j]) {\n          element['color'] = this.predefinedcolors[i];\n          value.push(element);\n        }\n      });\n      obj[\"value\"] = value;\n      obj[\"label\"] = names[j];\n      obj[\"color\"] = this.predefinedcolors[i];\n      this.legendarray.push(obj);\n      i++;\n    }\n  }\n\n  formLegendData() {\n    this.legendData = [];\n    this.legendarray.forEach(element => {\n      let legendobject = {};\n      legendobject['label'] = element.label;\n      legendobject['color'] = element.color;\n      this.legendData.push(legendobject);\n    });\n  }\n\n\n}\n","import { Component, Input, ViewChild, ElementRef, Output, EventEmitter, OnInit, } from \"@angular/core\";\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport { PlotCart } from \"../base/chart.component\";\nimport { CommanDataService } from '../services/comman.data.service';\nimport * as d3 from 'd3';\nimport { Key } from 'selenium-webdriver';\nimport{DeviceQueryService} from '../services/device.query.service';\n\n@Component({\n  selector: 'amexio-d3-chart-multiarea',\n  template: `\n<div  *ngIf=\"drillableFlag\" #divid (window:resize)=\"resize()\">\n<table style=\"width: 100%;\" #chartId>\n  <tr>\n      <td style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n  </tr>\n  <tr>\n      <td>\n          <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n          </svg>\n      </td>\n  </tr>\n  <tr>\n      <td style=\"display: block; padding: 5px;\">\n          <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"onAreaLegendClick($event)\" [data]=\"legendArray\" style=\"height:100%;\">\n          </amexio-d3-legend>\n      </td>\n  </tr>\n</table>\n</div>`,\n  styles: [``]\n})\nexport class MultiareaComponent extends AmexioD3BaseChartComponent implements PlotCart, OnInit {\n  @Input('width') svgwidth: number = 300;\n  @Input('height') svgheight: number = 350;\n  @Input('data-reader') datareader: any;\n  @Input('level') level: number = 0;\n  @Input('label-color') labelcolor: string = \"black\";\n  @Input('label') labelflag: boolean = false;\n  @Input('target') target: number;\n  @Input('drillable-data') drillabledatakey: any[] = []\n  httpresponse:any;\n  drillableFlag: boolean = true;\n  resizeflag:boolean = false;\n  togglelabel: boolean = false;\n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  @Output() onLegendClick: any = new EventEmitter<any>();\n  @Output() onTooltipClick: any = new EventEmitter<any>();\n  @Input('horizontal-scale') hScale: boolean = true;\n\n  svg: any;\n  x: any;\n  y: any;\n  z: any;\n  height: number;\n  width: number;\n  margin: any = {};\n  i: number;\n  parseTime: any;\n  keyArray: any[] = [];\n  maximumValue: number;\n  predefinedColors: any[];\n  areaArray: any;\n  transformeddata: any[] = [];\n  data1: any[] = [];\n  legendArray: any[] = [];\n  tooltip: any;\n  constructor(private myservice: CommanDataService,private device:DeviceQueryService) {\n\n    super(\"areachart\");\n  }\n\n  ngOnInit() {\n    this.togglelabel = false;\n     let res;\n     if(this.level<=1){\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n        this.httpresponse=response;\n        this.data = this.getResponseData(response);\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          this.transformData(this.data);\n          this.initAreaChart();\n          this.plotD3Chart();\n        }, 0);\n      });\n    } else if (this.data1) {\n\n      setTimeout(() => {\n        this.transformData(this.data);\n        this.initAreaChart();\n        this.plotD3Chart();\n      }, 0);\n    }\n\n  }\n  }\n\n\n  fetchData(data: any) {\n   \n    let requestJson;\n    let key=this.drillabledatakey;\n    let resp: any;\n    if(this.drillabledatakey.length)\n    {\n         let drillabledata= this.getMultipleDrillbleKeyData(data,key);\n         requestJson=drillabledata;\n    }\n    else{\n            requestJson=data;  \n        }\n  \n    \n if (this.httpmethod && this.httpurl) {\n this.myservice.postfetchData(this.httpurl,this.httpmethod, requestJson).subscribe((response) => {\n            resp = response;\n            this.httpresponse=response;\n        }, (error) => {\n        }, () => {\n            setTimeout(() => {\n                //this.data = this.getResponseData(resp);\n                this.drawChart();\n                  }, 0);\n              });\n           }\n}\n\ndrawChart() {\n  setTimeout(() => { \n    this.data = this.getResponseData(this.httpresponse);\n          this.transformData(this.data);\n          this.initAreaChart();\n          this.plotD3Chart();      \n\n  }, 0);\n} \n\n  initAreaChart() {\n    this.tooltip = this.toolTip(d3);\n    if(this.resizeflag==false)\n    {\n\n    \n    if(this.chartId){\n      this.svgwidth = this.chartId.nativeElement.offsetWidth;\n    } else{\n    \n           this.svgwidth = this.svgwidth;\n      }\n    }\n\n      this.margin = { top: 30, right: 44, bottom: 50, left: 30 },\n      this.width = this.svgwidth - this.margin.left - this.margin.right,\n      this.height = this.svgheight - this.margin.top - this.margin.bottom;\n    //find max and initialize max\n    this.maximumValue = this.findMaxData(this.data);\n\n    this.x = d3.scalePoint()\n      .range([0, this.width])\n      // .padding(0.1);\n\n    this.y = d3.scaleLinear()\n      .rangeRound([this.height, 0]);\n    this.areaArray=[];\n    //set x y domain\n    this.areaArray = this.data.map( (d)=> { return d[Object.keys(d)[0]]; });\n    this.x.domain(this.areaArray);\n    this.y.domain([0, this.maximumValue]);\n    //initialize svg\n    this.svg =\n      d3.select(\"#\" + this.componentId)\n        .attr(\"width\", this.width + this.margin.left + this.margin.right)\n        .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\n    this.predefinedColors = [\"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\", \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\", \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\", \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\", \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\"];\n  }\n\n  plotD3Chart() {\n    this.formLegendData();\n    let counter: number;\n    let g = this.svg.append(\"g\").attr(\"transform\", \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n    // add the X \n    if(this.device.IsDesktop()==true)\n    {\n      g.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n          .call(d3.axisBottom(this.x))\n    }\n  else\n   {\n    g.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n          .call(d3.axisBottom(this.x)).\n           selectAll(\"text\")\n           .attr(\"y\", 0)\n           .attr(\"x\", 9)\n           .attr(\"dy\", \".35em\")\n           .attr(\"transform\", \"rotate(60)\")\n           .style(\"text-anchor\", \"start\");\n\n  }\n    // add the Y Axis\n    g.append(\"g\")\n      .call(d3.axisLeft(this.y));\n\n      this.plotLine(g, this.x, this.y, this.height, this.width);\n\n    for (counter = 1; counter < this.keyArray.length; counter++) {\n      let innerGroup = this.svg.append(\"g\").attr(\"transform\", \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n      this.plotAreaChart(innerGroup, counter, this);\n    }\n    //call method to plot points\n    let increment;\n    for (increment = 1; increment < this.keyArray.length; increment++) {\n      //plot line\n      let innerGroup = this.svg.append(\"g\").attr(\"transform\", \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n      this.PlotLineDot(innerGroup, increment, this);\n    }//increment for ends\n  }\n\n  PlotLineDot(g: any, i: number, thisa: this) {\n    let flag = this.togglelabel;\n    const line = d3.line()\n      .x( (d)=> { return thisa.x(d[Object.keys(d)[0]]); })\n      .y( (d)=> { return thisa.y(d[Object.keys(d)[i]]); });\n    g.append(\"path\")\n      .data([thisa.data])\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", thisa.predefinedcolors[i])\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"d\", line)\n      .attr(\"opacity\", 0.2)\n      .attr(\"transform\",\n        // \"translate(\" + this.margin.left + \",\" + 0 + \")\");\n        \"translate(\" +  0 + \",\" + 0 + \")\");\n    //----------\n\n    g.selectAll('dot')\n      .data(thisa.data)\n      .enter()\n      .append('circle')\n      .attr('opacity', 0)\n      .attr(\"fill\", thisa.predefinedcolors[i])\n      .attr(\"cx\", (d) => { return thisa.x(d[Object.keys(d)[0]]); })\n      .attr(\"cy\", (d) => { return thisa.y(d[Object.keys(d)[i]]); })\n      .attr('r', 4)\n      .attr(\"cursor\", \"pointer\")\n      .on(\"mouseover\", (d) => {\n        this.formTooltipData(d, i);\n        return this.tooltip.style(\"visibility\", \"visible\");\n\n      })\n      .on(\"mousemove\", (d) => {\n        return this.tooltip.html(\n          this.formTooltipData(d, i)\n        )\n          .style(\"top\", (d3.event.pageY - 10) + \"px\")\n          .style(\"left\", (d3.event.pageX + 10) + \"px\");\n      })\n      .on(\"mouseout\", (d) => {\n        return this.tooltip.style(\"visibility\", \"hidden\");\n      })\n\n      .style(\"opacity\", 1)\n      .on(\"click\", (d) => {\n        this.onAreaTooltipClick(d, i);\n        this.fordrillableClick(this, d, event);\n        return this.tooltip.style(\"visibility\", \"hidden\");\n        //this.chartClick(d);\n      })\n      .attr(\"transform\",\n        // \"translate(\" + this.margin.left + \",\" + 0 + \")\");\n        \"translate(\" +  0 + \",\" + 0 + \")\");\n\n    // -----------------------------------------------------------------\n    if(this.labelflag) {\n    g.selectAll('labels')\n    .data(thisa.data)\n    .enter()\n    .append('text')\n    .style(\"font-weight\",\"bold\")\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"fill\", (d)=>{\n      if(this.labelcolor.length>0){\n        return this.labelcolor;\n      } else {\n        return \"black\";\n      }\n    })\n    .attr(\"x\", function(d) {\n      // let length = String(d[Object.keys(d)[i]]).length\n        return thisa.x(d[Object.keys(d)[0]]) + 20;\n     })\n    .attr(\"y\", function(d) {\n      let key: any = [Object.keys(d)[i]];\n        if(flag)\n      {\n        return thisa.y(d[key]) - 5;// fr up\n      } \n      else {\n        return thisa.y(d[key]) + 15;\n           }\n      // return thisa.y(d[Object.keys(d)[i]]);\n        //  return y(d[Object.keys(d)[1]])+yTextPadding;\n    })\n    .text(function(d){\n          return d[Object.keys(d)[i]];\n    })\n    .attr(\"transform\",\n       \"translate(\" +  0 + \",\" + 0 + \")\");\n\n}\n     if(this.togglelabel) {\n      this.togglelabel = false;\n     }\n     else {\n      this.togglelabel = true;\n     }\n     \n  }\n\n  plotAreaChart(g: any, i: number, thisa: this) {\n    // calculate area and valueline\n    // define the line\n    const valueline = d3.line()\n      .x( (d)=> {\n        let key: any = [Object.keys(d)[0]];\n        return thisa.x(d[key]);\n      })\n      .y((d)=> {\n        let key: any = [Object.keys(d)[i]];\n        return thisa.y(d[key]);\n      });\n\n    // add the valueline path.\n    g.append(\"path\")\n      .data([this.data])\n      .style(\"stroke\",\n        this.predefinedColors[i]\n      )\n      .attr(\"fill\", \"none\")\n      .style(\"stroke-width\", \"2px\")\n      .attr(\"d\", valueline)\n      .attr(\"transform\",\n        // \"translate(\" + this.margin.left + \",\" + 0 + \")\");\n        \"translate(\" + 0 + \",\" + 0 + \")\");\n\n    // define the area\n    let area = d3.area()\n      .x( (d)=> {\n        let key: any = [Object.keys(d)[0]];\n        return thisa.x(d[key]);\n      })\n      .y0(this.height)\n      .y1( (d)=> {\n        let key: any = [Object.keys(d)[i]];\n        return thisa.y(d[key]);\n      });\n\n    g.append(\"path\")\n      .data([this.data])\n      .attr(\"d\", area)\n      .attr(\"transform\",\n        // \"translate(\" + this.margin.left + \",\" + 0 + \")\")\n        \"translate(\" + 0 + \",\" + 0 + \")\")\n      .style(\"stroke\", \"none\")\n      .attr(\"fill\", this.predefinedColors[i]\n      )\n      .style(\"opacity\", 0.5)\n  }\n\n  onAreaTooltipClick(tooltipData: any, count: number) {\n    let obj = {};\n    obj[this.keyArray[0]] = tooltipData[Object.keys(tooltipData)[0]];\n    obj[this.keyArray[count]] = tooltipData[Object.keys(tooltipData)[count]];\n    this.chartClick(obj);\n  }\n\n  findMaxData(data: any) {\n    let tempArray = [];\n    let largeValues = [];\n    let maxValue;\n    //logic to search 3 largest values \n    data.forEach(element => {\n      let temp = [];\n      let value;\n      for (let [key, value] of Object.entries(element)) {\n        //exempts first column of data as it is treated as x-axis\n        if (key != this.keyArray[0]) {\n          tempArray.push(value);\n        }\n      }//for loop end\n      value = this.findLargestValue(tempArray);\n      largeValues.push(value);\n    });\n    maxValue = this.findLargestValue(largeValues);\n    return maxValue;\n  }\n\n  findLargestValue(array: any[]) {\n    let i;\n    let max = 0;\n    for (i = 0; i < array.length; i++) {\n      if (array[i] > max) {\n        max = array[i];\n      }//if ends \n    }//max ends\n    return max;\n  }\n\n  //covert data\n  transformData(data: any) {\n    this.transformeddata=[];\n    this.keyArray = data[0];\n    data.forEach((element, index) => {\n      if (index > 0) {\n        let DummyObject: any = {};\n        element.forEach((individualvalue, keyindex) => {\n          DummyObject[this.keyArray[keyindex]] = individualvalue;\n        });//inner for loop ends\n        this.transformeddata.push(DummyObject);\n      }//if ends\n    });//outer for loop ends\n\n    let parsedtransformeddata = JSON.parse(JSON.stringify(this.transformeddata));\n\n    this.data = parsedtransformeddata;\n  }\n\n  formLegendData() {\n    this.legendArray = [];\n    this.keyArray.forEach((element, index) => {\n      if (index > 0) {\n        let legendobject = {};\n        legendobject['label'] = element;\n        legendobject['color'] = this.predefinedColors[index + 1];\n        this.legendArray.push(legendobject);\n      }\n    });\n  }\n\n  onAreaLegendClick(legendData: any) {\n    let obj = {};\n    obj[\"label\"] = legendData.label;\n    let data = [];\n    this.data.forEach(element => {\n      for (let [key, value] of Object.entries(this.data[0])) {\n        if (key == legendData.label) {\n          let object = {};\n          object[key] = value;\n          data.push(object);\n        }//inner if ends\n      }//inner forloop ends\n    });//outer foreach ends\n    obj[\"data\"] = data;\n    this.onLegendClick.emit(obj);\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  resize() {\n    this.svgwidth = 0;\n    this.svg.selectAll(\"*\").remove();\n    this.resizeflag = true;\n    this.svgwidth = this.divid.nativeElement.offsetWidth;\n    this.initAreaChart();\n    this.plotD3Chart();\n  }\n\n  formTooltipData(tooltipData: any, count: number) {\n    let obj = {};\n    obj[this.keyArray[0]] = tooltipData[Object.keys(tooltipData)[0]];\n    obj[this.keyArray[count]] = tooltipData[Object.keys(tooltipData)[count]];\n    return this.toolTipForBar(obj);\n  }\n\n  plotLine(g, x, y, height, width) {\n    if (this.hScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y)\n          .tickSize(-width).tickFormat(''));\n    }\n  }\n}\n","import { Component, Input, ViewChild, ElementRef, Output, EventEmitter, OnInit, } from \"@angular/core\";\nimport { AmexioD3BaseChartComponent } from \"../base/base.component\";\nimport { PlotCart } from \"../base/chart.component\";\nimport { CommanDataService } from '../services/comman.data.service';\nimport{DeviceQueryService} from '../services/device.query.service';\nimport * as d3 from 'd3';\n@Component({\n  selector: 'amexio-d3-chart-waterfall',\n  template: `\n<div   *ngIf=\"drillableFlag\" #divid (window:resize)=\"resize()\" >\n<table style=\"width: 100%;\" #chartId (window:resize)=\"resize()\">\n  <tr>\n      <td style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n  </tr>\n  <tr>\n      <td>\n          <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n          </svg>\n      </td>\n  </tr>\n  <tr>\n      <td style=\"display: block; padding: 5px;\">\n          <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"onCandlestickLegendClick($event)\" [data]=\"legendArray\" style=\"height:100%;\">\n          </amexio-d3-legend>\n      </td>\n  </tr>\n</table>\n</div>`,\n  styles: [``]\n})\n\nexport class CandlestickComponent extends AmexioD3BaseChartComponent implements PlotCart, OnInit {\n  @Input('width') svgwidth: number = 300;\n  @Input('height') svgheight: number = 300;\n  @Input('data-reader') datareader: any;\n  @Input() data: any[];\n  @Input('level') level: number = 0;\n  @Input('target') target: number;\n  @Input('drillable-data') drillabledatakey: any[] = [];\n  @Input('label-color') labelcolor: string = \"black\";\n  @Input('label') labelflag: boolean = false;\n  @Input('horizontal-scale') hScale: boolean = true;\n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  @Output() onLegendClick: any = new EventEmitter<any>();\n  drillableFlag: boolean = true;\n  resizeflag: boolean = false;\n  predefinedColor = [];\n  keyArray: any[] = [];\n  transformeddata: any;\n  height: number;\n  width: number;\n  margin: any = {};\n  x: any;\n  y: any;\n  svg: any;\n  tooltip: any;\n  legendArray: any[] = [];\n  httpresponse: any;\n  constructor(private myservice: CommanDataService,private device:DeviceQueryService) {\n    super(\"candlestickwaterfallchart\");\n  }\n\n  ngOnInit() {\n    this.predefinedColor = [\"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\", \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\", \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\", \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\", \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\"];\n    if (this.level <= 1) {\n      let res;\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          //this.data = response;\n          this.httpresponse = response;\n          this.data = this.getResponseData(response);\n        }, (error) => {\n        }, () => {\n          setTimeout(() => {\n            this.transformData(this.data);\n            this.initializeData();\n            this.plotXYAxis();\n            this.plotD3Chart();\n          }, 0);\n        });\n      } else if (this.data) {\n        setTimeout(() => {\n          this.transformData(this.data);\n          this.initializeData();\n          this.plotXYAxis();\n          this.plotD3Chart();\n        }, 0);\n      }\n    }\n  }\n\n  fetchData(data: any) {\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n        this.httpresponse = response;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          //this.data = this.getResponseData(resp);\n          this.drawChart();\n        }, 0);\n      });\n\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n      this.data = this.getResponseData(this.httpresponse);\n      this.transformData(this.data);\n      this.initializeData();\n      this.plotXYAxis();\n      this.plotD3Chart();\n    }, 0);\n  }\n\n  initializeData() {\n    this.tooltip = this.toolTip(d3);\n    if (this.resizeflag == false) {\n      if (this.chartId) {\n        this.svgwidth = this.chartId.nativeElement.offsetWidth;\n      } else {\n        this.svgwidth = this.svgwidth;\n      }\n    }\n    this.margin = { top: 20, right: 30, bottom: 50, left: 60 },\n      this.width = this.svgwidth - this.margin.left - this.margin.right,\n      this.height = this.svgheight - this.margin.top - this.margin.bottom;\n  }\n\n  plotXYAxis() {\n    // set the ranges\n    this.x = d3.scaleBand().range([0, this.width]);\n    this.y = d3.scaleLinear()\n      .rangeRound([this.height, 0]);\n    // scale the range of the data\n    let candlestickArray = this.data.map((d) => {\n      return d[Object.keys(d)[0]];\n     });\n    this.x.domain(candlestickArray);\n    let max = d3.max(this.data, (d) => { return d.end; });\n    this.y.domain([0, max]);\n\n    this.svg = d3.select(\"#\" + this.componentId)\n      // d3.select(\"body\").append(\"svg\")\n      .attr(\"width\", this.width + this.margin.left + this.margin.right)\n      .attr(\"height\", this.height + this.margin.top + this.margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\",\n        \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n    // add the X Axis\n\n    if(this.device.IsDesktop()==true)\n    {\n      this.svg.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n          .call(d3.axisBottom(this.x))\n    }\n  else\n   {\n     this.svg.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n          .call(d3.axisBottom(this.x)).\n           selectAll(\"text\")\n           .attr(\"y\", 0)\n           .attr(\"x\", 9)\n           .attr(\"dy\", \".35em\")\n           .attr(\"transform\", \"rotate(60)\")\n           .style(\"text-anchor\", \"start\");\n\n  }\n\n    // this.svg.append(\"g\")\n    //   .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n    //   .call(d3.axisBottom(this.x));\n\n    // add the Y Axis\n    this.svg.append(\"g\")\n      .call(d3.axisLeft(this.y));\n    this.plotLine(this.svg, this.x, this.y, this.height, this.width);\n  }\n\n\n  plotD3Chart() {\n    let bar = this.svg.selectAll(\".bar\")\n      .data(this.data)\n      .enter().append(\"g\")\n      .attr(\"class\", (d) => { return \"bar \" + d.class })\n      .attr(\"transform\", (d) => {\n        return \"translate(\" + this.x(\n          d[Object.keys(d)[0]]\n         ) + \",0)\";\n      });\n\n    bar.append(\"rect\")\n      .attr(\"y\", (d) => { return this.y(Math.max(d.start, d.end)); })\n      .attr(\"height\", (d) => { return Math.abs(this.y(d.start) - this.y(d.end)); })\n      .attr(\"width\", this.x.bandwidth())\n      .attr(\"fill\", (d, i) => {\n        return this.predefinedColor[i];\n      })\n      .attr(\"cursor\", \"pointer\")\n      .on(\"mouseover\", (d) => {\n        this.formTooltipData(d);\n        return this.tooltip.style(\"visibility\", \"visible\");\n\n      })\n      .on(\"mousemove\", (d) => {\n        return this.tooltip.html(\n          this.formTooltipData(d)\n        )\n          .style(\"top\", (d3.event.pageY - 10) + \"px\")\n          .style(\"left\", (d3.event.pageX + 10) + \"px\");\n      })\n      .on(\"mouseout\", (d) => {\n        return this.tooltip.style(\"visibility\", \"hidden\");\n      })\n      .on(\"click\", (d) => {\n        this.onCandlestickClick(d);\n        this.fordrillableClick(this, d, event);\n        return this.tooltip.style(\"visibility\", \"hidden\");\n      })\n    \n    if(this.labelflag) {\n    bar.append(\"text\")\n      .style(\"font-weight\", \"bold\")\n      .style(\"font-size\", \"1vw\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", (d) => {\n        if (this.labelcolor.length > 0) {\n          return this.labelcolor;\n        } else {\n          return \"black\";\n        }\n      })\n      .attr(\"x\", (d) => {\n        return (this.x.bandwidth()) / 2;\n      })\n      .attr(\"y\", (d, index) => {\n        return this.y(Math.max(d.start, d.end)) + 20;\n       })\n      .text(function (d) {\n         return d[Object.keys(d)[1]]\n       });\n      }\n  }\n\n  plotLine(svg, x, y, height, width) {\n    if (this.hScale) {\n      svg.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y)\n          .tickSize(-width).tickFormat(''));\n    }\n  }\n\n  transformData(data: any) {\n    this.transformeddata = [];\n    this.keyArray = [];\n    this.keyArray = data[0];\n    data.forEach((element, index) => {\n      if (index > 0) {\n        let DummyObject: any = {};\n        element.forEach((individualvalue, keyindex) => {\n          DummyObject[this.keyArray[keyindex]] = individualvalue;\n        });//inner for loop ends\n        this.transformeddata.push(DummyObject);\n      }//if ends\n    });//outer for loop ends \n    this.data = this.transformeddata;\n    this.addDataKeys();\n    this.formLegendData();\n  }\n\n  addDataKeys() {\n    let cumulative: any = 0;\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i][\"start\"] = cumulative;\n      cumulative += this.data[i][this.keyArray[1]];\n      this.data[i][\"end\"] = cumulative;\n      this.data[i][\"class\"] = (this.data[i][this.keyArray[1]] >= 0) ? 'positive' : 'negative'\n    }\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  formTooltipData(tooltipData: any) {\n    let object = {};\n    object[this.keyArray[0]] = tooltipData[Object.keys(tooltipData)[0]];\n    object[this.keyArray[1]] = tooltipData[Object.keys(tooltipData)[1]];\n    return this.toolTipForBar(object);\n  }\n\n  onCandlestickClick(chartData: any) {\n    let object = {};\n    object[this.keyArray[0]] = chartData[Object.keys(chartData)[0]];\n    object[this.keyArray[1]] = chartData[Object.keys(chartData)[1]];\n    this.chartClick(object);\n  }\n\n  formLegendData() {\n    this.legendArray = [];\n    this.data.forEach((element, index) => {\n      for (let [key, value] of Object.entries(element)) {\n        if (key == this.keyArray[0]) {\n          let object = {};\n          object[\"label\"] = value;\n          object[\"color\"] = this.predefinedColor[index];\n          this.legendArray.push(object);\n        }\n      }\n    });\n  }\n\n  onCandlestickLegendClick(chartData: any) {\n    let object = {};\n    this.data.forEach(element => {\n      for (let [key, value] of Object.entries(element)) {\n        if (value == chartData.label) {\n          object[chartData.label] = element.value;\n        }\n      }\n    });\n    this.onLegendClick.emit(object);\n  }\n\n  resize() {\n    this.svgwidth = 0;\n    this.svg.selectAll(\"*\").remove();\n    this.resizeflag = true;\n    this.svgwidth = this.divid.nativeElement.offsetWidth;\n    this.initializeData();\n    this.plotXYAxis();\n    this.plotD3Chart();\n  }\n\n}\n","import { Component, ElementRef, Input, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { AmexioD3BaseChartComponent } from '../../base/base.component';\nimport { CommanDataService } from '../../services/comman.data.service';\nimport{DeviceQueryService} from '../../services/device.query.service';\nimport * as d3 from 'd3';\n@Component({\n  selector: 'amexio-d3-chart-bubble',\n  template: `\n<div   *ngIf=\"drillableFlag\" #divid (window:resize)=\"resize($event)\">\n<table style=\"width: 100%;\" #chartId >\n  <tr>\n      <td colspan=\"2\" style=\"font-size: 18px; font-weight: bold; \"> {{title}} </td>\n  </tr>\n  <tr>\n      <td>\n          <svg [attr.height]=\"svgheight\" [attr.width]=\"svgwidth\" [attr.id]=\"componentId\">\n          </svg>\n      </td>\n  </tr>\n  <tr>\n      <td style=\"display: block; padding: 5px;\">\n          <amexio-d3-legend *ngIf=\"legend\" [horizontal]=\"true\" (onClick)=\"onBubbleLegendClick($event)\" [data]=\"legendData\" style=\"height:100%;\"></amexio-d3-legend>\n      </td>\n  </tr>\n</table>\n</div>`,\n  styles: [``]\n})\nexport class BubbleComponent extends AmexioD3BaseChartComponent implements OnInit {\n  @Input('width') svgwidth: number = 300;\n  @Input('height') svgheight: number = 300;\n  @Input('color') color: any = \"blue\";\n  @ViewChild('chartId') chartId: ElementRef;\n  @ViewChild('divid') divid: ElementRef;\n  @Input('data-reader') datareader: string;\n  @Input('level') level: number = 0;\n  @Input('target') target: number;\n  @Input('drillable-data') drillabledatakey: any[] = [];\n  @Input('horizontal-scale') hScale: boolean = true;\n  @Input('vertical-scale') vScale: boolean = true;\n  drillableFlag: boolean = true;\n  resizeflag: boolean = false;\n  keyArray: any[] = [];\n  transformeddata: any[] = [];\n  colors: any[] = [];\n  data1: any;\n  xaxisArray: any[] = [];\n  xarray: any[] = [];\n  legends: any[] = [];\n  legendarray: any[] = [];\n  legendData: any[] = [];\n  minxvalue: number = 0;\n  maxxvalue: number = 0;\n  colordata: any;\n  bubblechartdata: any[] = [];\n  httpresponse: any;\n  svg: any;\n  constructor(private myservice: CommanDataService, private cdf: ChangeDetectorRef,private device:DeviceQueryService) {\n\n    super('bubble');\n    this.predefinedcolors = [\"#3366cc\", \"#dc3912\", \"#ff9900\", \"#109618\", \"#990099\", \"#0099c6\", \"#dd4477\", \"#66aa00\", \"#b82e2e\", \"#316395\", \"#994499\", \"#22aa99\", \"#aaaa11\", \"#6633cc\", \"#e67300\", \"#8b0707\", \"#651067\", \"#329262\", \"#5574a6\", \"#3b3eac\"];\n\n  }\n\n  ngOnInit() {\n\n    this.data1 = [];\n\n    if (this.level <= 1) {\n      let resp: any;\n      if (this.httpmethod && this.httpurl) {\n        this.myservice.fetchUrlData(this.httpurl, this.httpmethod).subscribe((response) => {\n          resp = response;\n          this.httpresponse = resp;\n        }, (error) => {\n        }, () => {\n          setTimeout(() => {\n            this.data = this.getResponseData(resp);\n            this.data1 = this.data;\n\n            this.xaxisData();\n            this.transformData(this.data1);\n            this.transformdata();\n            this.colorGeneration();\n            this.formLegendData();\n            this.plotBubbleChart();\n          }, 0);\n        });\n\n      } else if (this.data) {\n\n        setTimeout(() => {\n          this.data1 = this.data;\n          this.data = this.getResponseData(this.data);\n          this.xaxisData();\n          this.transformData(this.data);\n          this.transformdata();\n          this.colorGeneration();\n          this.formLegendData();\n          this.plotBubbleChart();\n\n        }, 0);\n\n      }\n    }\n  }\n\n  fetchData(data: any) {\n\n    let requestJson;\n    let key = this.drillabledatakey;\n    let resp: any;\n    if (this.drillabledatakey.length) {\n      let drillabledata = this.getMultipleDrillbleKeyData(data, key);\n      requestJson = drillabledata;\n    }\n    else {\n      requestJson = data;\n    }\n    if (this.httpmethod && this.httpurl) {\n      this.myservice.postfetchData(this.httpurl, this.httpmethod, requestJson).subscribe((response) => {\n        resp = response;\n        this.httpresponse = response;\n      }, (error) => {\n      }, () => {\n        setTimeout(() => {\n          //this.data = this.getResponseData(resp);\n          this.drawChart();\n        }, 0);\n      });\n    }\n  }\n\n  drawChart() {\n    setTimeout(() => {\n      this.data = this.getResponseData(this.httpresponse);\n      this.data1 = this.data;\n\n      this.xaxisData();\n      this.transformData(this.data1);\n      this.transformdata();\n      this.colorGeneration();\n      this.formLegendData();\n      this.plotBubbleChart();\n    }, 0);\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n\n\n  transformData(data: any) {\n    this.colordata = [];\n    this.keyArray = data[0];\n    data.forEach((element, index) => {\n      if (index > 0) {\n        let DummyObject = {};\n        element.forEach((individualvalue, keyindex) => {\n          DummyObject[this.keyArray[keyindex]] = individualvalue;\n        });\n        this.transformeddata.push(DummyObject);\n      }\n    });\n    this.data = this.transformeddata;\n    this.colordata = this.transformeddata;\n\n  }\n\n  plotBubbleChart() {\n\n    let colors = this.predefinedcolors;\n    if (this.resizeflag == false) {\n      if (this.chartId) {\n\n        this.svgwidth = this.chartId.nativeElement.offsetWidth;\n      } else {\n\n        this.svgwidth = this.svgwidth;\n      }\n    }\n\n    const tooltip = this.toolTip(d3);\n    const margin = { top: 20, right: 60, bottom: 50, left: 60 };\n    const width = this.svgwidth - margin.left - margin.right;\n    const height = this.svgheight - margin.top - margin.bottom;\n\n    let x, y;\n\n\n    x = d3.scaleLinear()\n      .rangeRound([0, width]);\n\n    y = d3.scaleLinear()\n      .rangeRound([height, 0]);\n\n    let xAxis = d3.axisBottom(x);\n\n    let yAxis = d3.axisLeft(y);\n\n    this.svg = d3.select(\"#\" + this.componentId)\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // x.domain([0, d3.max(this.data, function (d) { return d[Object.keys(d)[1]] })]);\n    y.domain([0, d3.max(this.data, function (d) { return d[Object.keys(d)[2]] })]);\n\n    x.domain([this.minxvalue, this.maxxvalue]);\n\n\n    var rScale = d3.scaleSqrt().rangeRound([6, 30]);\n\n\n    rScale.domain([d3.min(this.data, function (d) { return d[Object.keys(d)[4]] }), d3.max(this.data, function (d, i) { return d[Object.keys(d)[4]] })])\n\n\n\n    if(this.device.IsDesktop()==true)\n    {\n      this.svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis)\n       .append(\"text\")\n       .attr(\"y\", 0)\n       .attr(\"x\", 9)\n       .attr(\"dy\", \".35em\")\n       .style(\"text-anchor\", \"start\");\n    }\n  else\n   {\n    this.svg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis).\n     selectAll(\"text\")\n     .attr(\"y\", 0)\n     .attr(\"x\", 9)\n     .attr(\"dy\", \".35em\")\n     .attr(\"transform\", \"rotate(60)\")\n     .style(\"text-anchor\", \"start\");\n  }\n  \n    this.svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n\n    this.plotLine(this.svg, x, y, height, width);\n\n    let node = this.svg.selectAll(\".dot\")\n      .data(this.bubblechartdata)\n      .enter().append(\"circle\")\n      .attr(\"class\", \"dot\")\n      .attr(\"r\", function (d) { return rScale(d[Object.keys(d)[4]]); })\n      .attr(\"cursor\", \"pointer\")\n      .attr(\"cx\", function (d) {\n        return x(d[Object.keys(d)[1]]);\n      })\n      .attr(\"cy\", function (d) { return y(d[Object.keys(d)[2]]); })\n      .attr(\"fill\", function (d, ) { return d[Object.keys(d)[5]] })\n      .attr('opacity', 0.7)\n      .on(\"mouseover\", (d) => {\n        return tooltip.style(\"visibility\", \"visible\");\n      })\n      .on(\"mousemove\", (d) => {\n        return tooltip.html(\n          this.formTooltipData(d)\n        )\n          .style(\"top\", (d3.event.pageY - 10) + \"px\")\n          .style(\"left\", (d3.event.pageX + 10) + \"px\");\n      })\n      .on(\"mouseout\", (d) => {\n        return tooltip.style(\"visibility\", \"hidden\");\n      })\n      .on(\"click\", (d) => {\n        this.bubbleChartClick(d);\n        this.fordrillableClick(this, d, event);\n        return tooltip.style(\"visibility\", \"hidden\");\n      });\n  }\n\n  formTooltipData(tooltipData: any) {\n    let object = {};\n    for (let [key, value] of Object.entries(tooltipData)) {\n      if (key != 'color') {\n        object[key] = value;\n      }\n    }\n    return this.toolTipForBar(object);\n  }\n\n  // Method on chart click\n  bubbleChartClick(event: any) {\n    let object = {};\n    for (let [key, value] of Object.entries(event)) {\n      object[key] = value;\n    }\n    this.chartClick(object);\n  }\n\n  resize(data: any) {\n    this.svgwidth = 0;\n    this.svg.selectAll(\"*\").remove();\n\n    this.resizeflag = true;\n    this.svgwidth = this.divid.nativeElement.offsetWidth;\n\n    this.plotBubbleChart();\n\n  }\n  xaxisData() {\n\n    let array = [];\n    this.minxvalue = 0;\n    this.maxxvalue = 0;\n    this.xaxisArray = [];\n    this.xarray = [];\n    this.data1.forEach(element => {\n      array.push(element[1]);\n    });\n    for (let i = 1; i < array.length; i++) {\n      this.xaxisArray.push(array[i]);\n    }\n\n    let minvalue = Math.floor(d3.min(this.xaxisArray));\n    let maxvalue = Math.ceil(d3.max(this.xaxisArray));\n    this.minxvalue = 5 * (Math.floor(Math.abs(minvalue / 5)));\n    this.maxxvalue = 5 * (Math.ceil(Math.abs(maxvalue / 5)));\n\n  }\n\n  colorGeneration() {\n    \n    this.legendarray = [];\n    let i = 0;\n    let names = this.data1\n      .map(e => e[3])\n      .filter((e, i, a) => a.indexOf(e) === i);\n\n    for (let j = 1; j < names.length; j++) {\n      let value = [];\n      let obj = { \"label\": \"\", \"color\": \"\", \"value\": [] };\n      this.colordata.forEach(element => {\n        if (element[Object.keys(element)[3]] == names[j]) {\n          element['color'] = this.predefinedcolors[i];\n          value.push(element);\n        }\n      });\n      obj[\"value\"] = value;\n      obj[\"label\"] = names[j];\n      obj[\"color\"] = this.predefinedcolors[i];\n      this.legendarray.push(obj);\n      i++;\n    }\n  }\n\n  formLegendData() {\n    this.legendData = [];\n    this.legendarray.forEach(element => {\n      let legendobject = {};\n      legendobject['label'] = element.label;\n      legendobject['color'] = element.color;\n      this.legendData.push(legendobject);\n    });\n  }\n\n  onBubbleLegendClick(legendevent: any) {\n    this.legendarray.forEach(element => {\n      if (legendevent.label == element.label) {\n        this.legendClick(element.value);\n      }\n    });\n\n  }\n\n  plotLine(g, x, y, height, width) {\n    if (this.vScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(d3.axisBottom(x).\n          tickSize(-this.width).tickFormat('')\n        );\n    }\n    if (this.hScale) {\n      g.append('g')\n        .attr(\"color\", \"lightgrey\")\n        .call(d3.axisLeft(y)\n          .tickSize(-width).tickFormat(''));\n    }\n  }\n\n  transformdata() {\n    this.bubblechartdata = []\n    let buubledata = [];\n    this.colordata.forEach((element, i) => {\n\n      buubledata.push(element[Object.keys(element)[4]]);\n\n    });\n\n\n    let data = buubledata.sort(function (a, b) { return b - a });\n\n    for (let j = 0; j <= data.length; j++) {\n      this.colordata.forEach(element => {\n        if (data[j] == element[Object.keys(element)[4]])\n          this.bubblechartdata.push(element);\n      });\n    }\n\n\n\n  }\n\n}\n","import { Component,  OnInit } from '@angular/core';\nimport {GroupbarComponent} from '../groupbar/groupbar.component';\nimport {AmexioD3BarChartComponent} from '../bar/bar.component';\nimport {AmexioD3DounutChartComponent} from '../dounut/dounut.component';\nimport{AmexioD3PieChartComponent } from '../pie/pie.component';\nimport {AmexioD3LineComponent} from '../line/line.component';\nimport{BarstackComponent}  from '../barstack/barstack.component';\nimport{CombochartComponent} from '../combochart/combochart.component'\nimport{HistogramComponent} from '../histogram/histogram.component'\nimport{ScatterchartComponent} from'../scatterchart/scatterchart.component'\nimport{MultiareaComponent} from '../multiarea/multiarea.component'\nimport{CandlestickComponent} from '../candlestick/candlestick.component'\nimport{BubbleComponent} from'../bubble/bubble/bubble.component'\nimport {\n  AfterContentInit, AfterViewInit, ContentChildren,\n  ElementRef, EventEmitter, Input, Output, QueryList, ViewChild,\n   ViewChildren} from '@angular/core';\n\nexport class ViewDrillableComponent implements OnInit {\n\n  @ContentChildren(AmexioD3BarChartComponent, { descendants: true }) queryBarchartinput: QueryList<AmexioD3BarChartComponent>;\n  barchartinput:AmexioD3BarChartComponent[] ;\n\n  @ContentChildren(GroupbarComponent, { descendants: true }) QueryGroupbarchartinput: QueryList<GroupbarComponent>;\n  groupbarchartinput:GroupbarComponent[] ;\n\n  @ContentChildren(AmexioD3LineComponent, { descendants: true }) QueryLinechartinput: QueryList<AmexioD3LineComponent>;\n  linechartinput:AmexioD3LineComponent[] ;\n\n  @ContentChildren(AmexioD3PieChartComponent, { descendants: true }) QueryPiechartinput: QueryList<AmexioD3PieChartComponent>;\n  piechartinput:AmexioD3PieChartComponent[] ;\n\n  @ContentChildren(AmexioD3DounutChartComponent, { descendants: true }) QueryDonutchartinput: QueryList<AmexioD3DounutChartComponent>;\n  donutchartinput:AmexioD3DounutChartComponent[] ;\n\n\n  @ContentChildren(BarstackComponent, { descendants: true }) QueryBarStackchartinput: QueryList<BarstackComponent>;\n  barstackchartinput:BarstackComponent[] ;\n\n  @ContentChildren(CombochartComponent, { descendants: true }) QueryCombochartinput: QueryList<CombochartComponent>;\n  combochartinput:CombochartComponent[] ;\n\n  @ContentChildren(HistogramComponent, { descendants: true }) QueryHistogramchartinput: QueryList<HistogramComponent>;\n  histogramchartinput:HistogramComponent[] ;\n\n  @ContentChildren(ScatterchartComponent, { descendants: true }) QuerySatterchartinput: QueryList<ScatterchartComponent>;\n  scatterchartinput:ScatterchartComponent[] ;\n\n  @ContentChildren(MultiareaComponent, { descendants: true }) QueryMultiareachartinput: QueryList<MultiareaComponent>;\n  multiareachartinput:MultiareaComponent[] ;\n\n  @ContentChildren(CandlestickComponent, { descendants: true }) QueryCandlestickchartinput: QueryList<CandlestickComponent>;\n  candlestickchartinput:CandlestickComponent[] ;\n\n  @ContentChildren(BubbleComponent, { descendants: true }) QueryBubblechartinput: QueryList<BubbleComponent>;\n  bubblechartinput:BubbleComponent[] ;\n\n   chartInputArray:any;\n\n  constructor() { \n\n  }\n\n  ngOnInit() {\n\n  }\n\n\n  ngAfterViewInit() {\n   \n   return this.getComponentData();\n  \n  }\n\ngetComponentData(): any\n{\n\n  this.chartInputArray=[];\n\n  this.barchartinput = this.queryBarchartinput.toArray();\n  this.groupbarchartinput = this.QueryGroupbarchartinput.toArray();\n  this.linechartinput=this.QueryLinechartinput.toArray();\n  this.donutchartinput=this.QueryDonutchartinput.toArray();\n  this.piechartinput=this.QueryPiechartinput.toArray();\n  this.barstackchartinput=this.QueryBarStackchartinput.toArray();\n  this.combochartinput=this.QueryCombochartinput.toArray();\n  this.histogramchartinput=this.QueryHistogramchartinput.toArray();\n  this.scatterchartinput=this.QuerySatterchartinput.toArray();\n  this.multiareachartinput=this.QueryMultiareachartinput.toArray();\n  this.candlestickchartinput=this.QueryCandlestickchartinput.toArray();\n  this.bubblechartinput=this.QueryBubblechartinput.toArray();\n  this.chartInputArray=this.chartInputArray.concat( this.barchartinput,this.groupbarchartinput,this.linechartinput,this.donutchartinput,this.piechartinput,this.barstackchartinput,this.combochartinput,this.histogramchartinput,this.scatterchartinput,this.multiareachartinput,this.candlestickchartinput,this.bubblechartinput);\n \n  return this.chartInputArray;\n \n}\n\n\n\n  \n\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { ViewDrillableComponent } from '../../base/view.component';\n\nimport {\n  AfterContentInit, AfterViewInit, ContentChildren,\n  ElementRef, EventEmitter, Input, Output, QueryList, ViewChild,\n  ViewChildren\n} from '@angular/core';\nimport { HostListener } from '@angular/core';\n@Component({\n  selector: 'amexio-drillable',\n  template: `\n<div > \n    <ng-container *ngIf=\"disableFlag\">\n            <button type=\"button\" class=\"button\"\n             (click)=\"previouschartClick($event)\">\n             <i class=\"fa fa-arrow-left\"></i> \n             \n            </button>\n</ng-container>\n\n<ng-content></ng-content>\n\n</div>\n\n<span [ngStyle]=\"contextStyle\" >\n  <ul *ngIf=\"contextmenuFlag\" class=\"close-thik\" class=\"context-menu-list\"  >\n    <span (click)=\"onCloseClick()\" class=\"close\"><i class=\"fa fa-close\"></i></span>\n  <li (click)=\"onContextNodeClick(itemConfig)\" class=\"context-menu-list-items\" \n  *ngFor=\"let itemConfig of arrayofsameLevel\">\n  <em [ngStyle]=\"{'padding-left': itemConfig.icon ? '5px':'19px'}\"></em>\n  <span style=\"white-space: nowrap;display: inline ; padding-left:5px\">{{itemConfig.title}}\n  </span>\n  </li>\n  </ul>\n  </span>\n  `,\n  styles: [`.button{position:relative;border:1px solid #555;font-weight:400;color:#000;padding:.5rem 1rem;text-align:center;transition-duration:.4s;text-decoration:none;overflow:hidden;cursor:pointer;border-radius:3px}.button:after{content:\"\";background:#000;display:block;position:absolute;padding-top:300%;padding-left:350%;margin-left:-20px!important;margin-top:-120%;opacity:0;transition:.8s}.button:active:after{padding:0;margin:0;opacity:1;transition:none}.context-menu-list{display:block;position:absolute;flex-direction:column;min-width:180px;cursor:pointer;max-height:150px;z-index:1;padding:10px 0;overflow-y:auto;background-color:#fff!important;box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.context-menu-list .context-menu-list-items{text-decoration:none;font-size:14px!important;padding:5px;display:block}.close{float:right;padding-right:8px;cursor:pointer}`]\n})\n\n\nexport class DrillableComponent extends ViewDrillableComponent implements OnInit {\n\n  mouseLocation: { left: number; top: number } = { left: 0, top: 0 };\n  contextmenuFlag: boolean;\n  contextStyle: any;\n  ComponentDataArray: any\n  componentcounter: number = 1;\n  disableFlag: boolean = false;\n  arrayofsameLevel: any;\n  eventData: any;\n  rightClickNodeData: any;\n  posixUp: boolean;\n  levelArray: any;\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n\n  }\n\n  ngAfterViewInit() {\n\n    this.ComponentDataArray = this.getComponentData();\n    this.getData(this.ComponentDataArray);\n\n  }\n  getData(data: any) {\n    data.forEach(element => {\n\n      if (element.level !== 1) {\n        element.drillableFlag = false;\n        element.drillableEvent.subscribe((eventdata: any) => {\n          this.hideUI(eventdata);\n          this.sameLevelChart(eventdata);\n          this.ShowUI(eventdata);\n\n\n        })\n      }\n      else {\n        this.disableFlag = false;\n        element.drillableEvent.subscribe((eventdata: any) => {\n          this.hideUI(eventdata);\n          this.sameLevelChart(eventdata);\n          this.ShowUI(eventdata);\n        })\n      }\n    });\n\n  }\n\n  hideUI(eventRef: any) {\n    this.ComponentDataArray.forEach(element => {\n      if (element.level == eventRef.ref.level) {\n        eventRef.ref.drillableFlag = false;\n      }\n    });\n\n  }\n\n  ShowUI(eventRef: any) {\n    this.eventData = [];\n    this.eventData = eventRef;\n    this.ComponentDataArray.forEach(element => {\n      if (eventRef.ref.target == element.level) {\n        if (this.arrayofsameLevel.length == 1) {\n          this.disableFlag = true;\n          element.drillableFlag = true;\n          element.fetchData(eventRef.node);\n          this.componentcounter = element.level;\n        }\n        else {\n          this.contextmenuFlag = true;\n          this.mouseLocation.left = eventRef.event.clientX;\n          this.mouseLocation.top = eventRef.event.clientY;\n          this.contextStyle = this.getContextMenuStyle();\n        }\n      }\n    });\n  if (this.componentcounter == eventRef.ref.level) {\n      eventRef.ref.drillableFlag = true;\n    }\n\n  }\n  previouschartClick(event: any) {\n    let chartLevel = this.componentcounter - 1;\n    this.ComponentDataArray.forEach(element => {\n      if (chartLevel == element.level) {\n        element.drillableFlag = true;\n        element.drawChart();\n      } else if (this.componentcounter == element.level) {\n        element.drillableFlag = false;\n      }\n    });\n    if (this.componentcounter == 2) {\n      this.disableFlag = false;\n    }\n    this.componentcounter = chartLevel;\n  }\n\n\n  sameLevelChart(eventRef: any) {\n  \n    this.arrayofsameLevel = [];\n    this.ComponentDataArray.forEach(element => {\n      if (eventRef.ref.target == element.level) {\n        this.arrayofsameLevel = this.arrayofsameLevel.concat(element);\n\n      }\n\n    });\n  }\n\n  //Method Creates style if two same targets found.\n  getContextMenuStyle() {\n    return {\n      'cursor': 'default',\n      'position': 'fixed',\n      'display': this.contextmenuFlag ? 'block' : 'none',\n      'left': this.mouseLocation.left + 'px',\n      'top': this.mouseLocation.top + 'px',\n      'box-shadow': '1px 1px 2px #000000',\n      'width': '15%',\n    };\n  }\n\n\n\n  getListPosition(elementRef: any): boolean {\n    const height = 240;\n    if ((window.screen.height - elementRef.getBoundingClientRect().bottom) < height) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  onContextNodeClick(event: any) {\n    this.componentcounter = 0;\n    this.contextmenuFlag = false;\n    this.eventData.ref.drillableFlag = false;\n    this.disableFlag = true;\n    event.drillableFlag = true;\n    event.fetchData(this.eventData.node);\n    this.componentcounter = event.level;\n\n    if (this.componentcounter == this.eventData.ref.level) {\n      this.eventData.ref.drillableFlag = true;\n    }\n  }\n\n  onCloseClick() {\n    this.contextmenuFlag = false;\n  }\n\n}\n","import { AmexioD3DounutChartComponent } from './dounut/dounut.component';\nimport { AmexioD3PieChartComponent } from './pie/pie.component';\nimport { AmexioD3Legend } from './legend/legend.component';\nimport { AmexioD3BarChartComponent } from './bar/bar.component';\nimport { AmexioD3LineComponent } from './line/line.component';\nimport { BarstackComponent } from './barstack/barstack.component';\nimport { GroupbarComponent } from './groupbar/groupbar.component';\nimport { DrillableComponent } from './drillable/drillable/drillable.component';\nimport { CombochartComponent } from './combochart/combochart.component';\nimport { HistogramComponent } from './histogram/histogram.component';\nimport { MultiareaComponent } from './multiarea/multiarea.component';\nimport { ScatterchartComponent } from './scatterchart/scatterchart.component';\nimport { CandlestickComponent } from './candlestick/candlestick.component';\nimport{BubbleComponent} from './bubble/bubble/bubble.component';\nexport const D3_COMPONENTS : any[] = [\n  AmexioD3Legend,\n  AmexioD3DounutChartComponent,\n  AmexioD3BarChartComponent,\n  AmexioD3PieChartComponent,\n  AmexioD3LineComponent,\n  BarstackComponent,\n  GroupbarComponent,\n  CombochartComponent,\n  DrillableComponent,\n  HistogramComponent,\n  MultiareaComponent,\n  ScatterchartComponent,\n  CandlestickComponent,\n  BubbleComponent\n]\n","import { NgModule } from '@angular/core';\nimport { D3_COMPONENTS } from './amexio-chart-d3-components';\nimport {FormsModule} from '@angular/forms';\nimport {  CommonModule } from '@angular/common';\nimport{DeviceQueryService} from './services/device.query.service'\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule                                                             \n  ],\n \n  declarations: D3_COMPONENTS,\n  providers: [DeviceQueryService],\n  exports: D3_COMPONENTS\n})\nexport class AmexioChartD3Module { }\n               "]}