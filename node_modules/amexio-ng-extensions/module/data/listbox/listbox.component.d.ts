/**
 * Created by ketangote on 11/22/17.
 */
import { AfterViewInit, OnDestroy, OnInit, Renderer2, TemplateRef } from '@angular/core';
import { CommonDataService } from '../../services/data/common.data.service';
export declare class AmexioListBoxComponent implements AfterViewInit, OnInit, OnDestroy {
    dataService: CommonDataService;
    private renderer;
    private componentLoaded;
    contextMenuStyle: any;
    enablecheckbox: boolean;
    header: string;
    enableHeader: boolean;
    searchplaceholder: string;
    filter: boolean;
    _data: any;
    data: any[];
    httpurl: string;
    datareader: string;
    httpmethod: string;
    displayfield: string;
    height: any;
    selectedRows: any;
    onRowClick: any;
    border: any;
    contextmenu: any[];
    rightClick: any;
    bodyTemplate: TemplateRef<any>;
    viewData: any[];
    orgData: any[];
    filterText: string;
    selectAll: boolean;
    response: any;
    selectedData: any[];
    previousData: any;
    maskloader: boolean;
    mouseLocation: {
        left: number;
        top: number;
    };
    contextMenuFlag: boolean;
    posixUp: boolean;
    rightClickRowData: any;
    globalClickListenFunc: () => void;
    constructor(dataService: CommonDataService, renderer: Renderer2);
    ngOnInit(): void;
    updateComponent(): void;
    setData(httpResponse: any): void;
    setSelectedFlag(viewRows: any): void;
    filterData(): void;
    searchTree(data: any[], matchingTitle: string): any[];
    selectedCheckBox(rowData: any): void;
    selectAllRecord(): void;
    onClick(data: any): void;
    ngAfterViewInit(): void;
    loadContextMenu(event: any, row: any, id: any): void;
    getContextMenu(): void;
    tempSelectedFlag(rows: any): void;
    getListPosition(elementRef: any): boolean;
    getContextMenuStyle(): {
        'cursor': string;
        'position': string;
        'display': string;
        'left': string;
        'top': string;
        'box-shadow': string;
        'width': string;
    };
    onContextNodeClick(itemConfig: any): void;
    addListner(): void;
    removeListner(): void;
    ngOnDestroy(): void;
}
