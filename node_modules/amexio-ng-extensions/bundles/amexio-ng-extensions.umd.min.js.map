{"version":3,"file":"amexio-ng-extensions.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../node_modules/rxjs/src/internal/config.ts","../../node_modules/rxjs/src/internal/Observer.ts","../../node_modules/rxjs/src/internal/util/isObject.ts","../../node_modules/rxjs/src/internal/util/tryCatch.ts","../../node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","../../node_modules/rxjs/src/internal/Subscription.ts","../../node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","../../node_modules/rxjs/src/internal/Subscriber.ts","../../node_modules/rxjs/src/internal/Observable.ts","../../node_modules/rxjs/src/internal/util/toSubscriber.ts","../../node_modules/rxjs/src/internal/util/canReportError.ts","../../node_modules/rxjs/src/internal/util/pipe.ts","../../node_modules/rxjs/src/internal/observable/empty.ts","../../node_modules/rxjs/src/internal/util/subscribeToArray.ts","../../node_modules/rxjs/src/internal/observable/fromArray.ts","../../node_modules/rxjs/src/internal/observable/of.ts","../../node_modules/rxjs/src/internal/observable/scalar.ts","../../node_modules/rxjs/src/internal/operators/map.ts","../../node_modules/rxjs/src/internal/OuterSubscriber.ts","../../node_modules/rxjs/src/internal/InnerSubscriber.ts","../../node_modules/rxjs/src/internal/util/subscribeToPromise.ts","../../node_modules/rxjs/src/internal/symbol/iterator.ts","../../node_modules/rxjs/src/internal/util/subscribeToIterable.ts","../../node_modules/rxjs/src/internal/util/subscribeToObservable.ts","../../node_modules/rxjs/src/internal/util/isPromise.ts","../../node_modules/rxjs/src/internal/util/subscribeTo.ts","../../node_modules/rxjs/src/internal/util/subscribeToResult.ts","../../node_modules/rxjs/src/internal/observable/from.ts","../../node_modules/rxjs/src/internal/observable/fromObservable.ts","../../node_modules/rxjs/src/internal/observable/fromPromise.ts","../../node_modules/rxjs/src/internal/util/isIterable.ts","../../node_modules/rxjs/src/internal/observable/fromIterable.ts","../../node_modules/rxjs/src/internal/operators/mergeMap.ts","../../node_modules/rxjs/src/internal/operators/concatMap.ts","../../node_modules/rxjs/src/internal/operators/filter.ts","../../../../../../../execroot/packages/common/http/src/backend.ts","../../../../../../../execroot/packages/common/http/src/headers.ts","../../../../../../../execroot/packages/common/http/src/params.ts","../../../../../../../execroot/packages/common/http/src/request.ts","../../../../../../../execroot/packages/common/http/src/response.ts","../../../../../../../execroot/packages/common/http/src/client.ts","../../../../../../../execroot/packages/common/http/src/interceptor.ts","../../../../../../../execroot/packages/common/http/src/jsonp.ts","../../../../../../../execroot/packages/common/http/src/xhr.ts","../../../../../../../execroot/packages/common/http/src/xsrf.ts","../../../../../../../execroot/packages/common/http/src/module.ts","../../tmp/module/data/datagrid/data.grid.column.ts","../../tmp/module/services/data/common.data.service.ts","../../tmp/module/data/datagrid/datagrid.component.ts","../../tmp/module/data/datagrid/datagrid.filter.component.ts","../../tmp/module/data/datagrid/datagrid.header.component.ts","../../tmp/module/services/icon/icon.service.ts","../../tmp/module/data/icon/icon.component.ts","../../tmp/module/data/itemselector/item.selector.component.ts","../../tmp/module/data/listbox/listbox.component.ts","../../tmp/module/data/paginator/paginator.component.ts","../../tmp/module/data/progress/bar.component.ts","../../tmp/module/data/progress/progress.component.ts","../../tmp/module/data/tree/filter.tree.component.ts","../../tmp/module/data/tree/horizontalnode.component.ts","../../tmp/module/data/tree/horizontaltreeview.component.ts","../../tmp/module/data/tree/tree.component.ts","../../tmp/module/data/treegrid/treedatatable.component.ts","../../tmp/module/layout/accordion/accordion.pane.ts","../../tmp/module/layout/accordion/accordion.component.ts","../../tmp/module/layout/accordion/accordion.header.component.ts","../../tmp/module/layout/basiclayout/layout.constant.ts","../../tmp/module/layout/basiclayout/layout.component.ts","../../tmp/module/layout/basiclayout/layoutitem.component.ts","../../tmp/module/layout/border/borderlayoutitem.component.ts","../../tmp/module/layout/border/borderlayout.component.ts","../../tmp/module/layout/box/box.component.ts","../../tmp/module/panes/header/pane.action.header.ts","../../tmp/module/panes/action/pane.action.footer.ts","../../tmp/module/panes/body/pane.action.body.ts","../../tmp/module/layout/card/card.component.ts","../../tmp/module/layout/columns/column.component.ts","../../tmp/module/layout/gridlayout/amexiogridlayoutservice.service.ts","../../tmp/module/layout/gridlayout/griditem.component.ts","../../tmp/module/layout/gridlayout/grid.component.ts","../../tmp/module/layout/icon/icon.component.ts","../../tmp/module/layout/rows/row.component.ts","../../tmp/module/services/device/device.query.service.ts","../../node_modules/rxjs/src/internal/util/isFunction.ts","../../node_modules/rxjs/src/internal/util/hostReportError.ts","../../node_modules/rxjs/src/internal/util/isArray.ts","../../node_modules/rxjs/src/internal/util/errorObject.ts","../../node_modules/rxjs/src/internal/symbol/observable.ts","../../node_modules/rxjs/src/internal/util/noop.ts","../../node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","../../node_modules/rxjs/src/internal/SubjectSubscription.ts","../../node_modules/rxjs/src/internal/Subject.ts","../../node_modules/rxjs/src/internal/operators/refCount.ts","../../node_modules/rxjs/src/internal/observable/ConnectableObservable.ts","../../node_modules/rxjs/src/internal/operators/groupBy.ts","../../node_modules/rxjs/src/internal/BehaviorSubject.ts","../../node_modules/rxjs/src/internal/scheduler/Action.ts","../../node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","../../node_modules/rxjs/src/internal/scheduler/QueueAction.ts","../../node_modules/rxjs/src/internal/Scheduler.ts","../../node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","../../node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts","../../node_modules/rxjs/src/internal/scheduler/queue.ts","../../node_modules/rxjs/src/internal/util/isScheduler.ts","../../node_modules/rxjs/src/internal/observable/throwError.ts","../../node_modules/rxjs/src/internal/Notification.ts","../../node_modules/rxjs/src/internal/operators/observeOn.ts","../../node_modules/rxjs/src/internal/ReplaySubject.ts","../../node_modules/rxjs/src/internal/AsyncSubject.ts","../../node_modules/rxjs/src/internal/util/Immediate.ts","../../node_modules/rxjs/src/internal/scheduler/AsapAction.ts","../../node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts","../../node_modules/rxjs/src/internal/scheduler/asap.ts","../../node_modules/rxjs/src/internal/scheduler/async.ts","../../node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","../../node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","../../node_modules/rxjs/src/internal/scheduler/animationFrame.ts","../../node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts","../../node_modules/rxjs/src/internal/util/identity.ts","../../node_modules/rxjs/src/internal/util/isObservable.ts","../../node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","../../node_modules/rxjs/src/internal/util/EmptyError.ts","../../node_modules/rxjs/src/internal/util/TimeoutError.ts","../../node_modules/rxjs/src/internal/observable/bindCallback.ts","../../node_modules/rxjs/src/internal/observable/bindNodeCallback.ts","../../node_modules/rxjs/src/internal/util/isArrayLike.ts","../../node_modules/rxjs/src/internal/observable/combineLatest.ts","../../node_modules/rxjs/src/internal/util/isInteropObservable.ts","../../node_modules/rxjs/src/internal/operators/mergeAll.ts","../../node_modules/rxjs/src/internal/operators/concatAll.ts","../../node_modules/rxjs/src/internal/observable/concat.ts","../../node_modules/rxjs/src/internal/observable/defer.ts","../../node_modules/rxjs/src/internal/observable/forkJoin.ts","../../node_modules/rxjs/src/internal/observable/fromEvent.ts","../../node_modules/rxjs/src/internal/observable/fromEventPattern.ts","../../node_modules/rxjs/src/internal/observable/generate.ts","../../node_modules/rxjs/src/internal/observable/iif.ts","../../node_modules/rxjs/src/internal/util/isNumeric.ts","../../node_modules/rxjs/src/internal/observable/interval.ts","../../node_modules/rxjs/src/internal/observable/merge.ts","../../node_modules/rxjs/src/internal/observable/never.ts","../../node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts","../../node_modules/rxjs/src/internal/observable/pairs.ts","../../node_modules/rxjs/src/internal/observable/race.ts","../../node_modules/rxjs/src/internal/observable/range.ts","../../node_modules/rxjs/src/internal/observable/timer.ts","../../node_modules/rxjs/src/internal/observable/using.ts","../../node_modules/rxjs/src/internal/observable/zip.ts","../../node_modules/rxjs/src/index.ts","../../tmp/module/layout/accordion/accordion.service.ts","../../tmp/module/layout/amexio.layout.module.ts","../../tmp/module/panes/carousel/carousel.template.directive.ts","../../tmp/module/panes/carousel/carousel.component.ts","../../tmp/module/panes/carousel/carousel.wrapper.template.directive.ts","../../tmp/module/panes/dialogue/dialogue.pane.component.ts","../../tmp/module/panes/fieldset/fieldset.component.ts","../../tmp/module/forms/buttons/button.component.ts","../../tmp/module/forms/buttongroup/button.group.component.ts","../../tmp/module/panes/form/form.action.component.ts","../../tmp/module/panes/form/form.body.component.ts","../../tmp/module/panes/form/form.group.directive.ts","../../tmp/module/panes/form/form.header.component.ts","../../tmp/module/panes/form/form.component.ts","../../tmp/module/panes/icon/icon.component.ts","../../tmp/module/panes/panel/panel.component.ts","../../tmp/module/panes/panel/panel.header.component.ts","../../tmp/module/panes/steps/step-block.ts","../../tmp/module/panes/steps/steps.component.ts","../../tmp/module/panes/tab/tab.pill.component.ts","../../tmp/module/panes/tab/right-vertical-tab/right.vertical.component.ts","../../tmp/module/base/value-accessor.ts","../../tmp/module/forms/checkbox-group/checkbox.group.component.ts","../../tmp/module/forms/form-validator/amexio.form.validator.component.ts","../../tmp/module/forms/checkbox/checkbox.component.ts","../../tmp/module/base/base.input.component.ts","../../tmp/module/base/event.base.component.ts","../../tmp/module/base/base.validator.component.ts","../../tmp/module/forms/dropdown/dropdown.component.ts","../../tmp/module/forms/label/label.component.ts","../../tmp/module/forms/numberinput/numberinput.component.ts","../../tmp/module/forms/radio/radiogroup.component.ts","../../tmp/module/forms/rating/rating.component.ts","../../tmp/module/forms/textinput/textinput.component.ts","../../tmp/module/forms/toggle/toggle.component.ts","../../tmp/module/media/image/image.component.ts","../../tmp/module/panes/tab/tab.action.ts","../../tmp/module/panes/tab/tab.component.ts","../../tmp/module/panes/tab/vertical-tab/vertical.tab.component.ts","../../tmp/module/panes/timeline/amexiotimelineevent.component.ts","../../tmp/module/panes/timeline/amexiotimelinevent.model.ts","../../tmp/module/panes/timeline/amexiotimeline.component.ts","../../tmp/module/panes/window/window.pane.header.component.ts","../../tmp/module/panes/window/window.pane.component.ts","../../tmp/module/forms/advancesearch/searchadvance.component.ts","../../tmp/module/forms/advancesearch/searchboxtool.component.ts","../../tmp/module/forms/button-dropdown/button.dropdown.item.ts","../../tmp/module/forms/button-dropdown/button.dropdown.ts","../../tmp/module/forms/button-dropdown/split.button.dropdown.ts","../../tmp/module/forms/checkbox-group/checkbox.component.ts","../../tmp/module/forms/chip/chip.component.ts","../../tmp/module/forms/chips/chips.component.ts","../../tmp/models/creditcardmodel.component.ts","../../tmp/module/forms/creditcard/creditcard.component.ts","../../tmp/module/base/list.base.datepicker.component.ts","../../tmp/module/forms/datetimepicker/datetimepicker.component.ts","../../tmp/module/forms/dropdown-menu/dropdownmenu.component.items.ts","../../tmp/module/forms/dropdown-menu/dropdownmenu.component.ts","../../tmp/module/forms/emailinput/emailinput.component.ts","../../tmp/module/forms/fileupload/fileupload.component.ts","../../tmp/module/forms/floatingbutton/floatingbutton.component.ts","../../tmp/module/forms/floatinggroupbutton/floatinggroupbutton.component.ts","../../tmp/module/forms/icon/icon.component.ts","../../tmp/module/forms/passwordinput/passwordinput.component.ts","../../tmp/module/forms/recaptcha/load.recaptcha.service.ts","../../tmp/module/forms/recaptcha/recaptcha.component.ts","../../tmp/module/forms/slider/slider.handler.ts","../../tmp/module/forms/slider/slider.component.ts","../../tmp/module/forms/spinner/spinner.component.ts","../../tmp/module/forms/tagsinput/tags.input.component.ts","../../tmp/module/forms/textarea/textarea.component.ts","../../tmp/module/forms/toolbar/toolbarone.component.ts","../../tmp/module/forms/toolbar/toolbar.component.ts","../../tmp/module/forms/toolbar/toolbaraction.component.ts","../../tmp/module/base/dropdownlist.component.ts","../../tmp/module/base/list.base.component.ts","../../tmp/module/forms/typeahead/typeahead.component.ts","../../tmp/module/base/input.helper.component.ts","../../tmp/module/pipe/filter.pipe.ts","../../tmp/module/forms/amexio.forms.module.ts","../../tmp/module/panes/amexio.pane.module.ts","../../tmp/module/data/amexio.data.module.ts","../../tmp/module/media/video-player/video.player.component.ts","../../tmp/module/media/amexio.media.module.ts","../../tmp/module/navigation/breadcrumb/breadcrumb.component.ts","../../tmp/module/navigation/dockedbar/dockbaritem.ts","../../tmp/module/navigation/dockedbar/dockettoolbar.component.ts","../../tmp/module/navigation/icon/icon.component.ts","../../tmp/module/navigation/menubar/menubar.component.ts","../../tmp/module/navigation/navbar/navaction.component.ts","../../tmp/module/navigation/navbar/navitem.component.ts","../../tmp/module/navigation/navbar/navbar.component.ts","../../tmp/module/navigation/navbar/navmenu.component.ts","../../tmp/module/navigation/navbar/navtextfield.component.ts","../../tmp/module/navigation/notification/notification.component.ts","../../tmp/module/navigation/sidenav/sidenav.component.ts","../../tmp/module/navigation/sidenav/sidenavinnernode.component.ts","../../tmp/module/navigation/sidenav/sidenavnode.component.ts","../../tmp/module/navigation/amexio.nav.module.ts","../../tmp/models/GridConstants.ts","../../tmp/module/layout/gridlayout/gridmodel.component.ts","../../tmp/models/GridConfig.ts","../../tmp/module/amexio.widget.module.ts","../../tmp/module/dashboard/dashboardtitle/dashboard.title.component.ts","../../tmp/module/dashboard/datapoints/center.component.ts","../../tmp/module/dashboard/datapoints/datapoints.component.ts","../../tmp/module/dashboard/datapoints/east.component.ts","../../tmp/module/dashboard/datapoints/north.component.ts","../../tmp/module/dashboard/datapoints/south.component.ts","../../tmp/module/dashboard/datapoints/west.component.ts","../../tmp/module/dashboard/chart.loader.service.ts","../../tmp/module/dashboard/gaugechart/gauge.chart.component.ts","../../tmp/module/dashboard/amexio.dashboard.module.ts","../../tmp/module/charts/chartarea/chart.area.component.ts","../../tmp/module/charts/chartlegend/chart.legend.component.ts","../../tmp/module/charts/charttitle/chart.title.component.ts","../../tmp/module/charts/chart.loader.service.ts","../../tmp/module/charts/areachart/area.chart.component.ts","../../tmp/module/charts/barchart/bar.chart.component.ts","../../tmp/module/charts/horizontalaxis/chart.horizontalaxis.component.ts","../../tmp/module/charts/verticalaxis/chart.verticalaxis.component.ts","../../tmp/module/charts/bubblechart/bubble.chart.component.ts","../../tmp/module/charts/candlestickchart/candlestick.chart.component.ts","../../tmp/module/charts/candlestickwaterfallchart/candlestickwaterfall.chart.component.ts","../../tmp/module/charts/columnchart/column.chart.component.ts","../../tmp/module/charts/combochart/combo.chart.component.ts","../../tmp/module/charts/donutchart/donut.chart.component.ts","../../tmp/module/charts/ganttchart/gantt.chart.component.ts","../../tmp/module/charts/histogramchart/histogram.chart.component.ts","../../tmp/module/charts/linechart/line.chart.component.ts","../../tmp/module/charts/piechart/pie.chart.component.ts","../../tmp/module/charts/scatterchart/scatter.chart.component.ts","../../tmp/module/charts/timelinechart/timeline.chart.component.ts","../../tmp/module/charts/amexio.charts.module.ts","../../tmp/module/map/map.loader.service.ts","../../tmp/module/map/mapproperties/map.properties.ts","../../tmp/module/map/geochart/geo.chart.component.ts","../../tmp/module/map/maptitle/map.title.component.ts","../../tmp/module/map/treemap/treemap.map.component.ts","../../tmp/module/map/amexio.map.module.ts","../../tmp/module/enterprise/ee-carousel/ee.carousel.component.ts","../../tmp/module/enterprise/ee-content/ee.content.ts","../../tmp/module/enterprise/youtube-player/youtube.player.component.ts","../../tmp/module/enterprise/amexio.enterprise.module.ts","../../tmp/module/services/icon/icon.mapping.config.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nfunction UnsubscriptionErrorImpl(this: any, errors: any[]) {\n  Error.call(this);\n  this.message = errors ?\n  `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n  this.name = 'UnsubscriptionError';\n  this.errors = errors;\n  return this;\n}\n\nUnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parent: Subscription = null;\n  /** @internal */\n  protected _parents: Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  /** @internal */\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber =\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  private _parentSubscription: Subscription | null = null;\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    this._parentSubscription = null;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from '../internal/symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```javascript\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```javascript\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```javascript\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```javascript\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","import { noop } from './noop';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```javascript\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```javascript\n * const interval$ = interval(1000);\n * result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return {Observable} An \"empty\" Observable: emits only the complete\n * notification.\n * @static true\n * @name empty\n * @owner Observable\n * @deprecated Deprecated in favor of using {@link index/EMPTY} constant.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nexport function emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  if (!subscriber.closed) {\n    subscriber.complete();\n  }\n};\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      let i = 0;\n      sub.add(scheduler.schedule(function () {\n        if (i === input.length) {\n          subscriber.complete();\n          return;\n        }\n        subscriber.next(input[i++]);\n        if (!subscriber.closed) {\n          sub.add(this.schedule());\n        }\n      }));\n      return sub;\n    });\n  }\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { empty } from './empty';\nimport { scalar } from './scalar';\nimport { Observable } from '../Observable';\n\n/* tslint:disable:max-line-length */\nexport function of<T>(a: T, scheduler?: SchedulerLike): Observable<T>;\nexport function of<T, T2>(a: T, b: T2, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler?: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler?: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler?: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```javascript\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```javascript\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n  } else {\n    scheduler = undefined;\n  }\n  switch (args.length) {\n    case 0:\n      return empty(scheduler);\n    case 1:\n      return scheduler ? fromArray(args as T[], scheduler) : scalar(args[0] as T);\n    default:\n      return fromArray(args as T[], scheduler);\n  }\n}\n","import { Observable } from '../Observable';\n\nexport function scalar<T>(value: T) {\n  const result = new Observable<T>(subscriber => {\n    subscriber.next(value);\n    subscriber.complete();\n  });\n  result._isScalar = true;\n  (result as any).value = value;\n  return result;\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = iterable[Symbol_iterator]();\n  do {\n    const item = iterator.next();\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","export function isPromise(value: any): value is PromiseLike<any> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>) => {\n  if (result instanceof Observable) {\n    return (subscriber: Subscriber<T>) => {\n        if (result._isScalar) {\n        subscriber.next((result as any).value);\n        subscriber.complete();\n        return undefined;\n      } else {\n        return result.subscribe(subscriber);\n      }\n    };\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","import { ObservableInput } from '../types';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { subscribeTo } from './subscribeTo';\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  destination?: Subscriber<any>\n): Subscription;\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)\n): Subscription | void {\n  if (destination.closed) {\n    return;\n  }\n  return subscribeTo(result)(destination);\n}\n","import { Observable } from '../Observable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isIterable } from '../util/isIterable';\nimport { fromArray } from './fromArray';\nimport { fromPromise } from './fromPromise';\nimport { fromIterable } from './fromIterable';\nimport { fromObservable } from './fromObservable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike } from '../types';\n\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function from<T>(input: ObservableInput<ObservableInput<T>>, scheduler?: SchedulerLike): Observable<Observable<T>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n * ### Converts an array to an Observable\n * ```javascript\n * import { from } from 'rxjs/observable/from';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10 20 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n * ```javascript\n * import { take } from 'rxjs/operators';\n * import { from } from 'rxjs/observable/from';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3 6 12 24 48 96 192 384 768 1536\n * ```\n *\n * ---\n *\n * ### with async scheduler\n * ```javascript\n * import { from } from 'rxjs/observable/from';\n * import { async } from 'rxjs/scheduler/async';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, async);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start end 10 20 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n * @see {@link fromPromise}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\n\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  }\n\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return fromPromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return fromArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return fromIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function fromObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToObservable(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      sub.add(scheduler.schedule(() => {\n        const observable: Subscribable<T> = input[Symbol_observable]();\n        sub.add(observable.subscribe({\n          next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n          error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n          complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n        }));\n      }));\n      return sub;\n    });\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { subscribeToPromise } from '../util/subscribeToPromise';\n\nexport function fromPromise<T>(input: PromiseLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToPromise(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      sub.add(scheduler.schedule(() => input.then(\n        value => {\n          sub.add(scheduler.schedule(() => {\n            subscriber.next(value);\n            sub.add(scheduler.schedule(() => subscriber.complete()));\n          }));\n        },\n        err => {\n          sub.add(scheduler.schedule(() => subscriber.error(err)));\n        }\n      )));\n      return sub;\n    });\n  }\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\n\nexport function fromIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  if (!scheduler) {\n    return new Observable<T>(subscribeToIterable(input));\n  } else {\n    return new Observable<T>(subscriber => {\n      const sub = new Subscription();\n      let iterator: Iterator<T>;\n      sub.add(() => {\n        // Finalize generators\n        if (iterator && typeof iterator.return === 'function') {\n          iterator.return();\n        }\n      });\n      sub.add(scheduler.schedule(() => {\n        iterator = input[Symbol_iterator]();\n        sub.add(scheduler.schedule(function () {\n          if (subscriber.closed) {\n            return;\n          }\n          let value: T;\n          let done: boolean;\n          try {\n            const result = iterator.next();\n            value = result.value;\n            done = result.done;\n          } catch (err) {\n            subscriber.error(err);\n            return;\n          }\n          if (done) {\n            subscriber.complete();\n          } else {\n            subscriber.next(value);\n            this.schedule();\n          }\n        }));\n      }));\n      return sub;\n    });\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, resultSelector: undefined, concurrent?: number): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```javascript\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, I|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    subscribeToResult<T, R>(this, ish, value, index, innerSubscriber);\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, R>(project: (value: T, index: number) =>  ObservableInput<R>): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function concatMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, resultSelector: undefined): OperatorFunction<T, R>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function concatMap<T, I, R>(project: (value: T, index: number) =>  ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap<T, I, R>(\n  project: (value: T, index: number) =>  ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I|R> {\n  return mergeMap(project, resultSelector, 1);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\nimport {HttpRequest} from './request';\nimport {HttpEvent} from './response';\n\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n *\n */\nexport abstract class HttpHandler {\n  abstract handle(req: HttpRequest<any>): Observable<HttpEvent<any>>;\n}\n\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n *\n */\nexport abstract class HttpBackend implements HttpHandler {\n  abstract handle(req: HttpRequest<any>): Observable<HttpEvent<any>>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface Update {\n  name: string;\n  value?: string|string[];\n  op: 'a'|'s'|'d';\n}\n\n/**\n * Immutable set of Http headers, with lazy parsing.\n *\n */\nexport class HttpHeaders {\n  /**\n   * Internal map of lowercase header names to values.\n   */\n  private headers: Map<string, string[]>;\n\n\n  /**\n   * Internal map of lowercased header names to the normalized\n   * form of the name (the form seen first).\n   */\n  private normalizedNames: Map<string, string> = new Map();\n\n  /**\n   * Complete the lazy initialization of this object (needed before reading).\n   */\n  private lazyInit: HttpHeaders|Function|null;\n\n  /**\n   * Queued updates to be materialized the next initialization.\n   */\n  private lazyUpdate: Update[]|null = null;\n\n  constructor(headers?: string|{[name: string]: string | string[]}) {\n    if (!headers) {\n      this.headers = new Map<string, string[]>();\n    } else if (typeof headers === 'string') {\n      this.lazyInit = () => {\n        this.headers = new Map<string, string[]>();\n        headers.split('\\n').forEach(line => {\n          const index = line.indexOf(':');\n          if (index > 0) {\n            const name = line.slice(0, index);\n            const key = name.toLowerCase();\n            const value = line.slice(index + 1).trim();\n            this.maybeSetNormalizedName(name, key);\n            if (this.headers.has(key)) {\n              this.headers.get(key) !.push(value);\n            } else {\n              this.headers.set(key, [value]);\n            }\n          }\n        });\n      };\n    } else {\n      this.lazyInit = () => {\n        this.headers = new Map<string, string[]>();\n        Object.keys(headers).forEach(name => {\n          let values: string|string[] = headers[name];\n          const key = name.toLowerCase();\n          if (typeof values === 'string') {\n            values = [values];\n          }\n          if (values.length > 0) {\n            this.headers.set(key, values);\n            this.maybeSetNormalizedName(name, key);\n          }\n        });\n      };\n    }\n  }\n\n  /**\n   * Checks for existence of header by given name.\n   */\n  has(name: string): boolean {\n    this.init();\n\n    return this.headers.has(name.toLowerCase());\n  }\n\n  /**\n   * Returns first header that matches given name.\n   */\n  get(name: string): string|null {\n    this.init();\n\n    const values = this.headers.get(name.toLowerCase());\n    return values && values.length > 0 ? values[0] : null;\n  }\n\n  /**\n   * Returns the names of the headers\n   */\n  keys(): string[] {\n    this.init();\n\n    return Array.from(this.normalizedNames.values());\n  }\n\n  /**\n   * Returns list of header values for a given name.\n   */\n  getAll(name: string): string[]|null {\n    this.init();\n\n    return this.headers.get(name.toLowerCase()) || null;\n  }\n\n  append(name: string, value: string|string[]): HttpHeaders {\n    return this.clone({name, value, op: 'a'});\n  }\n\n  set(name: string, value: string|string[]): HttpHeaders {\n    return this.clone({name, value, op: 's'});\n  }\n\n  delete (name: string, value?: string|string[]): HttpHeaders {\n    return this.clone({name, value, op: 'd'});\n  }\n\n  private maybeSetNormalizedName(name: string, lcName: string): void {\n    if (!this.normalizedNames.has(lcName)) {\n      this.normalizedNames.set(lcName, name);\n    }\n  }\n\n  private init(): void {\n    if (!!this.lazyInit) {\n      if (this.lazyInit instanceof HttpHeaders) {\n        this.copyFrom(this.lazyInit);\n      } else {\n        this.lazyInit();\n      }\n      this.lazyInit = null;\n      if (!!this.lazyUpdate) {\n        this.lazyUpdate.forEach(update => this.applyUpdate(update));\n        this.lazyUpdate = null;\n      }\n    }\n  }\n\n  private copyFrom(other: HttpHeaders) {\n    other.init();\n    Array.from(other.headers.keys()).forEach(key => {\n      this.headers.set(key, other.headers.get(key) !);\n      this.normalizedNames.set(key, other.normalizedNames.get(key) !);\n    });\n  }\n\n  private clone(update: Update): HttpHeaders {\n    const clone = new HttpHeaders();\n    clone.lazyInit =\n        (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n    clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n    return clone;\n  }\n\n  private applyUpdate(update: Update): void {\n    const key = update.name.toLowerCase();\n    switch (update.op) {\n      case 'a':\n      case 's':\n        let value = update.value !;\n        if (typeof value === 'string') {\n          value = [value];\n        }\n        if (value.length === 0) {\n          return;\n        }\n        this.maybeSetNormalizedName(update.name, key);\n        const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n        base.push(...value);\n        this.headers.set(key, base);\n        break;\n      case 'd':\n        const toDelete = update.value as string | undefined;\n        if (!toDelete) {\n          this.headers.delete(key);\n          this.normalizedNames.delete(key);\n        } else {\n          let existing = this.headers.get(key);\n          if (!existing) {\n            return;\n          }\n          existing = existing.filter(value => toDelete.indexOf(value) === -1);\n          if (existing.length === 0) {\n            this.headers.delete(key);\n            this.normalizedNames.delete(key);\n          } else {\n            this.headers.set(key, existing);\n          }\n        }\n        break;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  forEach(fn: (name: string, values: string[]) => void) {\n    this.init();\n    Array.from(this.normalizedNames.keys())\n        .forEach(key => fn(this.normalizedNames.get(key) !, this.headers.get(key) !));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A codec for encoding and decoding parameters in URLs.\n *\n * Used by `HttpParams`.\n *\n *\n **/\nexport interface HttpParameterCodec {\n  encodeKey(key: string): string;\n  encodeValue(value: string): string;\n\n  decodeKey(key: string): string;\n  decodeValue(value: string): string;\n}\n\n/**\n * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n * serialize and parse URL parameter keys and values.\n *\n *\n */\nexport class HttpUrlEncodingCodec implements HttpParameterCodec {\n  encodeKey(k: string): string { return standardEncoding(k); }\n\n  encodeValue(v: string): string { return standardEncoding(v); }\n\n  decodeKey(k: string): string { return decodeURIComponent(k); }\n\n  decodeValue(v: string) { return decodeURIComponent(v); }\n}\n\n\nfunction paramParser(rawParams: string, codec: HttpParameterCodec): Map<string, string[]> {\n  const map = new Map<string, string[]>();\n  if (rawParams.length > 0) {\n    const params: string[] = rawParams.split('&');\n    params.forEach((param: string) => {\n      const eqIdx = param.indexOf('=');\n      const [key, val]: string[] = eqIdx == -1 ?\n          [codec.decodeKey(param), ''] :\n          [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n      const list = map.get(key) || [];\n      list.push(val);\n      map.set(key, list);\n    });\n  }\n  return map;\n}\nfunction standardEncoding(v: string): string {\n  return encodeURIComponent(v)\n      .replace(/%40/gi, '@')\n      .replace(/%3A/gi, ':')\n      .replace(/%24/gi, '$')\n      .replace(/%2C/gi, ',')\n      .replace(/%3B/gi, ';')\n      .replace(/%2B/gi, '+')\n      .replace(/%3D/gi, '=')\n      .replace(/%3F/gi, '?')\n      .replace(/%2F/gi, '/');\n}\n\ninterface Update {\n  param: string;\n  value?: string;\n  op: 'a'|'d'|'s';\n}\n\n/** Options used to construct an `HttpParams` instance. */\nexport interface HttpParamsOptions {\n  /**\n   * String representation of the HTTP params in URL-query-string format. Mutually exclusive with\n   * `fromObject`.\n   */\n  fromString?: string;\n\n  /** Object map of the HTTP params. Mutally exclusive with `fromString`. */\n  fromObject?: {[param: string]: string | string[]};\n\n  /** Encoding codec used to parse and serialize the params. */\n  encoder?: HttpParameterCodec;\n}\n\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable - all mutation operations return a new instance.\n *\n *\n */\nexport class HttpParams {\n  private map: Map<string, string[]>|null;\n  private encoder: HttpParameterCodec;\n  private updates: Update[]|null = null;\n  private cloneFrom: HttpParams|null = null;\n\n  constructor(options: HttpParamsOptions = {} as HttpParamsOptions) {\n    this.encoder = options.encoder || new HttpUrlEncodingCodec();\n    if (!!options.fromString) {\n      if (!!options.fromObject) {\n        throw new Error(`Cannot specify both fromString and fromObject.`);\n      }\n      this.map = paramParser(options.fromString, this.encoder);\n    } else if (!!options.fromObject) {\n      this.map = new Map<string, string[]>();\n      Object.keys(options.fromObject).forEach(key => {\n        const value = (options.fromObject as any)[key];\n        this.map !.set(key, Array.isArray(value) ? value : [value]);\n      });\n    } else {\n      this.map = null;\n    }\n  }\n\n  /**\n   * Check whether the body has one or more values for the given parameter name.\n   */\n  has(param: string): boolean {\n    this.init();\n    return this.map !.has(param);\n  }\n\n  /**\n   * Get the first value for the given parameter name, or `null` if it's not present.\n   */\n  get(param: string): string|null {\n    this.init();\n    const res = this.map !.get(param);\n    return !!res ? res[0] : null;\n  }\n\n  /**\n   * Get all values for the given parameter name, or `null` if it's not present.\n   */\n  getAll(param: string): string[]|null {\n    this.init();\n    return this.map !.get(param) || null;\n  }\n\n  /**\n   * Get all the parameter names for this body.\n   */\n  keys(): string[] {\n    this.init();\n    return Array.from(this.map !.keys());\n  }\n\n  /**\n   * Construct a new body with an appended value for the given parameter name.\n   */\n  append(param: string, value: string): HttpParams { return this.clone({param, value, op: 'a'}); }\n\n  /**\n   * Construct a new body with a new value for the given parameter name.\n   */\n  set(param: string, value: string): HttpParams { return this.clone({param, value, op: 's'}); }\n\n  /**\n   * Construct a new body with either the given value for the given parameter\n   * removed, if a value is given, or all values for the given parameter removed\n   * if not.\n   */\n  delete (param: string, value?: string): HttpParams { return this.clone({param, value, op: 'd'}); }\n\n  /**\n   * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n   * separated by `&`s.\n   */\n  toString(): string {\n    this.init();\n    return this.keys()\n        .map(key => {\n          const eKey = this.encoder.encodeKey(key);\n          return this.map !.get(key) !.map(value => eKey + '=' + this.encoder.encodeValue(value))\n              .join('&');\n        })\n        .join('&');\n  }\n\n  private clone(update: Update): HttpParams {\n    const clone = new HttpParams({ encoder: this.encoder } as HttpParamsOptions);\n    clone.cloneFrom = this.cloneFrom || this;\n    clone.updates = (this.updates || []).concat([update]);\n    return clone;\n  }\n\n  private init() {\n    if (this.map === null) {\n      this.map = new Map<string, string[]>();\n    }\n    if (this.cloneFrom !== null) {\n      this.cloneFrom.init();\n      this.cloneFrom.keys().forEach(key => this.map !.set(key, this.cloneFrom !.map !.get(key) !));\n      this.updates !.forEach(update => {\n        switch (update.op) {\n          case 'a':\n          case 's':\n            const base = (update.op === 'a' ? this.map !.get(update.param) : undefined) || [];\n            base.push(update.value !);\n            this.map !.set(update.param, base);\n            break;\n          case 'd':\n            if (update.value !== undefined) {\n              let base = this.map !.get(update.param) || [];\n              const idx = base.indexOf(update.value);\n              if (idx !== -1) {\n                base.splice(idx, 1);\n              }\n              if (base.length > 0) {\n                this.map !.set(update.param, base);\n              } else {\n                this.map !.delete(update.param);\n              }\n            } else {\n              this.map !.delete(update.param);\n              break;\n            }\n        }\n      });\n      this.cloneFrom = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HttpHeaders} from './headers';\nimport {HttpParams} from './params';\n\n/**\n * Construction interface for `HttpRequest`s.\n *\n * All values are optional and will override default values if provided.\n */\ninterface HttpRequestInit {\n  headers?: HttpHeaders;\n  reportProgress?: boolean;\n  params?: HttpParams;\n  responseType?: 'arraybuffer'|'blob'|'json'|'text';\n  withCredentials?: boolean;\n}\n\n/**\n * Determine whether the given HTTP method may include a body.\n */\nfunction mightHaveBody(method: string): boolean {\n  switch (method) {\n    case 'DELETE':\n    case 'GET':\n    case 'HEAD':\n    case 'OPTIONS':\n    case 'JSONP':\n      return false;\n    default:\n      return true;\n  }\n}\n\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n */\nfunction isArrayBuffer(value: any): value is ArrayBuffer {\n  return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n */\nfunction isBlob(value: any): value is Blob {\n  return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n */\nfunction isFormData(value: any): value is FormData {\n  return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n *\n */\nexport class HttpRequest<T> {\n  /**\n   * The request body, or `null` if one isn't set.\n   *\n   * Bodies are not enforced to be immutable, as they can include a reference to any\n   * user-defined data type. However, interceptors should take care to preserve\n   * idempotence by treating them as such.\n   */\n  readonly body: T|null = null;\n\n  /**\n   * Outgoing headers for this request.\n   */\n  readonly headers: HttpHeaders;\n\n  /**\n   * Whether this request should be made in a way that exposes progress events.\n   *\n   * Progress events are expensive (change detection runs on each event) and so\n   * they should only be requested if the consumer intends to monitor them.\n   */\n  readonly reportProgress: boolean = false;\n\n  /**\n   * Whether this request should be sent with outgoing credentials (cookies).\n   */\n  readonly withCredentials: boolean = false;\n\n  /**\n   * The expected response type of the server.\n   *\n   * This is used to parse the response appropriately before returning it to\n   * the requestee.\n   */\n  readonly responseType: 'arraybuffer'|'blob'|'json'|'text' = 'json';\n\n  /**\n   * The outgoing HTTP request method.\n   */\n  readonly method: string;\n\n  /**\n   * Outgoing URL parameters.\n   */\n  readonly params: HttpParams;\n\n  /**\n   * The outgoing URL with all URL parameters set.\n   */\n  readonly urlWithParams: string;\n\n  constructor(method: 'DELETE'|'GET'|'HEAD'|'JSONP'|'OPTIONS', url: string, init?: {\n    headers?: HttpHeaders,\n    reportProgress?: boolean,\n    params?: HttpParams,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n  });\n  constructor(method: 'POST'|'PUT'|'PATCH', url: string, body: T|null, init?: {\n    headers?: HttpHeaders,\n    reportProgress?: boolean,\n    params?: HttpParams,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n  });\n  constructor(method: string, url: string, body: T|null, init?: {\n    headers?: HttpHeaders,\n    reportProgress?: boolean,\n    params?: HttpParams,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n  });\n  constructor(\n      method: string, readonly url: string, third?: T|{\n        headers?: HttpHeaders,\n        reportProgress?: boolean,\n        params?: HttpParams,\n        responseType?: 'arraybuffer'|'blob'|'json'|'text',\n        withCredentials?: boolean,\n      }|null,\n      fourth?: {\n        headers?: HttpHeaders,\n        reportProgress?: boolean,\n        params?: HttpParams,\n        responseType?: 'arraybuffer'|'blob'|'json'|'text',\n        withCredentials?: boolean,\n      }) {\n    this.method = method.toUpperCase();\n    // Next, need to figure out which argument holds the HttpRequestInit\n    // options, if any.\n    let options: HttpRequestInit|undefined;\n\n    // Check whether a body argument is expected. The only valid way to omit\n    // the body argument is to use a known no-body method like GET.\n    if (mightHaveBody(this.method) || !!fourth) {\n      // Body is the third argument, options are the fourth.\n      this.body = (third !== undefined) ? third as T : null;\n      options = fourth;\n    } else {\n      // No body required, options are the third argument. The body stays null.\n      options = third as HttpRequestInit;\n    }\n\n    // If options have been passed, interpret them.\n    if (options) {\n      // Normalize reportProgress and withCredentials.\n      this.reportProgress = !!options.reportProgress;\n      this.withCredentials = !!options.withCredentials;\n\n      // Override default response type of 'json' if one is provided.\n      if (!!options.responseType) {\n        this.responseType = options.responseType;\n      }\n\n      // Override headers if they're provided.\n      if (!!options.headers) {\n        this.headers = options.headers;\n      }\n\n      if (!!options.params) {\n        this.params = options.params;\n      }\n    }\n\n    // If no headers have been passed in, construct a new HttpHeaders instance.\n    if (!this.headers) {\n      this.headers = new HttpHeaders();\n    }\n\n    // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n    if (!this.params) {\n      this.params = new HttpParams();\n      this.urlWithParams = url;\n    } else {\n      // Encode the parameters to a string in preparation for inclusion in the URL.\n      const params = this.params.toString();\n      if (params.length === 0) {\n        // No parameters, the visible URL is just the URL given at creation time.\n        this.urlWithParams = url;\n      } else {\n        // Does the URL already have query parameters? Look for '?'.\n        const qIdx = url.indexOf('?');\n        // There are 3 cases to handle:\n        // 1) No existing parameters -> append '?' followed by params.\n        // 2) '?' exists and is followed by existing query string ->\n        //    append '&' followed by params.\n        // 3) '?' exists at the end of the url -> append params directly.\n        // This basically amounts to determining the character, if any, with\n        // which to join the URL and parameters.\n        const sep: string = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n        this.urlWithParams = url + sep + params;\n      }\n    }\n  }\n\n  /**\n   * Transform the free-form body into a serialized format suitable for\n   * transmission to the server.\n   */\n  serializeBody(): ArrayBuffer|Blob|FormData|string|null {\n    // If no body is present, no need to serialize it.\n    if (this.body === null) {\n      return null;\n    }\n    // Check whether the body is already in a serialized form. If so,\n    // it can just be returned directly.\n    if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n        typeof this.body === 'string') {\n      return this.body;\n    }\n    // Check whether the body is an instance of HttpUrlEncodedParams.\n    if (this.body instanceof HttpParams) {\n      return this.body.toString();\n    }\n    // Check whether the body is an object or array, and serialize with JSON if so.\n    if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n        Array.isArray(this.body)) {\n      return JSON.stringify(this.body);\n    }\n    // Fall back on toString() for everything else.\n    return (this.body as any).toString();\n  }\n\n  /**\n   * Examine the body and attempt to infer an appropriate MIME type\n   * for it.\n   *\n   * If no such type can be inferred, this method will return `null`.\n   */\n  detectContentTypeHeader(): string|null {\n    // An empty body has no content type.\n    if (this.body === null) {\n      return null;\n    }\n    // FormData bodies rely on the browser's content type assignment.\n    if (isFormData(this.body)) {\n      return null;\n    }\n    // Blobs usually have their own content type. If it doesn't, then\n    // no type can be inferred.\n    if (isBlob(this.body)) {\n      return this.body.type || null;\n    }\n    // Array buffers have unknown contents and thus no type can be inferred.\n    if (isArrayBuffer(this.body)) {\n      return null;\n    }\n    // Technically, strings could be a form of JSON data, but it's safe enough\n    // to assume they're plain strings.\n    if (typeof this.body === 'string') {\n      return 'text/plain';\n    }\n    // `HttpUrlEncodedParams` has its own content-type.\n    if (this.body instanceof HttpParams) {\n      return 'application/x-www-form-urlencoded;charset=UTF-8';\n    }\n    // Arrays, objects, and numbers will be encoded as JSON.\n    if (typeof this.body === 'object' || typeof this.body === 'number' ||\n        Array.isArray(this.body)) {\n      return 'application/json';\n    }\n    // No type could be inferred.\n    return null;\n  }\n\n  clone(): HttpRequest<T>;\n  clone(update: {\n    headers?: HttpHeaders,\n    reportProgress?: boolean,\n    params?: HttpParams,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n    body?: T|null,\n    method?: string,\n    url?: string,\n    setHeaders?: {[name: string]: string | string[]},\n    setParams?: {[param: string]: string},\n  }): HttpRequest<T>;\n  clone<V>(update: {\n    headers?: HttpHeaders,\n    reportProgress?: boolean,\n    params?: HttpParams,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n    body?: V|null,\n    method?: string,\n    url?: string,\n    setHeaders?: {[name: string]: string | string[]},\n    setParams?: {[param: string]: string},\n  }): HttpRequest<V>;\n  clone(update: {\n    headers?: HttpHeaders,\n    reportProgress?: boolean,\n    params?: HttpParams,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n    body?: any|null,\n    method?: string,\n    url?: string,\n    setHeaders?: {[name: string]: string | string[]},\n    setParams?: {[param: string]: string};\n  } = {}): HttpRequest<any> {\n    // For method, url, and responseType, take the current value unless\n    // it is overridden in the update hash.\n    const method = update.method || this.method;\n    const url = update.url || this.url;\n    const responseType = update.responseType || this.responseType;\n\n    // The body is somewhat special - a `null` value in update.body means\n    // whatever current body is present is being overridden with an empty\n    // body, whereas an `undefined` value in update.body implies no\n    // override.\n    const body = (update.body !== undefined) ? update.body : this.body;\n\n    // Carefully handle the boolean options to differentiate between\n    // `false` and `undefined` in the update args.\n    const withCredentials =\n        (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n    const reportProgress =\n        (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n\n    // Headers and params may be appended to if `setHeaders` or\n    // `setParams` are used.\n    let headers = update.headers || this.headers;\n    let params = update.params || this.params;\n\n    // Check whether the caller has asked to add headers.\n    if (update.setHeaders !== undefined) {\n      // Set every requested header.\n      headers =\n          Object.keys(update.setHeaders)\n              .reduce((headers, name) => headers.set(name, update.setHeaders ![name]), headers);\n    }\n\n    // Check whether the caller has asked to set params.\n    if (update.setParams) {\n      // Set every requested param.\n      params = Object.keys(update.setParams)\n                   .reduce((params, param) => params.set(param, update.setParams ![param]), params);\n    }\n\n    // Finally, construct the new HttpRequest using the pieces from above.\n    return new HttpRequest(\n        method, url, body, {\n                               params, headers, reportProgress, responseType, withCredentials,\n                           });\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {HttpHeaders} from './headers';\n\n/**\n * Type enumeration for the different kinds of `HttpEvent`.\n *\n *\n */\nexport enum HttpEventType {\n  /**\n   * The request was sent out over the wire.\n   */\n  Sent,\n\n  /**\n   * An upload progress event was received.\n   */\n  UploadProgress,\n\n  /**\n   * The response status code and headers were received.\n   */\n  ResponseHeader,\n\n  /**\n   * A download progress event was received.\n   */\n  DownloadProgress,\n\n  /**\n   * The full response including the body was received.\n   */\n  Response,\n\n  /**\n   * A custom event from an interceptor or a backend.\n   */\n  User,\n}\n\n/**\n * Base interface for progress events.\n *\n *\n */\nexport interface HttpProgressEvent {\n  /**\n   * Progress event type is either upload or download.\n   */\n  type: HttpEventType.DownloadProgress|HttpEventType.UploadProgress;\n\n  /**\n   * Number of bytes uploaded or downloaded.\n   */\n  loaded: number;\n\n  /**\n   * Total number of bytes to upload or download. Depending on the request or\n   * response, this may not be computable and thus may not be present.\n   */\n  total?: number;\n}\n\n/**\n * A download progress event.\n *\n *\n */\nexport interface HttpDownloadProgressEvent extends HttpProgressEvent {\n  type: HttpEventType.DownloadProgress;\n\n  /**\n   * The partial response body as downloaded so far.\n   *\n   * Only present if the responseType was `text`.\n   */\n  partialText?: string;\n}\n\n/**\n * An upload progress event.\n *\n *\n */\nexport interface HttpUploadProgressEvent extends HttpProgressEvent {\n  type: HttpEventType.UploadProgress;\n}\n\n/**\n * An event indicating that the request was sent to the server. Useful\n * when a request may be retried multiple times, to distinguish between\n * retries on the final event stream.\n *\n *\n */\nexport interface HttpSentEvent { type: HttpEventType.Sent; }\n\n/**\n * A user-defined event.\n *\n * Grouping all custom events under this type ensures they will be handled\n * and forwarded by all implementations of interceptors.\n *\n *\n */\nexport interface HttpUserEvent<T> { type: HttpEventType.User; }\n\n/**\n * An error that represents a failed attempt to JSON.parse text coming back\n * from the server.\n *\n * It bundles the Error object with the actual response body that failed to parse.\n *\n *\n */\nexport interface HttpJsonParseError {\n  error: Error;\n  text: string;\n}\n\n/**\n * Union type for all possible events on the response stream.\n *\n * Typed according to the expected type of the response.\n *\n *\n */\nexport type HttpEvent<T> =\n    HttpSentEvent | HttpHeaderResponse | HttpResponse<T>| HttpProgressEvent | HttpUserEvent<T>;\n\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n *\n */\nexport abstract class HttpResponseBase {\n  /**\n   * All response headers.\n   */\n  readonly headers: HttpHeaders;\n\n  /**\n   * Response status code.\n   */\n  readonly status: number;\n\n  /**\n   * Textual description of response status code.\n   *\n   * Do not depend on this.\n   */\n  readonly statusText: string;\n\n  /**\n   * URL of the resource retrieved, or null if not available.\n   */\n  readonly url: string|null;\n\n  /**\n   * Whether the status code falls in the 2xx range.\n   */\n  readonly ok: boolean;\n\n  /**\n   * Type of the response, narrowed to either the full response or the header.\n   */\n  readonly type: HttpEventType.Response|HttpEventType.ResponseHeader;\n\n  /**\n   * Super-constructor for all responses.\n   *\n   * The single parameter accepted is an initialization hash. Any properties\n   * of the response passed there will override the default values.\n   */\n  constructor(\n      init: {\n        headers?: HttpHeaders,\n        status?: number,\n        statusText?: string,\n        url?: string,\n      },\n      defaultStatus: number = 200, defaultStatusText: string = 'OK') {\n    // If the hash has values passed, use them to initialize the response.\n    // Otherwise use the default values.\n    this.headers = init.headers || new HttpHeaders();\n    this.status = init.status !== undefined ? init.status : defaultStatus;\n    this.statusText = init.statusText || defaultStatusText;\n    this.url = init.url || null;\n\n    // Cache the ok value to avoid defining a getter.\n    this.ok = this.status >= 200 && this.status < 300;\n  }\n}\n\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n *\n */\nexport class HttpHeaderResponse extends HttpResponseBase {\n  /**\n   * Create a new `HttpHeaderResponse` with the given parameters.\n   */\n  constructor(init: {\n    headers?: HttpHeaders,\n    status?: number,\n    statusText?: string,\n    url?: string,\n  } = {}) {\n    super(init);\n  }\n\n  readonly type: HttpEventType.ResponseHeader = HttpEventType.ResponseHeader;\n\n  /**\n   * Copy this `HttpHeaderResponse`, overriding its contents with the\n   * given parameter hash.\n   */\n  clone(update: {headers?: HttpHeaders; status?: number; statusText?: string; url?: string;} = {}):\n      HttpHeaderResponse {\n    // Perform a straightforward initialization of the new HttpHeaderResponse,\n    // overriding the current parameters with new ones if given.\n    return new HttpHeaderResponse({\n      headers: update.headers || this.headers,\n      status: update.status !== undefined ? update.status : this.status,\n      statusText: update.statusText || this.statusText,\n      url: update.url || this.url || undefined,\n    });\n  }\n}\n\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n *\n */\nexport class HttpResponse<T> extends HttpResponseBase {\n  /**\n   * The response body, or `null` if one was not returned.\n   */\n  readonly body: T|null;\n\n  /**\n   * Construct a new `HttpResponse`.\n   */\n  constructor(init: {\n    body?: T | null, headers?: HttpHeaders; status?: number; statusText?: string; url?: string;\n  } = {}) {\n    super(init);\n    this.body = init.body !== undefined ? init.body : null;\n  }\n\n  readonly type: HttpEventType.Response = HttpEventType.Response;\n\n  clone(): HttpResponse<T>;\n  clone(update: {headers?: HttpHeaders; status?: number; statusText?: string; url?: string;}):\n      HttpResponse<T>;\n  clone<V>(update: {\n    body?: V | null, headers?: HttpHeaders; status?: number; statusText?: string; url?: string;\n  }): HttpResponse<V>;\n  clone(update: {\n    body?: any | null; headers?: HttpHeaders; status?: number; statusText?: string; url?: string;\n  } = {}): HttpResponse<any> {\n    return new HttpResponse<any>({\n      body: (update.body !== undefined) ? update.body : this.body,\n      headers: update.headers || this.headers,\n      status: (update.status !== undefined) ? update.status : this.status,\n      statusText: update.statusText || this.statusText,\n      url: update.url || this.url || undefined,\n    });\n  }\n}\n\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n *\n */\nexport class HttpErrorResponse extends HttpResponseBase implements Error {\n  readonly name = 'HttpErrorResponse';\n  readonly message: string;\n  readonly error: any|null;\n\n  /**\n   * Errors are never okay, even when the status code is in the 2xx success range.\n   */\n  readonly ok = false;\n\n  constructor(init: {\n    error?: any; headers?: HttpHeaders; status?: number; statusText?: string; url?: string;\n  }) {\n    // Initialize with a default status of 0 / Unknown Error.\n    super(init, 0, 'Unknown Error');\n\n    // If the response was successful, then this was a parse error. Otherwise, it was\n    // a protocol-level failure of some sort. Either the request failed in transit\n    // or the server returned an unsuccessful status code.\n    if (this.status >= 200 && this.status < 300) {\n      this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n    } else {\n      this.message =\n          `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n    }\n    this.error = init.error || null;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Observable, of } from 'rxjs';\nimport {concatMap, filter, map} from 'rxjs/operators';\n\nimport {HttpHandler} from './backend';\nimport {HttpHeaders} from './headers';\nimport {HttpParams, HttpParamsOptions} from './params';\nimport {HttpRequest} from './request';\nimport {HttpEvent, HttpResponse} from './response';\n\n\n/**\n * Construct an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. Basically, this clones the object and adds the body.\n */\nfunction addBody<T>(\n    options: {\n      headers?: HttpHeaders | {[header: string]: string | string[]},\n      observe?: HttpObserve,\n      params?: HttpParams | {[param: string]: string | string[]},\n      reportProgress?: boolean,\n      responseType?: 'arraybuffer' | 'blob' | 'json' | 'text',\n      withCredentials?: boolean,\n    },\n    body: T | null): any {\n  return {\n    body,\n    headers: options.headers,\n    observe: options.observe,\n    params: options.params,\n    reportProgress: options.reportProgress,\n    responseType: options.responseType,\n    withCredentials: options.withCredentials,\n  };\n}\n\nexport type HttpObserve = 'body' | 'events' | 'response';\n\n/**\n * Perform HTTP requests.\n *\n * `HttpClient` is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies according to which\n * signature is called (mainly the values of `observe` and `responseType`).\n *\n *\n */\n@Injectable()\nexport class HttpClient {\n  constructor(private handler: HttpHandler) {}\n\n  /**\n   * Send the given `HttpRequest` and return a stream of `HttpEvents`.\n   */\n  request<R>(req: HttpRequest<any>): Observable<HttpEvent<R>>;\n\n  /**\n   * Construct a request which interprets the body as an `ArrayBuffer` and returns it.\n   *\n   * @return an `Observable` of the body as an `ArrayBuffer`.\n   */\n  request(method: string, url: string, options: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<ArrayBuffer>;\n\n  /**\n   * Construct a request which interprets the body as a `Blob` and returns it.\n   *\n   * @return an `Observable` of the body as a `Blob`.\n   */\n  request(method: string, url: string, options: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<Blob>;\n\n  /**\n   * Construct a request which interprets the body as text and returns it.\n   *\n   * @return an `Observable` of the body as a `string`.\n   */\n  request(method: string, url: string, options: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<string>;\n\n  /**\n   * Construct a request which interprets the body as an `ArrayBuffer` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `ArrayBuffer`.\n   */\n  request(method: string, url: string, options: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    params?: HttpParams|{[param: string]: string | string[]},\n    observe: 'events', reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpEvent<ArrayBuffer>>;\n\n  /**\n   * Construct a request which interprets the body as an `Blob` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Blob`.\n   */\n  request(method: string, url: string, options: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpEvent<Blob>>;\n\n  /**\n   * Construct a request which interprets the body as text and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `string`.\n   */\n  request(method: string, url: string, options: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpEvent<string>>;\n\n  /**\n   * Construct a request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Object`.\n   */\n  request(method: string, url: string, options: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    reportProgress?: boolean,\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpEvent<any>>;\n\n  /**\n   * Construct a request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `R`.\n   */\n  request<R>(method: string, url: string, options: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    reportProgress?: boolean,\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpEvent<R>>;\n\n  /**\n   * Construct a request which interprets the body as an `ArrayBuffer` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `ArrayBuffer`.\n   */\n  request(method: string, url: string, options: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpResponse<ArrayBuffer>>;\n\n  /**\n   * Construct a request which interprets the body as a `Blob` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Blob`.\n   */\n  request(method: string, url: string, options: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpResponse<Blob>>;\n\n  /**\n   * Construct a request which interprets the body as text and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `string`.\n   */\n  request(method: string, url: string, options: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpResponse<string>>;\n\n  /**\n   * Construct a request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Object`.\n   */\n  request(method: string, url: string, options: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    reportProgress?: boolean,\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<Object>>;\n\n  /**\n   * Construct a request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `R`.\n   */\n  request<R>(method: string, url: string, options: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    reportProgress?: boolean,\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<R>>;\n\n  /**\n   * Construct a request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Object`.\n   */\n  request(method: string, url: string, options?: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    responseType?: 'json',\n    reportProgress?: boolean,\n    withCredentials?: boolean,\n  }): Observable<Object>;\n\n  /**\n   * Construct a request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `R`.\n   */\n  request<R>(method: string, url: string, options?: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    responseType?: 'json',\n    reportProgress?: boolean,\n    withCredentials?: boolean,\n  }): Observable<R>;\n\n  /**\n   * Construct a request in a manner where response type and requested `Observable` are not known\n   * statically.\n   *\n   * @return an `Observable` of whatever was requested, typed to `any`.\n   */\n  request(method: string, url: string, options?: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    params?: HttpParams|{[param: string]: string | string[]},\n    observe?: HttpObserve,\n    reportProgress?: boolean,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n  }): Observable<any>;\n\n  /**\n   * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n   * fires the request through the chain of registered interceptors and on to the\n   * server.\n   *\n   * This method can be called in one of two ways. Either an `HttpRequest`\n   * instance can be passed directly as the only parameter, or a method can be\n   * passed as the first parameter, a string URL as the second, and an\n   * options hash as the third.\n   *\n   * If a `HttpRequest` object is passed directly, an `Observable` of the\n   * raw `HttpEvent` stream will be returned.\n   *\n   * If a request is instead built by providing a URL, the options object\n   * determines the return type of `request()`. In addition to configuring\n   * request parameters such as the outgoing headers and/or the body, the options\n   * hash specifies two key pieces of information about the request: the\n   * `responseType` and what to `observe`.\n   *\n   * The `responseType` value determines how a successful response body will be\n   * parsed. If `responseType` is the default `json`, a type interface for the\n   * resulting object may be passed as a type parameter to `request()`.\n   *\n   * The `observe` value determines the return type of `request()`, based on what\n   * the consumer is interested in observing. A value of `events` will return an\n   * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n   * including progress events by default. A value of `response` will return an\n   * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n   * depends on the `responseType` and any optionally provided type parameter.\n   * A value of `body` will return an `Observable<T>` with the same `T` body type.\n   */\n  request(first: string|HttpRequest<any>, url?: string, options: {\n    body?: any,\n    headers?: HttpHeaders|{[header: string]: string | string[]},\n    observe?: HttpObserve,\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n  } = {}): Observable<any> {\n    let req: HttpRequest<any>;\n    // Firstly, check whether the primary argument is an instance of `HttpRequest`.\n    if (first instanceof HttpRequest) {\n      // It is. The other arguments must be undefined (per the signatures) and can be\n      // ignored.\n      req = first as HttpRequest<any>;\n    } else {\n      // It's a string, so it represents a URL. Construct a request based on it,\n      // and incorporate the remaining arguments (assuming GET unless a method is\n      // provided.\n\n      // Figure out the headers.\n      let headers: HttpHeaders|undefined = undefined;\n      if (options.headers instanceof HttpHeaders) {\n        headers = options.headers;\n      } else {\n        headers = new HttpHeaders(options.headers);\n      }\n\n      // Sort out parameters.\n      let params: HttpParams|undefined = undefined;\n      if (!!options.params) {\n        if (options.params instanceof HttpParams) {\n          params = options.params;\n        } else {\n          params = new HttpParams({ fromObject: options.params } as HttpParamsOptions);\n        }\n      }\n\n      // Construct the request.\n      req = new HttpRequest(first, url !, (options.body !== undefined ? options.body : null), {\n        headers,\n        params,\n        reportProgress: options.reportProgress,\n        // By default, JSON is assumed to be returned for all calls.\n        responseType: options.responseType || 'json',\n        withCredentials: options.withCredentials,\n      });\n    }\n\n    // Start with an Observable.of() the initial request, and run the handler (which\n    // includes all interceptors) inside a concatMap(). This way, the handler runs\n    // inside an Observable chain, which causes interceptors to be re-run on every\n    // subscription (this also makes retries re-run the handler, including interceptors).\n    const events$: Observable<HttpEvent<any>> =\n        of (req).pipe(concatMap((req: HttpRequest<any>) => this.handler.handle(req)));\n\n    // If coming via the API signature which accepts a previously constructed HttpRequest,\n    // the only option is to get the event stream. Otherwise, return the event stream if\n    // that is what was requested.\n    if (first instanceof HttpRequest || options.observe === 'events') {\n      return events$;\n    }\n\n    // The requested stream contains either the full response or the body. In either\n    // case, the first step is to filter the event stream to extract a stream of\n    // responses(s).\n    const res$: Observable<HttpResponse<any>> = <Observable<HttpResponse<any>>>events$.pipe(\n        filter((event: HttpEvent<any>) => event instanceof HttpResponse));\n\n    // Decide which stream to return.\n    switch (options.observe || 'body') {\n      case 'body':\n        // The requested stream is the body. Map the response stream to the response\n        // body. This could be done more simply, but a misbehaving interceptor might\n        // transform the response body into a different format and ignore the requested\n        // responseType. Guard against this by validating that the response is of the\n        // requested type.\n        switch (req.responseType) {\n          case 'arraybuffer':\n            return res$.pipe(map((res: HttpResponse<any>) => {\n              // Validate that the body is an ArrayBuffer.\n              if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                throw new Error('Response is not an ArrayBuffer.');\n              }\n              return res.body;\n            }));\n          case 'blob':\n            return res$.pipe(map((res: HttpResponse<any>) => {\n              // Validate that the body is a Blob.\n              if (res.body !== null && !(res.body instanceof Blob)) {\n                throw new Error('Response is not a Blob.');\n              }\n              return res.body;\n            }));\n          case 'text':\n            return res$.pipe(map((res: HttpResponse<any>) => {\n              // Validate that the body is a string.\n              if (res.body !== null && typeof res.body !== 'string') {\n                throw new Error('Response is not a string.');\n              }\n              return res.body;\n            }));\n          case 'json':\n          default:\n            // No validation needed for JSON responses, as they can be of any type.\n            return res$.pipe(map((res: HttpResponse<any>) => res.body));\n        }\n      case 'response':\n        // The response stream was requested directly, so return it.\n        return res$;\n      default:\n        // Guard against new future observe types being added.\n        throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);\n    }\n  }\n\n  /**\n   * Construct a DELETE request which interprets the body as an `ArrayBuffer` and returns it.\n   *\n   * @return an `Observable` of the body as an `ArrayBuffer`.\n   */\n  delete (url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<ArrayBuffer>;\n\n\n  /**\n   * Construct a DELETE request which interprets the body as a `Blob` and returns it.\n   *\n   * @return an `Observable` of the body as a `Blob`.\n   */\n  delete (url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<Blob>;\n\n  /**\n   * Construct a DELETE request which interprets the body as text and returns it.\n   *\n   * @return an `Observable` of the body as a `string`.\n   */\n  delete (url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<string>;\n\n  /**\n   * Construct a DELETE request which interprets the body as an `ArrayBuffer` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `ArrayBuffer`.\n   */\n  delete (url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpEvent<ArrayBuffer>>;\n\n  /**\n   * Construct a DELETE request which interprets the body as a `Blob` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Blob`.\n   */\n  delete (url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpEvent<Blob>>;\n\n  /**\n   * Construct a DELETE request which interprets the body as text and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `string`.\n   */\n  delete (url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpEvent<string>>;\n\n  /**\n   * Construct a DELETE request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Object`.\n   */\n  delete (url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpEvent<Object>>;\n\n  /**\n   * Construct a DELETE request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `T`.\n   */\n  delete<T>(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpEvent<T>>;\n\n  /**\n   * Construct a DELETE request which interprets the body as an `ArrayBuffer` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `ArrayBuffer`.\n   */\n  delete (url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpResponse<ArrayBuffer>>;\n\n  /**\n   * Construct a DELETE request which interprets the body as a `Blob` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Blob`.\n   */\n  delete (url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpResponse<Blob>>;\n\n  /**\n   * Construct a DELETE request which interprets the body as text and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `string`.\n   */\n  delete (url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpResponse<string>>;\n\n  /**\n   * Construct a DELETE request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Object`.\n   */\n  delete (url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<Object>>;\n\n  /**\n   * Construct a DELETE request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `T`.\n   */\n  delete<T>(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<T>>;\n\n  /**\n   * Construct a DELETE request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the body as an `Object`.\n   */\n  delete (url: string, options?: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<Object>;\n\n  /**\n   * Construct a DELETE request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the body as type `T`.\n   */\n  delete<T>(url: string, options?: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<T>;\n\n  /**\n   * Constructs an `Observable` which, when subscribed, will cause the configured\n   * DELETE request to be executed on the server. See the individual overloads for\n   * details of `delete()`'s return type based on the provided options.\n   */\n  delete (url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: HttpObserve,\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n  } = {}): Observable<any> {\n    return this.request<any>('DELETE', url, options as any);\n  }\n\n\n  /**\n   * Construct a GET request which interprets the body as an `ArrayBuffer` and returns it.\n   *\n   * @return an `Observable` of the body as an `ArrayBuffer`.\n   */\n  get(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<ArrayBuffer>;\n\n  /**\n   * Construct a GET request which interprets the body as a `Blob` and returns it.\n   *\n   * @return an `Observable` of the body as a `Blob`.\n   */\n  get(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<Blob>;\n\n  /**\n   * Construct a GET request which interprets the body as text and returns it.\n   *\n   * @return an `Observable` of the body as a `string`.\n   */\n  get(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<string>;\n\n  /**\n   * Construct a GET request which interprets the body as an `ArrayBuffer` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `ArrayBuffer`.\n   */\n  get(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpEvent<ArrayBuffer>>;\n\n  /**\n   * Construct a GET request which interprets the body as a `Blob` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Blob`.\n   */\n  get(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpEvent<Blob>>;\n\n  /**\n   * Construct a GET request which interprets the body as text and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `string`.\n   */\n  get(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpEvent<string>>;\n\n  /**\n   * Construct a GET request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Object`.\n   */\n  get(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpEvent<Object>>;\n\n  /**\n   * Construct a GET request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `T`.\n   */\n  get<T>(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpEvent<T>>;\n\n  /**\n   * Construct a GET request which interprets the body as an `ArrayBuffer` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `ArrayBuffer`.\n   */\n  get(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpResponse<ArrayBuffer>>;\n\n  /**\n   * Construct a GET request which interprets the body as a `Blob` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Blob`.\n   */\n  get(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpResponse<Blob>>;\n\n  /**\n   * Construct a GET request which interprets the body as text and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `string`.\n   */\n  get(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpResponse<string>>;\n\n  /**\n   * Construct a GET request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Object`.\n   */\n  get(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<Object>>;\n\n  /**\n   * Construct a GET request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `T`.\n   */\n  get<T>(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<T>>;\n\n  /**\n   * Construct a GET request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the body as an `Object`.\n   */\n  get(url: string, options?: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<Object>;\n\n  /**\n   * Construct a GET request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the body as type `T`.\n   */\n  get<T>(url: string, options?: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<T>;\n\n  /**\n   * Constructs an `Observable` which, when subscribed, will cause the configured\n   * GET request to be executed on the server. See the individual overloads for\n   * details of `get()`'s return type based on the provided options.\n   */\n  get(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: HttpObserve,\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n  } = {}): Observable<any> {\n    return this.request<any>('GET', url, options as any);\n  }\n\n\n  /**\n   * Construct a HEAD request which interprets the body as an `ArrayBuffer` and returns it.\n   *\n   * @return an `Observable` of the body as an `ArrayBuffer`.\n   */\n  head(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n\n    /**\n   * Construct a HEAD request which interprets the body as a `Blob` and returns it.\n   *\n   * @return an `Observable` of the body as a `Blob`.\n   */\n  }): Observable<ArrayBuffer>;\n  head(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<Blob>;\n\n  /**\n   * Construct a HEAD request which interprets the body as text and returns it.\n   *\n   * @return an `Observable` of the body as a `string`.\n   */\n  head(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<string>;\n\n  /**\n   * Construct a GET request which interprets the body as an `ArrayBuffer` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `ArrayBuffer`.\n   */\n  head(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpEvent<ArrayBuffer>>;\n\n  /**\n   * Construct a HEAD request which interprets the body as a `Blob` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Blob`.\n   */\n  head(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpEvent<Blob>>;\n\n  /**\n   * Construct a HEAD request which interprets the body as text and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `string`.\n   */\n  head(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpEvent<string>>;\n\n  /**\n   * Construct a HEAD request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Object`.\n   */\n  head(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpEvent<Object>>;\n\n  /**\n   * Construct a HEAD request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `T`.\n   */\n  head<T>(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpEvent<T>>;\n\n  /**\n   * Construct a HEAD request which interprets the body as an `ArrayBuffer` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `ArrayBuffer`.\n   */\n  head(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpResponse<ArrayBuffer>>;\n\n  /**\n   * Construct a HEAD request which interprets the body as a `Blob` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Blob`.\n   */\n  head(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpResponse<Blob>>;\n\n  /**\n   * Construct a HEAD request which interprets the body as text and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `string`.\n   */\n  head(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpResponse<string>>;\n\n  /**\n   * Construct a HEAD request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Object`.\n   */\n  head(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<Object>>;\n\n  /**\n   * Construct a HEAD request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `T`.\n   */\n  head<T>(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<T>>;\n\n  /**\n   * Construct a HEAD request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the body as an `Object`.\n   */\n  head(url: string, options?: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<Object>;\n\n  /**\n   * Construct a HEAD request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the body as type `T`.\n   */\n  head<T>(url: string, options?: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<T>;\n\n  /**\n   * Constructs an `Observable` which, when subscribed, will cause the configured\n   * HEAD request to be executed on the server. See the individual overloads for\n   * details of `head()`'s return type based on the provided options.\n   */\n  head(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: HttpObserve,\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n  } = {}): Observable<any> {\n    return this.request<any>('HEAD', url, options as any);\n  }\n\n  /**\n   * Construct a JSONP request for the given URL and name of the callback parameter.\n   *\n   * @return an `Observable` of the response object as an `Object`\n   */\n  jsonp(url: string, callbackParam: string): Observable<Object>;\n\n  /**\n   * Construct a JSONP request for the given URL and name of the callback parameter.\n   *\n   * @return an `Observable` of the response object as type `T`.\n   */\n  jsonp<T>(url: string, callbackParam: string): Observable<T>;\n\n  /**\n   * Constructs an `Observable` which, when subscribed, will cause a request\n   * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n   *\n   * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n   * If no such interceptor is reached, then the `JSONP` request will likely be\n   * rejected by the configured backend.\n   */\n  jsonp<T>(url: string, callbackParam: string): Observable<T> {\n    return this.request<any>('JSONP', url, {\n      params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n      observe: 'body',\n      responseType: 'json',\n    });\n  }\n\n  /**\n   * Make an OPTIONS request which interprets the body as an `ArrayBuffer` and returns it.\n   *\n   * @return an `Observable` of the body as an `ArrayBuffer`.\n   */\n  options(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<ArrayBuffer>;\n\n  /**\n   * Construct an OPTIONS request which interprets the body as a `Blob` and returns it.\n   *\n   * @return an `Observable` of the body as a `Blob`.\n   */\n  options(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<Blob>;\n\n  /**\n   * Construct a OPTIONS request which interprets the body as text and returns it.\n   *\n   * @return an `Observable` of the body as a `string`.\n   */\n  options(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<string>;\n\n  /**\n   * Construct an OPTIONS request which interprets the body as an `ArrayBuffer` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `ArrayBuffer`.\n   */\n  options(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpEvent<ArrayBuffer>>;\n\n  /**\n   * Construct an OPTIONS request which interprets the body as a `Blob` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Blob`.\n   */\n  options(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpEvent<Blob>>;\n\n  /**\n   * Construct an OPTIONS request which interprets the body as text and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `string`.\n   */\n  options(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpEvent<string>>;\n\n  /**\n   * Construct an OPTIONS request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Object`.\n   */\n  options(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpEvent<Object>>;\n\n  /**\n   * Construct an OPTIONS request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `T`.\n   */\n  options<T>(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpEvent<T>>;\n\n  /**\n   * Construct an OPTIONS request which interprets the body as an `ArrayBuffer` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `ArrayBuffer`.\n   */\n  options(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpResponse<ArrayBuffer>>;\n\n  /**\n   * Construct an OPTIONS request which interprets the body as a `Blob` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Blob`.\n   */\n  options(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpResponse<Blob>>;\n\n  /**\n   * Construct an OPTIONS request which interprets the body as text and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `string`.\n   */\n  options(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpResponse<string>>;\n\n  /**\n   * Construct an OPTIONS request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Object`.\n   */\n  options(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<Object>>;\n\n  /**\n   * Construct an OPTIONS request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `T`.\n   */\n  options<T>(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<T>>;\n\n  /**\n   * Construct an OPTIONS request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the body as an `Object`.\n   */\n  options(url: string, options?: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<Object>;\n\n  /**\n   * Construct an OPTIONS request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the body as type `T`.\n   */\n  options<T>(url: string, options?: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<T>;\n\n  /**\n   * Constructs an `Observable` which, when subscribed, will cause the configured\n   * OPTIONS request to be executed on the server. See the individual overloads for\n   * details of `options()`'s return type based on the provided options.\n   */\n  options(url: string, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: HttpObserve,\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n  } = {}): Observable<any> {\n    return this.request<any>('OPTIONS', url, options as any);\n  }\n\n  /**\n   * Construct a PATCH request which interprets the body as an `ArrayBuffer` and returns it.\n   *\n   * @return an `Observable` of the body as an `ArrayBuffer`.\n   */\n  patch(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<ArrayBuffer>;\n\n  /**\n   * Construct a PATCH request which interprets the body as a `Blob` and returns it.\n   *\n   * @return an `Observable` of the body as a `Blob`.\n   */\n  patch(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<Blob>;\n\n  /**\n   * Construct a PATCH request which interprets the body as text and returns it.\n   *\n   * @return an `Observable` of the body as a `string`.\n   */\n  patch(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<string>;\n\n  /**\n   * Construct a PATCH request which interprets the body as an `ArrayBuffer` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `ArrayBuffer`.\n   */\n  patch(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpEvent<ArrayBuffer>>;\n\n  /**\n   * Construct a PATCH request which interprets the body as a `Blob` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Blob`.\n   */\n  patch(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpEvent<Blob>>;\n\n  /**\n   * Construct a PATCH request which interprets the body as text and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `string`.\n   */\n  patch(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpEvent<string>>;\n\n  /**\n   * Construct a PATCH request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Object`.\n   */\n  patch(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpEvent<Object>>;\n\n  /**\n   * Construct a PATCH request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `T`.\n   */\n  patch<T>(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpEvent<T>>;\n\n  /**\n   * Construct a PATCH request which interprets the body as an `ArrayBuffer` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `ArrayBuffer`.\n   */\n  patch(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpResponse<ArrayBuffer>>;\n\n  /**\n   * Construct a PATCH request which interprets the body as a `Blob` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Blob`.\n   */\n  patch(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpResponse<Blob>>;\n\n  /**\n   * Construct a PATCH request which interprets the body as text and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `string`.\n   */\n  patch(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpResponse<string>>;\n\n  /**\n   * Construct a PATCH request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Object`.\n   */\n  patch(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<Object>>;\n\n  /**\n   * Construct a PATCH request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `T`.\n   */\n  patch<T>(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<T>>;\n\n  /**\n   * Construct a PATCH request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the body as an `Object`.\n   */\n  patch(url: string, body: any|null, options?: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<Object>;\n\n  /**\n   * Construct a PATCH request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the body as type `T`.\n   */\n  patch<T>(url: string, body: any|null, options?: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<T>;\n\n  /**\n   * Constructs an `Observable` which, when subscribed, will cause the configured\n   * PATCH request to be executed on the server. See the individual overloads for\n   * details of `patch()`'s return type based on the provided options.\n   */\n  patch(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: HttpObserve,\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n  } = {}): Observable<any> {\n    return this.request<any>('PATCH', url, addBody(options, body));\n  }\n\n  /**\n   * Construct a POST request which interprets the body as an `ArrayBuffer` and returns it.\n   *\n   * @return an `Observable` of the body as an `ArrayBuffer`.\n   */\n  post(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<ArrayBuffer>;\n\n  /**\n   * Construct a POST request which interprets the body as a `Blob` and returns it.\n   *\n   * @return an `Observable` of the body as a `Blob`.\n   */\n  post(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<Blob>;\n\n  /**\n   * Construct a POST request which interprets the body as text and returns it.\n   *\n   * @return an `Observable` of the body as a `string`.\n   */\n  post(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<string>;\n\n  /**\n   * Construct a PATCH request which interprets the body as an `ArrayBuffer` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `ArrayBuffer`.\n   */\n  post(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpEvent<ArrayBuffer>>;\n\n  /**\n   * Construct a POST request which interprets the body as a `Blob` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Blob`.\n   */\n  post(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpEvent<Blob>>;\n\n  /**\n   * Construct a POST request which interprets the body as text and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `string`.\n   */\n  post(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpEvent<string>>;\n\n  /**\n   * Construct a POST request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Object`.\n   */\n  post(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpEvent<Object>>;\n\n  /**\n   * Construct a POST request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `T`.\n   */\n  post<T>(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpEvent<T>>;\n\n  /**\n   * Construct a POST request which interprets the body as an `ArrayBuffer` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `ArrayBuffer`.\n   */\n  post(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpResponse<ArrayBuffer>>;\n\n  /**\n   * Construct a POST request which interprets the body as a `Blob` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Blob`.\n   */\n  post(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpResponse<Blob>>;\n\n  /**\n   * Construct a POST request which interprets the body as text and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `string`.\n   */\n  post(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpResponse<string>>;\n\n  /**\n   * Construct a POST request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Object`.\n   */\n  post(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<Object>>;\n\n  /**\n   * Construct a POST request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `T`.\n   */\n  post<T>(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<T>>;\n\n  /**\n   * Construct a POST request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the body as an `Object`.\n   */\n  post(url: string, body: any|null, options?: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<Object>;\n\n  /**\n   * Construct a POST request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the body as type `T`.\n   */\n  post<T>(url: string, body: any|null, options?: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<T>;\n\n  /**\n   * Constructs an `Observable` which, when subscribed, will cause the configured\n   * POST request to be executed on the server. See the individual overloads for\n   * details of `post()`'s return type based on the provided options.\n   */\n  post(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: HttpObserve,\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n  } = {}): Observable<any> {\n    return this.request<any>('POST', url, addBody(options, body));\n  }\n\n  /**\n   * Construct a PUT request which interprets the body as an `ArrayBuffer` and returns it.\n   *\n   * @return an `Observable` of the body as an `ArrayBuffer`.\n   */\n  put(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<ArrayBuffer>;\n\n  /**\n   * Construct a PUT request which interprets the body as a `Blob` and returns it.\n   *\n   * @return an `Observable` of the body as a `Blob`.\n   */\n  put(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<Blob>;\n\n  /**\n   * Construct a PUT request which interprets the body as text and returns it.\n   *\n   * @return an `Observable` of the body as a `string`.\n   */\n  put(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<string>;\n\n  /**\n   * Construct a PUT request which interprets the body as an `ArrayBuffer` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `ArrayBuffer`.\n   */\n  put(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpEvent<ArrayBuffer>>;\n\n  /**\n   * Construct a PUT request which interprets the body as a `Blob` and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Blob`.\n   */\n  put(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpEvent<Blob>>;\n\n  /**\n   * Construct a PUT request which interprets the body as text and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `string`.\n   */\n  put(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpEvent<string>>;\n\n  /**\n   * Construct a PUT request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `Object`.\n   */\n  put(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpEvent<Object>>;\n\n  /**\n   * Construct a PUT request which interprets the body as JSON and returns the full event stream.\n   *\n   * @return an `Observable` of all `HttpEvent`s for the request, with a body type of `T`.\n   */\n  put<T>(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'events', responseType?: 'json', withCredentials?: boolean,\n  }): Observable<HttpEvent<T>>;\n\n  /**\n   * Construct a PUT request which interprets the body as an `ArrayBuffer` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `ArrayBuffer`.\n   */\n  put(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'arraybuffer', withCredentials?: boolean,\n  }): Observable<HttpResponse<ArrayBuffer>>;\n\n  /**\n   * Construct a PUT request which interprets the body as a `Blob` and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Blob`.\n   */\n  put(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'blob', withCredentials?: boolean,\n  }): Observable<HttpResponse<Blob>>;\n\n  /**\n   * Construct a PUT request which interprets the body as text and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `string`.\n   */\n  put(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType: 'text', withCredentials?: boolean,\n  }): Observable<HttpResponse<string>>;\n\n  /**\n   * Construct a PUT request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `Object`.\n   */\n  put(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<Object>>;\n\n  /**\n   * Construct a PUT request which interprets the body as JSON and returns the full response.\n   *\n   * @return an `Observable` of the `HttpResponse` for the request, with a body type of `T`.\n   */\n  put<T>(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe: 'response',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<HttpResponse<T>>;\n\n  /**\n   * Construct a PUT request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the body as an `Object`.\n   */\n  put(url: string, body: any|null, options?: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<Object>;\n\n  /**\n   * Construct a PUT request which interprets the body as JSON and returns it.\n   *\n   * @return an `Observable` of the body as type `T`.\n   */\n  put<T>(url: string, body: any|null, options?: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: 'body',\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'json',\n    withCredentials?: boolean,\n  }): Observable<T>;\n\n  /**\n   * Constructs an `Observable` which, when subscribed, will cause the configured\n   * POST request to be executed on the server. See the individual overloads for\n   * details of `post()`'s return type based on the provided options.\n   */\n  put(url: string, body: any|null, options: {\n    headers?: HttpHeaders | {[header: string]: string | string[]},\n    observe?: HttpObserve,\n    params?: HttpParams|{[param: string]: string | string[]},\n    reportProgress?: boolean,\n    responseType?: 'arraybuffer'|'blob'|'json'|'text',\n    withCredentials?: boolean,\n  } = {}): Observable<any> {\n    return this.request<any>('PUT', url, addBody(options, body));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {HttpHandler} from './backend';\nimport {HttpRequest} from './request';\nimport {HttpEvent} from './response';\n\n/**\n * Intercepts `HttpRequest` and handles them.\n *\n * Most interceptors will transform the outgoing request before passing it to the\n * next interceptor in the chain, by calling `next.handle(transformedReq)`.\n *\n * In rare cases, interceptors may wish to completely handle a request themselves,\n * and not delegate to the remainder of the chain. This behavior is allowed.\n *\n *\n */\nexport interface HttpInterceptor {\n  /**\n   * Intercept an outgoing `HttpRequest` and optionally transform it or the\n   * response.\n   *\n   * Typically an interceptor will transform the outgoing request before returning\n   * `next.handle(transformedReq)`. An interceptor may choose to transform the\n   * response event stream as well, by applying additional Rx operators on the stream\n   * returned by `next.handle()`.\n   *\n   * More rarely, an interceptor may choose to completely handle the request itself,\n   * and compose a new event stream instead of invoking `next.handle()`. This is\n   * acceptable behavior, but keep in mind further interceptors will be skipped entirely.\n   *\n   * It is also rare but valid for an interceptor to return multiple responses on the\n   * event stream for a single request.\n   */\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\n}\n\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n *\n */\nexport class HttpInterceptorHandler implements HttpHandler {\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) {}\n\n  handle(req: HttpRequest<any>): Observable<HttpEvent<any>> {\n    return this.interceptor.intercept(req, this.next);\n  }\n}\n\n/**\n * A multi-provider token which represents the array of `HttpInterceptor`s that\n * are registered.\n *\n *\n */\nexport const HTTP_INTERCEPTORS = new InjectionToken<HttpInterceptor[]>('HTTP_INTERCEPTORS');\n\n@Injectable()\nexport class NoopInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\nimport {Observable, Observer} from 'rxjs';\n\nimport {HttpBackend, HttpHandler} from './backend';\nimport {HttpRequest} from './request';\nimport {HttpErrorResponse, HttpEvent, HttpEventType, HttpResponse} from './response';\n\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nlet nextRequestId: number = 0;\n\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nexport const JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nexport const JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nexport const JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n */\nexport abstract class JsonpCallbackContext { [key: string]: (data: any) => void; }\n\n/**\n * `HttpBackend` that only processes `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n *\n *\n */\n@Injectable()\nexport class JsonpClientBackend implements HttpBackend {\n  constructor(private callbackMap: JsonpCallbackContext, @Inject(DOCUMENT) private document: any) {}\n\n  /**\n   * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n   */\n  private nextCallback(): string { return `ng_jsonp_callback_${nextRequestId++}`; }\n\n  /**\n   * Process a JSONP request and return an event stream of the results.\n   */\n  handle(req: HttpRequest<never>): Observable<HttpEvent<any>> {\n    // Firstly, check both the method and response type. If either doesn't match\n    // then the request was improperly routed here and cannot be handled.\n    if (req.method !== 'JSONP') {\n      throw new Error(JSONP_ERR_WRONG_METHOD);\n    } else if (req.responseType !== 'json') {\n      throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n    }\n\n    // Everything else happens inside the Observable boundary.\n    return new Observable<HttpEvent<any>>((observer: Observer<HttpEvent<any>>) => {\n      // The first step to make a request is to generate the callback name, and replace the\n      // callback placeholder in the URL with the name. Care has to be taken here to ensure\n      // a trailing &, if matched, gets inserted back into the URL in the correct place.\n      const callback = this.nextCallback();\n      const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n\n      // Construct the <script> tag and point it at the URL.\n      const node = this.document.createElement('script');\n      node.src = url;\n\n      // A JSONP request requires waiting for multiple callbacks. These variables\n      // are closed over and track state across those callbacks.\n\n      // The response object, if one has been received, or null otherwise.\n      let body: any|null = null;\n\n      // Whether the response callback has been called.\n      let finished: boolean = false;\n\n      // Whether the request has been cancelled (and thus any other callbacks)\n      // should be ignored.\n      let cancelled: boolean = false;\n\n      // Set the response callback in this.callbackMap (which will be the window\n      // object in the browser. The script being loaded via the <script> tag will\n      // eventually call this callback.\n      this.callbackMap[callback] = (data?: any) => {\n        // Data has been received from the JSONP script. Firstly, delete this callback.\n        delete this.callbackMap[callback];\n\n        // Next, make sure the request wasn't cancelled in the meantime.\n        if (cancelled) {\n          return;\n        }\n\n        // Set state to indicate data was received.\n        body = data;\n        finished = true;\n      };\n\n      // cleanup() is a utility closure that removes the <script> from the page and\n      // the response callback from the window. This logic is used in both the\n      // success, error, and cancellation paths, so it's extracted out for convenience.\n      const cleanup = () => {\n        // Remove the <script> tag if it's still on the page.\n        if (node.parentNode) {\n          node.parentNode.removeChild(node);\n        }\n\n        // Remove the response callback from the callbackMap (window object in the\n        // browser).\n        delete this.callbackMap[callback];\n      };\n\n      // onLoad() is the success callback which runs after the response callback\n      // if the JSONP script loads successfully. The event itself is unimportant.\n      // If something went wrong, onLoad() may run without the response callback\n      // having been invoked.\n      const onLoad = (event: Event) => {\n        // Do nothing if the request has been cancelled.\n        if (cancelled) {\n          return;\n        }\n\n        // Cleanup the page.\n        cleanup();\n\n        // Check whether the response callback has run.\n        if (!finished) {\n          // It hasn't, something went wrong with the request. Return an error via\n          // the Observable error path. All JSONP errors have status 0.\n          observer.error(new HttpErrorResponse({\n            url,\n            status: 0,\n            statusText: 'JSONP Error',\n            error: new Error(JSONP_ERR_NO_CALLBACK),\n          }));\n          return;\n        }\n\n        // Success. body either contains the response body or null if none was\n        // returned.\n        observer.next(new HttpResponse({\n          body,\n          status: 200,\n          statusText: 'OK', url,\n        }));\n\n        // Complete the stream, the response is over.\n        observer.complete();\n      };\n\n      // onError() is the error callback, which runs if the script returned generates\n      // a Javascript error. It emits the error via the Observable error channel as\n      // a HttpErrorResponse.\n      const onError: any = (error: Error) => {\n        // If the request was already cancelled, no need to emit anything.\n        if (cancelled) {\n          return;\n        }\n        cleanup();\n\n        // Wrap the error in a HttpErrorResponse.\n        observer.error(new HttpErrorResponse({\n          error,\n          status: 0,\n          statusText: 'JSONP Error', url,\n        }));\n      };\n\n      // Subscribe to both the success (load) and error events on the <script> tag,\n      // and add it to the page.\n      node.addEventListener('load', onLoad);\n      node.addEventListener('error', onError);\n      this.document.body.appendChild(node);\n\n      // The request has now been successfully sent.\n      observer.next({type: HttpEventType.Sent});\n\n      // Cancellation handler.\n      return () => {\n        // Track the cancellation so event listeners won't do anything even if already scheduled.\n        cancelled = true;\n\n        // Remove the event listeners so they won't run if the events later fire.\n        node.removeEventListener('load', onLoad);\n        node.removeEventListener('error', onError);\n\n        // And finally, clean up the page.\n        cleanup();\n      };\n    });\n  }\n}\n\n/**\n * An `HttpInterceptor` which identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n *\n */\n@Injectable()\nexport class JsonpInterceptor {\n  constructor(private jsonp: JsonpClientBackend) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (req.method === 'JSONP') {\n      return this.jsonp.handle(req as HttpRequest<never>);\n    }\n    // Fall through for normal HTTP requests.\n    return next.handle(req);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Observable, Observer} from 'rxjs';\n\nimport {HttpBackend} from './backend';\nimport {HttpHeaders} from './headers';\nimport {HttpRequest} from './request';\nimport {HttpDownloadProgressEvent, HttpErrorResponse, HttpEvent, HttpEventType, HttpHeaderResponse, HttpJsonParseError, HttpResponse, HttpUploadProgressEvent} from './response';\n\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n */\nfunction getResponseUrl(xhr: any): string|null {\n  if ('responseURL' in xhr && xhr.responseURL) {\n    return xhr.responseURL;\n  }\n  if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n    return xhr.getResponseHeader('X-Request-URL');\n  }\n  return null;\n}\n\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n *\n */\nexport abstract class XhrFactory { abstract build(): XMLHttpRequest; }\n\n/**\n * A factory for @{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n *\n *\n */\n@Injectable()\nexport class BrowserXhr implements XhrFactory {\n  constructor() {}\n  build(): any { return <any>(new XMLHttpRequest()); }\n}\n\n/**\n * Tracks a response from the server that does not yet have a body.\n */\ninterface PartialResponse {\n  headers: HttpHeaders;\n  status: number;\n  statusText: string;\n  url: string;\n}\n\n/**\n * An `HttpBackend` which uses the XMLHttpRequest API to send\n * requests to a backend server.\n *\n *\n */\n@Injectable()\nexport class HttpXhrBackend implements HttpBackend {\n  constructor(private xhrFactory: XhrFactory) {}\n\n  /**\n   * Process a request and return a stream of response events.\n   */\n  handle(req: HttpRequest<any>): Observable<HttpEvent<any>> {\n    // Quick check to give a better error message when a user attempts to use\n    // HttpClient.jsonp() without installing the JsonpClientModule\n    if (req.method === 'JSONP') {\n      throw new Error(`Attempted to construct Jsonp request without JsonpClientModule installed.`);\n    }\n\n    // Everything happens on Observable subscription.\n    return new Observable((observer: Observer<HttpEvent<any>>) => {\n      // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n      const xhr = this.xhrFactory.build();\n      xhr.open(req.method, req.urlWithParams);\n      if (!!req.withCredentials) {\n        xhr.withCredentials = true;\n      }\n\n      // Add all the requested headers.\n      req.headers.forEach((name, values) => xhr.setRequestHeader(name, values.join(',')));\n\n      // Add an Accept header if one isn't present already.\n      if (!req.headers.has('Accept')) {\n        xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n      }\n\n      // Auto-detect the Content-Type header if one isn't present already.\n      if (!req.headers.has('Content-Type')) {\n        const detectedType = req.detectContentTypeHeader();\n        // Sometimes Content-Type detection fails.\n        if (detectedType !== null) {\n          xhr.setRequestHeader('Content-Type', detectedType);\n        }\n      }\n\n      // Set the responseType if one was requested.\n      if (req.responseType) {\n        const responseType = req.responseType.toLowerCase();\n\n        // JSON responses need to be processed as text. This is because if the server\n        // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n        // xhr.response will be null, and xhr.responseText cannot be accessed to\n        // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n        // is parsed by first requesting text and then applying JSON.parse.\n        xhr.responseType = ((responseType !== 'json') ? responseType : 'text') as any;\n      }\n\n      // Serialize the request body if one is present. If not, this will be set to null.\n      const reqBody = req.serializeBody();\n\n      // If progress events are enabled, response headers will be delivered\n      // in two events - the HttpHeaderResponse event and the full HttpResponse\n      // event. However, since response headers don't change in between these\n      // two events, it doesn't make sense to parse them twice. So headerResponse\n      // caches the data extracted from the response whenever it's first parsed,\n      // to ensure parsing isn't duplicated.\n      let headerResponse: HttpHeaderResponse|null = null;\n\n      // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n      // state, and memoizes it into headerResponse.\n      const partialFromXhr = (): HttpHeaderResponse => {\n        if (headerResponse !== null) {\n          return headerResponse;\n        }\n\n        // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n        const status: number = xhr.status === 1223 ? 204 : xhr.status;\n        const statusText = xhr.statusText || 'OK';\n\n        // Parse headers from XMLHttpRequest - this step is lazy.\n        const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n\n        // Read the response URL from the XMLHttpResponse instance and fall back on the\n        // request URL.\n        const url = getResponseUrl(xhr) || req.url;\n\n        // Construct the HttpHeaderResponse and memoize it.\n        headerResponse = new HttpHeaderResponse({headers, status, statusText, url});\n        return headerResponse;\n      };\n\n      // Next, a few closures are defined for the various events which XMLHttpRequest can\n      // emit. This allows them to be unregistered as event listeners later.\n\n      // First up is the load event, which represents a response being fully available.\n      const onLoad = () => {\n        // Read response state from the memoized partial data.\n        let {headers, status, statusText, url} = partialFromXhr();\n\n        // The body will be read out if present.\n        let body: any|null = null;\n\n        if (status !== 204) {\n          // Use XMLHttpRequest.response if set, responseText otherwise.\n          body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n        }\n\n        // Normalize another potential bug (this one comes from CORS).\n        if (status === 0) {\n          status = !!body ? 200 : 0;\n        }\n\n        // ok determines whether the response will be transmitted on the event or\n        // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n        // but a successful status code can still result in an error if the user\n        // asked for JSON data and the body cannot be parsed as such.\n        let ok = status >= 200 && status < 300;\n\n        // Check whether the body needs to be parsed as JSON (in many cases the browser\n        // will have done that already).\n        if (req.responseType === 'json' && typeof body === 'string') {\n          // Save the original body, before attempting XSSI prefix stripping.\n          const originalBody = body;\n          body = body.replace(XSSI_PREFIX, '');\n          try {\n            // Attempt the parse. If it fails, a parse error should be delivered to the user.\n            body = body !== '' ? JSON.parse(body) : null;\n          } catch (error) {\n            // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n            // JSON response. Restore the original body (including any XSSI prefix) to deliver\n            // a better error response.\n            body = originalBody;\n\n            // If this was an error request to begin with, leave it as a string, it probably\n            // just isn't JSON. Otherwise, deliver the parsing error to the user.\n            if (ok) {\n              // Even though the response status was 2xx, this is still an error.\n              ok = false;\n              // The parse error contains the text of the body that failed to parse.\n              body = { error, text: body } as HttpJsonParseError;\n            }\n          }\n        }\n\n        if (ok) {\n          // A successful response is delivered on the event stream.\n          observer.next(new HttpResponse({\n            body,\n            headers,\n            status,\n            statusText,\n            url: url || undefined,\n          }));\n          // The full body has been received and delivered, no further events\n          // are possible. This request is complete.\n          observer.complete();\n        } else {\n          // An unsuccessful request is delivered on the error channel.\n          observer.error(new HttpErrorResponse({\n            // The error in this case is the response body (error from the server).\n            error: body,\n            headers,\n            status,\n            statusText,\n            url: url || undefined,\n          }));\n        }\n      };\n\n      // The onError callback is called when something goes wrong at the network level.\n      // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n      // transmitted on the error channel.\n      const onError = (error: ErrorEvent) => {\n        const res = new HttpErrorResponse({\n          error,\n          status: xhr.status || 0,\n          statusText: xhr.statusText || 'Unknown Error',\n        });\n        observer.error(res);\n      };\n\n      // The sentHeaders flag tracks whether the HttpResponseHeaders event\n      // has been sent on the stream. This is necessary to track if progress\n      // is enabled since the event will be sent on only the first download\n      // progerss event.\n      let sentHeaders = false;\n\n      // The download progress event handler, which is only registered if\n      // progress events are enabled.\n      const onDownProgress = (event: ProgressEvent) => {\n        // Send the HttpResponseHeaders event if it hasn't been sent already.\n        if (!sentHeaders) {\n          observer.next(partialFromXhr());\n          sentHeaders = true;\n        }\n\n        // Start building the download progress event to deliver on the response\n        // event stream.\n        let progressEvent: HttpDownloadProgressEvent = {\n          type: HttpEventType.DownloadProgress,\n          loaded: event.loaded,\n        };\n\n        // Set the total number of bytes in the event if it's available.\n        if (event.lengthComputable) {\n          progressEvent.total = event.total;\n        }\n\n        // If the request was for text content and a partial response is\n        // available on XMLHttpRequest, include it in the progress event\n        // to allow for streaming reads.\n        if (req.responseType === 'text' && !!xhr.responseText) {\n          progressEvent.partialText = xhr.responseText;\n        }\n\n        // Finally, fire the event.\n        observer.next(progressEvent);\n      };\n\n      // The upload progress event handler, which is only registered if\n      // progress events are enabled.\n      const onUpProgress = (event: ProgressEvent) => {\n        // Upload progress events are simpler. Begin building the progress\n        // event.\n        let progress: HttpUploadProgressEvent = {\n          type: HttpEventType.UploadProgress,\n          loaded: event.loaded,\n        };\n\n        // If the total number of bytes being uploaded is available, include\n        // it.\n        if (event.lengthComputable) {\n          progress.total = event.total;\n        }\n\n        // Send the event.\n        observer.next(progress);\n      };\n\n      // By default, register for load and error events.\n      xhr.addEventListener('load', onLoad);\n      xhr.addEventListener('error', onError);\n\n      // Progress events are only enabled if requested.\n      if (req.reportProgress) {\n        // Download progress is always enabled if requested.\n        xhr.addEventListener('progress', onDownProgress);\n\n        // Upload progress depends on whether there is a body to upload.\n        if (reqBody !== null && xhr.upload) {\n          xhr.upload.addEventListener('progress', onUpProgress);\n        }\n      }\n\n      // Fire the request, and notify the event stream that it was fired.\n      xhr.send(reqBody);\n      observer.next({type: HttpEventType.Sent});\n\n      // This is the return from the Observable function, which is the\n      // request cancellation handler.\n      return () => {\n        // On a cancellation, remove all registered event listeners.\n        xhr.removeEventListener('error', onError);\n        xhr.removeEventListener('load', onLoad);\n        if (req.reportProgress) {\n          xhr.removeEventListener('progress', onDownProgress);\n          if (reqBody !== null && xhr.upload) {\n            xhr.upload.removeEventListener('progress', onUpProgress);\n          }\n        }\n\n        // Finally, abort the in-flight request.\n        xhr.abort();\n      };\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT, ÉµparseCookieValue as parseCookieValue} from '@angular/common';\nimport {Inject, Injectable, InjectionToken, PLATFORM_ID} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {HttpHandler} from './backend';\nimport {HttpInterceptor} from './interceptor';\nimport {HttpRequest} from './request';\nimport {HttpEvent} from './response';\n\nexport const XSRF_COOKIE_NAME = new InjectionToken<string>('XSRF_COOKIE_NAME');\nexport const XSRF_HEADER_NAME = new InjectionToken<string>('XSRF_HEADER_NAME');\n\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n *\n */\nexport abstract class HttpXsrfTokenExtractor {\n  /**\n   * Get the XSRF token to use with an outgoing request.\n   *\n   * Will be called for every request, so the token may change between requests.\n   */\n  abstract getToken(): string|null;\n}\n\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\n@Injectable()\nexport class HttpXsrfCookieExtractor implements HttpXsrfTokenExtractor {\n  private lastCookieString: string = '';\n  private lastToken: string|null = null;\n\n  /**\n   * @internal for testing\n   */\n  parseCount: number = 0;\n\n  constructor(\n      @Inject(DOCUMENT) private doc: any, @Inject(PLATFORM_ID) private platform: string,\n      @Inject(XSRF_COOKIE_NAME) private cookieName: string) {}\n\n  getToken(): string|null {\n    if (this.platform === 'server') {\n      return null;\n    }\n    const cookieString = this.doc.cookie || '';\n    if (cookieString !== this.lastCookieString) {\n      this.parseCount++;\n      this.lastToken = parseCookieValue(cookieString, this.cookieName);\n      this.lastCookieString = cookieString;\n    }\n    return this.lastToken;\n  }\n}\n\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\n@Injectable()\nexport class HttpXsrfInterceptor implements HttpInterceptor {\n  constructor(\n      private tokenService: HttpXsrfTokenExtractor,\n      @Inject(XSRF_HEADER_NAME) private headerName: string) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const lcUrl = req.url.toLowerCase();\n    // Skip both non-mutating requests and absolute URLs.\n    // Non-mutating requests don't require a token, and absolute URLs require special handling\n    // anyway as the cookie set\n    // on our origin is not the same as the token expected by another origin.\n    if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n        lcUrl.startsWith('https://')) {\n      return next.handle(req);\n    }\n    const token = this.tokenService.getToken();\n\n    // Be careful not to overwrite an existing header of the same name.\n    if (token !== null && !req.headers.has(this.headerName)) {\n      req = req.clone({headers: req.headers.set(this.headerName, token)});\n    }\n    return next.handle(req);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, Injector, ModuleWithProviders, NgModule} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nimport {HttpBackend, HttpHandler} from './backend';\nimport {HttpClient} from './client';\nimport {HTTP_INTERCEPTORS, HttpInterceptor, HttpInterceptorHandler, NoopInterceptor} from './interceptor';\nimport {JsonpCallbackContext, JsonpClientBackend, JsonpInterceptor} from './jsonp';\nimport {HttpRequest} from './request';\nimport {HttpEvent} from './response';\nimport {BrowserXhr, HttpXhrBackend, XhrFactory} from './xhr';\nimport {HttpXsrfCookieExtractor, HttpXsrfInterceptor, HttpXsrfTokenExtractor, XSRF_COOKIE_NAME, XSRF_HEADER_NAME} from './xsrf';\n\n/**\n * An `HttpHandler` that applies a bunch of `HttpInterceptor`s\n * to a request before passing it to the given `HttpBackend`.\n *\n * The interceptors are loaded lazily from the injector, to allow\n * interceptors to themselves inject classes depending indirectly\n * on `HttpInterceptingHandler` itself.\n */\n@Injectable()\nexport class HttpInterceptingHandler implements HttpHandler {\n  private chain: HttpHandler|null = null;\n\n  constructor(private backend: HttpBackend, private injector: Injector) {}\n\n  handle(req: HttpRequest<any>): Observable<HttpEvent<any>> {\n    if (this.chain === null) {\n      const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n      this.chain = interceptors.reduceRight(\n          (next, interceptor) => new HttpInterceptorHandler(next, interceptor), this.backend);\n    }\n    return this.chain.handle(req);\n  }\n}\n\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n */\nexport function jsonpCallbackContext(): Object {\n  if (typeof window === 'object') {\n    return window;\n  }\n  return {};\n}\n\n/**\n * `NgModule` which adds XSRF protection support to outgoing requests.\n *\n * Provided the server supports a cookie-based XSRF protection system, this\n * module can be used directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no such names are provided, the default is to use `X-XSRF-TOKEN` for\n * the header name and `XSRF-TOKEN` for the cookie name.\n *\n *\n */\n@NgModule({\n  providers: [\n    HttpXsrfInterceptor,\n    {provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true},\n    {provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor},\n    {provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN'},\n    {provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN'},\n  ],\n})\nexport class HttpClientXsrfModule {\n  /**\n   * Disable the default XSRF protection.\n   */\n  static disable(): ModuleWithProviders {\n    return {\n      ngModule: HttpClientXsrfModule,\n      providers: [\n        {provide: HttpXsrfInterceptor, useClass: NoopInterceptor},\n      ],\n    };\n  }\n\n  /**\n   * Configure XSRF protection to use the given cookie name or header name,\n   * or the default names (as described above) if not provided.\n   */\n  static withOptions(options: {\n    cookieName?: string,\n    headerName?: string,\n  } = {}): ModuleWithProviders {\n    return {\n      ngModule: HttpClientXsrfModule,\n      providers: [\n        options.cookieName ? {provide: XSRF_COOKIE_NAME, useValue: options.cookieName} : [],\n        options.headerName ? {provide: XSRF_HEADER_NAME, useValue: options.headerName} : [],\n      ],\n    };\n  }\n}\n\n/**\n * `NgModule` which provides the `HttpClient` and associated services.\n *\n * Interceptors can be added to the chain behind `HttpClient` by binding them\n * to the multiprovider for `HTTP_INTERCEPTORS`.\n *\n *\n */\n@NgModule({\n  imports: [\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'XSRF-TOKEN',\n      headerName: 'X-XSRF-TOKEN',\n    }),\n  ],\n  providers: [\n    HttpClient,\n    {provide: HttpHandler, useClass: HttpInterceptingHandler},\n    HttpXhrBackend,\n    {provide: HttpBackend, useExisting: HttpXhrBackend},\n    BrowserXhr,\n    {provide: XhrFactory, useExisting: BrowserXhr},\n  ],\n})\nexport class HttpClientModule {\n}\n\n/**\n * `NgModule` which enables JSONP support in `HttpClient`.\n *\n * Without this module, Jsonp requests will reach the backend\n * with method JSONP, where they'll be rejected.\n *\n *\n */\n@NgModule({\n  providers: [\n    JsonpClientBackend,\n    {provide: JsonpCallbackContext, useFactory: jsonpCallbackContext},\n    {provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true},\n  ],\n})\nexport class HttpClientJsonpModule {\n}\n","/**\n * Created by pratik on 10/1/18.\n */\n/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Ketan Gote, Pratik Kelwalkar, Dattaram Gawas, Rashmi Thakkar\n *\n */\n\n/*\nComponent Name : Amexio data grid\nComponent Selector : <amexio-data-table-column>\nComponent Description : Data grid component to render large\namount of data-set with various options like sorting in ascending or descending order,\nclient-side pagination, column hide/unhide, single/multi selection, user define template\nfor rendering for column header and column data, displaying summation of numeric column.\n*/\n\nimport {Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'amexio-data-table-column', template: ``,\n})\nexport class AmexioGridColumnComponent {\n\n  /*\nProperties\nname : text\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Set column label.\n*/\n  @Input() text: string;\n\n  /*\n   Properties\n   name : sort\n   datatype : boolean\n   version : 4.2.6 onwards\n   default : true\n   description : Set column Sortable.\n   */\n  @Input() sort = true;\n\n  /*\nProperties\nname : data-index\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : JSON key from datasource.\n*/\n  @Input('data-index') dataindex: string;\n\n  /*\nProperties\nname : hidden\ndatatype : boolean\nversion : 4.0 onwards\ndefault : none\ndescription : Hide column\n*/\n  @Input() hidden = false;\n\n  /*\nProperties\nname : data-type\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Data type of column (string/number).\n*/\n  @Input('data-type') datatype: string;\n\n  /*\nProperties\nname : context-menu\ndatatype : any[]\nversion : 5.0.1 onwards\ndefault :\ndescription : Context Menu provides the list of menus on right click of column.\n*/\n  @Input('context-menu') contextmenu: any[];\n\n  /*\nProperties\nname : summary-type\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Type of math opertaion to be applied on the column\n*/\n  @Input('summary-type') summarytype: string;\n\n  /*\nProperties\nname : summary-caption\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : it is the title placed next to the summarized value\n*/\n  @Input('summary-caption') summarycaption: string;\n\n  /*\nProperties\nname : width\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Custom width for each column.Width must be in % but no need to mention %.\n*/\n  @Input() width: string;\n  isColumnSort: boolean;\n\n  @ContentChild('amexioHeaderTmpl') headerTemplate: TemplateRef<any>;\n\n  @ContentChild('amexioBodyTmpl') bodyTemplate: TemplateRef<any>;\n}\n","/**\n * Created by pratik on 27/11/17.\n */\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/index';\n\n@Injectable()\nexport class CommonDataService {\n  filteredObject: any = [];\n  constructor(private _http: HttpClient) {\n  }\n\n  fetchData(serviceUrl: string, methodType: string): Observable<any> {\n    const requestJson = {};\n    const headers = new HttpHeaders().append('Content-Type', 'application/json;charset=UTF-8');\n    if (methodType === 'post') {\n      return this._http.post(serviceUrl, requestJson, {headers});\n    }else if (methodType === 'get') {\n      return this._http.get(serviceUrl, {headers});\n    }\n  }\n\n  uploadFile(serviceUrl: string, methodType: string, requestData: any): Observable<any> {\n    const requestJson = requestData;\n    const headers = new HttpHeaders().append('Access-Control-Allow-Origin', '*');\n    if (methodType.toUpperCase() === 'POST') {\n      return this._http.post(serviceUrl, requestJson, {headers});\n    }\n  }\n}\n","/*\n Component Name : Amexio data grid\n Component Selector : <amexio-datagrid>\n Component Description : Data grid component to render large amount of data-set with\n various options like sorting in ascending or descending order, client-side pagination,\n column hide/unhide, single/multi selection, user define template for rendering for column\n header and column data, displaying summation of numeric column.\n */\nimport {\n  AfterContentInit, ChangeDetectorRef, Component, ContentChildren, ElementRef, EventEmitter, HostListener, Input,\n  OnDestroy, OnInit, Output, QueryList, Renderer2,\n} from '@angular/core';\nimport { AmexioGridColumnComponent } from './data.grid.column';\n\nimport { CommonDataService } from '../../services/data/common.data.service';\n@Component({\n  selector: 'amexio-datagrid',\n  template: `\n    <div class=\"datagrid\">\n      <div class=\"datatabletitle\">\n        <span> {{title}} </span>\n        <span class=\"dataheaderFilter\" class=\"float-right\"  style=\"padding-bottom:1.1%\">\n          <ng-content select=\"amexio-datagrid-header\"></ng-content>\n          <span *ngIf=\"enablecolumnfilter ? true:false\" class=\"float-right\"\n          (click)=\"showToolTip = !showToolTip ; showGroupByColumn = false\"\n            style=\" cursor: pointer;\">\n            &nbsp;\n            <span *ngIf=\"!show\">&#9776;</span>\n            <span *ngIf=\"show\">&#9747;</span>\n          </span>\n        </span>\n        <span *ngIf=\"groupby ? true : false\" class=\"float-right\" (click)=\"showGroupByColumn = !showGroupByColumn; showToolTip = false\"\n              style=\" cursor: pointer;\">\n          <!--<span class=\"fa fa-th-list\"></span>-->\n          <amexio-data-icon key=\"datagrid_list\"></amexio-data-icon>\n      </span>\n      </div>\n      <!--Filter with Checkbox datagrid start-->\n      <ng-container *ngIf=\"enabledatafilter ? true : false\">\n        <div class=\"datatable datatable-row\">\n          <ng-container *ngIf=\"enablecheckbox\">\n            <div class=\"datatable-col col-group datatable-checkbox-width\">\n              <div class=\"inputgroup\">\n                <div class=\"input-box\">\n                  <div *ngIf=\"!selectAll\" (click)=\"selectAllRecord()\" class=\"checkbox default\"></div>\n                  <div *ngIf=\"selectAll\" (click)=\"selectAllRecord()\" class=\"checkbox active\">&#10004;</div>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n\n          <!--Filter datagrid start-->\n          <ng-container *ngIf=\"enabledatafilter ? true : false\">\n            <ng-container *ngFor=\"let cols of columns\">\n              <ng-container *ngIf=\"!cols.hidden\">\n                <div class=\"datatable-col col-group\" [style.width.%]=\"cols.width\">\n                  <data-grid-filter [column]=\"cols\" (filterObject)=\"getFilteredData($event)\">\n                  </data-grid-filter>\n                </div>\n              </ng-container>\n            </ng-container>\n          </ng-container>\n\n        </div>\n      </ng-container>\n\n      <!--Filter datagrid start-->\n      <ng-container *ngIf=\"globalfilter ? true : false\">\n        <div class=\"datatable datatable-row\">\n          <ng-container class=\"datatable datatable-column\">\n            <div class=\"inputgroup\" style=\"padding-left: 1%; padding-right: 1%\">\n              <input type=\"text\"  [(ngModel)]=\"filterValue\"\n                     (keyup)=\"keyUpSearch($event)\" type=\"text\"\n                     class=\"input-control\" aria-label=\"Text input with dropdown button\">\n              <!--<i class=\"fa fa-filter\" aria-hidden=\"true\"\n              (click)=\"showToolTip = !showToolTip\"></i>-->\n              <span class=\"datatable-filter-icon\">\n                      <amexio-data-icon key=\"datagrid_filter\" (click)=\"showToolTip = !showToolTip\"></amexio-data-icon>\n                  </span>\n              <span *ngIf=\"showToolTip\" class=\"dropdown\" style=\"width: 250px; right: 10px\">\n                      <ul class=\"dropdown-list\" *ngFor=\"let opt of globalFilterOptions\">\n                          <li class=\"list-items\">\n                              <div (click)=\"selectedOption(opt)\">\n                                  {{opt.key}}&nbsp;\n                                  <i [class]=\"opt.checkedStatus\" aria-hidden=\"true\"></i>\n                              </div>\n                          </li>\n                      </ul>\n                  </span>\n            </div>\n          </ng-container>\n        </div>\n      </ng-container>\n\n      <div>\n        <ng-container *ngIf=\"enablecolumnfilter ? true : false\">\n          <span *ngIf=\"showToolTip\" class=\"dropdown dropdown-right\" style=\"width: 250px;\">\n              <ul class=\"dropdown-list\">\n                  <li class=\"list-items\" *ngFor=\"let cols of columns;let i = index;\" (click)=\"showToolTip = !showToolTip\">\n                      <div>\n                          <input type=\"checkbox\" [attr.checked]=\"!cols.hidden ? true: null\" (click)=\"onColumnCheck(cols)\" />\n                          <label>{{cols.text}}</label>\n                      </div>\n                  </li>\n              </ul>\n          </span>\n        </ng-container>\n\n        <ng-container *ngIf=\"groupby ? true : false\">\n          <span *ngIf=\"showGroupByColumn\" class=\"dropdown dropdown-right\" style=\"width: 250px;\">\n              <ul class=\"dropdown-list\">\n                  <li class=\"list-items\" *ngFor=\"let cols of columns;let i = index;\" (click)=\"showGroupByColumn = !showGroupByColumn\">\n                      <div (click)=\"setGroupByColumn(cols)\">\n                          <label>{{cols.text}}</label>\n                      </div>\n                  </li>\n              </ul>\n          </span>\n        </ng-container>\n      </div>\n    </div>\n\n    <!--Checkbox datagrid with datatypes condition start-->\n    <div class=\"datatable\">\n      <div class=\"datatable-header\">\n        <ng-container *ngIf=\"enablecheckbox\">\n          <div class=\"datatable-col datatable-checkbox-width checkbox-col\">\n            <div class=\"inputgroup\">\n              <div class=\"input-box\">\n                <div *ngIf=\"!selectAll\" (click)=\"selectAllRecord()\" class=\"checkbox default\"></div>\n                <div *ngIf=\"selectAll\" (click)=\"selectAllRecord()\" class=\"checkbox active\">&#10004;</div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!--datagrid start unhidden-->\n        <ng-container *ngFor=\"let cols of columns\">\n          <ng-container *ngIf=\"!cols.hidden\">\n            <ng-container *ngIf=\"cols.datatype=='string'\">\n              <!-- -------------------- -->\n              <div class=\"datatable-col\" [style.width.%]=\"cols.width\" (click)=\"sortOnColHeaderClick(cols, $event)\">\n\n                <ng-container *ngIf=\"cols.headerTemplate\">\n                  <ng-template  [ngTemplateOutlet]=\"cols.headerTemplate\"\n                                [ngTemplateOutletContext]=\"{column:cols ,index: i}\"></ng-template>\n                </ng-container>\n                <ng-container *ngIf=\"!cols.headerTemplate\">\n                  {{cols.text}} &nbsp;\n\n                </ng-container>\n                <ng-container *ngIf=\"this.sortBy==1   && cols.isColumnSort\">\n                  <amexio-data-icon key=\"datagrid_arrowup\"></amexio-data-icon>\n                  <!--&nbsp; <i class=\"fa fa-arrow-up\"></i>-->\n                </ng-container>\n                <ng-container *ngIf=\"this.sortBy==2  && cols.isColumnSort\">\n                  <!--&nbsp;<i class=\"fa fa-arrow-down\"></i>-->\n                  <amexio-data-icon key=\"datagrid_arrowdown\"></amexio-data-icon>\n                </ng-container>\n              </div>\n            </ng-container>\n            <ng-container *ngIf=\"cols.datatype=='number'\">\n              <div class=\"datatable-col\" [style.width.%]=\"cols.width\" (click)=\"sortOnColHeaderClick(cols, $event)\">\n                <ng-container *ngIf=\"cols.headerTemplate\">\n                  <ng-template  [ngTemplateOutlet]=\"cols.headerTemplate\"\n                                [ngTemplateOutletContext]=\"{column:cols ,index: i}\"></ng-template>\n                </ng-container>\n                <ng-container *ngIf=\"!cols.headerTemplate\">\n                      <span class=\"float-right\">\n                          {{cols.text}} &nbsp;\n                          <ng-container *ngIf=\"this.sortBy==1 && cols.isColumnSort\">\n                              <amexio-data-icon key=\"datagrid_arrowup\"></amexio-data-icon>\n                            <!--&nbsp; <i class=\"fa fa-arrow-up\"></i>-->\n                          </ng-container>\n                          <ng-container *ngIf=\"this.sortBy==2 && cols.isColumnSort\">\n                              <!--&nbsp;<i class=\"fa fa-arrow-down\"></i>-->\n                              <amexio-data-icon key=\"datagrid_arrowdown\"></amexio-data-icon>\n                          </ng-container>\n                      </span>\n                </ng-container>\n              </div>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n\n    <!--Group BY datagrid start-->\n    <ng-container *ngIf=\"!groupby\">\n      <div class=\"datatable-height\" [style.height.px]=\"height\">\n        <div class=\"datatable\">\n          <div style=\"height: 300px;\" *ngIf=\"mask\">\n            <div class=\"spinner\"></div>\n          </div>\n          <ng-container *ngIf=\"!mask\">\n            <div #id class=\"datatable-row\"\n                 *ngFor=\"let row of viewRows;let i=index\" id=\"{{'row'+i}}\"\n                 [ngClass]=\"{'datatable-row-active':row.isSelected}\"\n                 (click)=\"onRowClick(row, i)\">\n\n              <ng-container *ngIf=\"enablecheckbox\">\n                <div class=\"datatable-col datatable-checkbox-width checkbox-col\">\n                  <div class=\"inputgroup\">\n                    <div class=\"input-box\">\n                      <div (click)=\"setSelectedRow(row, check)\" [class]=\"checkBoxSelectClass\" #check>\n                        {{((checkBoxSelectClass == 'checkbox active') &&\n                      (check.classList.value == 'checkbox active')) ||\n                      ((checkBoxSelectClass\n                      == 'checkbox default') && (check.classList.value == 'checkbox active')) ? '&#10004;'\n                        : ''}}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </ng-container>\n\n              <ng-container *ngFor=\"let cols of columns;let colIndex = index\">\n                <ng-container *ngIf=\"!cols.hidden\">\n                  <ng-container *ngIf=\"cols.datatype=='number'\">\n                    <div class=\"datatable-col\" [style.width.%]=\"cols.width\" scope=\"row\" [attr.data-label]=\"cols.text\">\n                                  <span class=\"float-right\">\n                                      <ng-container *ngIf=\"row[cols.dataindex]!= null;else elseBlock\">\n                                      <div (contextmenu)=\"loadContextMenu($event,row, cols, id)\">\n                                      {{row[cols.dataindex]}}\n                                      </div>\n                                      </ng-container>\n                                      <ng-template #elseBlock>\n                                          &nbsp;\n                                      </ng-template>\n\n                                  </span>\n                    </div>\n                  </ng-container>\n                  <ng-container *ngIf=\"!cols?.bodyTemplate && cols.datatype=='string'\">\n                    <div class=\"datatable-col\" [style.width.%]=\"cols.width\" scope=\"row\" [attr.data-label]=\"cols.text\">\n                      <ng-container *ngIf=\"row[cols.dataindex]!= null ;else elseBlock\">\n                        <div (contextmenu)=\"loadContextMenu($event,row, cols, id)\">\n                          {{row[cols.dataindex]}}\n                        </div>\n                      </ng-container>\n                      <ng-template #elseBlock>\n                        &nbsp;\n                      </ng-template>\n                    </div>\n                  </ng-container>\n                  <ng-container *ngIf=\"cols.bodyTemplate\">\n                    <div class=\"datatable-col\" [style.width.%]=\"cols.width\" scope=\"row\" [attr.data-label]=\"cols.text\">\n                      <ng-template [ngTemplateOutlet]=\"cols.bodyTemplate\"\n                                   [ngTemplateOutletContext]=\"{ $implicit: { text : row[cols.dataindex] }, row: row }\"></ng-template>\n                    </div>\n                  </ng-container>\n                </ng-container>\n\n              </ng-container>\n            </div>\n          </ng-container>\n\n        </div>\n      </div>\n\n    </ng-container>\n\n    <!--Group BY datagrid end-->\n\n    <!--Group BY and Filter Data datagrid start-->\n    <ng-container *ngIf=\"groupby && !enabledatafilter\">\n      <div class=\"datatable-height\" [style.height.px]=\"height\">\n        <div class=\"datatable\" style=\"table-layout: inherit !important;\">\n          <div style=\"height: 300px;\" *ngIf=\"mask\">\n            <div class=\"spinner\"></div>\n          </div>\n          <ng-container *ngIf=\"!mask\">\n            <div class=\"datatable-row\"\n                 *ngFor=\"let row of viewRows;let i=index\"\n                 id=\"{{'row'+i}}\" [ngClass]=\"{'datatable-row-active':row.isSelected}\"\n                 (click)=\"toogle(row, i)\">\n              <ng-container *ngIf=\"enablecheckbox\">\n                <div class=\"datatable-col datatable-checkbox-width checkbox-col\">\n                  <div class=\"inputgroup\">\n                    <div class=\"input-box\">\n                      <div (click)=\"selectParent(row)\" [class]=\"row.isSelected ?'checkbox active':'checkbox default'\">\n                        {{row.isSelected ? '&#10004;' : ''}}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </ng-container>\n              <ng-container *ngFor=\"let cols of columns;let colIndex = index\">\n                <ng-container *ngIf=\"isGroupChecking(row)\">\n\n                  <ng-container *ngIf=\"colIndex == 0\">\n                    <div class=\"datatable-col col-group\">\n                      <!--<i *ngIf=\"!row.expanded\" class=\"fa fa-caret-right\" aria-hidden=\"true\" (click)=\"toogle(row,i)\"></i>-->\n                      <ng-container *ngIf=\"!row.expanded\">\n                        <amexio-data-icon key=\"datagrid_expand\"></amexio-data-icon>\n                      </ng-container>\n                      <ng-container *ngIf=\"row.expanded\">\n                        <amexio-data-icon key=\"datagrid_collapse\"></amexio-data-icon>\n                      </ng-container>\n                      {{row.group}}\n                    </div>\n                  </ng-container>\n\n                  <ng-container *ngIf=\"colIndex != 0\">\n                    <div class=\"datatable-col col-hidden\">\n                    </div>\n                  </ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"!isGroupChecking(row)\">\n                  <ng-container *ngIf=\"cols.datatype=='string'\">\n                    <div class=\"datatable-col\" [style.width.%]=\"cols.width\" [attr.data-label]=\"cols.text\">\n                      <ng-container *ngIf=\"colIndex == 0\">\n                                      <span style=\"padding-left: 20px\">\n                                          {{row[cols.dataindex]}}\n                                      </span>\n                      </ng-container>\n                      <ng-container *ngIf=\"colIndex != 0\">\n                        {{row[cols.dataindex]}}\n                      </ng-container>\n                    </div>\n                  </ng-container>\n                  <ng-container *ngIf=\"cols.datatype=='number'\">\n\n                    <div class=\"datatable-col\" [style.width.%]=\"cols.width\" [attr.data-label]=\"cols.text\">\n\n                      <ng-container *ngIf=\"colIndex == 0\">\n                                      <span style=\"padding-left: 20px\">\n                                          <ng-container *ngIf=\"row[cols.dataindex]!= null ;else elseBlock\">\n                                              {{row[cols.dataindex]}}\n                                          </ng-container>\n                                          <ng-template #elseBlock>\n                                              &nbsp;\n                                          </ng-template>\n\n                                      </span>\n                      </ng-container>\n                      <ng-container *ngIf=\"colIndex != 0\">\n                                      <span class=\"float-right\">\n                                          <ng-container *ngIf=\"row[cols.dataindex]!= null ;else elseBlock\">\n                                              {{row[cols.dataindex]}}\n                                          </ng-container>\n                                          <ng-template #elseBlock>\n                                              &nbsp;\n                                          </ng-template>\n                                      </span>\n                      </ng-container>\n\n                    </div>\n\n                  </ng-container>\n\n                </ng-container>\n              </ng-container>\n            </div>\n          </ng-container>\n\n        </div>\n      </div>\n    </ng-container>\n    <!--Group BY and Filter Data datagrid end-->\n\n    <!-- Context Menu  -->\n    <span [ngStyle]=\"contextStyle\">\n    <ul *ngIf=\"flag\" class=\"context-menu-list\" [ngClass]=\"{'dropdown-up' : posixUp}\">\n        <li (click)=\"onContextNodeClick(itemConfig)\" class=\"context-menu-list-items\"\n            [ngStyle]=\"{'cursor': itemConfig.disabled ? 'not-allowed':'pointer'}\"\n            [ngClass]=\"{'context-menu-separator':itemConfig.seperator}\"\n            *ngFor=\"let itemConfig of tempContextMenu\">\n            <i [ngStyle]=\"{'padding-left': itemConfig.icon ? '5px':'22px'}\"\n               [ngClass]=\"itemConfig.icon\"></i>\n            <span style=\"white-space: nowrap;display: inline ; padding-left:10px\">\n            {{itemConfig.text}}\n            </span>\n        </li>\n    </ul>\n</span>\n\n    <!-- Footer of the grid -->\n    <div class=\"footer\">\n      <ng-container *ngIf=\"pagesize && (data && data.length > pagesize)\">\n        <ng-container *ngIf=\"totalPages!=null\">\n          <amexio-paginator [pages]=\"totalPages\" [rows]=\"pagesize\" (onPageChange)=\"loadPageData($event)\"></amexio-paginator>\n        </ng-container>\n      </ng-container>\n    </div>\n  `,\n})\n\nexport class AmexioDatagridComponent implements OnInit, OnDestroy, AfterContentInit {\n  private componentLoaded: boolean;\n  /*\n   Properties\n   name : title\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : Title for grid.\n   */\n  @Input() title: string;\n  /*\n   Properties\n   name : page-size\n   datatype : number\n   version : 4.0 onwards\n   default : none\n   description : Number of records show on one page.\n   */\n  @Input('page-size') pagesize: number;\n\n  /*\n   Properties\n   name : http-url\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : REST url for fetching data.\n   */\n  @Input('http-url') httpurl: string;\n\n  /*\n   Properties\n   name : http-method\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : Type of HTTP call, POST,GET etc.\n   */\n  @Input('http-method') httpmethod: string;\n\n  /*\n   Properties\n   name :\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : Key in JSON Datasource for records.\n   */\n  @Input('data-reader') datareader: string;\n\n  /*\n   Properties\n   name : enable-checkbox\n   datatype : boolean\n   version : 4.0 onwards\n   default : none\n   description : Enables checkbox for each row, this allows user for multi selection.\n   */\n  @Input('enable-checkbox') enablecheckbox: boolean;\n\n  /*\n   Properties\n   name : data\n   datatype : any\n   version : 4.0 onwards\n   default : none\n   description : Local Data binding.\n   */\n  _data: any;\n  @Input('data')\n  set data(value: any[]) {\n    this._data = value;\n    if (this.componentLoaded) {\n      this.updateComponent();\n    }\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  /*\n   Events\n   name : rowSelect\n   datatype : none\n   version : none\n   default : none\n   description : It will gives you row clicked data.\n   */\n  @Output() rowSelect: any = new EventEmitter<any>();\n\n  /*\n   Events\n   name : selectedRowData\n   datatype : none\n   version : none\n   default : none\n   description : It will fire only on selection of checkbox and gives you selected record data.\n   */\n  @Output() selectedRowData: any = new EventEmitter<any>();\n\n  /*\n   Events\n   name : onHeaderClick\n   datatype : none\n   version : none\n   default : none\n   description : It will gives you click event and column info.\n   */\n  @Output() onHeaderClick: any = new EventEmitter<any>();\n\n  /*\n   Properties\n   name : height\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : height of grid\n   */\n  @Input() height: string;\n\n  /*\n   Properties\n   name : groupby\n   datatype :\n   version : 4.0 onwards\n   default : none\n   description : Set True for Enable group by functionality.\n   */\n  @Input() groupby = false;\n\n  /*\n   Properties\n   name : groupby-data-index\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description :  Primary data-index name of the column for Grouping.\n   */\n  @Input('groupby-data-index') groupbydataindex: string;\n\n  /*\n   Properties\n   name : enable-data-filter\n   datatype : boolean\n   version : 4.0 onwards\n   default : none\n   description :  Enables user to filter data.\n   */\n  @Input('enable-data-filter') enabledatafilter: boolean;\n\n  /*\n   Properties\n   name : c-class\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : Used for custom styled classes\n   */\n  @Input('c-class') cclass: string;\n\n  /*\n   Properties\n   name : tableHeadercclass\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : custom styled class for table header\n   */\n  @Input() tableHeadercclass: string;\n\n  /*\n   Properties\n   name : tableTitlecclass\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : custom styled class for table title\n   */\n  @Input() tableTitlecclass: string;\n\n  /*\n   Properties\n   name : tableDatacclass\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description :  custom styled class for table data\n   */\n  @Input() tableDatacclass: string;\n\n  /*\n   Properties\n   name : selected-row-color\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description :  sets color of selected row\n   */\n  @Input('selected-row-color') selectedrowcolor: string;\n\n  /*\n   Properties\n   name : column-defintion\n   datatype : any\n   version : 4.0 onwards\n   default : none\n   description :  If you don't want to use '<amexio-data-table-column>' tag then pass JSON data.\n   */\n  _columndefintion: any;\n  @Input('column-defintion')\n  set columndefintion(value: any) {\n    this._columndefintion = value;\n    if (this.componentLoaded) {\n      this.updateComponent();\n    }\n  }\n  get columndefintion(): any {\n    return this._columndefintion;\n  }\n\n  /*\n   Properties\n   name : enable-column-fiter\n   datatype : boolean\n   version : 4.0 onwards\n   default : none\n   description :  Set false to hide Column toggle functionality.\n   */\n  @Input('enable-column-fiter') enablecolumnfiter: boolean;\n\n  /*\n   Properties\n   name : enable-column-filter\n   datatype : boolean\n   version : 4.0 onwards\n   default : true\n   description :  Set false to hide Column toggle functionality.\n   */\n  @Input('enable-column-filter') enablecolumnfilter: boolean;\n\n  /*\n   Properties\n   name : global-fiter\n   datatype : boolean\n   version : 4.2 onwards\n   default : false\n   description :  Set false to hide Column toggle functionality.\n   */\n  @Input('global-filter') globalfilter: boolean;\n\n  /*\n   Properties\n   name : context-menu\n   datatype : any[]\n   version : 5.0.1 onwards\n   default :\n   description : Context Menu provides the list of menus on right click of row.\n   */\n  @Input('context-menu') contextmenu: any[];\n\n  @Output() rightClick: any = new EventEmitter<any>();\n\n  columns: any[] = [];\n\n  viewRows: any[] = [];\n\n  maxPage: number;\n\n  currentPage: number;\n\n  sortColumn: any;\n\n  pageNumbers: number[];\n\n  selectedRowNo: number;\n\n  selectAll = false;\n\n  selectedRows: any[];\n\n  summary: any[];\n\n  contextStyle: any;\n\n  summaryData: any[];\n\n  isSummary: boolean;\n\n  sortBy: number;\n\n  cloneData: any;\n\n  responseData: any;\n\n  filterCloneData: any;\n\n  rowId: any;\n\n  previousData: any;\n\n  columnPreviewData: any;\n\n  showToolTip: boolean;\n\n  showGroupByColumn: boolean;\n\n  totalPages: number;\n\n  /*global filter column attribute*/\n\n  filterValue: any;\n\n  globalFilterOptions: any;\n\n  flag: boolean;\n\n  tempContextMenu: any[] = [];\n\n  mouseLocation: { left: number; top: number } = { left: 0, top: 0 };\n\n  posixUp: boolean;\n\n  rightClickRowData: any;\n\n  /*group by column attribute*/\n\n  iconclassKey: string;\n\n  isExpanded = false;\n\n  mask = true;\n\n  private checkIcon = 'fa fa-check';\n\n  private plusIcon = 'fa fa-plus';\n\n  private checkDefaultIcon = 'checkbox default';\n\n  checkBoxSelectClass = '';\n\n  globalClickListenFunc: () => void;\n\n  @ContentChildren(AmexioGridColumnComponent) columnRef: QueryList<AmexioGridColumnComponent>;\n\n  constructor(\n    public element: ElementRef, public dataTableService: CommonDataService,\n    private cd: ChangeDetectorRef, private renderer: Renderer2,\n  ) {\n    this.selectedRows = [];\n    this.sortBy = -1;\n\n    this.globalFilterOptions = [{\n      key: 'Start With', value: '1', checkedStatus: this.checkIcon,\n    }, {\n      key: 'Ends With', value: '2', checkedStatus: '',\n    }, {\n      key: 'Contains', value: '3', checkedStatus: '',\n    }];\n  }\n\n  ngOnInit() {\n    if (this.enablecolumnfiter) {\n      this.enablecolumnfilter = this.enablecolumnfiter;\n    }\n    this.isExpanded = true;\n    this.iconclassKey = this.plusIcon;\n\n    if (this.enabledatafilter === true) {\n      this.globalfilter = false;\n    }\n\n    if (this.selectedrowcolor == null || this.selectedrowcolor === '') {\n      this.selectedrowcolor = '#dcecf7';\n    }\n    if (this.httpmethod && this.httpurl) {\n      this.dataTableService.fetchData(this.httpurl, this.httpmethod).subscribe(\n        (response) => {\n          this.responseData = response;\n        },\n        (error) => {\n        },\n        () => {\n          this.setData(this.responseData);\n        },\n      );\n    } else if (this.data) {\n      this.setData(this.data);\n      this.previousData = JSON.parse(JSON.stringify(this.data));\n    }\n    this.componentLoaded = true;\n\n    this.checkBoxSelectClass = this.setCheckBoxSelectClass();\n\n  }\n\n  updateComponent() {\n    if (this.previousData != null && JSON.stringify(this.previousData) !== JSON.stringify(this.data)) {\n      this.previousData = JSON.parse(JSON.stringify(this.data));\n      this.setChangeData(this.data);\n    }\n    if (this.columnPreviewData != null && this.columndefintion != null &&\n      JSON.stringify(this.columnPreviewData) !== JSON.stringify(this.columndefintion)) {\n      this.columnPreviewData = JSON.parse(JSON.stringify(this.columndefintion));\n      this.columns = this.columndefintion;\n    }\n\n  }\n\n  ngAfterContentInit() {\n    if (this.columndefintion) {\n      this.columns = this.columndefintion;\n      this.columnPreviewData = JSON.parse(JSON.stringify(this.columndefintion));\n    } else {\n      this.createConfig();\n    }\n  }\n\n  createConfig() {\n    let columnRefArray = [];\n    columnRefArray = this.columnRef.toArray();\n    for (const cr of columnRefArray) {\n      const columnConfig = cr;\n      let columnData: any;\n      if (columnConfig.headerTemplate != null && columnConfig.bodyTemplate != null) {\n        columnData = {\n          text: columnConfig.text,\n          dataindex: columnConfig.dataindex,\n          hidden: columnConfig.hidden,\n          datatype: columnConfig.datatype,\n          headerTemplate: columnConfig.headerTemplate,\n          width: columnConfig.width,\n          sort: columnConfig.sort,\n          bodyTemplate: columnConfig.bodyTemplate,\n          contextmenu: columnConfig.contextmenu,\n        };\n      } else if (columnConfig.headerTemplate != null && columnConfig.bodyTemplate == null) {\n        columnData = {\n          text: columnConfig.text,\n          dataindex: columnConfig.dataindex,\n          hidden: columnConfig.hidden,\n          datatype: columnConfig.datatype,\n          width: columnConfig.width,\n          sort: columnConfig.sort,\n          headerTemplate: columnConfig.headerTemplate,\n          contextmenu: columnConfig.contextmenu,\n        };\n      } else if (columnConfig.bodyTemplate != null && columnConfig.headerTemplate == null) {\n        columnData = {\n          text: columnConfig.text,\n          dataindex: columnConfig.dataindex,\n          hidden: columnConfig.hidden,\n          datatype: columnConfig.datatype,\n          width: columnConfig.width,\n          sort: columnConfig.sort,\n          bodyTemplate: columnConfig.bodyTemplate,\n          contextmenu: columnConfig.contextmenu,\n        };\n      } else if (columnConfig.bodyTemplate == null && columnConfig.headerTemplate == null) {\n        columnData = {\n          text: columnConfig.text,\n          dataindex: columnConfig.dataindex,\n          hidden: columnConfig.hidden,\n          width: columnConfig.width,\n          sort: columnConfig.sort,\n          datatype: columnConfig.datatype,\n          contextmenu: columnConfig.contextmenu,\n        };\n      }\n      if (columnConfig.summarytype) {\n        columnData['summarytype'] = columnConfig.summarytype;\n      }\n\n      if (columnConfig.summarycaption) {\n        columnData['summarycaption'] = columnConfig.summarycaption;\n      }\n\n      this.columns.push(columnData);\n    }\n  }\n\n  setChangeData(httpResponse: any) {\n    this.setSelectedFlag(httpResponse);\n    if (!this.groupby) {\n      this.renderData();\n    }\n    this.totalPages = this.pageNumbers.length;\n    this.mask = false;\n  }\n\n  setData(httpResponse: any) {\n    this.viewRows = this.getResponseData(httpResponse);\n    this.setSelectedFlag(this.viewRows);\n    this.data = this.viewRows;\n    if (this.groupby) {\n      this.cloneData = JSON.parse(JSON.stringify(this.data));\n    }\n    if (this.enabledatafilter) {\n      this.filterCloneData = JSON.parse(JSON.stringify(this.data));\n    }\n    if (this.globalfilter) {\n      this.filterCloneData = JSON.parse(JSON.stringify(this.data));\n    }\n    this.renderData();\n    if (this.groupby) {\n      this.setColumnData();\n    }\n    this.totalPages = this.pageNumbers.length;\n    this.mask = false;\n  }\n\n  setSelectedFlag(viewRows: any) {\n    viewRows.forEach((row: any) => {\n      if (!row.hasOwnProperty('isSelected')) {\n        row['isSelected'] = false;\n      }\n    });\n  }\n\n  setGroupByColumn(col: any) {\n    this.groupbydataindex = col.dataindex;\n    this.selectAll = false;\n    this.setColumnData();\n  }\n  // Method required for global filter\n\n  keyUpSearch() {\n\n    if (this.filterValue == null || this.filterValue === '') {\n      this.removeGlobalFilter();\n    }\n    const filter: any = {\n      value: this.filterValue,\n    };\n\n    this.globalFilterOptions.forEach((opt: any) => {\n      if (opt.checkedStatus === this.checkIcon) {\n        filter['filter'] = opt.value;\n      }\n    });\n    this.getGlobalFilteredData(filter);\n  }\n\n  checkStatus() {\n    this.globalFilterOptions.forEach((opt: any) => {\n      opt.checkedStatus = '';\n    });\n  }\n\n  selectedOption(opt: any) {\n    this.checkStatus();\n    const filter: any = {\n      value: this.filterValue,\n      filter: opt.value,\n    };\n    opt.checkedStatus = this.checkIcon;\n    if (this.filterValue) {\n      this.getGlobalFilteredData(filter);\n    }\n    this.showToolTip = false;\n  }\n  removeGlobalFilter() {\n    this.filterValue = '';\n  }\n  getGlobalFilteredData(filteredObj: any) {\n    this.data = [];\n    this.filterCloneData.forEach((option: any) => {\n      this.columns.forEach((opt: any) => {\n        let status = false;\n        const optvalue = option[opt.dataindex].toLowerCase();\n        const filtervalue = filteredObj.value.toLowerCase();\n        if (filteredObj.filter === '1') {\n          status = optvalue.startsWith(filtervalue);\n        } else if (filteredObj.filter === '2') {\n          status = optvalue.endsWith(filtervalue);\n        } else if (filteredObj.filter === '3') {\n          status = optvalue.includes(filtervalue);\n        }\n        if (status) {\n          this.data.push(option);\n        }\n      });\n    });\n\n    if (this.data.length > (1 * this.pagesize)) {\n      this.pagingRegenration();\n      this.renderData();\n    } else {\n      this.viewRows = this.data;\n      this.currentPage = 1;\n      this.maxPage = 1;\n    }\n  }\n\n  filterConditionMethod(filteredObj: any, option: any, opt: any) {\n    const status = false;\n    this.data = [];\n    let condition: any;\n    if (filteredObj.filter === '1') {\n      condition = option[opt.dataindex].toLowerCase().startsWith(filteredObj.value.toLowerCase());\n      this.setstatus(condition);\n    }\n    if (filteredObj.filter === '2') {\n      condition = option[opt.dataindex].toLowerCase().endsWith(filteredObj.value.toLowerCase());\n      this.setstatus(condition);\n    }\n    if (filteredObj.filter === '3') {\n      condition = option[opt.dataindex].toLowerCase().includes(filteredObj.value.toLowerCase());\n      this.setstatus(condition);\n    }\n\n  }\n\n  // Refactored code to avoid duplication: for filter grid\n  setstatus(condition: any) {\n    if (condition) {\n      status = condition;\n    }\n  }\n\n  setColumnData() {\n    this.data = this.cloneData;\n    const groups = {};\n    this.data.forEach((option) => {\n      const groupName = option[this.groupbydataindex];\n      if (!groups[groupName]) {\n        groups[groupName] = [];\n      }\n      groups[groupName].push(option);\n    });\n    this.data = [];\n    for (const groupName in groups) {\n      if (groups.hasOwnProperty(groupName)) {\n        this.data.push({ expanded: false, isSelected: false, group: groupName, groupData: groups[groupName] });\n      }\n    }\n    /*-------Aggregation---------*/\n    this.renderData();\n    this.cd.detectChanges();\n  }\n\n  renderData() {   // calculate page no for pagination\n    if (this.data) {\n      this.maxPage = 0;\n      this.pageNumbers = [];\n      if (this.data.length > (1 * this.pagesize)) {\n        this.maxPage = Math.floor((this.data.length / this.pagesize));\n        if ((this.data.length % this.pagesize) > 0) {\n          this.maxPage++;\n        }\n      }\n      for (let pageNo = 1; pageNo <= this.maxPage; pageNo++) {\n        this.pageNumbers.push(pageNo);\n      }\n    }\n    if (this.pagesize >= 1) {\n      this.getPageSize();\n    } else {\n      this.viewRows = this.data;\n    }\n    this.selectedRowNo = -1;\n  }\n\n  // Method Calls when page size is more than 1\n  private getPageSize() {\n    const rowsTemp = this.data;\n    const newRows = [];\n    let startIndex = 0;\n    let endIndex = this.pagesize;\n    if (this.currentPage > 1) {\n      startIndex = (this.currentPage - 1) * this.pagesize;\n      endIndex = startIndex + this.pagesize;\n    }\n    while (startIndex <= endIndex - 1) {\n      if (rowsTemp[startIndex]) {\n        newRows.push(rowsTemp[startIndex]);\n      }\n      startIndex++;\n    }\n    this.viewRows = newRows;\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n\n    return responsedata;\n  }\n\n  selectAllRecord() {\n    this.selectAll = !this.selectAll;\n\n    if (this.selectAll) {\n      for (const vr of this.viewRows) {\n        this.selectedRows.push(vr);\n      }\n    } else {\n      this.selectedRows = [];\n    }\n    this.emitSelectedRows();\n\n    if (this.groupby) {\n      if (!this.selectAll) {\n        this.viewRows.forEach((row) => {\n          row.isSelected = false;\n          row.groupData.forEach((node: any) => {\n            node.isSelected = false;\n          });\n        });\n      } else {\n        this.viewRows.forEach((row) => {\n          row.isSelected = true;\n          row.groupData.forEach((node: any) => {\n            node.isSelected = true;\n          });\n        });\n      }\n    }\n  }\n\n  onColumnCheck(column: any) {\n    column.hidden = !column.hidden;\n  }\n\n  onRowClick(rowData: any, rowIndex: any) {\n    this.data.forEach((opt: any) => {\n      opt.isSelected = false;\n      if (opt.hasOwnProperty('groupData')) {\n        opt.groupData.forEach((optChild: any) => {\n          optChild.isSelected = false;\n        });\n      }\n    });\n    rowData.isSelected = !rowData.isSelected;\n    rowIndex = 'row' + rowIndex;\n    this.rowId = rowIndex;\n    this.rowSelect.emit(rowData);\n    this.selectedRowNo = rowIndex;\n  }\n\n  loadPageData(pageNumber: number) {\n    this.currentPage = pageNumber;\n    this.renderData();\n  }\n\n  getFilteredData(filteredObj: any) {\n    let status = false;\n    if (filteredObj.length > 0) {\n      this.data = [];\n      this.filterCloneData.forEach((option: any) => {\n        status = this.filterOpertion(option, filteredObj);\n        if (status) {\n          this.data.push(option);\n          status = false;\n        }\n      });\n      if (this.data.length > (1 * this.pagesize)) {\n        this.pagingRegenration();\n        this.renderData();\n      } else {\n        this.viewRows = this.data;\n        this.currentPage = 1;\n        this.maxPage = 1;\n      }\n    } else {\n      this.data = this.filterCloneData;\n      this.pagingRegenration();\n      this.renderData();\n    }\n  }\n\n  checkNumberFilter(filter: string, key: any, value: number): boolean {\n    if (filter === '<') {\n      return key > value;\n    } else if (filter === '>') {\n      return key < value;\n    } else if (filter === '>=') {\n      return key <= value;\n    } else if (filter === '=<') {\n      return key >= value;\n    } else if (filter === '==') {\n      return key === value;\n    } else if (filter === '!=') {\n      return key !== value;\n    } else {\n      return key !== value;\n    }\n  }\n\n  checkStringFilter(filter: string, key: any, value: string): boolean {\n    if (filter === '3') {\n      return key.includes(value);\n    } else if (filter === '1') {\n      return key.startsWith(value);\n    } else if (filter === '2') {\n      return key.endsWith(value);\n    } else {\n      return key !== value;\n    }\n  }\n\n  filterOpertion(data: any, filteredObj: any) {\n    const statusArray: any = [];\n    let condition: boolean;\n    filteredObj.forEach((filterOpt: any) => {\n      if (filterOpt.type === 'string') {\n        condition = this.checkStringFilter(filterOpt.filter, data[filterOpt.key].toLowerCase(), filterOpt.value.toLowerCase());\n\n      } else if (filterOpt.type === 'number') {\n        condition = this.checkNumberFilter(filterOpt.filter, data[filterOpt.key], filterOpt.value);\n      }\n      statusArray.push(condition);\n    });\n    statusArray.forEach((opt: any) => {\n      if (opt === false) {\n        condition = false;\n      }\n    });\n    return condition;\n  }\n\n  pagingRegenration() {\n    this.maxPage = Math.floor((this.data.length / this.pagesize));\n    if ((this.data.length % this.pagesize) > 0) {\n      this.maxPage++;\n    }\n    for (let pageNo = 1; pageNo <= this.maxPage; pageNo++) {\n      this.pageNumbers.push(pageNo);\n    }\n  }\n\n  setSelectedRow(rowData: any, event: any) {\n    if (event.classList.value === this.checkDefaultIcon) {\n      this.selectedRows.push(rowData);\n      event.classList.value = 'checkbox active';\n    } else {\n      const indexOf = this.selectedRows.indexOf(rowData);\n      this.selectedRows.splice(indexOf, 0);\n      event.classList.value = this.checkDefaultIcon;\n    }\n    this.emitSelectedRows();\n  }\n\n  emitSelectedRows() {\n    const sRows = [];\n    for (const sr of this.selectedRows) {\n      if (sr) {\n        sRows.push(sr);\n      }\n    }\n    this.selectedRowData.emit(sRows);\n\n  }\n\n  setCheckBoxSelectClass() {\n    if (this.selectAll) {\n      return 'checkbox active';\n    } else if (!this.selectAll) {\n      return this.checkDefaultIcon;\n    }\n  }\n\n  sortOnColHeaderClick(sortCol: any, clickEvent: any) {\n\n    this.onHeaderClick.emit({ event: clickEvent, data: sortCol });\n    if (sortCol.sort) {\n      if (this.sortBy === -1) {\n        this.sortBy = 1;\n      } else if (this.sortBy === 1) {\n        this.sortBy = 2;\n      } else if (this.sortBy === 2) {\n        this.sortBy = 1;\n      }\n      this.setSortColumn(sortCol, this.sortBy);\n    }\n\n  }\n\n  setSortColumn(sortCol: any, _sortBy: number) {\n\n    /*------set column sort false for other column--------*/\n    this.columns.forEach((opt) => {\n      opt['isColumnSort'] = false;\n    });\n    this.sortBy = _sortBy;\n    this.sortColumn = sortCol;\n    this.sortColumn.sort = true;\n    this.sortColumn.isColumnSort = true;\n\n    this.sortData();\n  }\n\n  sortData() {\n    if (this.sortColumn) {\n      let sortColDataIndex: any;\n      const sortOrder = this.sortBy;\n      if (this.sortColumn.dataindex && this.sortColumn.datatype) {\n        const dataindex = this.sortColumn.dataindex;\n        sortColDataIndex = dataindex;\n        if (this.sortColumn.datatype === 'string') {\n\n          if (this.groupby) {\n            this.sortOrderGrpBy(sortOrder);\n          } else {\n            this.data.sort((a, b) => {\n              const x = a[sortColDataIndex].toLowerCase();\n              const y = b[sortColDataIndex].toLowerCase();\n              return this.noGrpBySortOrder(sortOrder, x, y);\n            });\n          }\n        } else if (this.sortColumn.datatype === 'number') {\n          this.sortOrderByNumber(sortOrder, sortColDataIndex);\n        }\n      }\n    }\n    this.renderData();\n  }\n\n  // Sort Order for number field\n  sortOrderByNumber(sortOrder: any, sortColDataIndex: any) {\n    if (this.groupby) {\n      this.data.sort((a, b) => {\n        const x = a.group;\n        const y = b.group;\n\n        if (sortOrder === 2) {\n          return y - x;\n        } else {\n          return x - y;\n        }\n\n      });\n    } else {\n      this.data.sort((a, b) => {\n        const x = a[sortColDataIndex];\n        const y = b[sortColDataIndex];\n        if (sortOrder === 2) {\n          return y - x;\n        } else {\n          return x - y;\n        }\n      });\n    }\n  }\n\n  // Sort order if group by is false\n  noGrpBySortOrder(sortOrder: any, x: any, y: any) {\n    if (sortOrder === 2) {\n      if (x < y) {\n        return 1;\n      }\n      if (x > y) {\n        return -1;\n      }\n    } else {\n      if (x < y) {\n        return -1;\n      }\n      if (x > y) {\n        return 1;\n      }\n    }\n    return 0;\n  }\n\n  // Sort Order if group by is true\n  sortOrderGrpBy(sortOrder: any) {\n    this.data.sort((a, b) => {\n      const x = a.group.toLowerCase();\n      const y = b.group.toLowerCase();\n\n      if (sortOrder === 2) {\n        if (x < y) {\n          return 1;\n        }\n        if (x > y) {\n          return -1;\n        }\n      } else {\n        if (x < y) {\n          return -1;\n        }\n        if (x > y) {\n          return 1;\n        }\n      }\n\n      return 0;\n    });\n  }\n\n  /* grouby column methods*/\n\n  onTabClick(btn: any) {\n    btn.classList.toggle('active-accordion');\n    const panel = btn.nextElementSibling;\n    if (this.iconclassKey === this.plusIcon) {\n      this.iconclassKey = 'fa fa-minus';\n    } else if (this.iconclassKey === 'fa fa-minus') {\n      this.iconclassKey = this.plusIcon;\n    }\n    if (panel.style.maxHeight) {\n      panel.style.maxHeight = null;\n    } else {\n      panel.style.maxHeight = panel.scrollHeight + 'px';\n    }\n  }\n\n  toogle(row: any, index: number) {\n    row.expanded = !row.expanded;\n    if (row.expanded) {\n      if (row.hasOwnProperty('groupData')) {\n        this.addRows(row, index);\n      }\n    } else {\n      if (row.hasOwnProperty('groupData')) {\n        this.removeRows(row);\n      }\n    }\n  }\n\n  addRows(row: any, index: number) {\n    row.level = Math.floor(Math.random() * 900) + 100;\n    row.groupData.forEach((node: any, index1: any) => {\n      node.level = row.level;\n      this.viewRows.splice(index + (index1 + 1), 0, node);\n    });\n  }\n\n  removeRows(row: any) {\n    let count = 0;\n    this.viewRows.forEach((node: any) => {\n      if (!node.hasOwnProperty('group') && node.level === row.level) {\n        count++;\n      }\n    });\n    this.viewRows.forEach((node: any, index: any) => {\n      if (!node.hasOwnProperty('group') && node.level === row.level) {\n        this.viewRows.splice(index, count);\n      }\n    });\n  }\n\n  isGroupChecking(row: any) {\n    if (row.hasOwnProperty('group')) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  selectParent(row: any) {\n    if (this.groupby) {\n      row.isSelected = !row.isSelected;\n      row.groupData.forEach((node: any) => {\n        node.isSelected = !node.isSelected;\n      });\n      this.selectedRows = [];\n      this.viewRows.forEach((rows) => {\n        if (rows.isSelected) {\n          this.selectedRows.push(rows);\n        }\n      });\n      this.emitSelectedRows();\n    }\n  }\n\n  loadContextMenu(event: any, row: any, col: any, ref: any) {\n    this.tempContextMenu = [];\n    this.tempSelectedFlag(this.viewRows);\n\n    this.mouseLocation.left = event.clientX;\n    this.mouseLocation.top = event.clientY;\n    row.isSelected = true;\n\n    if (col.contextmenu && col.contextmenu.length > 0) {\n      this.flag = true;\n      this.tempContextMenu = col.contextmenu;\n      this.addListner();\n    } else if (this.contextmenu && this.contextmenu.length > 0) {\n      this.tempContextMenu = this.contextmenu;\n      this.flag = true;\n      this.addListner();\n    }\n    this.posixUp = this.getListPosition(ref);\n    event.preventDefault();\n    event.stopPropagation();\n    this.rightClickRowData = row;\n    this.contextStyle = this.getContextMenuStyle();\n\n  }\n\n  onContextNodeClick(itemConfig: any) {\n    if (!itemConfig.disabled) {\n      const obj = {\n        menuData: itemConfig,\n        rowData: this.rightClickRowData,\n      };\n      this.flag = false;\n      this.removeListner();\n      this.rightClick.emit(obj);\n    }\n  }\n\n  getContextMenuStyle() {\n    return {\n      'cursor': 'default',\n      'position': 'fixed',\n      'display': this.flag ? 'block' : 'none',\n      'left': this.mouseLocation.left + 'px',\n      'top': this.mouseLocation.top + 'px',\n      'box-shadow': '1px 1px 2px #000000',\n      'width': '15%',\n    };\n  }\n\n  // Method to get List position\n  private getListPosition(elementRef: any) {\n    const height = 240;\n    if ((window.screen.height - elementRef.getBoundingClientRect().bottom) < height) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Method to get Selected Row\n  private tempSelectedFlag(viewRows: any) {\n    viewRows.forEach((row: any) => {\n      if (row.isSelected) {\n        row.isSelected = false;\n      }\n    });\n  }\n\n  addListner() {\n    this.globalClickListenFunc = this.renderer.listen('document', 'click', (e: any) => {\n      this.flag = false;\n      if (!this.flag) {\n        this.removeListner();\n      }\n    });\n  }\n\n  removeListner() {\n    if (this.globalClickListenFunc) {\n      this.globalClickListenFunc();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.removeListner();\n  }\n}\n","/**\n * Created by pratik on 2/1/18.\n */\n\n/*\nComponent Name : Amexio data grid filter\nComponent Selector : <data-grid-filter>\nComponent Description : Data grid component to render large amount of\ndata-set with various options like sorting in ascending or descending order,\nclient-side pagination, column hide/unhide, single/multi selection,Filtering\n(enable only for string and number type data) user define template for rendering\nfor column header and column data, displaying summation of numeric column.\n*/\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CommonDataService } from '../../services/data/common.data.service';\n@Component({\n  selector: 'data-grid-filter', template: `\n    <ng-container *ngIf=\"column.datatype==='string'\">\n      <div class=\"inputgroup\">\n      <input type=\"text\" [(ngModel)]=\"filterValue\" [attr.placeholder]=\"column.text\" (keyup)=\"keyUpSearch(column)\"\n             type=\"text\" class=\"input-control\"\n             aria-label=\"Text input with dropdown button\">\n      <!--<i class=\"fa fa-filter\" aria-hidden=\"true\" (click)=\"showToolTip = !showToolTip\"></i>-->\n      <span class=\"datatable-filter-icon\">\n        <amexio-data-icon key=\"datagrid_filter\" (click)=\"showToolTip = !showToolTip\"></amexio-data-icon>\n      </span>\n      <span *ngIf=\"showToolTip\" class=\"dropdown\" style=\"width: 250px;\">\n        <ul class=\"dropdown-list\" *ngFor=\"let opt of filterOptions\">\n          <ng-container *ngIf=\"opt.type===column.datatype\">\n          <li class=\"list-items\">\n              <div (click)=\"selectedOption(column,opt)\">\n              {{opt.key}}&nbsp;<i [class]=\"opt.checkedStatus\" aria-hidden=\"true\"></i>\n            </div>\n          </li>\n          </ng-container>\n         </ul>\n      </span>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"column.datatype==='number'\">\n              <div class=\"inputgroup float-right\">\n\n        <input type=\"text\" [(ngModel)]=\"filterValue\" [attr.placeholder]=\"column.text\" (keyup)=\"keyUpSearch(column)\"\n               type=\"number\" class=\"input-control\"\n               aria-label=\"Text input with dropdown button\">\n        <!--<i class=\"fa fa-filter\" aria-hidden=\"true\" (click)=\"showToolTip = !showToolTip\"></i>-->\n     <span class=\"datatable-filter-icon\">\n      <amexio-data-icon key=\"datagrid_filter\" (click)=\"showToolTip = !showToolTip\"></amexio-data-icon>\n     </span>\n       <span *ngIf=\"showToolTip\" class=\"dropdown\" style=\"width: 250px;\">\n        <ul class=\"dropdown-list\" *ngFor=\"let opt of filterOptions\">\n          <ng-container *ngIf=\"opt.type===column.datatype\">\n          <li class=\"list-items\">\n              <div (click)=\"selectedOption(column,opt)\">\n              {{opt.key}}&nbsp;<i [class]=\"opt.checkedStatus\" aria-hidden=\"true\"></i>\n            </div>\n          </li>\n          </ng-container>\n         </ul>\n      </span>\n              </div>\n    </ng-container>\n\n  `,\n})\n\nexport class DataGridFilterComponent implements OnInit {\n\n  /*\nFor internal use\n*/\n  @Input() column: any;\n\n  /*\n for internal use\n*/\n  @Output() filterObject: any = new EventEmitter<any>();\n\n  filterValue: any;\n\n  filterOptions: any;\n\n  elementId: any;\n\n  showToolTip: boolean;\n\n  private checkIcon = 'fa fa-check';\n\n  constructor(private dataTableService: CommonDataService) {\n\n    this.filterOptions = [{\n      key: 'Is Equal To', value: '==', type: 'string', checkedStatus: '',\n    }, {\n      key: 'Is Not Equal To', value: '!=', type: 'string', checkedStatus: '',\n    }, {\n      key: 'Start With', value: '1', type: 'string', checkedStatus: this.checkIcon,\n    },\n    {\n      key: 'Ends With', value: '2', type: 'string', checkedStatus: '',\n    }, {\n      key: 'Contains', value: '3', type: 'string', checkedStatus: '',\n    }, {\n      key: 'Is Equal To', value: '==', type: 'number', checkedStatus: '',\n    }, {\n      key: 'Is Not Equal To', value: '!=', type: 'number', checkedStatus: '',\n    }, {\n      key: 'Is greater Than', value: '<', type: 'number', checkedStatus: '',\n    }, {\n      key: 'Is less Than', value: '>', type: 'number', checkedStatus: '',\n    },\n\n    {\n      key: 'Is less Than or equal to', value: '>=', type: 'number', checkedStatus: '',\n    }, {\n      key: 'Is greater Than or equal to', value: '=<', type: 'number', checkedStatus: this.checkIcon,\n    }];\n  }\n\n  ngOnInit() {\n  }\n\n  selectedOption(col: any, opt: any) {\n    this.checkStatus();\n    const filter: any = {\n      key: col.dataindex,\n      value: this.filterValue,\n      filter: opt.value,\n      type: col.datatype,\n    };\n    opt.checkedStatus = this.checkIcon;\n    if (this.filterValue) {\n      col.filterIcon = true;\n      this.filterDataObject(filter, col);\n    }\n    this.showToolTip = false;\n  }\n\n  keyUpSearch(col: any) {\n    this.showToolTip = false;\n    if (this.filterValue == null || this.filterValue === '') {\n      this.removeFilter(col);\n    } else {\n      col.filterIcon = true;\n      const filter: any = {\n        key: col.dataindex,\n        value: this.filterValue,\n        type: col.datatype,\n      };\n      this.filterOptions.forEach((opt: any) => {\n        if (opt.checkedStatus === this.checkIcon && col.datatype === opt.type) {\n            filter['filter'] = opt.value;\n        }\n      });\n      this.filterDataObject(filter, col);\n    }\n  }\n\n  removeFilter(column: any) {\n    this.filterValue = '';\n    column.filterIcon = false;\n    this.dataTableService.filteredObject.forEach((option: any, index: any) => {\n      if (option.key === column.dataindex) {\n        this.dataTableService.filteredObject.splice(index, 1);\n      }\n    });\n    this.filterObject.emit(this.dataTableService.filteredObject);\n  }\n\n  checkStatus() {\n    this.filterOptions.forEach((opt: any) => {\n      opt.checkedStatus = '';\n    });\n  }\n\n  filterDataObject(filter: any, col: any) {\n    this.dataTableService.filteredObject.forEach((option: any, index: any) => {\n      if (option.key === col.dataindex) {\n        this.dataTableService.filteredObject.splice(index, 1);\n      }\n    });\n    this.dataTableService.filteredObject.push(filter);\n    this.filterObject.emit(this.dataTableService.filteredObject);\n  }\n}\n","\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-datagrid-header', template: `\n    <ng-content></ng-content>\n  `,\n})\n\nexport class AmexioDataGridHeaderComponent implements OnInit {\n\n    /*\nProperties\nname :padding\ndatatype : string\nversion : 4.2 onwards\ndefault : left\ndescription : padding for header.\n*/\n@Input() padding: string;\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","/**\n * Created by pratik on 21/12/17.\n */\nimport { Injectable } from '@angular/core';\n\nconst faFaCaretIcon  = 'fa fa-caret-down';\n\nconst faFaTimesIcon    = 'fa fa-times';\n\nconst ICON_MAPPING =\n[\n  {\n    component: 'datepicker_previous',\n    fa: 'fa fa-chevron-left',\n    mat: 'keyboard_arrow_left',\n  },\n  {\n    component: 'datepicker_calendar',\n    fa: 'fa fa-calendar',\n    mat: 'date_range',\n  },\n  {\n    component: 'datepicker_next',\n    fa: 'fa fa-chevron-right',\n    mat: 'keyboard_arrow_right',\n  },\n  {\n    component: 'datepicker_previous_fast',\n    fa: 'fa fa-step-backward',\n    mat: 'fast_rewind',\n  },\n  {\n    component: 'datepicker_next_fast',\n    fa: 'fa fa-step-forward',\n    mat: 'fast_forward',\n  },\n  {\n    component: 'accordion_expand',\n    fa: 'fa fa-plus',\n    mat: 'add',\n  },\n  {\n    component: 'accordion_collapse',\n    fa: 'fa fa-minus',\n    mat: 'remove',\n  },\n  {\n    component: 'tree_expand',\n    fa: 'fa fa-chevron-down',\n    mat: 'keyboard_arrow_down',\n  },\n  {\n    component: 'tree_collapse',\n    fa: 'fa fa-chevron-right',\n    mat: 'keyboard_arrow_right',\n  },\n  {\n    component: 'dropdown_caret',\n    fa: faFaCaretIcon,\n    mat: 'arrow_drop_down',\n  },\n  {\n    component: 'tab_close',\n    fa: faFaTimesIcon,\n    mat: 'close',\n  },\n  {\n    component: 'window_close',\n    fa: faFaTimesIcon,\n    mat: 'close',\n  },\n  {\n    component: 'window_maximize',\n    fa: 'fa fa-window-maximize',\n    mat: 'open_with',\n  },\n  {\n    component: 'window_restore',\n    fa: 'fa fa-window-restore',\n    mat: 'indeterminate_check_box',\n  },\n  {\n    component: 'paginator_previous',\n    fa: 'fa fa-angle-left',\n    mat: 'keyboard_arrow_left',\n  },\n  {\n    component: 'paginator_next',\n    fa: 'fa fa-angle-right',\n    mat: 'keyboard_arrow_right',\n  },\n  {\n    component: 'paginator_first',\n    fa: 'fa fa-angle-double-left',\n    mat: 'first_page',\n  },\n  {\n    component: 'paginator_last',\n    fa: 'fa fa-angle-double-right',\n    mat: 'last_page',\n  },\n  {\n    component: 'itemselector_caretup',\n    fa: 'fa fa-caret-up',\n    mat: 'arrow_drop_up',\n  },\n  {\n    component: 'itemselector_caretdown',\n    fa: faFaCaretIcon,\n    mat: 'arrow_drop_down',\n  },\n  {\n    component: 'itemselector_arrowup',\n    fa: 'fa fa-arrow-up',\n    mat: 'arrow_upward',\n  },\n  {\n    component: 'itemselector_arrowdown',\n    fa: 'fa fa-arrow-down',\n    mat: 'arrow_downward',\n  },\n  {\n    component: 'itemselector_arrowleft',\n    fa: 'fa fa-arrow-left',\n    mat: 'keyboard_arrow_left',\n  },\n  {\n    component: 'itemselector_arrowright',\n    fa: 'fa fa-arrow-right',\n    mat: 'keyboard_arrow_right',\n  },\n  {\n    component: 'tab_previous',\n    fa: 'fa fa-angle-left fa-2x',\n    mat: 'keyboard_arrow_left',\n  },\n  {\n    component: 'tab_next',\n    fa: 'fa fa-angle-right  fa-2x',\n  },\n  {\n    component: 'tab_close',\n    fa: faFaTimesIcon,\n    mat: 'close',\n  },\n  {\n    component: 'fieldset_expand',\n    fa: 'fa fa-plus',\n    mat: 'add',\n  },\n  {\n    component: 'fieldset_collpase',\n    fa: 'fa fa-minus',\n    mat: 'remove',\n  },\n  {\n    component: 'carousel_previous',\n    fa: 'fa fa-angle-left fa-2x',\n    mat: 'keyboard_arrow_left',\n  },\n  {\n    component: 'carousel_next',\n    fa: 'fa fa-angle-right  fa-2x',\n  },\n  {\n    component: 'dockbar_close',\n    fa: faFaTimesIcon,\n    mat: 'close',\n  },\n  {\n    component: 'notify_close',\n    fa: faFaTimesIcon,\n    mat: 'close',\n  },\n  {\n    component: 'sidenav_bar',\n    fa: 'fa fa-bars fa-2x',\n    mat: 'menu',\n  },\n  {\n    component: 'sidenav_close',\n    fa: faFaTimesIcon,\n    mat: 'close',\n  },\n  {\n    component: 'datagrid_arrowdown',\n    fa: 'fa fa-arrow-down',\n    mat: 'arrow_downward',\n  },\n  {\n    component: 'datagrid_arrowup',\n    fa: 'fa fa-arrow-up',\n    mat: 'arrow_upward',\n  },\n  {\n    component: 'datagrid_list',\n    fa: 'fa fa-th-list',\n    mat: 'view_list',\n  },\n  {\n    component: 'datagrid_expand',\n    fa: 'fa fa-caret-right',\n    mat: '',\n  },\n  {\n    component: 'datagrid_collapse',\n    fa: faFaCaretIcon,\n    mat: 'arrow_drop_down',\n  },\n  {\n    component: 'datagrid_collapse',\n    fa: faFaCaretIcon,\n    mat: 'arrow_drop_down',\n  },\n  {\n    component: 'datagrid_filter',\n    fa: 'fa fa-filter',\n    mat: 'filter_list',\n  },\n  {\n    component: 'tree_filter',\n    fa: 'fa fa-filter',\n    mat: 'filter_list',\n  },\n  {\n    component: 'data_check',\n    fa: 'fa fa-check',\n    mat: 'check',\n  },\n  {\n    component: 'button_caret-down',\n    fa: faFaCaretIcon,\n    mat: 'arrow_drop_down',\n  },\n  {\n    component: 'button_angle-right',\n    fa: 'fa fa-angle-right',\n    mat: 'arrow_drop_right',\n  },\n  {\n    component: 'button_angle-down',\n    fa: 'fa fa-angle-down',\n    mat: 'arrow_drop_down',\n  },\n  {\n    component: 'menubar_ravelry',\n    fa: 'fa fa-ravelry',\n    mat: 'done',\n  },\n  {\n    component: 'sidenav-angle-up',\n    fa: 'fa fa-angle-up',\n    mat: 'keyboard_arrow_up',\n  },\n  {\n    component: 'sidenav-angle-down',\n    fa: 'fa fa-angle-down',\n    mat: 'keyboard_arrow_down',\n  },\n  {\n    component: 'window-msgtype-error',\n    fa: 'fa fa-exclamation-triangle fa-2x fa-fw',\n    mat: 'keyboard_arrow_down',\n  },\n  {\n    component: 'window-msgtype-warning',\n    fa: 'fa fa-exclamation-triangle fa-2x fa-fw',\n    mat: 'keyboard_arrow_down',\n  },\n  {\n    component: 'window-msgtype-help',\n    fa: 'fa fa-question-circle fa-2x fa-fw',\n    mat: 'keyboard_arrow_down',\n  },\n  {\n    component: 'window-msgtype-confirm',\n    fa: 'fa fa-check-circle fa-2x fa-fw',\n    mat: 'keyboard_arrow_down',\n  },\n  {\n    component: 'horizontal-tree-expanded',\n    fa: 'fa fa-caret-right fa-fw',\n    mat: 'keyboard_arrow_right',\n  },\n  {\n    component: 'horizontal-tree-collapse',\n    fa: 'fa fa-caret-left fa-fw',\n    mat: 'keyboard_arrow_left',\n  },\n  {\n    component: 'button-loading-icon',\n    fa: 'fa fa-refresh fa-spin',\n    mat: 'cached',\n  },\n  {\n    component: 'datepicker-clock-icon',\n    fa: 'fa fa-clock-o',\n    mat: 'access_time',\n  },\n];\n\n@Injectable()\nexport class IconLoaderService {\n  public get iconToUse(): string {\n    if (this._iconToUse == null) {\n      return 'fa';\n    } else {\n      return this._iconToUse;\n    }\n  }\n\n  public set iconToUse(value: string) {\n    this._iconToUse = value;\n  }\n\n  /*  get iconToUse(): any {\n    let iconToUse;\n    if(this._iconToUse == null){\n      iconToUse = 'fa';\n    }\n    else{\n      if(this._iconToUse!=null && this._iconToUse.toString() == null)\n        iconToUse =  this._iconToUse\n    }\n      return iconToUse;\n  }\n\n  set iconToUse(value: any) {\n    this._iconToUse = value;\n    if(this._iconToUse != null){\n      this.iconMappings = ICON_MAPS;\n    }\n  }*/\n  public _iconToUse: string;\n  iconMappings: any[];\n  constructor() {\n    this.iconMappings = ICON_MAPPING;\n  }\n\n  modifyIconClass(componentKey: string, newValue: string) {\n    if (this.iconMappings != null) {\n      this.iconMappings.forEach((icon: any) => {\n        if (icon.component === componentKey) {\n          icon[this._iconToUse.toString()] = newValue;\n        }\n      });\n    }\n  }\n}\n","/**\n * Created by dattaram on 21/12/17.\n */\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { IconLoaderService } from '../../services/icon/icon.service';\n\n@Component({\n  selector: 'amexio-data-icon', template: `\n    <ng-container *ngIf=\"iconLoaderService.iconToUse == 'fa'\">\n\n      <ng-container *ngIf=\"customclass != null\">\n        <i class=\"{{customclass}}\" aria-hidden=\"true\" (click)=\"onClick.emit($event)\"></i>\n      </ng-container>\n      <ng-container *ngIf=\"customclass == null\">\n        <i class=\"{{iconClass}}\" aria-hidden=\"true\" (click)=\"onClick.emit($event)\"></i>\n      </ng-container>\n\n    </ng-container>\n\n    <ng-container *ngIf=\"iconLoaderService.iconToUse == 'mat'\">\n\n      <ng-container *ngIf=\"customclass != null\">\n        <i class=\"material-icons\" (click)=\"onClick.emit($event)\">{{customclass}}</i>\n      </ng-container>\n\n      <ng-container *ngIf=\"customclass == null\">\n        <i class=\"material-icons\" (click)=\"onClick.emit($event)\">{{iconClass}}</i>\n      </ng-container>\n\n\n    </ng-container>\n\n  `,\n})\n\nexport class AmexioDataIconComponent implements OnInit, OnChanges {\n\n  @Input() key: string;\n\n  @Output() onClick: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input() customclass: string;\n\n  iconClass: string;\n\n  constructor(public iconLoaderService: IconLoaderService) {\n\n  }\n\n  ngOnInit() {\n    this.iconClass = this.getIconClass();\n  }\n\n  getIconClass(): string {\n    if (this.iconLoaderService.iconMappings != null) {\n      const iconObject = this.iconLoaderService.iconMappings.find((obj: any) => obj.component === this.key);\n      if (iconObject != null) {\n        return iconObject[this.iconLoaderService.iconToUse.toString()];\n      } else {\n        return '';\n      }\n    }\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['key']) {\n      this.key = changes.key.currentValue;\n      this.iconClass = this.getIconClass();\n    }\n  }\n\n}\n","/**\n * Created by pratik on 27/12/17.\n */\n/*\nComponent Name : Amexio item selector\nComponent Selector : <amexio-item-selector>\nComponent Description : ItemSelector is a specialized MultiSelect\nfield that renders as a pair of MultiSelect field, one with available options\nand the other with selected options. A set of buttons in between allows items to be\nmoved between the fields and reordered within the selection.\n*/\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CommonDataService } from '../../services/data/common.data.service';\n\n@Component({\n  selector: 'amexio-item-selector', template: `\n    <amexio-row>\n      <amexio-column [size]=\"'45pt'\">\n        <amexio-card [header]=\"true\">\n          <amexio-header>Available</amexio-header>\n          <amexio-body>\n            <div style=\"height: 220px;\" *ngIf=\"mask\">\n              <div class=\"spinner\"></div>\n            </div>\n            <div [style.height.px]=\"height\" (dragover)=\"allowDrop({event:$event,data:data})\" (drop)=\"dropLeft($event)\" *ngIf=\"!mask\" style=\"overflow: auto\">\n              <div class=\"itemselector-list\" [ngClass]=\"data['isSelected'] ? 'itemselector-list-active':''\" *ngFor=\"let data of availableData; let i = index\"\n                (click)=\"itemClick(data,i, true,false)\" [attr.draggable]=\"enabledrag\" (dragstart)=\"onDragStartLeft({event:$event,data:data,index:i})\">\n                {{data[displayfield]}}\n              </div>\n            </div>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n\n\n      <amexio-column [size]=\"'10pt'\">\n\n        <div class=\"item-selector-action-panel\">\n\n          <amexio-card [header]=\"true\">\n            <amexio-header>&nbsp;</amexio-header>\n            <amexio-body>\n\n              <div class=\"actionbar\">\n                <div [style.height.px]=\"height\" class=\"actionbarinner\">\n                  <div [ngClass]=\"{'actiondisable':!rightactive}\" (click)=\"moveTop()\" class=\"action movetop \">\n                    <amexio-data-icon key=\"itemselector_caretup\"></amexio-data-icon>\n                  </div>\n                  <div [ngClass]=\"{'actiondisable':!rightactive}\" (click)=\"upSwitch()\" class=\"action moveup\">\n                    <amexio-data-icon key=\"itemselector_arrowup\"></amexio-data-icon>\n                  </div>\n                  <div [ngClass]=\"{'actiondisable':!rightactive}\" (click)=\"leftSwitch()\" class=\"action moveleft\">\n                    <amexio-data-icon key=\"itemselector_arrowleft\"></amexio-data-icon>\n                  </div>\n                  <div [ngClass]=\"{'actiondisable':!leftactive}\" (click)=\"rightSwitch()\" class=\"action moveright\">\n                    <amexio-data-icon key=\"itemselector_arrowright\"></amexio-data-icon>\n                  </div>\n                  <div [ngClass]=\"{'actiondisable':!rightactive}\" (click)=\"downSwitch()\" class=\"action movedown\">\n                    <amexio-data-icon key=\"itemselector_arrowdown\"></amexio-data-icon>\n                  </div>\n                  <div [ngClass]=\"{'actiondisable':!rightactive}\" (click)=\"moveBottom()\" class=\"action movebottom\">\n                    <amexio-data-icon key=\"itemselector_caretdown\"></amexio-data-icon>\n                  </div>\n                </div>\n              </div>\n            </amexio-body>\n          </amexio-card>\n        </div>\n\n      </amexio-column>\n\n      <amexio-column [size]=\"'45pt'\">\n        <amexio-card [header]=\"true\">\n          <amexio-header>Selected</amexio-header>\n          <amexio-body>\n            <div [style.height.px]=\"height\" style=\"overflow: auto\" (dragover)=\"allowDrop({event:$event,data:data})\" (drop)=\"dropRight($event)\">\n              <div  [attr.draggable]=\"enabledrag\" class=\"itemselector-list\" *ngFor=\"let data of selectedData; let i = index\" (click)=\"itemClick(data,i, false,true)\"\n               [ngClass]=\"data['selectedClick'] ? 'itemselector-list-active':''\" (dragstart)=\"onDragStartRight({event:$event,data:data,index:i})\">\n                {{data[displayfield]}}\n              </div>\n            </div>\n          </amexio-body>\n        </amexio-card>\n      </amexio-column>\n    </amexio-row>\n  `,\n})\n\nexport class AmexioItemSelectorComponent implements OnInit {\n\n  private componentLoaded: boolean;\n  /*\n   Properties\n   name : data\n   datatype : any\n   version : 4.0 onwards\n   default : none\n   description :  Local data for item selectors.\n   */\n\n  _data: any;\n  @Input('data')\n  set data(value: any[]) {\n    this._data = value;\n    if (this.componentLoaded) {\n      this.updateComponent();\n    }\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  /*\n   Properties\n   name : height\n   datatype : any\n   version : 4.0 onwards\n   default : none\n   description :  Height of item selector\n   */\n  @Input() height: any;\n\n  mask = true;\n\n  /*\n   Properties\n   name : data-reader\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description :  Key in JSON Datasource for records.\n   */\n  @Input('data-reader') datareader: string;\n\n  /*\n   Properties\n   name : http-method\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description :  Type of HTTP call, POST,GET.\n   */\n  @Input('http-method') httpmethod: string;\n\n  /*\n   Properties\n   name : http-url\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description :  REST url for fetching datasource.\n   */\n  @Input('http-url') httpurl: string;\n\n  /*\n   Properties\n   name : display-field\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description :  Name of key inside response data to display on ui.\n   */\n  @Input('display-field') displayfield: string;\n\n  /*\n   Properties\n   name : value-field\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description :  Name of key inside response data.use to send to backend\n   */\n  @Input('value-field') valuefield: string;\n\n  /*\n   Properties\n   name : enable-drag\n   datatype : boolean\n   version : 5.0.0 onwards\n   default : false\n   description : nodes can be dragged\n   */\n  @Input('enable-drag') enabledrag: boolean;\n\n  /*\n   Properties\n   name : enable-drop\n   datatype : boolean\n   version : 5.0.0 onwards\n   default : false\n   description : any node can be dropped in the selector structure\n   */\n  @Input('enable-drop') enabledrop = false;\n\n  /*\n   Properties\n   name : across-itemselector\n   datatype : boolean\n   version : 5.0.0 onwards\n   default : false\n   description : Dragging and dropping is possible across list.\n   */\n  @Input('across-itemselector') acrossitemselector = false;\n  /*\n   Events\n   name : availableRecords\n   datatype : none\n   version : none\n   default : none\n   description :  Get available values objects.\n   */\n  @Output() availableRecords: any = new EventEmitter<any>();\n\n  /*\n   Events\n   name : selectedRecords\n   datatype : none\n   version : none\n   default : none\n   description :  Get selected value Object.\n   */\n  @Output() selectedRecords: any = new EventEmitter<any>();\n\n  @Output() onDrag: any = new EventEmitter<any>();  // Emits at drag\n  @Output() dragover: any = new EventEmitter<any>();   // Emits at drag over\n  @Input() dragData: any;\n\n  @Input() parentRef: any;\n\n  availableData: any[];\n\n  selectedData: any[] = [];\n\n  switchingObject: any;\n\n  objectIndex: any;\n\n  leftactive = true;\n\n  rightactive = true;\n\n  response: any;\n\n  previousValue: any;\n\n  check: any;\n\n  isNode: boolean;\n\n  constructor(public itemSelectorService: CommonDataService) {\n  }\n\n  ngOnInit() {\n    if (this.httpmethod && this.httpurl) {\n      this.itemSelectorService.fetchData(this.httpurl, this.httpmethod).subscribe((response) => {\n        this.response = response;\n      }, (error) => {\n      }, () => {\n        this.setData(this.response);\n      });\n    } else if (this.data) {\n      this.previousValue = JSON.parse(JSON.stringify(this.data));\n      this.setData(this.data);\n    }\n    this.componentLoaded = true;\n  }\n\n  updateComponent() {\n    if (JSON.stringify(this.previousValue) !== JSON.stringify(this.data)) {\n      this.previousValue = JSON.parse(JSON.stringify(this.data));\n      this.setData(this.data);\n    }\n  }\n\n  setData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n      responsedata.forEach((option: any, index: any) => {\n        if (!option['isSelected']) {\n          option['isSelected'] = false;\n        }\n      });\n    } else {\n      responsedata = httpResponse;\n    }\n\n    this.availableData = responsedata;\n    this.mask = false;\n  }\n\n  itemClick(data: any, index: any, left: boolean, right: boolean) {\n    this.leftactive = left;\n    this.rightactive = right;\n    this.switchingObject = data;\n    this.objectIndex = index;\n    for (const ir of this.availableData) {\n      if ((ir)[this.valuefield] === data[this.valuefield]) {\n        ir['isSelected'] = true;\n      } else {\n        ir['isSelected'] = false;\n      }\n\n    }\n\n    if (right) {\n      for (const ir of this.selectedData) {\n        if ((ir)[this.valuefield] === data[this.valuefield]) {\n          ir['selectedClick'] = true;\n        } else {\n          ir['selectedClick'] = false;\n        }\n      }\n    }\n\n  }\n\n  rightSwitch() {\n    this.selectedData.forEach((element) => {\n     this.dragDropValidation(element);\n    });\n    if (this.switchingObject != null && this.switchingObject.hasOwnProperty('isSelected') && this.switchingObject['isSelected']) {\n      this.selectedData.push(this.switchingObject);\n      this.switchingObject['isSelected'] = true;\n      this.availableData.forEach((option, index) => {\n        if (option['isSelected']) {\n          this.availableData.splice(index, 1);\n          option['selectedClick'] = false;\n        }\n      });\n      this.switchingObject = null;\n      this.dataEmitter();\n    }\n  }\n\n  dragDropValidation(element: any) {\n    if (this.switchingObject === element) {\n      this.switchingObject.isSelected = false;\n    }\n  }\n\n  leftSwitch() {\n    this.setLeftSwitch();\n  }\n\n  // Method called in left switch if flag is false\n  private setLeftSwitch() {\n    const flag = false;\n    this.availableData.forEach((element) => {\n      this.dragDropValidation(element);\n    });\n    if (!flag && this.switchingObject != null && this.switchingObject.hasOwnProperty('isSelected') && this.switchingObject['isSelected']) {\n      this.availableData.push(this.switchingObject);\n      this.switchingObject['isSelected'] = false;\n      this.selectedData.forEach((option, index) => {\n        if (!option['isSelected']) {\n          this.selectedData.splice(index, 1);\n        }\n      });\n      this.switchingObject = null;\n      this.dataEmitter();\n    }\n  }\n\n  upSwitch() {\n    if (this.switchingObject != null && this.switchingObject.hasOwnProperty('isSelected') && this.switchingObject['isSelected']) {\n      this.selectedData.forEach((opt: any, i: any) => {\n        this.getIndexObject(opt, i);\n      });\n      if (this.objectIndex !== 0) {\n        const index = this.selectedData[this.objectIndex];\n        this.selectedData[this.objectIndex] = this.selectedData[this.objectIndex - 1];\n        this.selectedData[this.objectIndex - 1] = index;\n        this.dataEmitter();\n      }\n    }\n  }\n\n  downSwitch() {\n    if (this.switchingObject != null && this.switchingObject.hasOwnProperty('isSelected') && this.switchingObject['isSelected']) {\n      this.selectedData.forEach((opt: any, i: any) => {\n        this.getIndexObject(opt, i);\n      });\n      if (this.selectedData.length - 1 !== this.objectIndex) {\n        const index = this.selectedData[this.objectIndex];\n        this.selectedData[this.objectIndex] = this.selectedData[this.objectIndex + 1];\n        this.selectedData[this.objectIndex + 1] = index;\n        this.dataEmitter();\n      }\n    }\n  }\n\n  moveTop() {\n    const tempArray: any = [];\n    if (this.switchingObject != null && this.switchingObject['isSelected']) {\n      this.selectedData.forEach((opt: any, i: any) => {\n        this.getIndexObject(opt, i);\n      });\n      if (this.selectedData.length > 1) {\n        tempArray[0] = this.selectedData[this.objectIndex];\n        this.selectedData.splice(this.objectIndex, 1);\n        this.selectedData.forEach((option) => {\n          tempArray.push(option);\n        });\n        this.selectedData = tempArray;\n        this.dataEmitter();\n      }\n    }\n  }\n\n  moveBottom() {\n    if (this.switchingObject != null && this.switchingObject.hasOwnProperty('isSelected')) {\n      this.selectedData.forEach((opt: any, i: any) => {\n        this.getIndexObject(opt, i);\n      });\n      if (this.switchingObject['isSelected'] && this.selectedData.length > 1) {\n        this.selectedData.splice(this.objectIndex, 1);\n        this.selectedData[this.selectedData.length] = this.switchingObject;\n      }\n    }\n    this.dataEmitter();\n  }\n\n  dataEmitter() {\n    this.availableRecords.emit(this.availableData);\n    this.selectedRecords.emit(this.selectedData);\n  }\n\n  getIndexObject(opt: any, i: any) {\n    if (opt[this.valuefield] === this.switchingObject[this.valuefield]) {\n      this.objectIndex = i;\n    }\n  }\n  // Method to drag parent with node\n  onDragStartLeft(dragData: any) {\n    if (!this.acrossitemselector) {\n      this.itemClick(dragData.data, dragData.index, true, false);\n    } else {\n      dragData.event.dataTransfer.setData('itemnodedata', JSON.stringify(dragData.data));\n      this.onDrag.emit(dragData);\n    }\n  }\n\n  onDragStartRight(dragData: any) {\n    if (!this.acrossitemselector) {\n      this.itemClick(dragData.data, dragData.index, false, true);\n    } else {\n      dragData.event.dataTransfer.setData('itemnodedata', JSON.stringify(dragData.data));\n      this.onDrag.emit(dragData);\n    }\n  }\n\n  allowDrop(dragOverData: any) {\n    dragOverData.event.preventDefault();\n  }\n\n  dropRight(event: any) {\n    if (this.enabledrop) {\n      this.rightSwitch();\n    }\n  }\n\n  dropLeft(event: any) {\n    if (this.enabledrop) {\n      this.leftSwitch();\n    }\n  }\n}\n","/**\n * Created by ketangote on 11/22/17.\n */\n\n /*\n Component Name : Amexio listbox\n Component Selector : <amexio-listbox>\n Component Description : Simple list box which allows user to select one of\n more items from list based on configuration. User can provide custom template to\n change look and feel.\n*/\nimport {AfterViewInit, Component, ContentChild, EventEmitter,\n        HostListener, Input, OnDestroy, OnInit, Output, Renderer2, TemplateRef } from '@angular/core';\nimport {CommonDataService} from '../../services/data/common.data.service';\n\n@Component({\n  selector: 'amexio-listbox', template: `\n\n    <div class=\"listbox\" [style.border]=\"border\">\n\n      <div *ngIf=\"enableHeader\" class=\"header\" style=\"display: flex; justify-content: space-between\">\n        <div style=\"display: flex;justify-content: flex-start;\">\n          <div *ngIf=\"enablecheckbox\"  class=\"input-box\">\n            <div *ngIf=\"!selectAll\" (click)=\"selectAllRecord()\" class=\"checkbox default\"></div>\n            <div *ngIf=\"selectAll\" (click)=\"selectAllRecord()\" class=\"checkbox active\">&#10004;</div>\n          </div>\n          <div class=\"title\">&nbsp;&nbsp;{{header}}</div>\n        </div>\n\n        <div *ngIf=\"(filter == true)\">\n          <input type=\"text\" [(ngModel)]=\"filterText\" [placeholder]=\"searchplaceholder\" (keyup)=\"filterData()\" class=\"search \"/>\n        </div>\n      </div>\n\n      <div class=\"listbox-height\" [style.height.px]=\"height\">\n        <ul class=\"list\" [ngClass]=\"{'loading-mask' : maskloader}\">\n          <li #id class=\"list-items\" *ngFor=\"let row of viewData let rowno = index \" [ngClass]=\"{'tree-node-label-selected':row.isSelected ,'tree-node-label-not-selected':row.isSelected=='false'}\">\n\n            <div (click)=\"onClick(row)\" (contextmenu)=\"loadContextMenu($event,row, id)\">\n              <ng-container *ngIf=\"enablecheckbox\">\n                <div class=\"inputgroup\" style=\"float: left; height: 100%;\">\n                  <div class=\"input-box\">\n                    <div (click)=\"selectedCheckBox(row)\" [class]=\"row.isSelected ?'checkbox active':'checkbox default'\">\n                      {{row.isSelected ? '&#10004;' : ''}}\n                    </div>\n                  </div>\n                </div>&nbsp;\n              </ng-container>\n              <ng-container *ngIf=\"!bodyTemplate\"> {{row[displayfield]}}</ng-container>\n              <ng-template *ngIf=\"bodyTemplate\" [ngTemplateOutlet]=\"bodyTemplate\" [ngTemplateOutletContext]=\"{ row: row }\"></ng-template>\n            </div>\n\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <span [ngStyle]=\"contextMenuStyle\">\n      <ul *ngIf=\"contextMenuFlag\" class=\"context-menu-list\" [ngClass]=\"{'dropdown-up' : posixUp}\">\n        <li (click)=\"onContextNodeClick(itemConfig)\" class=\"context-menu-list-items\" [ngStyle]=\"{'cursor': itemConfig.disabled ? 'not-allowed':'pointer'}\" [ngClass]=\"{'context-menu-separator':itemConfig.seperator}\"\n          *ngFor=\"let itemConfig of contextmenu\">\n          <em [ngStyle]=\"{'padding-left': itemConfig.icon ? '5px':'19px'}\" [ngClass]=\"itemConfig.icon\"></em>\n          <span style=\"white-space: nowrap;display: inline ; padding-left:5px\">{{itemConfig.text}}\n          </span>\n        </li>\n      </ul>\n    </span>\n  `,\n})\nexport class AmexioListBoxComponent implements AfterViewInit, OnInit, OnDestroy {\n\n  private componentLoaded: boolean;\n   contextMenuStyle: any;\n\n  /*\nProperties\nname : enable-checkbox\ndatatype : boolean\nversion : 4.0 onwards\ndefault : none\ndescription : Enables checkbox for each row, this allows user for multi selection.\n*/\n  @Input('enable-checkbox') enablecheckbox: boolean;\n\n  /*\nProperties\nname : header\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Heading for ListBox.\n*/\n  @Input() header: string;\n\n      /*\nProperties\nname : enable-header\ndatatype : boolean\nversion : 4.2.4 onwards\ndefault : true\ndescription : User can disabled header of listbox to false..\n*/\n@Input('enable-header') enableHeader = true;\n\n  /*\nProperties\nname : search-placeholder\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : place-holder for searchbox.\n*/\n  @Input('search-placeholder') searchplaceholder: string;\n\n  /*\nProperties\nname : filter\ndatatype : boolean\nversion : 4.0 onwards\ndefault : none\ndescription : Enables user to filter data based on 'display-field' configured.\n*/\n  @Input() filter: boolean;\n\n  /*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : Local Data binding.\n*/\n_data: any;\n@Input('data')\n set data(value: any[]) {\n   this._data = value;\n   if (this.componentLoaded) {\n     this.updateComponent();\n   }\n }\n get data(): any[] {\n   return this._data;\n }\n\n  /*\nProperties\nname : http-url\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : REST url for fetching data.\n*/\n  @Input('http-url') httpurl: string;\n\n  /*\nProperties\nname : data-reader\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Key in JSON Datasource for records.\n*/\n  @Input('data-reader') datareader: string;\n\n  /*\nProperties\nname : http-method\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Type of HTTP call, POST,GET etc.\n*/\n  @Input('http-method') httpmethod: string;\n\n  /*\nProperties\nname : display-field\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Key in JSON for display particular column from data.\n*/\n  @Input('display-field') displayfield: string;\n\n  /*\nProperties\nname : height\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : height for ListBox.\n*/\n  @Input() height: any;\n\n  /*\nEvents\nname : selectedRows\ndatatype : none\nversion : none\ndefault : none\ndescription : It will fire only on selection of checkbox and gives you selected record data.\n*/\n  @Output() selectedRows: any = new EventEmitter<any>();\n\n  /*\nEvents\nname : onRowClick\ndatatype : none\nversion : none\ndefault : none\ndescription : It will gives you row clicked data.\n*/\n  @Output() onRowClick: any = new EventEmitter<any>();\n\n  /*\n  Properties\n  name : border\n  datatype : any\n  version : 4.2 onwards\n  default : none\n  description : Border for listbox, default style is 1px solid #ced4da.\n  */\n  @Input() border: any;\n\n    /*\nProperties\nname :  context-menu\ndatatype : string\nversion : 5.0.1 onwards\ndefault :\ndescription : Context Menu provides the list of menus on right click.\n*/\n@Input('context-menu') contextmenu: any[];\n\n/*\nEvents\nname : rightClick\ndatatype : none\nversion : 5.0.1\ndefault : none\ndescription : It will gives you row clicked data.\n*/\n@Output() rightClick: any = new EventEmitter<any>();\n\n  @ContentChild('amexioBodyTmpl') bodyTemplate: TemplateRef<any>;\n\n  viewData: any[];\n\n  orgData: any[];\n\n  filterText: string;\n\n  selectAll = false;\n\n  response: any;\n\n  selectedData: any[];\n\n  previousData: any;\n\n  maskloader = true;\n\n  mouseLocation: { left: number; top: number } = { left: 0, top: 0 };\n\n  contextMenuFlag: boolean;\n\n  posixUp: boolean;\n\n  rightClickRowData: any;\n\n  globalClickListenFunc: () => void;\n\n  constructor(public dataService: CommonDataService, private renderer: Renderer2) {\n    this.filter = false;\n    this.enablecheckbox = false;\n    this.selectedData = [];\n    this.searchplaceholder = 'Search';\n  }\n\n  ngOnInit() {\n    if (this.httpmethod && this.httpurl) {\n      this.dataService.fetchData(this.httpurl, this.httpmethod).subscribe((response) => {\n        this.response = response;\n      }, (error) => {\n      }, () => {\n        this.setData(this.response);\n      });\n    } else if (this.data) {\n      this.previousData = JSON.parse(JSON.stringify(this.data));\n      this.setData(this.data);\n    }\n    this.componentLoaded = true;\n  }\n\n  updateComponent() {\n    if (JSON.stringify(this.previousData) !== JSON.stringify(this.data)) {\n      this.previousData = JSON.parse(JSON.stringify(this.data));\n      this.setData(this.data);\n    }\n  }\n\n setData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    this.viewData = responsedata;\n    this.setSelectedFlag(this.viewData);\n    this.orgData = JSON.parse(JSON.stringify(this.viewData));\n  }\n\n  setSelectedFlag(viewRows: any) {\n    viewRows.forEach((row: any) => {\n      if (!row.hasOwnProperty('isSelected')) {\n        row['isSelected'] = false;\n      }\n    });\n\n    this.maskloader = false;\n  }\n\n  filterData() {\n    const tData = JSON.parse(JSON.stringify(this.orgData));\n    const nodes = this.searchTree(tData, this.filterText);\n    this.viewData = nodes;\n  }\n\n  searchTree(data: any[], matchingTitle: string) {\n    const disp = this.displayfield;\n    return data.filter(function f(node) {\n      if (node[disp] && node[disp].toLowerCase().startsWith(matchingTitle.toLowerCase())) {\n        return true;\n      }\n      if (node.children) {\n        return (node.children = node.children.filter(f)).length;\n      }\n    });\n    // return res;\n  }\n\n  selectedCheckBox(rowData: any) {\n    rowData.isSelected = !rowData.isSelected;\n    this.selectedData = [];\n    this.viewData.forEach((node) => {\n      if (node.isSelected) {\n        this.selectedData.push(node);\n      }\n    });\n\n    this.selectedRows.emit(this.selectedData);\n  }\n\n  selectAllRecord() {\n    this.selectedData = [];\n    this.selectAll = !this.selectAll;\n    if (this.selectAll) {\n      this.viewData.forEach((node) => {\n        node.isSelected = true;\n      });\n      this.selectedData = this.viewData;\n    } else {\n      this.viewData.forEach((node) => {\n        node.isSelected = false;\n      });\n    }\n\n    this.selectedRows.emit(this.selectedData);\n  }\n\n  onClick(data: any) {\n    this.onRowClick.emit(data);\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n  loadContextMenu(event: any, row: any, id: any) {\n    this.tempSelectedFlag(this.viewData);\n    this.mouseLocation.left = event.clientX;\n    this.mouseLocation.top = event.clientY;\n    row.isSelected = true;\n    this.getContextMenu();\n    this.posixUp = this.getListPosition(id);\n    event.preventDefault();\n    event.stopPropagation();\n    this.rightClickRowData = row;\n    this.contextMenuStyle = this.getContextMenuStyle();\n\n  }\n  // getcontextmenu\n  getContextMenu() {\n    if (this.contextmenu && this.contextmenu.length > 0) {\n      this.contextMenuFlag = true;\n      this.addListner();\n    }\n  }\n\n  tempSelectedFlag(rows: any) {\n    rows.forEach((row: any) => {\n      if (row.isSelected) {\n        row.isSelected = false;\n      }\n    });\n  }\n\n  getListPosition(elementRef: any) {\n    const height = 240;\n    if ((window.screen.height - elementRef.getBoundingClientRect().bottom) < height) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  getContextMenuStyle() {\n    return {\n      'cursor': 'default',\n      'position': 'fixed',\n      'display': this.contextMenuFlag ? 'block' : 'none',\n      'left': this.mouseLocation.left + 'px',\n      'top': this.mouseLocation.top + 'px',\n      'box-shadow': '1px 1px 2px #000000',\n      'width': '15%',\n    };\n  }\n\n  onContextNodeClick(itemConfig: any) {\n    if (!itemConfig.disabled) {\n      const obj = {\n        menuData: itemConfig,\n        rowData: this.rightClickRowData,\n      };\n      this.contextMenuFlag = false;\n      this.removeListner();\n      this.rightClick.emit(obj);\n    }\n  }\n\n  addListner() {\n    this.globalClickListenFunc = this.renderer.listen('document', 'click', (e: any) => {\n      this.contextMenuFlag = false;\n      if (!this.contextMenuFlag) {\n        this.removeListner();\n      }\n    });\n  }\n\n  removeListner() {\n    if (this.globalClickListenFunc) {\n      this.globalClickListenFunc();\n    }\n  }\n\n  ngOnDestroy(): void {\n   this.removeListner();\n  }\n\n}\n","/**\n * Created by ketangote on 11/23/17.\n */\n\n/*\n Component Name : Amexio paginator\n Component Selector : <amexio-paginator>\n Component Description : Paginator is a generic widget to display content in paged format.\n*/\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'amexio-paginator', template: `\n    <div class=\"paginator\">\n          <span class=\"paginator-pages\">\n            <a class=\"paginator-page\" (click)=\"onPrevious()\">&lt;</a>\n            <a class=\"paginator-page\" (click)=\"onFirstClick()\">&lt;&lt;</a>\n          </span>\n      <span class=\"paginator-pages\" *ngFor=\"let page of activePages;let i = index\">\n            <a class=\"paginator-page\" [ngClass]=\"{'active' : activePageIndex == i  }\" (click)=\"onPageClick(page,i)\">{{page}}</a>\n          </span>\n      <span class=\"paginator-pages\">\n            <a class=\"paginator-page\" (click)=\"onLastClick()\">&gt;&gt;</a>\n            <a class=\"paginator-page\" (click)=\"onNext()\">&gt;</a>\n          </span>\n      <ng-container *ngIf=\"pages > rows\">\n      <span class=\"paginator-pages\">\n            <a class=\"paginator-page\" (click)=\"showColumnOptions()\" style=\" cursor: pointer;\">{{currentRow}} &nbsp;  &#9660;</a>\n            <span *ngIf=\"show\" class=\"dropdown\" style=\"width: 50px;\">\n                <ul class=\"dropdown-list\">\n                  <li class=\"list-items\" *ngFor=\"let row of pageIndex;let i = index\" (click)=\"changeRows(row,i, $event)\"><div>{{row}}</div></li>\n                </ul>\n            </span>\n          </span>\n      </ng-container>\n    </div>\n  `,\n})\nexport class AmexioPaginatorComponent implements OnChanges, OnInit {\n\n  show: boolean;\n\n  /*\nProperties\nname : pages\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : Total Number of records\n*/\n  @Input() pages: any;\n\n  /*\nProperties\nname : rows\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : number of records on one page\n*/\n  @Input() rows: any;\n\n  /*\nProperties\nname : size\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : number of pages to be displayed\n*/\n  @Input() size: any;\n\n  /*\nEvents\nname : onRowChange\ndatatype : none\nversion : none\ndefault : none\ndescription : if you click on '<<' will get 1st record and if you click on '>>' will get last record.\n*/\n  @Output() onRowChange: EventEmitter<any> = new EventEmitter<any>();\n\n  /*\nEvents\nname : onPageChange\ndatatype : none\nversion : none\ndefault : none\ndescription : It will gives you current page number\n*/\n  @Output() onPageChange: EventEmitter<any> = new EventEmitter<any>();\n\n  fullPageSet: any[] = [];\n\n  activePages: any[] = [];\n\n  activePageIndex: any;\n\n  activePage: number;\n\n  pageIndex: any[] = [];\n\n  bFirst: any;\n\n  bLast: any;\n\n  currentRow: number;\n\n  currentRowIndex: number;\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n    if (this.size == null || this.size === '') {\n      this.size = 'medium';\n    }\n    this.initializePages();\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    if (change.pages && !change.pages.isFirstChange()) {\n      this.initializePages();\n    }\n    if (change.rows && !change.rows.isFirstChange()) {\n      this.initializePages();\n    }\n  }\n\n  initializePages() {\n    if (this.rows > this.pages) {\n      this.rows = this.pages;\n    }\n    this.fullPageSet.length = 0;\n    this.activePages.length = 0;\n    this.pageIndex.length = 0;\n\n    if (this.rows != null) {\n      for (let i = 0; i < this.pages; i++) {\n        this.fullPageSet.push(i + 1);\n      }\n      this.calculateRows();\n      this.setRows(this.rows);\n    } else {\n      for (let i = 0; i < this.pages; i++) {\n        this.fullPageSet.push(i + 1);\n        this.activePages.push(i + 1);\n      }\n    }\n\n    this.setBoundaries();\n    this.activePageIndex = 0;\n    this.currentRowIndex = 0;\n  }\n\n  onFirstClick() {\n    this.activePageIndex = 0;\n    this.changeRows(this.pageIndex[0], 0, null);\n    this.onPageChange.emit(this.activePage);\n  }\n\n  onLastClick() {\n    this.activePageIndex = this.activePages.length - 1;\n    this.changeRows(this.pageIndex[this.pageIndex.length - 1], this.pageIndex.length - 1, null);\n    this.activePageIndex = this.activePages.length - 1;\n    this.activePage = this.activePages[this.activePages.length - 1];\n    this.onPageChange.emit(this.activePage);\n  }\n\n  onPrevious() {\n    if (this.activePageIndex !== 0) { // within row bounds\n      this.activePageIndex -= 1;\n      this.activePage = this.activePages[this.activePageIndex];\n      this.onPageChange.emit(this.activePage);\n    } else {\n      // load prev rows\n      let sIndx;\n      if (this.fullPageSet.indexOf(this.activePage) === 1) {\n        sIndx = this.fullPageSet.indexOf(this.activePage);\n      } else {\n        sIndx = this.fullPageSet.indexOf(this.activePage) - 1;\n      }\n      if (sIndx > 0) {\n        this.changeRows(this.pageIndex[this.currentRowIndex - 1], this.currentRowIndex - 1, null);\n        this.activePageIndex = this.activePages.length - 2;\n        this.activePage = this.activePages[this.activePages.length - 2];\n        this.onPageChange.emit(this.activePage);\n      }\n    }\n  }\n\n  onNext() {\n    if (this.activePageIndex !== this.activePages.length - 1) { // within row bounds\n      this.activePageIndex += 1;\n      this.activePage = this.activePages[this.activePageIndex];\n      this.onPageChange.emit(this.activePage);\n    } else {\n      // load next rows\n      const sIndx = this.fullPageSet.indexOf(this.activePage) + 1;\n      if (sIndx <= this.fullPageSet.length - 1) {\n        this.changeRows(this.pageIndex[this.currentRowIndex + 1], this.currentRowIndex + 1, null);\n        this.activePageIndex = 1;\n        this.activePage = this.activePages[1];\n        this.onPageChange.emit(this.activePage);\n      }\n    }\n  }\n  /* If page size is less then row*/\n  changeRows(rowNumber: number, inDx: number, event: any) {\n    if (rowNumber != null) {\n      this.activePages = [];\n      if (this.pages < rowNumber) {\n        this.currentRow = this.pages;\n        for (let i = this.currentRow - this.rows + 1; i <= this.currentRow; i++) {\n          if (i !== 0) {\n            this.activePages.push(i);\n          }\n        }\n      } else {\n        this.getCurrentRow(rowNumber);\n      }\n      this.onPageChangeMethod(inDx);\n      if (event) {\n        this.show = !this.show;\n      }\n    }\n  }\n\n  // Method to get current row\n  private getCurrentRow(rowNumber: any) {\n    this.currentRow = rowNumber;\n    for (let i = this.currentRow - this.rows; i <= this.currentRow; i++) {\n      if (i !== 0) {\n        this.activePages.push(i);\n      }\n    }\n  }\n\n  // Method called on on change and emits onchange event\n  private onPageChangeMethod(inDx: number) {\n    this.currentRowIndex = inDx;\n    this.onRowChange.emit(this.currentRow);\n    this.setBoundaries();\n    this.activePageIndex = 0;\n    this.activePage = this.activePages[0];\n    this.onPageChange.emit(this.activePage);\n  }\n\n  onPageClick(page: number, index: number) {\n    this.activePageIndex = index;\n    this.activePage = page;\n\n    this.onPageChange.emit(this.activePage);\n  }\n\n  calculateRows() {\n    for (let i = 0; i < this.rows; i++) {\n      this.activePages.push(i + 1);\n    }\n    this.currentRow = this.rows;\n    // calc rows\n    const loopI = Math.round(this.pages / this.rows);\n\n    for (let i = 1; i <= loopI; i++) {\n      this.pageIndex.push(this.rows * i);\n    }\n  }\n\n  setRows(rowNumber: number) {\n    this.activePages = [];\n    if (rowNumber > this.pages) {\n      this.currentRow = this.pages;\n    } else {\n      this.currentRow = rowNumber;\n    }\n    for (let i = 0; i < this.currentRow; i++) {\n      this.activePages.push(i + 1);\n    }\n\n  }\n\n  setBoundaries() {\n    this.bFirst = this.activePages[0];\n    this.bLast = this.activePages[this.activePages.length - 1];\n  }\n\n  showColumnOptions() {\n    this.show = !this.show;\n  }\n}\n","/**\n * Created by pratik on 27/12/17.\n */\nimport {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-multi-bar', template: `\n\n  `,\n})\n\nexport class AmexioProgressMultiBarComponent implements OnInit {\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","/**\n * Created by pratik on 27/12/17.\n */\n\n /*\n Component Name : Amexio progress bar\n Component Selector : <amexio-progress-bar>\n Component Description : Progress Bar Component Provides up-to-date feedback\n on the progress of a workflow or action with simple yet flexible progress bars\n and easy to configure.\n*/\nimport {Component, Input, OnInit} from '@angular/core';\n@Component({\n  selector: 'amexio-progress-bar', template: `\n    <div *ngIf=\"showProgress\" class=\"progress\" [ngStyle]=\"{'height':height}\">\n      <span [ngClass]=\"progressclass\" *ngIf=\"infinite\" style=\"width: 100%;\">{{label != null ? label : 'Loading...'}}</span>\n      <span [ngClass]=\"progressclass\" *ngIf=\"!infinite\" [ngStyle]=\"{'width.%' : currentvalue}\"></span>\n    </div>\n  `,\n})\nexport class AmexioProgressBarComponent implements OnInit {\n/*\nProperties\nname : show\ndatatype : boolean\nversion : 4.0 onwards\ndefault : true\ndescription :  Shows / Hides the progress bar.\n*/\n  @Input('show') showProgress = true;\n/*\nProperties\nname : infinite\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Enable/Disable Infinite Mode.\n*/\n  @Input() infinite: boolean;\n/*\nProperties\nname : type\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Type of progress bar can be default,\ntheme-color,theme-backgroundcolor, green, red, yellow( primary, secondary,\n  success , danger & warning\n*/\n  @Input() type: string;\n/*\nProperties\nname : amexio-color\ndatatype : string\nversion : 4.1 onwards\ndefault :\ndescription : Use different inbuilt amexio colors available\n(e.g amexio-black, amexio-red etc)\n*/\n  @Input('amexio-color') amexiocolor: string;\n/*\nProperties\nname : current-value\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Current Position of progress.\n*/\n  @Input('current-value') currentvalue: string;\n/*\nProperties\nname : label\ndatatype : any\nversion : 4.0 onwards\ndefault :\ndescription : Custom labels on bar.\n*/\n  @Input() label: any;\n/*\nProperties\nname : height\ndatatype : any\nversion : 4.0 onwards\ndefault :\ndescription : Height of bar.\n*/\n  @Input() height: any;\n/*\nProperties\nname : stripped\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Bar styled stripped.\n*/\n  @Input() stripped: boolean;\n/*\nnot in use\n */\n  @Input() multi: boolean;\n\n  progressclass = '';\n\n  private strippedCss = 'stripped ';\n\n  constructor() {\n  }\n  ngOnInit() {\n    if (this.height) {\n      this.height = this.height + 'px';\n    } else {\n      this.height  = '20px';\n    }\n    if (this.stripped) {\n      this.progressclass = this.progressclass + this.strippedCss;\n    }\n    if (this.type && !this.amexiocolor) {\n      this.progressclass = this.progressclass + this.type.toLocaleLowerCase();\n    } else if (this.amexiocolor && !this.type) {\n      this.progressclass = this.progressclass + this.amexiocolor.toLocaleLowerCase();\n    }\n  }\n}\n","/**\n * Created by pratik on 11/12/17.\n */\n\n /*\n Component Name : Amexio tree filter\n Component Selector : <amexio-tree-filter-view>\n Component Description : A Expandable Tree Component for Angular, having\n Filtering functionality.\n*/\nimport {HttpClient} from '@angular/common/http';\nimport {\n  AfterViewInit, ChangeDetectorRef, Component, ContentChild, EventEmitter, Input, OnInit, Output,\n  TemplateRef} from '@angular/core';\n\nimport {CommonDataService} from '../../services/data/common.data.service';\n\n@Component({\n  selector: 'amexio-tree-filter-view', template: `\n    <div>\n      <div>\n        <div class=\"inputgroup\">\n          <input type=\"text\" class=\"input-control text-input-width\" aria-label=\"Text input with dropdown button\" [(ngModel)]=\"filterText\"\n                 placeholder=\"Search\" (keyup)=\"filterData()\">\n          <!--<i class=\"fa fa-filter\" aria-hidden=\"true\" (click)=\"showToolTip = !showToolTip\"></i>-->\n          <span class=\"datatable-filter-icon\">\n          <amexio-data-icon key=\"tree_filter\" (click)=\"showToolTip = !showToolTip\"></amexio-data-icon>\n          </span>\n          <!--  <div class=\"input-group-btn\">-->\n          <!-- <button type=\"button\"\n          class=\"btn\" data-toggle=\"dropdown\"\n          (click)=\"showToolTip = !showToolTip\"\n          aria-haspopup=\"true\" aria-expanded=\"false\">\n           </button>-->\n          <span *ngIf=\"showToolTip\" class=\"dropdown\">\n              <ul class=\"dropdown-list\">\n                <li class=\"list-items\" *ngFor=\"let opt of filterOptionData\" (click)=\"filterOption(opt)\">{{opt.key}}&nbsp;\n                  <!--<i [class]=\"opt.checkedStatus\" aria-hidden=\"true\"></i>-->\n                  <amexio-data-icon key=\"opt.checkedStatus\"></amexio-data-icon>\n                </li>\n              </ul>\n            </span>\n          <!-- </div>-->\n        </div>\n        <ng-container *ngIf=\"isDataFound\">\n          <amexio-treeview\n            [data]=\"treeData\"\n            [enable-checkbox]=\"enablecheckbox\"\n            (onTreeNodeChecked)=\"onCheckSelect($event)\"\n            (nodeClick)=\"onRowSelect($event)\" [templates]=\"templates\">\n          </amexio-treeview>\n        </ng-container>\n        <ng-container *ngIf=\"!isDataFound\">\n          <p>No Data Found.</p>\n        </ng-container>\n\n      </div>\n    </div>\n\n\n  `,\n})\nexport class AmexioFilterTreeComponent implements OnInit, AfterViewInit {\nprivate componentLoaded: boolean;\n  /*\nProperties\nname : http-url\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : REST url for fetching data.\n*/\n  @Input('http-url') httpurl: string;\n\n  /*\nProperties\nname : http-method\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Type of HTTP call, POST,GET etc.\n*/\n  @Input('http-method') httpmethod: string;\n\n  /*\nProperties\nname : data-reader\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Key in JSON Datasource for records.\n*/\n  @Input('data-reader') datareader: string;\n\n  /*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : Local Data binding.\n*/\n_data: any;\n@Input('data')\n set data(value: any[]) {\n   this._data = value;\n   if (this.componentLoaded) {\n     this.updateComponent();\n   }\n }\n get data(): any[] {\n   return this._data;\n }\n\n  /*\nProperties\nname : enable-checkbox\ndatatype : false\nversion : 4.0 onwards\ndefault : false\ndescription : Enables checkbox for each row, this allows user for multi selection.\n*/\n  @Input('enable-checkbox') enablecheckbox = false;\n\n  /*\nEvents\nname : nodeClick\ndatatype : none\nversion : none\ndefault : none\ndescription : It will gives you clicked node data.\n*/\n  @Output() nodeClick: any = new EventEmitter<any>();\n\n  /*\nEvents\nname : onTreeNodeChecked\ndatatype : none\nversion : none\ndefault : none\ndescription : It will gives whole tree data with checked flag status.\n*/\n  @Output() onTreeNodeChecked: any = new EventEmitter<any>();\n\n/*\nProperties\nname : trigger-char\ndatatype : number\nversion : 4.0 onwards\ndefault : none\ndescription : it will search for text relevant to entered character\n*/\n  @Input('trigger-char') triggerchar: number;\n\n  treeData: any;\n\n  orgTreeData: any;\n\n  filterText: string;\n\n  filterIndex: number;\n\n  templates: any;\n\n  isDataFound = true;\n\n  onClickSearch = false;\n\n  filterOptionData: any;\n\n  previousValue: any;\n\n  showToolTip: boolean;\n\n  mask = true;\n\n  @ContentChild('amexioTreeTemplate') parentTmp: TemplateRef<any>;\n\n  constructor(private _http: HttpClient, private cdf: ChangeDetectorRef, private  treeViewFilterService: CommonDataService) {\n    this.filterIndex = 3;\n    this.triggerchar = 1;\n    this.filterOptionData = [{\n      key: 'Is Equal To', value: '1', type: 'string', checkedStatus: '',\n    }, {\n      key: 'Is Not Equal To', value: '2', type: 'string', checkedStatus: '',\n    }, {\n      key: 'Start With', value: '3', type: 'string', checkedStatus: 'fa fa-check',\n    }, {\n      key: 'Ends With', value: '4', type: 'string', checkedStatus: '',\n    }, {\n      key: 'Contains', value: '5', type: 'string', checkedStatus: '',\n    }];\n  }\n\n  ngOnInit() {\n    if (this.parentTmp != null) {\n      this.templates = {treeNodeTemplate: this.parentTmp};\n    } else if (this.templates != null) {\n      this.parentTmp = this.templates.treeNodeTemplate;\n     }\n  }\n\n  ngAfterViewInit() {\n    if (this.parentTmp != null) {\n      this.templates = {treeNodeTemplate: this.parentTmp};\n    } else if (this.templates != null) {\n      this.parentTmp = this.templates.treeNodeTemplate;\n     }\n\n    if (this.httpmethod && this.httpurl) {\n      this.callService();\n    } else if (this.data) {\n      this.previousValue = JSON.parse(JSON.stringify(this.data));\n      this.setData(this.data);\n    }\n    this.componentLoaded = true;\n  }\n\n  updateComponent() {\n    if (JSON.stringify(this.previousValue) !== JSON.stringify(this.data)) {\n      this.previousValue = JSON.parse(JSON.stringify(this.data));\n      this.setData(this.data);\n    }\n  }\n\n  filterData() {\n    this.showToolTip = false;\n    if (this.filterText.length >= this.triggerchar) {\n      const tData = JSON.parse(JSON.stringify(this.orgTreeData));\n      const treeNodes = this.searchTree(tData, this.filterText);\n      this.treeData = treeNodes;\n      if (this.treeData.length === 0) {\n        this.isDataFound = false;\n      } else {\n        this.isDataFound = true;\n      }\n    } else if (this.onClickSearch) {\n      const tData = JSON.parse(JSON.stringify(this.orgTreeData));\n      const treeNodes = this.searchTree(tData, this.filterText);\n      this.treeData = treeNodes;\n      this.onClickSearch = false;\n      if (this.treeData.length === 0) {\n        this.isDataFound = false;\n      } else {\n        this.isDataFound = true;\n      }\n    } else {\n      this.isDataFound = true;\n      this.treeData = this.orgTreeData;\n    }\n  }\n   searchTree(data: any[], matchingTitle: string) {\n    const fi = this.filterIndex;\n    return this.filterActualData (data, fi, matchingTitle);\n  }\n\n  filterActualData(data: any[], fi: any, matchingTitle: any): any {\n    return data.filter(function f(node) {\n      if ( (fi === 5 && node.text.toLowerCase().includes(matchingTitle.toLowerCase())) ||\n      (fi === 3 && node.text.toLowerCase().startsWith(matchingTitle.toLowerCase())) ||\n      (fi === 1 && node.text.toLowerCase() === matchingTitle.toLowerCase()) ||\n      (fi === 2 && node.text.toLowerCase() !== matchingTitle.toLowerCase()) ||\n      (fi === 4 && node.text.toLowerCase().endsWith(matchingTitle.toLowerCase()))) {\n      return true;\n      }\n      if (node.children) {return (node.children = node.children.filter(f)).length; }\n    });\n  }\n  filterOption(data: any) {\n    this.onClickSearch = true;\n    this.filterIndex = data.value;\n    this.filterOptionData.forEach((opt: any) => {\n      if (opt.value !== data.value) {\n        opt.checkedStatus = '';\n      } else {\n        opt.checkedStatus = 'fa fa-check';\n      }\n    });\n    this.filterData();\n    this.showToolTip = false;\n  }\n\n  renderServiceData() {\n    this.setData(this.data);\n  }\n\n  setData(httpResponse: any) {\n    const tdata = this.getData(httpResponse);\n    if (tdata) {\n      this.orgTreeData = JSON.parse(JSON.stringify(tdata));\n      this.treeData = tdata;\n    }\n    this.mask = false;\n  }\n\n  getData(httpResponse: any) {\n    let responsedata: any = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  callService() {\n    this.treeViewFilterService.fetchData(this.httpurl, this.httpmethod).subscribe((response) => {\n      this.data = response;\n    }, () => {\n      this.renderServiceData();\n    });\n  }\n\n  onRowSelect(data: any) {\n    this.nodeClick.emit(data);\n  }\n\n  onCheckSelect(data: any) {\n    this.onTreeNodeChecked.emit(data);\n  }\n}\n","/**\n * Created by ketangote on 12/1/17.\n */\n\n /*\n Component Name : Amexio horizontal tree\n Component Selector : <amexio-horizontal-treeviewnode>\n Component Description : A Horizontal Tree Component.\n*/\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'amexio-horizontal-treeviewnode', template: `\n    <div class=\"horizontaltreeview-node\">\n      <div class=\"horizontaltreeview-node-entry\" [ngClass]=\"{'sole':data.length==1}\" *ngFor=\"let node of data\">\n        <span class=\"horizontaltreeview-node-label\" (click)=\"onClick(node)\">\n          {{node.text}}\n          <span  *ngIf=\"node.children && (node.children.length>0)\" class=\"float-right\" (click)=\"onClick(node)\">\n            <amexio-data-icon *ngIf=\"node.expand\" key=\"horizontal-tree-collapse\"></amexio-data-icon>\n            <amexio-data-icon *ngIf=\"!node.expand\" key=\"horizontal-tree-expanded\"></amexio-data-icon>\n          </span>\n        </span>\n        <amexio-horizontal-treeviewnode *ngIf=\"node.expand && node.children && (node.children.length>0)\"\n                                        [data]=\"node.children\"\n                                        (onNodeClick)=\"onInnerClick($event)\"></amexio-horizontal-treeviewnode>\n      </div>\n    </div>\n  `,\n})\nexport class HorizontalTreeViewNodeComponent implements OnInit {\n\n /*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : Local Data binding.\n*/\n  @Input() data: any[];\n\n  /*\nEvents\nname : onNodeClick\ndatatype : none\nversion : none\ndefault : none\ndescription : It will gives you clicked node data.\n*/\n  @Output() onNodeClick: any = new EventEmitter<any>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onClick(node: any) {\n    node.expand = !node.expand;\n    this.onNodeClick.emit(node);\n  }\n\n  onInnerClick(node: any) {\n    this.onNodeClick.emit(node);\n  }\n}\n","/**\n * Created by ketangote on 12/1/17.\n */\n\n /*\n Component Name : Amexio horizontal tree\n Component Selector : <amexio-horizontal-treeview>\n Component Description : A Horizontal Tree Component.\n*/\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {CommonDataService} from '../../services/data/common.data.service';\n\n@Component({\n  selector: 'amexio-horizontal-treeview', template: `\n\n    <div class=\"horizontaltreeview\">\n      <span class=\"horizontaltreeview-node-label\">{{label}}</span>\n      <div style=\"height: 300px;\" *ngIf=\"mask\">\n        <div class=\"spinner\"></div>\n      </div>\n      <amexio-horizontal-treeviewnode *ngIf=\"!mask\" [data]=\"data\" (onNodeClick)=\"nodeclick($event)\"></amexio-horizontal-treeviewnode>\n    </div>\n  `,\n})\nexport class HorizontalTreeViewComponent implements OnInit {\n\n  /*\nProperties\nname : label\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : label for tree\n*/\n  @Input() label: string;\n\n  /*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : Local Data binding.\n*/\n  @Input() data: any[];\n\n  /*\nProperties\nname : http-url\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : REST url for fetching data.\n*/\n  @Input('http-url') httpurl: string;\n\n  /*\nProperties\nname : http-method\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Type of HTTP call, POST,GET etc.\n*/\n  @Input('http-method') httpmethod: string;\n\n  /*\nProperties\nname : data-reader\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Key in JSON Datasource for records.\n*/\n  @Input('data-reader') datareader: string;\n\n  /*\nEvents\nname : nodeClick\ndatatype : none\nversion : none\ndefault : none\ndescription : It will gives you clicked node data.\n*/\n  @Output() nodeClick: any = new EventEmitter<any>();\n\n  responseData: any;\n\n  mask = true;\n\n  constructor(public dataService: CommonDataService) {\n\n  }\n\n  ngOnInit() {\n    if (this.httpmethod && this.httpurl) {\n      this.dataService.fetchData(this.httpurl, this.httpmethod).subscribe((response) => {\n        this.responseData = response;\n      }, (error) => {\n      }, () => {\n        this.setData(this.responseData);\n      });\n    }\n  }\n\n  setData(httpResponse: any) {\n    // Check if key is added?\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    this.data = responsedata;\n    this.mask = false;\n  }\n\n  nodeclick(node: any) {\n    this.nodeClick.emit(node);\n  }\n\n}\n","/**\n * Created by ketangote on 11/23/17.\n */\n\n/*\nComponent Name : Amexio tree filter\nComponent Selector : <amexio-tree-filter-view>\nComponent Description : A Expandable Tree Component for Angular, having Filtering functionality.\n*/\nimport {\n  AfterViewInit, ChangeDetectorRef, Component, ContentChild, ElementRef, EventEmitter, HostListener, Input, OnDestroy,\n  OnInit, Output, Renderer2, TemplateRef,\n} from '@angular/core';\nimport { CommonDataService } from '../../services/data/common.data.service';\n\n@Component({\n  selector: 'amexio-treeview', template: `\n    <div *ngIf=\"data == null\" style=\"height: 300px;width: 300px;\">\n      <div class=\"spinner\"></div>\n    </div>\n\n    <div class=\"treenode\" *ngFor=\"let node of data\"  >\n      <div #id class=\"treenode-content\" (click)=\"onClick(node)\">\n        <div style=\"white-space:nowrap\">\n          <div class=\"tree-node-label\" *ngIf=\"node[childarraykey] && (node[childarraykey].length>0)\">\n            <em class=\"fa \" [ngClass]=\"{'fa-angle-down':node.expand,'fa-angle-right':!node.expand}\"></em>\n          </div> &nbsp;\n\n          <div class=\"tree-node-label tree-node-label-hover\" [ngClass]=\"{'tree-node-label-selected':node.isSelected ,'tree-node-label-not-selected':node.isSelected=='false'}\"\n            [attr.draggable]=\"enabledrag\" (dragleave)=\"dragleave($event)\" (drop)=\"drop({event:$event,data:node})\" (dragover)=\"allowDrop({event:$event,data:node})\"\n            (dragstart)=\"onDragStart({event:$event,data:node})\" (contextmenu)=\"loadContextMenu({event:$event,data:node,ref:id})\">\n            <div class=\"tree-node-label\" *ngIf=\"enablecheckbox\">\n              <input type=\"checkbox\" [checked]=\"'checked'?node.checked:null\" (click)=\"emitCheckedData(node)\" />\n            </div>\n            <div class=\"tree-node-label\" (click)=\"onNodeClick(node)\">\n              <div class=\"tree-node-label\" *ngIf=\"templates == null\">\n                <div class=\"tree-node-label\" *ngIf=\"node.icon\" [ngClass]=\"node.icon\" aria-hidden=\"true\">\n                </div>\n                <div class=\"tree-node-label\">\n                  {{node[displaykey]}}\n                  <ng-container *ngIf=\"badge && node.badge\">\n                    <span class=\"tree-badge\">{{node.badge}}</span>\n                  </ng-container>\n                </div>\n              </div>\n              <div class=\"tree-node-label\" *ngIf=\"templates != null\">\n                <ng-template [ngTemplateOutlet]=\"templates.treeNodeTemplate\" [ngTemplateOutletContext]=\"{ $implicit: { text: node.text } , icon: node.icon,node : node }\">\n                </ng-template>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n      <div class=\"treenode-children\" style=\"display: block;\" *ngIf=\"node.expand && node[childarraykey] && (node[childarraykey].length>0)\">\n        <amexio-treeview [child-array-key]=\"childarraykey\"  [display-key]=\"displaykey\" [enable-drag]=\"enabledrag\" [enable-drop]=\"enabledrop\" [data]=\"node[childarraykey]\" [dragData]=\"dragData\" [parentRef]=\"parentRef\"\n          (onDrag)=onDragStart($event) (onDrop)=drop($event) (nodeClick)=\"onNodeClick($event)\" (dragleave)=\"($event)\" (nodeRightClick)=\"loadContextMenu($event)\"\n          [across-tree]=\"acrosstree\" [templates]=\"templates\" [enable-checkbox]=\"enablecheckbox\" [badge]=\"badge\" (onTreeNodeChecked)=\"this.onTreeNodeCheck($event)\">\n        </amexio-treeview>\n\n      </div>\n    </div>\n\n    <span [ngStyle]=\"contextStyle\">\n      <ul *ngIf=\"flag\" class=\"context-menu-list\" [ngClass]=\"{'dropdown-up' : posixUp}\">\n        <li (click)=\"onContextNodeClick(itemConfig)\" class=\"context-menu-list-items\" [ngStyle]=\"{'cursor': itemConfig.disabled ? 'not-allowed':'pointer'}\" [ngClass]=\"{'context-menu-separator':itemConfig.seperator}\"\n          *ngFor=\"let itemConfig of contextmenu\">\n          <em [ngStyle]=\"{'padding-left': itemConfig.icon ? '5px':'19px'}\" [ngClass]=\"itemConfig.icon\"></em>\n          <span style=\"white-space: nowrap;display: inline ; padding-left:5px\">{{itemConfig.text}}\n          </span>\n        </li>\n      </ul>\n    </span>\n  `,\n})\nexport class AmexioTreeViewComponent implements AfterViewInit, OnInit, OnDestroy {\n  private componentLoaded: boolean;\n  /*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : Local Data binding.\n*/\n  _data: any;\n  @Input('data')\n  set data(value: any[]) {\n    this._data = value;\n    if (this.componentLoaded) {\n      this.updateComponent();\n    }\n  }\n  get data(): any[] {\n    return this._data;\n  }\n\n  /*\nProperties\nname : http-url\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : REST url for fetching data.\n*/\n  @Input('http-url') httpurl: string;\n\n  /*\nProperties\nname : http-method\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Type of HTTP call, POST,GET etc.\n*/\n  @Input('http-method') httpmethod: string;\n\n  /*\nProperties\nname : data-reader\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Key in JSON Datasource for records.\n*/\n  @Input('data-reader') datareader: string;\n\n/*\n  Properties\nname : display-key\ndatatype : string\nversion : 5.2.0 onwards\ndefault : text\ndescription : Name of key inside response data to display on ui.\n*/\n@Input('display-key') displaykey: string;\n   /*\nProperties\nname : child-array-key\ndatatype : string\nversion : 5.2.0 onwards\ndefault : children\ndescription : Name of key for child array name inside response data to display on ui.\n*/\n@Input('child-array-key') childarraykey: string;\n\n  /*\n  Events\n  name : nodeClick\n  datatype : none\n  version : none\n  default : none\n  description : It will gives you clicked node data.\n  */\n  @Output() nodeClick: any = new EventEmitter<any>();\n\n  /*\nProperties\nname : enable-checkbox\ndatatype : false\nversion : 4.0 onwards\ndefault : none\ndescription : Enables checkbox for each row, this allows user for multi selection.\n*/\n  @Input('enable-checkbox') enablecheckbox = false;\n\n  /*\nProperties\nname : templates\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : user can add any template to tree\n*/\n  @Input() templates: any;\n\n  /*\n  Properties\n  name : enable-drag\n  datatype : boolean\n  version : 5.0.0 onwards\n  default : false\n  description : nodes can be dragged\n  */\n  @Input('enable-drag') enabledrag: boolean;\n\n  /*\n  Properties\n  name : enable-drop\n  datatype : boolean\n  version : 5.0.0 onwards\n  default : false\n  description : any node can be dropped in the tree structure\n  */\n  @Input('enable-drop') enabledrop = false;\n\n  /*\nProperties\nname : across-tree\ndatatype : boolean\nversion : 5.0.0 onwards\ndefault : false\ndescription : Dragging and dropping is possible across tree.\n*/\n  @Input('across-tree') acrosstree = false;\n\n  /*\nProperties\nname :  badge\ndatatype : boolean\nversion : 5.0.0 onwards\ndefault : false\ndescription : Describes the badge value that has to be displayed tree node\n*/\n  @Input('badge') badge: boolean;\n\n  /*\nProperties\nname :  context-menu\ndatatype : string\nversion : 5.0.1 onwards\ndefault :\ndescription : Context Menu provides the list of menus on right click.\n*/\n  @Input('context-menu') contextmenu: any[];\n\n  @Input() parentRef: any;\n\n  @ContentChild('amexioTreeTemplate') parentTmp: TemplateRef<any>;\n  /*\n  Events\n  name : onTreeNodeChecked\n  datatype : any\n  version : 4.0 onwards\n  default : none\n  description : It will gives whole tree data with checked flag status.\n  */\n  @Output() onTreeNodeChecked: any = new EventEmitter<any>();\n\n  @Output() onDrag: any = new EventEmitter<any>();  // Emits at drag\n  @Output() onDrop: any = new EventEmitter<any>();   // emits at drop\n  @Output() dragover: any = new EventEmitter<any>();   // Emits at drag over\n  @Input() dragData: any;\n\n  @Output() nodeRightClick: any = new EventEmitter<any>();\n\n  @Output() rightClick: any = new EventEmitter<any>();\n\n  previousValue: any;\n\n  responseData: any;\n\n  isNode: boolean;\n\n  flag: boolean;\n\n  posixUp: boolean;\n\n  rightClickNodeData: any;\n\n  contextStyle: any;\n\n  mouseLocation: { left: number; top: number } = { left: 0, top: 0 };\n\n  globalClickListenFunc: () => void;\n\n  constructor(\n    public element: ElementRef, public dataService: CommonDataService,\n    private cdf: ChangeDetectorRef, private renderer: Renderer2,\n  ) {\n    this.isNode = true;\n    this.acrosstree = false;\n    this.displaykey = 'text';\n    this.childarraykey = 'children';\n  }\n\n  ngOnInit() {\n    if (this.httpmethod && this.httpurl) {\n      this.dataService.fetchData(this.httpurl, this.httpmethod).subscribe((response) => {\n        this.responseData = response;\n      }, (error) => {\n      }, () => {\n        this.setData(this.responseData);\n      });\n    } else if (this.datareader && this.data) {\n      this.setData(this.data);\n    }\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      if (this.parentTmp != null) {\n        this.templates = { treeNodeTemplate: this.parentTmp };\n      } else if (this.templates != null) {\n        this.parentTmp = this.templates.treeNodeTemplate;\n      }\n    });\n    this.cdf.detectChanges();\n    this.componentLoaded = true;\n  }\n\n  updateComponent() {\n    if (JSON.stringify(this.previousValue) !== JSON.stringify(this.data) && this.previousValue != null && this.data != null) {\n      this.previousValue = JSON.parse(JSON.stringify(this.data));\n      this.setData(this.data);\n    }\n  }\n  public expandAll(node: any) {\n    this.expandAllCall(this.parentRef);\n  }\n\n  expandAllCall(node: any) {\n    node.forEach((childCheck: any) => {\n      if (!childCheck.expand) {\n        childCheck.expand = true;\n      }\n      if (childCheck.hasOwnProperty(this.childarraykey)) {\n        this.expandAllCall(childCheck[this.childarraykey]);\n      }\n    });\n  }\n\n  collapseAll(node: any) {\n    this.collapseAllCall(this.parentRef);\n  }\n\n  collapseAllCall(node: any) {\n    node.forEach((childCheck: any) => {\n      if (childCheck.expand) {\n        childCheck.expand = false;\n      }\n      if (childCheck.hasOwnProperty(this.childarraykey)) {\n        this.collapseAllCall(childCheck[this.childarraykey]);\n      }\n    });\n  }\n  onClick(node: any) {\n    node.expand = !node.expand;\n  }\n\n  onNodeClick(node: any) {\n    this.nodeClick.emit(node);\n    this.activateNode(this.data, node);\n  }\n\n  activateNode(data: any[], node: any) {\n    for (const i of data) {\n      if (node === data[i] && !i[this.childarraykey]) {\n        i['active'] = true;\n      } else {\n        i['active'] = false;\n      }\n\n      if (i[this.childarraykey]) {\n        this.activateNode(i[this.childarraykey], node);\n      }\n    }\n  }\n\n  setData(httpResponse: any) {\n    // Check if key is added?\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    this.data = responsedata;\n    this.parentRef = this.data;\n    this.setSelectedFlag();\n    this.activateNode(this.data, null);\n  }\n\n  // To add isSelected flag explicitily in tree Data\n  setSelectedFlag() {\n    this.parentRef.forEach((node: any) => {\n      if (node.hasOwnProperty('isSelected')) {\n        node.isSelected = false;\n      } else {\n        node['isSelected'] = false;\n      }\n      if (node.hasOwnProperty(this.childarraykey) && node[this.childarraykey].length > 0) {\n        this.setSelectedFlagInChild(node);\n      }\n\n    });\n  }\n  setSelectedFlagInChild(node: any) {\n    node[this.childarraykey].forEach((childcom: any) => {\n      if (childcom.hasOwnProperty('isSelected')) {\n        childcom.isSelected = false;\n      } else {\n        childcom['isSelected'] = false;\n      }\n      if (childcom.hasOwnProperty(this.childarraykey) && childcom[this.childarraykey].length > 0) {\n        this.setSelectedFlagInChild(childcom);\n      }\n    });\n  }\n\n  emitCheckedData(checkedData: any) {\n    checkedData.checked = !checkedData.checked;\n    if (checkedData.checked) {\n      if (checkedData.hasOwnProperty(this.childarraykey)) {\n        checkedData[this.childarraykey].forEach((option: any) => {\n          option.checked = true;\n          if (option.hasOwnProperty(this.childarraykey)) {\n            this.setCheckedStatusFromParent(option);\n          }\n        });\n      }\n      this.onTreeNodeChecked.emit(this.data);\n    } else {\n      if (checkedData.hasOwnProperty(this.childarraykey)) {\n        checkedData[this.childarraykey].forEach((option: any) => {\n          option.checked = false;\n          if (option.hasOwnProperty(this.childarraykey)) {\n            this.searchObject(option);\n          }\n        });\n      }\n      this.onTreeNodeChecked.emit(this.data);\n    }\n\n  }\n\n  searchObject(object: any) {\n    object[this.childarraykey].forEach((childOption: any) => {\n      childOption.checked = false;\n      if (childOption.hasOwnProperty(this.childarraykey)) {\n        this.searchObject(childOption);\n      }\n    });\n  }\n\n  setCheckedStatusFromParent(object: any) {\n    object[this.childarraykey].forEach((childOption: any) => {\n      childOption.checked = true;\n      if (childOption.hasOwnProperty(this.childarraykey)) {\n        this.setCheckedStatusFromParent(childOption);\n      }\n    });\n  }\n\n  onTreeNodeCheck(data: any) {\n    this.onTreeNodeChecked.emit(this.data);\n  }\n\n  // Method to drag parent with node\n  onDragStart(dragData: any) {\n    dragData.event.dataTransfer.setData('treenodedata', JSON.stringify(dragData.data));\n    dragData.event.dataTransfer.effectAllowed = 'copy';\n    this.dragData = dragData;\n    this.onDrag.emit(dragData);\n  }\n\n  allowDrop(dragOverData: any) {\n    dragOverData.event.preventDefault();\n    if (!this.enabledrop) {\n      dragOverData.event.dataTransfer.dropEffect = 'none';\n    }\n    this.noDragMethod(this.dragData, dragOverData.data, dragOverData.event);\n    this.dragover.emit(dragOverData);\n  }\n\n  noDragMethod(dragData: any, node: any, event: any) {\n    if (!this.acrosstree) {\n      if (dragData.data === node || node.leaf === true) {\n        event.dataTransfer.dropEffect = 'none';\n      } else {\n        event.target.style.border = '3px dotted green';\n      }\n    } else {\n      if (node.leaf === true) {\n        event.dataTransfer.dropEffect = 'none';\n      } else {\n        event.target.style.border = '3px dotted green';\n      }\n    }\n    if (dragData.data.hasOwnProperty(this.childarraykey)) {\n      this.getDropNode(dragData, node, event);\n    }\n  }\n\n  getDropNode(dragData: any, node: any, event: any) {\n    dragData.data[this.childarraykey].forEach((child: any) => {\n      if (JSON.stringify(child) === JSON.stringify(node) || node.leaf === true) {\n        event.dataTransfer.dropEffect = 'none';\n      } else if (child.hasOwnProperty(this.childarraykey)) {\n        this.getDropNode(child[this.childarraykey], node, event);\n      }\n    });\n  }\n\n  drop(dropData: any) {\n    if (this.enabledrop) {\n      dropData.event.target.style.border = '';\n      dropData.event.preventDefault();\n      if (this.acrosstree === false) {\n        this.setDropAcrosstree(dropData);\n        if (this.isNode === true) {\n          this.setDropNodeTree(dropData);\n        }\n      } else {\n        if (dropData.data.hasOwnProperty(this.childarraykey)) {\n          this.removeNode(dropData);\n          dropData.data[this.childarraykey].push(JSON.parse(dropData.event.dataTransfer.getData('treenodedata')));\n          this.onDrop.emit(dropData);\n        }\n      }\n    }\n  }\n  // drop method split into 2 other method setDropAcrosstree, setDropNodeTree\n  // first method of drop\n  setDropAcrosstree(dropData: any) {\n    if (this.dragData.data === dropData.data) {\n      this.isNode = false;\n    } else if (this.dragData.data.hasOwnProperty(this.childarraykey)) {\n      this.checkNode(this.dragData, dropData);\n    }\n  }\n  // second method pf drop\n  setDropNodeTree(dropData: any) {\n    if (dropData.data.hasOwnProperty(this.childarraykey)) {\n      this.removeNode(dropData);\n      dropData.data[this.childarraykey].push(JSON.parse(dropData.event.dataTransfer.getData('treenodedata')));\n      this.onDrop.emit(dropData);\n    }\n  }\n\n  checkNode(dragData: any, dropData: any) {\n    this.dragData.data[this.childarraykey].forEach((child: any) => {\n      if (JSON.stringify(child) === JSON.stringify(dropData.data)) {\n        this.isNode = false;\n      } else if (child.hasOwnProperty(this.childarraykey)) {\n        this.checkNode(child, dropData);\n      }\n    });\n  }\n\n  removeNode(data: any) {\n    this.removeDragNode(this.parentRef, JSON.parse(data.event.dataTransfer.getData('treenodedata')));\n  }\n\n  removeDragNode(treeData: any, dragNode: any) {\n    treeData.forEach((childNode: any, index: number) => {\n      if (JSON.stringify(childNode) === JSON.stringify(dragNode)) {\n        treeData.splice(index, 1);\n      } else if (childNode.hasOwnProperty(this.childarraykey)) {\n        this.removeDragNode(childNode[this.childarraykey], dragNode);\n      }\n    });\n  }\n\n  dragleave(event: any) {\n    event.target.style.border = '';\n  }\n\n  getContextMenu() {\n    if (this.contextmenu && this.contextmenu.length > 0) {\n      this.flag = true;\n      this.addListner();\n    }\n  }\n\n  resetFlag() {\n    if (this.flag) {\n      this.flag = false;\n      this.setSelectedFlag();\n    }\n  }\n\n  loadContextMenu(rightClickData: any) {\n    this.setSelectedFlag();\n    this.mouseLocation.left = rightClickData.event.clientX;\n    this.mouseLocation.top = rightClickData.event.clientY;\n    rightClickData.data['isSelected'] = true;\n    this.getContextMenu();\n    this.posixUp = this.getListPosition(rightClickData.ref);\n    rightClickData.event.preventDefault();\n    rightClickData.event.stopPropagation();\n    this.rightClickNodeData = rightClickData.data;\n    this.contextStyle = this.getContextMenuStyle();\n    this.nodeRightClick.emit(rightClickData);\n  }\n\n  onContextNodeClick(itemConfig: any) {\n    if (!itemConfig.disabled) {\n      const obj = {\n        menuData: itemConfig,\n        NodeData: this.rightClickNodeData,\n      };\n      this.resetFlag();\n      this.removeListner();\n      this.rightClick.emit(obj);\n    }\n  }\n\n  getListPosition(elementRef: any): boolean {\n    const height = 240; // must be same in dropdown.scss\n    if ((window.screen.height - elementRef.getBoundingClientRect().bottom) < height) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  getContextMenuStyle() {\n    return {\n      'cursor': 'default',\n      'position': 'fixed',\n      'display': this.flag ? 'block' : 'none',\n      'left': this.mouseLocation.left + 'px',\n      'top': this.mouseLocation.top + 'px',\n      'box-shadow': '1px 1px 2px #000000',\n      'width': '15%',\n    };\n  }\n\n  addListner() {\n    this.globalClickListenFunc = this.renderer.listen('document', 'click', (e: any) => {\n      this.resetFlag();\n      if (!this.flag) {\n        this.removeListner();\n      }\n    });\n  }\n\n  removeListner() {\n    if (this.globalClickListenFunc) {\n      this.globalClickListenFunc();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.removeListner();\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Ketan Gote, Pratik Kelwalkar, Dattaram Gawas\n *\n */\n/*\nComponent Name : Amexio tree data table\nComponent Selector : <amexio-tree-data-table>\nComponent Description :  A Simple Expandable Tree component which create Tree View based on standard datasource attached.\n*/\nimport {\n  AfterContentInit, AfterViewInit, Component, ContentChildren, ElementRef, EventEmitter, Input, OnInit, Output, QueryList,\n  ViewChild,\n} from '@angular/core';\n\nimport { AmexioGridColumnComponent } from '../datagrid/data.grid.column';\n\nimport { CommonDataService } from '../../services/data/common.data.service';\n@Component({\n  selector: 'amexio-tree-data-table', template: `\n    <div (window:resize)=\"onResize()\">\n      <div #header class=\"datatable\">\n        <div class=\"datatable-header\">\n          <ng-container *ngFor=\"let cols of columns;let i = index\">\n            <ng-container *ngIf=\"cols.datatype=='string'\">\n              <div class=\"datatable-col\" [ngClass]=\"{'header' : i == 0}\">\n                <ng-container *ngIf=\"cols.headerTemplate\">\n                  <ng-template  [ngTemplateOutlet]=\"cols.headerTemplate\"\n                                [ngTemplateOutletContext]=\"{column:cols ,index: i}\"></ng-template>\n                </ng-container>\n                <ng-container *ngIf=\"!cols.headerTemplate\">\n                  {{cols.text}}\n                </ng-container>\n              </div>\n            </ng-container>\n            <ng-container *ngIf=\"cols.datatype=='number'\">\n              <ng-container *ngIf=\"cols.headerTemplate\">\n                <ng-template  [ngTemplateOutlet]=\"cols.headerTemplate\"\n                              [ngTemplateOutletContext]=\"{column:cols ,index: i}\"></ng-template>\n              </ng-container>\n              <ng-container *ngIf=\"!cols.headerTemplate\">\n               <span class=\"float-right\">\n               <div class=\"datatable-col\" [ngClass]=\"{'header' : i == 0}\"> {{cols.text}}</div>\n            </span>\n              </ng-container>\n\n            </ng-container>\n          </ng-container>\n        </div>\n      </div>\n\n      <div class=\"datatable-height\" [style.height.px]=\"height\">\n        <div class=\"datatable\">\n          <div style=\"height: 300px;\" *ngIf=\"mask\">\n            <div class=\"spinner\"></div>\n          </div>\n          <ng-container *ngIf=\"!mask\">\n            <div class=\"datatable-row\" (click)=\"toogle(row,i)\" *ngFor=\"let row of viewRows;let i=index\"\n            (click)=\"setSelectedRow(row, $event)\">\n              <ng-container *ngFor=\"let cols of columns;let colIndex = index\">\n                <ng-container *ngIf=\"cols.datatype=='string' && !cols?.bodyTemplate\">\n                  <div class=\"datatable-col\" [attr.data-label]=\"cols.text\">\n                    <ng-container *ngIf=\"colIndex == 0\">\n              <span [ngStyle]=\"{'padding-left':(20*row.level)+'px'}\">\n                <ng-container *ngIf=\"!row.expanded && row.children\">\n                  <amexio-data-icon key=\"tree_collapse\"></amexio-data-icon>\n                </ng-container>\n                <ng-container *ngIf=\"row.expanded && row.children\">\n                  <amexio-data-icon key=\"tree_expand\"></amexio-data-icon>\n                </ng-container>\n                 <ng-container *ngIf=\"row[cols.dataindex]!= null && row[cols.dataindex]!= '' ;else elseBlock\">\n                      {{row[cols.dataindex]}}\n                    </ng-container>\n                    <ng-template #elseBlock>\n                      &nbsp;\n                    </ng-template>\n               </span>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"colIndex > 0\">\n                      <ng-container *ngIf=\"row[cols.dataindex]!= null && row[cols.dataindex]!= '' ;else elseBlock\">\n                        {{row[cols.dataindex]}}\n                      </ng-container>\n                      <ng-template #elseBlock>\n                        &nbsp;\n                      </ng-template>\n                    </ng-container>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"cols.datatype=='number' && !cols?.bodyTemplate\">\n                  <div class=\"datatable-col\" [attr.data-label]=\"cols.text\" >\n                    <ng-container *ngIf=\"colIndex == 0\">\n              <span [ngStyle]=\"{'padding-left':(20*row.level)+'px'}\">\n                <ng-container *ngIf=\"!row.expanded && row.children\">\n                  <amexio-data-icon key=\"tree_collapse\"></amexio-data-icon>\n                </ng-container>\n                <ng-container *ngIf=\"row.expanded && row.children\">\n                  <amexio-data-icon key=\"tree_expand\"></amexio-data-icon>\n                </ng-container>\n                 <span class=\"float-right\">\n                    <ng-container *ngIf=\"row[cols.dataindex]!= null;else elseBlock\">\n                      {{row[cols.dataindex]}}\n                    </ng-container>\n                    <ng-template #elseBlock>\n                      &nbsp;\n                    </ng-template>\n                 </span>\n               </span>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"colIndex > 0\">\n               <span class=\"float-right\">\n               <ng-container *ngIf=\"row[cols.dataindex]!= null;else elseBlock\">\n                      {{row[cols.dataindex]}}\n               </ng-container>\n                 <ng-template #elseBlock>\n                      &nbsp;\n                 </ng-template>\n               </span>\n                    </ng-container>\n                  </div>\n\n\n                </ng-container>\n\n                <ng-container *ngIf=\"cols.bodyTemplate\">\n                  <div class=\"datatable-col\" [attr.data-label]=\"cols.text\">\n                    <ng-template  [ngTemplateOutlet]=\"cols.bodyTemplate\"\n                                  [ngTemplateOutletContext]=\"{ $implicit: { text : row[cols.dataindex] }, row: row }\"></ng-template>\n                  </div>\n                </ng-container>\n\n\n\n              </ng-container>\n\n\n            </div>\n          </ng-container>\n\n        </div>\n      </div>\n    </div>\n  `,\n\n})\n\nexport class TreeDataTableComponent implements OnInit, AfterContentInit, AfterViewInit {\n\n  private componentLoaded: boolean;\n  /*\n   Properties\n   name : data\n   datatype : any\n   version : 4.0 onwards\n   default : none\n   description : Local Data binding.\n   */\n  _data: any;\n  @Input('data')\n   set data(value: any[]) {\n     this._data = value;\n     if (this.componentLoaded) {\n       this.updateComponent();\n     }\n   }\n   get data(): any[] {\n     return this._data;\n   }\n\n  /*\n   Properties\n   name : data-reader\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : Key in JSON Datasource for records.\n   */\n  @Input('data-reader') datareader: string;\n\n  /*\n   Properties\n   name : http-method\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : Type of HTTP call, POST,GET etc.\n   */\n  @Input('http-method') httpmethod: string;\n\n  /*\n   Properties\n   name : http-url\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : REST url for fetching data.\n   */\n  @Input('http-url') httpurl: string;\n\n  /*\n   Properties\n   name : display-field\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : Name of key inside response data to display on ui.\n   */\n  @Input('display-field') displayfield: string;\n\n  /*\n   Properties\n   name : value-field\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : Name of key inside response data.use to send to backend\n   */\n  @Input('value-field') valuefield: string;\n\n  /*\n   Events\n   name : selectedRecord\n   datatype : none\n   version : none\n   default : none\n   description : Get selected value Object.\n   */\n  @Output() selectedRecord: any = new EventEmitter<any>();\n\n  /*\n   Properties\n   name : height\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : height of grid\n   */\n  @Input() height: any;\n\n  /*\n   Events\n   name : rowSelect\n   datatype : none\n   version : none\n   default : none\n   description : It will gives you row clicked data.\n   */\n\n  @ViewChild('header', { read: ElementRef }) public gridHeader: ElementRef;\n  @Output() rowSelect: any = new EventEmitter<any>();\n\n  responseData: any;\n\n  columns: any[] = [];\n\n  previousValue: any;\n\n  viewRows: any;\n\n  mask = true;\n\n  @ContentChildren(AmexioGridColumnComponent) columnRef: QueryList<AmexioGridColumnComponent>;\n  constructor(public treeDataTableService: CommonDataService) {\n  }\n  ngOnInit() {\n    if (this.httpmethod && this.httpurl) {\n      this.treeDataTableService.fetchData(this.httpurl, this.httpmethod).subscribe((response) => {\n        this.responseData = response;\n      }, (error) => {\n      }, () => {\n        this.setData(this.responseData);\n      });\n    } else if (this.data) {\n      this.previousValue = JSON.parse(JSON.stringify(this.data));\n      this.setData(this.data);\n    }\n  }\n  ngAfterViewInit() {\n    this.onResize();\n    this.componentLoaded = true;\n  }\n  ngAfterContentInit() {\n    this.createConfig();\n  }\n  createConfig() {\n    const columnRefArray = this.columnRef.toArray();\n    for (const cr of columnRefArray) {\n      const columnConfig = cr;\n      let columnData: any;\n      if (columnConfig.headerTemplate != null && columnConfig.bodyTemplate != null) {\n        columnData = {\n          text: columnConfig.text,\n          dataindex: columnConfig.dataindex,\n          hidden: columnConfig.hidden,\n          datatype: columnConfig.datatype,\n          headerTemplate: columnConfig.headerTemplate,\n          width: columnConfig.width,\n          bodyTemplate: columnConfig.bodyTemplate,\n        };\n      } else if (columnConfig.headerTemplate != null && columnConfig.bodyTemplate == null) {\n        columnData = {\n          text: columnConfig.text,\n          dataindex: columnConfig.dataindex,\n          hidden: columnConfig.hidden,\n          datatype: columnConfig.datatype,\n          width: columnConfig.width,\n          headerTemplate: columnConfig.headerTemplate,\n        };\n      } else if (columnConfig.bodyTemplate != null && columnConfig.headerTemplate == null) {\n        columnData = {\n          text: columnConfig.text,\n          dataindex: columnConfig.dataindex,\n          hidden: columnConfig.hidden,\n          datatype: columnConfig.datatype,\n          width: columnConfig.width,\n          bodyTemplate: columnConfig.bodyTemplate,\n        };\n      } else if (columnConfig.bodyTemplate == null && columnConfig.headerTemplate == null) {\n        columnData = {\n          text: columnConfig.text,\n          dataindex: columnConfig.dataindex,\n          hidden: columnConfig.hidden,\n          width: columnConfig.width,\n          datatype: columnConfig.datatype,\n        };\n      }\n      this.columns.push(columnData);\n    }\n  }\n  updateComponent() {\n    if (this.data) {\n      this.viewRows = this.getResponseData(this.data);\n    }\n  }\n  setData(httpResponse: any) {\n    if (httpResponse) {\n      const treedata = this.getResponseData(httpResponse);\n      this.viewRows = treedata;\n      this.viewRows.forEach((row: any, index: any) => {\n        this.viewRows[index].level = 1;\n        this.viewRows[index].expanded = false;\n      });\n      this.mask = false;\n    } else {\n      this.viewRows = [];\n    }\n  }\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  toogle(row: any, index: number) {\n    row.expanded = !row.expanded;\n    if (row.expanded) {\n      this.addRows(row, index);\n    } else {\n      this.removeRows(row);\n    }\n  }\n  addRows(row: any, index: number) {\n    if (row.children) {\n      for (let i = 0; i < row.children.length; i++) {\n        const node = row.children[i];\n        if (!row.level) {\n          row.level = 1;\n        }\n        if (node.children) {\n          node.expanded = false;\n        }\n        node.level = (row.level + 1);\n        this.viewRows.splice(index + (i + 1), 0, node);\n      }\n    }\n  }\n  removeRows(node: any) {\n    if (node.children) {\n      for (const nc of node.children) {\n        if (this.viewRows) {\n          this.setRemovedRows(nc);\n        }\n      }\n    }\n  }\n  setRemovedRows(nc: any) {\n    for (const vr of this.viewRows) {\n      if (vr === nc) {\n        if (nc.children) {\n          this.removeRows(nc);\n        }\n        this.viewRows.splice(this.viewRows.indexOf(nc), 1);\n      }\n    }\n  }\n  setSelectedRow(rowData: any, event: any) {\n    this.selectedRecord.emit(rowData);\n    this.rowSelect.emit(rowData);\n  }\n  onResize() {\n    if (this.height) {\n      let h = (window.innerHeight / 100) * this.height;\n      if (this.gridHeader && this.gridHeader.nativeElement && this.gridHeader.nativeElement.offsetHeight) {\n        h = h - this.gridHeader.nativeElement.offsetHeight;\n      }\n      if (this.height === 100) {\n        h = h - 40;\n      }\n      this.height = h;\n    }\n  }\n}\n","/*\n Component Name : Amexio Accordion\n Component Selector : <amexio-accordion-tab>\n Component Description : Amexio Accordion provides an easy way to organize big forms by grouping the fields in accordion tabs.\n*/\n\nimport {AfterViewInit, Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'amexio-accordion-tab',\n  template: `\n    <button (click)=\"emitEvent()\" class=\"{{isTransparent ? 'accordion-transparent' : 'accordion'}} {{active ? 'active-accordion' : ''}} {{disabled ? 'accordion-disable' : ''}}\">\n      <div style=\"float: left;\" *ngIf=\"leftIcon\">\n        <em class=\"fa {{leftIcon}}\"></em>\n      </div>\n      <ng-container>\n      {{header}}\n        <div style=\"float: right\">\n            <ng-content select=\"amexio-accordion-header\">&nbsp;</ng-content> &nbsp;  \n          <em *ngIf=\"!angleIcon\" class=\"fa\" [ngClass]=\"{'fa-plus' : !active,'fa-minus' : active}\" aria-hidden=\"true\"></em>\n          <em *ngIf=\"angleIcon\" class=\"fa\" [ngClass]=\"{'fa-angle-down' : !active,'fa-angle-up' : active}\" aria-hidden=\"true\"></em>\n        </div>\n      </ng-container>\n\n    </button>\n    <div *ngIf=\"active\" class=\"panel\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\n\nexport class AmexioAccordionTabComponent  {\n\n/*\nProperties\nname : header\ndatatype : any\nversion : 4.0 onwards\ndefault :\ndescription : User can bind title for accordion tab.*/\n  @Input() header: any;\n/*\nProperties\nname : active\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : user can Set true for specific accordian open as default\n*/\n@Input() active: boolean;\n/*\nEvents\nname : emittedEvent\ndatatype :none\nversion : none\ndefault : none\ndescription : Fires the on accordion pane click event.\n*/\n  @Output() emittedEvent = new EventEmitter();\n/*\nProperties\nname : left-icon\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : places the icon on left\n*/\n@Input('left-icon') leftIcon: string;\n/*\nProperties\nname : angle-icon\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Can use Angle Icons instead of default plus/minus icons\n*/\n  @Input('angle-icon') angleIcon: boolean;\n/*\nProperties\nname : disabled\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : \tDisabled specific panes\n*/\n  @Input('disabled') disabled: boolean;\nisTransparent: boolean;\nconstructor() {\n}\nemitEvent() {\n    if ( !this.disabled ) {\n      this.active = !this.active ;\n      this.emittedEvent.emit(this);\n}\n  }\n}\n","\n/*\nComponent Name : Amexio Accordion\n Component Selector : <amexio-accordion>\n Component Description : Amexio Accordion provides an easy way to organize big forms by grouping the fields in accordion tabs.\n */\nimport {AfterContentInit, AfterViewInit, Component, ContentChildren, DebugElement, Input, OnInit, QueryList } from '@angular/core';\nimport { AmexioAccordionTabComponent } from './accordion.pane';\n@Component ({selector : 'amexio-accordion', template: `\n\n  <ng-content></ng-content>\n`})\nexport class AmexioAccordionComponent implements OnInit, AfterContentInit {\n/*\nProperties\nname : expand-all\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Pane will expand or collapse based on the boolean\n*/\n  @Input('expand-all') expandAll: boolean;\n/*\nProperties\nname : transparent\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Apply Transparent styles to accordion\n*/\n  @Input('transparent') isTransparent: boolean;\n/*Properties\nname : angle-icon\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Can use Angle Icons instead of default plus/minus icons\n*/\n  @Input('angle-icon') angleIcon: boolean;\n\n@ContentChildren(AmexioAccordionTabComponent) queryTabs: QueryList<AmexioAccordionTabComponent>;\naccordionCollections: AmexioAccordionTabComponent[];\nconstructor() {}\nngOnInit() {}\nngAfterContentInit() {\n    this.accordionCollections = this.queryTabs.toArray();\n    this.accordionCollections.forEach((node) => node.emittedEvent.subscribe((eventdata: any) => this.activateAccordionPane(eventdata)));\n    this.accordionCollections.forEach((node) => {\n      if (this.expandAll) {\n        node.active = true;\n      } else if (node.active) {\n        node.active = true;\n      } else {\n        node.active = false;\n      }\n\n      if (this.isTransparent) {\n        node.isTransparent = true;\n      }\n      if (this.angleIcon) {\n        node.angleIcon = true;\n      }\n      });\n\n    }\n\nactivateAccordionPane(node: AmexioAccordionTabComponent) {\n    this.accordionCollections.forEach((tab) => {\n     if (tab === node) {\n        tab.active = node.active ;\n      } else {\n       tab.active = false ;\n      }});\n }}\n","\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-accordion-header', template: `\n    <ng-content></ng-content>\n  `,\n})\n\nexport class AmexioAccordionHeaderComponent implements OnInit {\n\n    /*\nProperties\nname :padding\ndatatype : string\nversion : 4.2 onwards\ndefault : left\ndescription : padding for header.\n*/\n@Input() padding: string;\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","export const LayoutConstant = {\n    'start'         : 'flex-start',\n    'end'           : 'flex-end',\n    'center'        : 'center',\n    'space-between' : 'space-between',\n    'space-around'  : 'space-around',\n    'space-evenly'  : 'space-evenly',\n};\n","import { Component, HostBinding, Input,  OnInit } from '@angular/core';\nimport { LayoutConstant } from './layout.constant';\n@Component({\n    selector: 'amexio-layout-columns',\n    template: `\n      <ng-content></ng-content>\n    `,\n    styles: [`\n    :host {\n        display: flex;\n    }\n  `],\n})\nexport class AmexioLayoutComponent implements OnInit {\n\n    private _orientation: string;\n    private _alignment: string;\n    private _padding: number;\n\n    @Input('orientation') orientation = 'horizontal';\n\n    @Input('alignment') alignment: string;\n\n    @Input('border') border = true;\n\n    @Input('fit') fit = true;\n\n    @HostBinding('style.flex-direction') public orientationDirection: string;\n\n    @HostBinding('style.justify-content') public justifyContent: string;\n\n    @HostBinding('style.border') public borderstyle: string;\n\n    @HostBinding('style.box-shadow') public borderboxstyle: string;\n\n    @HostBinding('style.height') public height: string;\n\n    ngOnInit() {\n        this.setLayoutDefination();\n    }\n\n    public setLayoutDefination() {\n        this.setorientation();\n        this.setAlignment();\n        this.setBorder();\n        this.setFit();\n    }\n\n    private setorientation() {\n        if (this.orientation && this.orientation.toLowerCase() === 'vertical') {\n            this.orientationDirection = 'column';\n        } else {\n            this.orientationDirection = 'row';\n        }\n    }\n\n    private setAlignment() {\n        if (this.alignment && LayoutConstant[this.alignment.toLowerCase()]) {\n            this.justifyContent = LayoutConstant[this.alignment.toLowerCase()];\n        } else {\n            this.justifyContent = 'start';\n        }\n    }\n\n    private setBorder() {\n        if (this.border) {\n            this.borderstyle = '1px solid #ced4da';\n            this.borderboxstyle = '0 2px 2px 0 rgba(0,0,0,.14)';\n        }\n    }\n\n    private setFit() {\n        if (this.fit) {\n            this.height = '100%';\n        }\n    }\n}\n","import { Component, HostBinding, Input, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'amexio-layout-item',\n    template: `\n        <ng-content></ng-content>\n    `,\n})\nexport class AmexioLayoutItemComponent implements OnInit {\n\n    @Input('fit') fit: boolean;\n\n    @Input('padding') padding: string;\n\n    @HostBinding('style.flex-grow') public flexgrow: number;\n\n    @HostBinding('style.padding') public lipadding: string;\n\n    ngOnInit() {\n        if (this.fit) {\n            this.flexgrow = 1;\n        }\n        if (this.padding) {\n            this.lipadding = this.padding;\n        }\n    }\n}\n","/**\n * Created by ketangote on 1/4/18.\n */\n/*\nComponent Name : Amexio BorderLayout\nComponent Selector : <amexio-borderlayout-item>\nComponent Description : Amexio border layout lays out a container,\n                       arranging and resizing its components to fit in five regions:\n                        north, south, east, west, and center.\n\n*/\nimport { Component, HostBinding, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'amexio-borderlayout-item',\n  template: `\n    <aside style=\"height:100%;\"><ng-content></ng-content></aside>\n  `,\n})\nexport class AmexioBorderLayoutItemComponent implements OnInit {\n\n  /*\nProperties\nname : position\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Layout the contents to North , East , West , Center & South positions\n*/\n  @Input() position: string;\n  positionClass= 'borderlayout-';\n  @HostBinding('attr.class') role = this.positionClass;\n\n  constructor() {\n  }\n  ngOnInit() {\n  }\n\n  getClassType() {\n    let pos = '';\n    if (this.position.toLowerCase() === 'north') {\n      pos = 'N';\n    } else if (this.position.toLowerCase() === 'east') {\n      pos = 'E';\n    } else if (this.position.toLowerCase() === 'center') {\n      pos = 'C';\n    } else if (this.position.toLowerCase() === 'west') {\n      pos = 'W';\n    } else if (this.position.toLowerCase() === 'south') {\n      pos = 'S';\n    }\n\n    this.positionClass = this.positionClass + pos;\n    this.role = this.positionClass;\n\n    return pos;\n  }\n}\n","/**\n * Created by ketangote on 1/4/18.\n */\n\n/*\nComponent Name : Amexio BorderLayout\nComponent Selector : <amexio-borderlayout>\nComponent Description :Amexio border layout lays container, arranging and resizing components\nfit in five regions: north, south, east, west, center\n*/\n\nimport {AfterContentInit, Component, ContentChildren, OnInit, QueryList} from '@angular/core';\nimport {AmexioBorderLayoutItemComponent} from './borderlayoutitem.component';\n\n@Component({\n  selector: 'amexio-borderlayout',\n  template: `\n\n    <section [ngClass]=\"borderclass\">\n      <ng-content></ng-content>\n    </section>\n  `,\n})\nexport class AmexioBorderLayoutComponent implements AfterContentInit, OnInit {\n@ContentChildren(AmexioBorderLayoutItemComponent) layout: QueryList<AmexioBorderLayoutItemComponent>;\n\n  layoutitems: AmexioBorderLayoutItemComponent[];\n\n  borderclass = 'borderlayout-container';\n\n  constructor() {\n  }\n ngOnInit() {\n  }\n\n  ngAfterContentInit() {\n    this.layoutitems = this.layout.toArray();\n\n    this.layoutitems.forEach(( item: any ) => {\n      this.borderclass = this.borderclass + '-' + item.getClassType();\n    });\n  }\n\n}\n","/**\n * Created by anaghak07 on 6/3/18.\n */\n\n/*\n Component Name : Amexio Box\n Component Selector : amexio-box\n Component Description : Amexio Box can be easily wrapped around any other component and configure using the different responsive styling.\n\n*/\nimport {Component, Input, OnInit} from '@angular/core';\nimport {IconLoaderService} from '../../services/icon/icon.service';\n\n@Component({\n selector: 'amexio-box',\n template: `\n <div class=\"box-content\" *ngIf=\"close\"\n [style.height] = \"height ? height:'none'\"\n [style.width] = \"width ? width:'none'\"\n [style.align] = \"align ? align:'none'\"\n [ngClass]=\"{\n 'box-default': borderColor=='default' || borderColor ==null,\n 'border-topbar': border=='top',\n 'border-bottombar': border =='bottom',\n 'border-rightbar': border =='right',\n 'border-leftbar': border =='left',\n 'border-all' : border =='all',\n 'border-top-bottom' : border =='top-bottom' || border =='bottom-top',\n 'border-right-left' : border =='right-left' || border =='left-right',\n\n 'bg-brown': bgColor=='brown',\n 'bg-red': bgColor=='red',\n 'bg-green': bgColor=='green',\n 'bg-yellow': bgColor=='yellow',\n 'bg-blue': bgColor=='blue',\n 'bg-purple': bgColor=='purple',\n 'bg-theme-color' : bgColor =='theme-color',\n\n 'border-theme-color' : borderColor =='theme-color',\n 'border-red' : borderColor =='red',\n 'border-yellow' : borderColor =='yellow',\n 'border-green' : borderColor =='green',\n 'border-blue' : borderColor =='blue',\n 'border-brown' : borderColor =='brown',\n 'border-purple' : borderColor =='purple',\n 'padding' : padding,\n 'border-dotted' : borderDotted\n  }\" >\n  <span *ngIf=\"closable\" class=\"box-close\">\n  <amexio-layout-icon key=\"tab_close\" (onClick)=\"closeBox($event)\"></amexio-layout-icon>\n  </span>\n   <ng-content></ng-content>\n\n </div>\n `,\n})\n\nexport class AmexioBoxComponent implements OnInit {\n/*\nProperties\nname : border\ndatatype : string\nversion : 4.1 onwards\ndefault : none\ndescription : Can set border position : top / right / left / bottom / all / top-bottom / left-right\n*/\n @Input('border')   border: string;\n/*\nProperties\nname : border-color\ndatatype : string\nversion : 4.1 onwards\ndefault : theme's border color\ndescription : Can use amexio colors : red / blue / green / yellow / brown / purple\n*/\n @Input('border-color') borderColor: string;\n/*\nProperties\nname : background-color\ndatatype : string\nversion : 4.1 onwards\ndefault : theme's background color\ndescription : Can use amexio colors : red / blue / green / yellow / brown / purple\n\n*/\n @Input('background-color') bgColor: string;\n/*\nProperties\nname : padding\ndatatype : boolean\nversion : 4.1 onwards\ndefault : false\ndescription : Padding to all sides\n*/\n @Input('padding') padding = false;\n/*\nProperties\nname : box-height\ndatatype : string\nversion : 4.1.2 onwards\ndefault :\ndescription : Height to box\n*/\n @Input('box-height') height: string;\n /*\nProperties\nname : box-width\ndatatype : string\nversion : 4.1.2 onwards\ndefault :\ndescription : Width to box\n*/\n @Input('box-width') width: string;\n\n /*\nProperties\nname : border-dotted\ndatatype : boolean\nversion : 4.1.8 onwards\ndefault : false\ndescription : Dotted border\n*/\n @Input('border-dotted') borderDotted = false;\n\n/*\nProperties\nname : align\ndatatype : string\nversion : 4.1.8 onwards\ndefault : left\ndescription : Align to box \"left\" \"right\" \"center\"\n*/\n @Input('align') align: string;\n/*\nProperties\nname : closable\ndatatype : boolean\nversion : 4.1.8 onwards\ndefault : false\ndescription : closable box\n*/\n @Input('closable') closable= false;\n\n constructor() { }\n close = true;\n ngOnInit() {\n  if (this.borderColor == null) {\n   this.borderColor = 'box-default';\n  }\n  if (this.borderColor != null && this.bgColor == null) {\n   this.bgColor = this.borderColor;\n  }\n }\n  closeBox(event: any) {\n    this.close = false;\n    this.closable = false;\n  }\n}\n","/**\n * Created by pratik on 18/12/17.\n */\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-header', template: `\n  <ng-content></ng-content>\n  `,\n})\n\nexport class AmexioHeaderComponent implements OnInit {\n /*\nProperties\nname :padding\ndatatype : string\nversion : 4.2 onwards\ndefault : left\ndescription : padding for header.\n*/\n  @Input() padding: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","/**\n * Created by pratik on 18/12/17.\n */\n\nimport {Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'amexio-action', template: '<ng-content></ng-content>',\n})\n\nexport class AmexioFooterComponent implements OnInit {\n /*\nProperties\nname :padding\ndatatype : string\nversion : 4.2 onwards\ndefault : left\ndescription : padding for footer.\n*/\n  @Input() padding: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","/**\n * Created by pratik on 18/12/17.\n */\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-body', template: '<ng-content></ng-content>',\n})\n\nexport class AmexioBodyComponent implements OnInit {\n /*\nProperties\nname :padding\ndatatype : string\nversion : 4.2 onwards\ndefault : left\ndescription : padding for body.\n*/\n  @Input() padding: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","\n/**\n * Created by ketangote on 12/18/17.\n */\n/*\nComponent Name : Amexio card\n Component Selector : <amexio-card>\nComponent Description : Amexio Card which renders card based on title, body and actions user has configured\n*/\n\nimport {\n  AfterContentInit, AfterViewInit, Component, ElementRef, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output,\n  Renderer2, ViewChild,\n} from '@angular/core';\nimport { ContentChildren, QueryList } from '@angular/core';\nimport { AmexioHeaderComponent } from '../../panes/header/pane.action.header';\nimport { AmexioFooterComponent } from './../../panes/action/pane.action.footer';\nimport { AmexioBodyComponent } from './../../panes/body/pane.action.body';\n@Component({\n  selector: 'amexio-card',\n  template: `\n  <div  #id  class=\"card-container\" *ngIf=\"show\"  (window:resize)=\"onResize()\"\n  (contextmenu)=\"loadContextMenu({event:$event,ref:id})\">\n    <header #cardHeader  [style.padding]=\"headerPadding\"  class=\"card-header\" *ngIf=\"header\"\n\n            [ngClass]=\"{'flex-start':(headeralign=='left'),'flex-end':(headeralign=='right'),'flex-center':(headeralign=='center')}\">\n      <ng-content select=\"amexio-header\"></ng-content>\n    </header>\n<div class=\"card-body cardbody\" [style.padding]=\"bodyPadding\"\n[ngStyle]=\"{'height.px' : height,'overflow-y' : height!= null ? 'auto' : '','min-height.px' : minHeight}\">\n      <ng-content select=\"amexio-body\"></ng-content>\n    </div>\n    <footer  #cardFooter [style.padding]=\"footerPadding\"  class=\"card-footer\" *ngIf=\"footer\"\n            [ngClass]=\"{'flex-start':(footeralign=='left'),'flex-end':(footeralign=='right'),'flex-center':(footeralign=='center')}\">\n      <ng-content select=\"amexio-action\"></ng-content>\n    </footer>\n  </div>\n\n  <span *ngIf=\"flag\" [ngStyle]=\"contextStyle\">\n    <ul class=\"context-menu-list\" [ngClass]=\"{'dropdown-up' : posixUp}\">\n      <li (click)=\"onContextNodeClick(itemConfig)\" class=\"context-menu-list-items\"\n      [ngStyle]=\"{'cursor': itemConfig.disabled ? 'not-allowed':'pointer'}\"\n        [ngClass]=\"{'context-menu-separator':itemConfig.seperator}\" *ngFor=\"let itemConfig of contextmenu\">\n        <em [ngStyle]=\"{'padding-left': itemConfig.icon ? '5px':'19px'}\" [ngClass]=\"itemConfig.icon\"></em>\n        <span style=\"white-space: nowrap;display: inline ; padding-left:5px\">{{itemConfig.text}}\n        </span>\n      </li>\n    </ul>\n  </span>\n  `,\n})\nexport class AmexioCardComponent implements OnInit, OnDestroy, AfterViewInit, AfterContentInit {\n  /*\nProperties\nname : header-align\ndatatype : string\nversion : 4.0 onwards\ndefault : left\ndescription : Align of item elements inside card header example : right,center,left.\n*/\n  @Input('header-align') headeralign: string;\n  /*\nProperties\nname : header-align\ndatatype : string\nversion : 4.0 onwards\ndefault : left\ndescription : User can enable header of card by setting this flag to true..\n*/\n  @Input() header: boolean;\n  /*\nProperties\nname : footer\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : User can enable footer of card by setting this flag to true.\n*/\n  @Input() footer: boolean;\n  /*\nProperties\nname : footer-align\ndatatype :  string\nversion : 4.0 onwards\ndefault : left\ndescription : Align of item elements inside card footer example : right,center,left..\n*/\n  @Input('footer-align') footeralign: string;\n  /*\nProperties\nname : show\ndatatype :  boolean\nversion : 4.0 onwards\ndefault : true\ndescription : User can bind variable to this and hide/unhide card based on requirement..\n*/\n  @Input() show = true;\n  /*\nProperties\nname : height\ndatatype :   any\nversion : 4.0 onwards\ndefault :\ndescription : User can set the height to body..\n*/\n  @Input() height: any;\n  /*\nProperties\nname : min-height\ndatatype :   any\nversion : 4.0 onwards\ndefault :\ndescription : Provides minimum card height.\n*/\n  @Input('min-height') minHeight: any;\n  /*\nProperties\nname : body-height\ndatatype :   any\nversion : 4.0 onwards\ndefault :\ndescription : Provides card height.\n*/\n  @Input('body-height') bodyheight: any;\n\n  /*\nProperties\nname :  context-menu\ndatatype : string\nversion : 5.0.1 onwards\ndefault :\ndescription : Context Menu provides the list of menus on right click.\n*/\n  @Input('context-menu') contextmenu: any[];\n\n  @Input() parentRef: any;\n\n  @Output() nodeRightClick: any = new EventEmitter<any>();\n\n  @Output() rightClick: any = new EventEmitter<any>();\n  /*\n   view child begins\n  */\n\n  @ViewChild('cardHeader', { read: ElementRef }) public cardHeader: ElementRef;\n\n  @ViewChild('cardFooter', { read: ElementRef }) public cardFooter: ElementRef;\n\n  headerPadding: string;\n  bodyPadding: string;\n  footerPadding: string;\n\n  flag: boolean;\n\n  posixUp: boolean;\n\n  rightClickNodeData: any;\n\n  contextStyle: any;\n\n  mouseLocation: { left: number; top: number } = { left: 0, top: 0 };\n\n  @ContentChildren(AmexioHeaderComponent) amexioHeader: QueryList<AmexioHeaderComponent>;\n  headerComponentList: AmexioHeaderComponent[];\n  @ContentChildren(AmexioBodyComponent) amexioBody: QueryList<AmexioBodyComponent>;\n  bodyComponentList: AmexioBodyComponent[];\n  @ContentChildren(AmexioFooterComponent) amexioFooter: QueryList<AmexioFooterComponent>;\n  footerComponentList: AmexioFooterComponent[];\n  globalClickListenFunc: () => void;\n  constructor(private renderer: Renderer2) {\n    this.headeralign = 'left';\n    this.footeralign = 'right';\n  }\n  ngOnInit() {\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.onResize();\n    }, 500);\n  }\n  ngAfterContentInit() {\n    // FOR HEADER PADING\n    this.headerComponentList = this.amexioHeader.toArray();\n    this.headerComponentList.forEach((item: AmexioHeaderComponent, currentIndex) => {\n      if (item.padding) {\n        this.headerPadding = item.padding;\n      }\n    });\n    // FOR BODY PADDING\n    this.bodyComponentList = this.amexioBody.toArray();\n    this.bodyComponentList.forEach((item: AmexioBodyComponent, currentIndex) => {\n      if (item.padding) {\n        this.bodyPadding = item.padding;\n      }\n    });\n    // FOR FOOTER PADDING\n    this.footerComponentList = this.amexioFooter.toArray();\n    this.footerComponentList.forEach((item: AmexioFooterComponent, currentIndex) => {\n      if (item.padding) {\n        this.footerPadding = item.padding;\n      }\n    });\n  }\n  // Calculate body size based on browser height\n  onResize() {\n    if (this.bodyheight) {\n      let h = (window.innerHeight / 100) * this.bodyheight;\n      if (this.cardHeader && this.cardHeader.nativeElement && this.cardHeader.nativeElement.offsetHeight) {\n        h = h - this.cardHeader.nativeElement.offsetHeight;\n      }\n      if (this.cardFooter && this.cardFooter.nativeElement && this.cardFooter.nativeElement.offsetHeight) {\n        h = h - this.cardFooter.nativeElement.offsetHeight;\n      }\n      if (this.bodyheight === 100) {\n        h = h - 40;\n      }\n      this.minHeight = h;\n      this.height = h;\n    }\n  }\n\n  getContextMenu() {\n    if (this.contextmenu && this.contextmenu.length > 0) {\n      this.flag = true;\n      this.addListner();\n    }\n  }\n\n  getListPosition(elementRef: any): boolean {\n    const height = 240;\n    if ((window.screen.height - elementRef.getBoundingClientRect().bottom) < height) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  loadContextMenu(rightClickData: any) {\n    this.mouseLocation.left = rightClickData.event.clientX;\n    this.mouseLocation.top = rightClickData.event.clientY;\n    this.getContextMenu();\n    this.posixUp = this.getListPosition(rightClickData.ref);\n    rightClickData.event.preventDefault();\n    rightClickData.event.stopPropagation();\n    this.rightClickNodeData = rightClickData.data;\n    this.contextStyle = this.getContextMenuStyle();\n    this.nodeRightClick.emit(rightClickData);\n  }\n\n  onContextNodeClick(itemConfig: any) {\n    if (!itemConfig.disabled) {\n      const obj = {\n        menuData: itemConfig,\n        NodeData: this.rightClickNodeData,\n      };\n      this.flag = false;\n      this.removeListner();\n      this.rightClick.emit(obj);\n    }\n  }\n\n  getContextMenuStyle() {\n    return {\n      'cursor': 'default',\n      'position': 'fixed',\n      'display': this.flag ? 'block' : 'none',\n      'left': this.mouseLocation.left + 'px',\n      'top': this.mouseLocation.top + 'px',\n      'box-shadow': '1px 1px 2px #000000',\n      'width': '15%',\n    };\n  }\n\n  addListner() {\n    this.globalClickListenFunc = this.renderer.listen('document', 'click', (e: any) => {\n      this.flag = false;\n      if (!this.flag) {\n        this.removeListner();\n      }\n    });\n  }\n\n  removeListner() {\n    if (this.globalClickListenFunc) {\n      this.globalClickListenFunc();\n    }\n  }\n\n  ngOnDestroy(): void {\n   this.removeListner();\n  }\n}\n","/**\n * Created by pratik on 8/1/18.\n */\n\n /*\n Component Name : Amexio Column\n Component Selector : <amexio-column>\n Component Description : Amexio column system allows up to 12 columns across the page.\n*/\n\nimport {Component, HostBinding, Input, OnInit} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'amexio-column', template: `\n\n    <div [ngStyle]=\"{'height':fit ? '100%':''}\">\n        <ng-content></ng-content>\n    </div>\n  `,\n})\n\nexport class AmexioColumnComponent implements OnInit {\n  size_: string;\n\n  colclass: string;\n  @HostBinding('attr.class') role = this.colclass;\n\n  constructor() {\n\n  }\n   /*\nProperties\nname : FitHeight\ndatatype : any\nversion : 5.2 onwards\ndefault :boolen\ndescription : Column size*/\n@Input('fit') fit: false;\n/*\nProperties\nname : size\ndatatype : any\nversion : 4.0 onwards\ndefault :\ndescription : Column size*/\n  @Input()\n  set size(value: any) {\n    this.size_ = value;\n    this.colclass = 'flex-col flex-col-' + value;\n    this.role = this.colclass;\n  }\n\n  get size() {\n    return this.size_;\n  }\n\n  ngOnInit() {\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AmexioGridModel } from './gridmodel.component';\n\nimport { GridConfig } from '../../../models/GridConfig';\n\n@Injectable()\nexport class AmexioGridLayoutService {\n  servicevar: any;\n  layoutData: any[] = [];\n  devicevar: any;\n  count: number;\n\n  constructor() {\n  }\n\n  createLayout(dataLayout: GridConfig) {\n    let findStatus = false;\n    this.count = dataLayout.count;\n    const data = dataLayout.getLayout();\n    if (this.layoutData.length <= 0) {\n      this.layoutData.push(data);\n    } else {\n      this.layoutData.forEach((obj: any) => {\n        if (obj.name === data.name) {\n          obj[data.layoutType] = data[data.layoutType];\n          findStatus = true;\n        }\n      });\n      if (!findStatus) {\n        this.layoutData.push(data);\n      }\n    }\n}\n\n  getLayoutData(layoutName: string) {\n    return this.layoutData.find((obj) => obj.name === layoutName);\n  }\n\n}\n","import {Component,  HostBinding, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-grid-item',\n  template: `\n          <ng-content></ng-content>\n  `,\n})\nexport class AmexioGridItemComponent implements OnInit {\n  /*\nProperties\nname : name\ndatatype :\nversion : 5.3.1onwards\ndefault : Type of name header/leftside/main/rightside/footer.\ndescription : The name is for determining the name of item.\n*/\n  @HostBinding('class') hostname: any;\n  private _name: string;\n\n  get name(): string{\n    return this._name;\n  }\n\n  @Input('name')\n  set name(value: string) {\n    this._name = value;\n    this.hostname = this._name;\n  }\n\n  constructor() {\n  }\n\n  ngOnInit() {\n   this.insertStyleSheetRule ('.' + this.name + '{ grid-area: ' + this.name + ' } ' );\n   }\n\n   insertStyleSheetRule(ruleText: any) {\n    const sheets: any = document.styleSheets;\n    if (sheets.length === 0) {\n      const style = document.createElement('style');\n      style.appendChild(document.createTextNode(''));\n      document.head.appendChild(style);\n    }\n    const sheet: any = sheets[sheets.length - 1];\n    sheet.insertRule(ruleText, sheet.rules ? sheet.rules.length : sheet.cssRules.length);\n  }\n}\n","import { AfterContentInit, Component, ContentChildren, Input, OnInit, QueryList, ViewChild } from '@angular/core';\nimport { AmexioGridLayoutService } from './amexiogridlayoutservice.service';\nimport { AmexioGridItemComponent } from './griditem.component';\nimport { AmexioGridModel } from './gridmodel.component';\n\n@Component({\n  selector: 'amexio-layout-grid',\n  template: `\n    <div [ngClass]=\"className\" >\n          <ng-content select=\"amexio-grid-item\"></ng-content>\n    </div>\n  `,\n})\nexport class AmexioGridComponent implements AfterContentInit, OnInit {\n  @ContentChildren(AmexioGridItemComponent) queryItem: QueryList<AmexioGridItemComponent>;\n  itemCollection: AmexioGridItemComponent[];\n\n  /*\n Properties\n name : data\n datatype : array\n version : 5.3.1onwards\n default : Data is the a 2D array which user can pass.\n description : The data is for defining the input to be passed.\n */\n  @Input('layout') layout: string;\n  screenWidth: any;\n  containerClass: any;\n  className: string;\n  colCount: number;\n  constructor(public _gridlayoutService: AmexioGridLayoutService) {\n  }\n  ngOnInit() {\n    this.colCount = this._gridlayoutService.count;\n    this.containerClass = '';\n    this.className = '';\n    this.cssGenreration(this._gridlayoutService.getLayoutData(this.layout));\n  }\n\n  getCssAttribute(): string {\n    return 'display: grid;' + ' grid-gap: 5px;' + 'grid-template-columns: repeat(' + this.colCount + ', 1fr);';\n  }\n  insertStyleSheetRuleParent(ruleText: any) {\n    const sheets: any = document.styleSheets;\n    if (sheets.length === 0) {\n      const style = document.createElement('style');\n      style.appendChild(document.createTextNode(''));\n      document.head.appendChild(style);\n    }\n    const sheet: any = sheets[sheets.length - 1];\n    sheet.insertRule(ruleText, sheet.rules ? sheet.rules.length : sheet.cssRules.length);\n  }\n\n  ngAfterContentInit() {\n    this.itemCollection = this.queryItem.toArray();\n  }\n\n  dataCreation(deviceName: any[]): string {\n    this.containerClass = '';\n    deviceName.forEach((ele: any) => {\n      this.containerClass = this.containerClass + '\"' + ele.join(' ') + '\"';\n    });\n    return this.containerClass;\n  }\n\n  cssGenreration(layoutData: any) {\n    this.className = this.className + '' + layoutData.name;\n    this.cssGenerationCommonMethod(layoutData, '(max-width: 767px)', 'mobile');\n    this.cssGenerationCommonMethod(layoutData, '(min-width: 1025px)', 'desktop');\n    this.cssGenerationCommonMethod(layoutData, '(min-width: 768px) and (max-width: 1024px)', 'tab');\n  }\n\n  cssGenerationCommonMethod(layoutData: any, screenWidth: string, deviceType: string) {\n    this.insertStyleSheetRuleParent('@' + 'media' + screenWidth + '{' + '.' + layoutData.name +\n      '{' + this.getCssAttribute() + ' grid-template-areas: ' +\n      this.dataCreation(layoutData[deviceType]) + '}' + '}');\n  }\n}\n","/**\n * Created by pratik on 21/12/17.\n */\nimport {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {IconLoaderService} from '../../services/icon/icon.service';\n\n@Component({\n  selector: 'amexio-layout-icon', template: `\n    <ng-container *ngIf=\"iconLoaderService.iconToUse == 'fa'\">\n\n      <ng-container *ngIf=\"customclass != null\">\n        <i class=\"{{customclass}}\" aria-hidden=\"true\" (click)=\"onClick.emit($event)\" style=\"cursor: pointer;\"></i>\n      </ng-container>\n      <ng-container *ngIf=\"customclass == null\">\n        <i class=\"{{iconClass}}\" aria-hidden=\"true\" (click)=\"onClick.emit($event)\" style=\"cursor: pointer;\"></i>\n      </ng-container>\n    </ng-container>\n\n    <ng-container *ngIf=\"iconLoaderService.iconToUse == 'mat'\">\n\n      <ng-container *ngIf=\"customclass != null\">\n        <i class=\"material-icons\" (click)=\"onClick.emit($event)\" style=\"cursor: pointer;\">{{customclass}}</i>\n      </ng-container>\n\n      <ng-container *ngIf=\"customclass == null\">\n        <i class=\"material-icons\" (click)=\"onClick.emit($event)\" style=\"cursor: pointer;\">{{iconClass}}</i>\n      </ng-container>\n    </ng-container>\n  `,\n})\n\nexport class AmexioIconLayoutComponent implements OnInit , OnChanges {\n\n  @Input() key: string;\n\n  @Input() customclass: string;\n\n  @Output() onClick: EventEmitter<any> = new EventEmitter<any>();\n\n  iconClass: string;\n\n  constructor(public iconLoaderService: IconLoaderService) {\n\n  }\n\n  ngOnInit() {\n    this.iconClass = this.getIconClass();\n  }\n\n  getIconClass(): string {\n    if (this.iconLoaderService.iconMappings != null) {\n\n      const iconObject = this.iconLoaderService.iconMappings.find((obj: any) => obj.component === this.key);\n      if (iconObject != null) {\n        return iconObject[ this.iconLoaderService.iconToUse.toString() ];\n      } else {\n        return '';\n      }\n    }\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['key']) {\n      this.key = changes.key.currentValue;\n      this.iconClass = this.getIconClass();\n    }\n  }\n}\n","/**\n * Created by pratik on 8/1/18.\n */\n\n /*\n Component Name : Amexio  Row\n Component Selector : <amexio-row>\n Component Description : Amexio uses a series of rows and columns to layout and align content and is fully responsive..\n\n*/\nimport {AfterContentInit, Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-row', template: `\n    <div class=\"flex-row\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\n\nexport class AmexioRowComponent implements AfterContentInit, OnInit {\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  ngAfterContentInit() {\n\n  }\n\n}\n","\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\n\n@Injectable()\nexport class DeviceQueryService {\n  constructor( @Inject(PLATFORM_ID) private platformId: any) {\n\n  }\n\n  rules = {\n    print: 'print',\n    screen: 'screen',\n    phone: '(max-width: 767px)',\n    tablet: '(min-width: 768px) and (max-width: 1024px)',\n    desktop: '(min-width: 1025px)',\n    portrait: '(orientation: portrait)',\n    landscape: '(orientation: landscape)',\n    retina: '(-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi)',\n  };\n\n  Check = function(mq: any) {\n    if (isPlatformBrowser(this.platformId)) {\n      if (!mq) {\n        return;\n      }\n      return window.matchMedia(mq).matches;\n    } else {\n      return;\n    }\n  };\n\n  /**********************************************\n   METHODS FOR CHECKING TYPE\n   **********************************************/\n  IsPhone() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.phone).matches;\n    } else {\n      return null;\n    }\n  }\n\n  IsTablet = function() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.tablet).matches;\n    } else {\n      return null;\n    }\n  };\n\n  IsDesktop = function() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.desktop).matches;\n    } else {\n      return null;\n    }\n  };\n\n  IsPortrait = function() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.portrait).matches;\n    } else {\n      return null;\n    }\n  };\n\n  IsLandscape = function() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.landscape).matches;\n    } else {\n      return null;\n    }\n  };\n\n  IsRetina = function() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window.matchMedia(this.rules.retina).matches;\n    } else {\n      return null;\n    }\n  };\n\n  browserWindow = () => {\n    return window;\n  }\n\n  /**********************************************\n   EVENT LISTENERS BY TYPE\n   **********************************************/\n  OnPhone(callBack: any) {\n    if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {\n        const mql: MediaQueryList = window.matchMedia(this.rules.phone);\n        this.mqlMethod(callBack, mql);\n    }\n  }\n\n  OnTablet(callBack: any) {\n    if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {\n        const mql: MediaQueryList = window.matchMedia(this.rules.tablet);\n        this.mqlMethod(callBack, mql);\n    }\n  }\n\n  OnDesktop(callBack: any) {\n    if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {\n        const mql: MediaQueryList = window.matchMedia(this.rules.desktop);\n        this.mqlMethod(callBack, mql);\n    }\n  }\n\n  OnPortrait(callBack: any) {\n    if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {\n        const mql: MediaQueryList = window.matchMedia(this.rules.portrait);\n        this.mqlMethod(callBack, mql);\n    }\n  }\n\n  OnLandscape(callBack: any) {\n    if (typeof callBack === 'function' && isPlatformBrowser(this.platformId)) {\n        const mql: MediaQueryList = window.matchMedia(this.rules.landscape);\n        this.mqlMethod(callBack, mql);\n    }\n  }\n\n  mqlMethod(callBack: any, mql: any) {\n    mql.addListener((mql1: MediaQueryList) => {\n      if (mql1.matches) {\n        callBack(mql);\n      }\n    });\n  }\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; });\n}","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","import { root } from '../util/root';\n\n/** Symbol.observable addition */\n/* Note: This will add Symbol.observable globally for all TypeScript users,\n  however, we are no longer polyfilling Symbol.observable */\ndeclare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\n\n/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nfunction ObjectUnsubscribedErrorImpl(this: any) {\n  Error.call(this);\n  this.message = 'object unsubscribed';\n  this.name = 'ObjectUnsubscribedError';\n  return this;\n}\n\nObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observables. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // )\n    // .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // ).subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the keySelector function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Elsewhere, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the key field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the elementSelector function.\n *\n * ## Examples\n * ### Group objects by id and return as array\n * ```javascript\n * import { mergeMap, groupBy } from 'rxjs/operators';\n * import { of } from 'rxjs/observable/of';\n *\n * interface Obj {\n *    id: number,\n *    name: string,\n * }\n *\n * of<Obj>(\n *   {id: 1, name: 'javascript'},\n *   {id: 2, name: 'parcel'},\n *   {id: 2, name: 'webpack'},\n *   {id: 1, name: 'typescript'},\n *   {id: 3, name: 'tslint'}\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap((group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], []))),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'javascript'},\n * //   { id: 1, name: 'typescript'} ]\n * //\n * // [ { id: 2, name: 'parcel'},\n * //   { id: 2, name: 'webpack'} ]\n * //\n * // [ { id: 3, name: 'tslint'} ]\n * ```\n *\n * ### Pivot data on the id field\n * ```javascript\n * import { mergeMap, groupBy, map } from 'rxjs/operators';\n * import { of } from 'rxjs/observable/of';\n *\n * of<Obj>(\n *   {id: 1, name: 'javascript'},\n *   {id: 2, name: 'parcel'},\n *   {id: 2, name: 'webpack'},\n *   {id: 1, name: 'typescript'}\n *   {id: 3, name: 'tslint'}\n * ).pipe(\n *   groupBy(p => p.id, p => p.name),\n *   mergeMap( (group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))),\n *   map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)})),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'javascript', 'typescript' ] }\n * // { id: 2, values: [ 'parcel', 'webpack' ] }\n * // { id: 3, values: [ 'tslint' ] }\n * ```\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T | R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map<K, Subject<T | R>>();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = (this.subjectSelector ? this.subjectSelector() : new Subject<R>()) as Subject<T | R>;\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T | any>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  /** @deprecated Do not construct this type. Internal use only */\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const { refCountSubscription, groupSubject } = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```javascript\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```javascript\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\n\nexport const queue = new QueueScheduler(QueueAction);\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * ![](throw.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then emit an error\n * ```javascript\n * import { throwError, concat, of } from 'rxjs';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // 7\n * // Error: oops!\n * ```\n *\n * ---\n *\n * ### Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13\n * ```javascript\n * import { throwError, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 2\n *     ? throwError('Twos are bad')\n *     : of('a', 'b', 'c')\n *   ),\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // a\n * // b\n * // c\n * // a\n * // b\n * // c\n * // Twos are bad\n * ```\n *\n * @see {@link Observable}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throwError\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n * Ensure values in subscribe are called just before browser repaint.\n * ```javascript\n * const intervals = interval(10);                // Intervals are scheduled\n *                                                // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler),          // ...but we will observe on animationFrame\n * )                                              // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  /** @nocollapse */\n  static dispatch(this: SchedulerAction<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: SchedulerLike,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    const destination = this.destination as Subscription;\n    destination.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Subject } from './Subject';\nimport { SchedulerLike } from './types';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * A variant of Subject that \"replays\" or emits old values to new subscribers.\n * It buffers a set number of values and will emit those values immediately to\n * any new subscribers in addition to emitting new values to existing subscribers.\n *\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: (ReplayEvent<T> | T)[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n  private _infiniteTimeWindow: boolean = false;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: SchedulerLike) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      this._infiniteTimeWindow = true;\n      this.next = this.nextInfiniteTimeWindow;\n    } else {\n      this.next = this.nextTimeWindow;\n    }\n  }\n\n  private nextInfiniteTimeWindow(value: T): void {\n    const _events = this._events;\n    _events.push(value);\n    // Since this method is invoked in every next() call than the buffer\n    // can overgrow the max size only by one item\n    if (_events.length > this._bufferSize) {\n      _events.shift();\n    }\n\n    super.next(value);\n  }\n\n  private nextTimeWindow(value: T): void {\n    this._events.push(new ReplayEvent(this._getNow(), value));\n    this._trimBufferThenGetEvents();\n\n    super.next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n    const _infiniteTimeWindow = this._infiniteTimeWindow;\n    const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    const len = _events.length;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.isStopped || this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    if (_infiniteTimeWindow) {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(<T>_events[i]);\n      }\n    } else {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next((<ReplayEvent<T>>_events[i]).value);\n      }\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = <ReplayEvent<T>[]>this._events;\n\n    const eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","let nextHandle = 1;\n\nconst tasksByHandle: { [handle: string]: () => void } = {};\n\nfunction runIfPresent(handle: number) {\n  const cb = tasksByHandle[handle];\n  if (cb) {\n    cb();\n  }\n}\n\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    tasksByHandle[handle] = cb;\n    Promise.resolve().then(() => runIfPresent(handle));\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    delete tasksByHandle[handle];\n  },\n};\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```javascript\n * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...\n * Rx.Scheduler.asap.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n * @static true\n * @name asap\n * @owner Scheduler\n */\n\nexport const asap = new AsapScheduler(AsapAction);\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```javascript\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```javascript\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```javascript\n * const div = document.querySelector('.some-div');\n *\n * Rx.Scheduler.animationFrame.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see .some-div element growing in height\n * ```\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\n\nexport const animationFrame = new AnimationFrameScheduler(AnimationFrameAction);\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @nodoc\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable<T>(obj: any): obj is Observable<T> {\n  return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","export interface ArgumentOutOfRangeError extends Error {\n}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  new(): ArgumentOutOfRangeError;\n}\n\nfunction ArgumentOutOfRangeErrorImpl(this: any) {\n  Error.call(this);\n  this.message = 'argument out of range';\n  this.name = 'ArgumentOutOfRangeError';\n  return this;\n}\n\nArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = ArgumentOutOfRangeErrorImpl as any;","export interface EmptyError extends Error {\n}\n\nexport interface EmptyErrorCtor {\n  new(): EmptyError;\n}\n\nfunction EmptyErrorImpl(this: any) {\n  Error.call(this);\n  this.message = 'no elements in sequence';\n  this.name = 'EmptyError';\n  return this;\n}\n\nEmptyErrorImpl.prototype = Object.create(Error.prototype);\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = EmptyErrorImpl as any;","export interface TimeoutError extends Error {\r\n}\r\n\r\nexport interface TimeoutErrorCtor {\r\n  new(): TimeoutError;\r\n}\r\n\r\nfunction TimeoutErrorImpl(this: any) {\r\n  Error.call(this);\r\n  this.message = 'Timeout has occurred';\r\n  this.name = 'TimeoutError';\r\n  return this;\r\n}\r\n\r\nTimeoutErrorImpl.prototype = Object.create(Error.prototype);\r\n\r\n/**\r\n * An error thrown when duetime elapses.\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @class TimeoutError\r\n */\r\nexport const TimeoutError: TimeoutErrorCtor = TimeoutErrorImpl as any;\r\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n\n// tslint:disable:max-line-length\n/** @deprecated resultSelector is no longer supported, use a mapping function. */\nexport function bindCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindCallback<R1, R2, R3, R4>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): () => Observable<any[]>;\nexport function bindCallback<R1, R2, R3>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindCallback<R1, R2>(callbackFunc: (callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindCallback<R1>(callbackFunc: (callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindCallback(callbackFunc: (callback: () => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<any[]>;\nexport function bindCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindCallback<A1>(callbackFunc: (arg1: A1, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<any[]>;\nexport function bindCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>;\n\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((result: R) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R>;\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((...results: R[]) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R[]>;\n\nexport function bindCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\n// tslint:enable:max-line-length\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```javascript\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```javascript\n * someFunction((a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * });\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```javascript\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```javascript\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback<T>(\n  callbackFunc: Function,\n  resultSelector?: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindCallback(callbackFunc, scheduler)(...args).pipe(\n        map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)),\n      );\n    }\n  }\n\n  return function (this: any, ...args: any[]): Observable<T> {\n    const context = this;\n    let subject: AsyncSubject<T>;\n    const params = {\n      context,\n      subject,\n      callbackFunc,\n      scheduler,\n    };\n    return new Observable<T>(subscriber => {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        const state: DispatchState<T> = {\n          args, subscriber, params,\n        };\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, state);\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  args: any[];\n  subscriber: Subscriber<T>;\n  params: ParamsContext<T>;\n}\n\ninterface ParamsContext<T> {\n  callbackFunc: Function;\n  scheduler: SchedulerLike;\n  context: any;\n  subject: AsyncSubject<T>;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const self = this;\n  const { args, subscriber, params } = state;\n  const { callbackFunc, context, scheduler } = params;\n  let { subject } = params;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n      this.add(scheduler.schedule<NextState<T>>(dispatchNext, 0, { value, subject }));\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface NextState<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(this: SchedulerAction<NextState<T>>, state: NextState<T>) {\n  const { value, subject } = state;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface ErrorState<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(this: SchedulerAction<ErrorState<T>>, state: ErrorState<T>) {\n  const { err, subject } = state;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function bindNodeCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindNodeCallback<R1, R2, R3, R4>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<R1, R2, R3>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<R1, R2>(callbackFunc: (callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindNodeCallback<R1>(callbackFunc: (callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindNodeCallback(callbackFunc: (callback: (err: any) => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindNodeCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindNodeCallback<A1>(callbackFunc: (arg1: A1, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindNodeCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>; /* tslint:enable:max-line-length */\n\nexport function bindNodeCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```javascript\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```javascript\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```javascript\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback<T>(\n  callbackFunc: Function,\n  resultSelector: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(\n        map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n      );\n    }\n  }\n\n  return function(this: any, ...args: any[]): Observable<T> {\n    const params: ParamsState<T> = {\n      subject: undefined,\n      args,\n      callbackFunc,\n      scheduler,\n      context: this,\n    };\n    return new Observable<T>(subscriber => {\n      const { context } = params;\n      let { subject } = params;\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            const err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, { params, subscriber, context });\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  subscriber: Subscriber<T>;\n  context: any;\n  params: ParamsState<T>;\n}\n\ninterface ParamsState<T> {\n  callbackFunc: Function;\n  args: any[];\n  scheduler: SchedulerLike;\n  subject: AsyncSubject<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const { params, subscriber, context } = state;\n  const { callbackFunc, args, scheduler } = params;\n  let subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const err = innerArgs.shift();\n      if (err) {\n        this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        this.add(scheduler.schedule<DispatchNextArg<T>>(dispatchNext, 0, { value, subject }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { isScheduler  } from '../util/isScheduler';\nimport { isArray  } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Operator } from '../Operator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\n\nconst NONE = {};\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, R>(v1: ObservableInput<T>, resultSelector: (v1: T) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, resultSelector: (v1: T, v2: T2) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, resultSelector: (v1: T, v2: T2, v3: T3) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R, scheduler?: SchedulerLike): Observable<R>;\n\nexport function combineLatest<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: SchedulerLike): Observable<[T, T2]>;\nexport function combineLatest<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): Observable<[T, T2, T3]>;\nexport function combineLatest<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): Observable<[T, T2, T3, T4]>;\nexport function combineLatest<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): Observable<[T, T2, T3, T4, T5]>;\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function combineLatest<T>(array: ObservableInput<T>[], scheduler?: SchedulerLike): Observable<T[]>;\nexport function combineLatest<R>(array: ObservableInput<any>[], scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<T, R>(array: ObservableInput<T>[], resultSelector: (...values: Array<T>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<R>(array: ObservableInput<any>[], resultSelector: (...values: Array<any>) => R, scheduler?: SchedulerLike): Observable<R>;\nexport function combineLatest<T>(...observables: Array<ObservableInput<T> | SchedulerLike>): Observable<T[]>;\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R) | SchedulerLike>): Observable<R>;\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | SchedulerLike>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n * ## Examples\n * ### Combine two timer Observables\n * ```javascript\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * ### Combine an array of Observables\n * ```javascript\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000),   // emit 0 and then emit n after n seconds\n *     startWith(0),\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n *\n * ### Use project function to dynamically calculate the Body-Mass Index\n * ```javascript\n * * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest(weight, height).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<T, R>(...observables: Array<any | ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    (((...values: Array<any>) => R)) |\n                                                    SchedulerLike>): Observable<R> {\n  let resultSelector: (...values: Array<any>) => R =  null;\n  let scheduler: SchedulerLike = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = <SchedulerLike>observables.pop();\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = <Array<Observable<any>>>observables[0];\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator<T, R>(resultSelector));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private resultSelector?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private resultSelector?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryResultSelector(values: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { MonoTypeOperatorFunction, OperatorFunction, ObservableInput } from '../types';\n\nexport function mergeAll<T>(concurrent?: number): OperatorFunction<ObservableInput<T>, T>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map((ev) => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(10))),\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): MonoTypeOperatorFunction<T> {\n  return mergeMap<T, T>(identity as (value: T, index: number) => ObservableInput<T>, concurrent);\n}\n","\nimport { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function concatAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.png)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev => interval(1000).pipe(take(4))),\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return mergeAll<T>(1);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\nexport function concat<T>(v1: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function concat<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function concat<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function concat<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function concat<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function concat<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function concat<T>(...observables: (ObservableInput<T> | SchedulerLike)[]): Observable<T>;\nexport function concat<T, R>(...observables: (ObservableInput<any> | SchedulerLike)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n * ### Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n * ```javascript\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * ### Concatenate an array of 3 Observables\n * ```javascript\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const result = concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * ### Concatenate the same Observable to repeat it\n * ```javascript\n * const timer = interval(1000).pipe(take(2));\n * *\n * concat(timer, timer) // concatenating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {SchedulerLike} [scheduler=null] An optional {@link SchedulerLike} to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): Observable<R> {\n  if (observables.length === 1 || (observables.length === 2 && isScheduler(observables[1]))) {\n    return from(<any>observables[0]);\n  }\n  return concatAll<R>()(of(...observables));\n}\n","import { Observable } from '../Observable';\nimport { SubscribableOrPromise } from '../types';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * ## Example\n * ### Subscribe to either an Observable of clicks or an Observable of interval, at random\n * ```javascript\n * const clicksOrInterval = defer(function () {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer<T>(observableFactory: () => SubscribableOrPromise<T> | void): Observable<T> {\n  return new Observable(subscriber => {\n    let input: SubscribableOrPromise<T> | void;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    const source = input ? from(input) : empty();\n    return source.subscribe(subscriber);\n  });\n}","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\n// forkJoin([a$, b$, c$]);\nexport function forkJoin<T>(sources: [ObservableInput<T>]): Observable<T[]>;\nexport function forkJoin<T, T2>(sources: [ObservableInput<T>, ObservableInput<T2>]): Observable<[T, T2]>;\nexport function forkJoin<T, T2, T3>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>]): Observable<[T, T2, T3]>;\nexport function forkJoin<T, T2, T3, T4>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>, ObservableInput<T4>]): Observable<[T, T2, T3, T4]>;\nexport function forkJoin<T, T2, T3, T4, T5>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>, ObservableInput<T4>, ObservableInput<T5>]): Observable<[T, T2, T3, T4, T5]>;\nexport function forkJoin<T, T2, T3, T4, T5, T6>(sources: [ObservableInput<T>, ObservableInput<T2>, ObservableInput<T3>, ObservableInput<T4>, ObservableInput<T5>, ObservableInput<T6>]): Observable<[T, T2, T3, T4, T5, T6]>;\nexport function forkJoin<T>(sources: Array<ObservableInput<T>>): Observable<T[]>;\n\n// forkJoin(a$, b$, c$)\nexport function forkJoin<T>(v1: ObservableInput<T>): Observable<T[]>;\nexport function forkJoin<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function forkJoin<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function forkJoin<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function forkJoin<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function forkJoin<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function forkJoin(...args: Array<ObservableInput<any>|Function>): Observable<any>;\nexport function forkJoin<T>(...sources: ObservableInput<T>[]): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Joins last values emitted by passed Observables.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n * or directly as arguments. If no input Observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first Observable,\n * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n * not emit more than once and it will complete after that. If you need to emit combined values not only\n * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input Observables, whenever any of\n * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other Observables.\n * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other Observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * Observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output Observable is supposed to emit a result.\n *\n * ## Examples\n * ### Use forkJoin with operator emitting immediately\n * ```javascript\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin(\n *   of(1, 2, 3, 4),\n *   of(5, 6, 7, 8),\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!'),\n * );\n *\n * // Logs:\n * // [4, 8]\n * // \"This is how it ends!\"\n * ```\n *\n * ### Use forkJoin with operator emitting after some time\n * ```javascript\n * import { forkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)),  // emit 0, 1, 2, 3 every half a second and complete\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!'),\n * );\n *\n * // Logs:\n * // [2, 3] after 3 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * ### Use forkJoin with project function\n * ```javascript\n * import { forkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)),  // emit 0, 1, 2, 3 every half a second and complete\n * ).pipe(\n *   map(([n, m]) => n + m),\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!'),\n * );\n *\n * // Logs:\n * // 5 after 3 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin<T>(\n  ...sources: Array<ObservableInput<T> | ObservableInput<T>[] | Function>\n): Observable<T[]> {\n\n  let resultSelector: Function;\n  if (typeof sources[sources.length - 1] === 'function') {\n    // DEPRECATED PATH\n    resultSelector = sources.pop() as Function;\n  }\n\n  // if the first and only other argument is an array\n  // assume it's been called with `forkJoin([obs1, obs2, obs3])`\n  if (sources.length === 1 && isArray(sources[0])) {\n    sources = sources[0] as Array<ObservableInput<T>>;\n  }\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return forkJoin(sources).pipe(\n      map(args => resultSelector(...args))\n    );\n  }\n\n  return new Observable(subscriber => {\n    return new ForkJoinSubscriber(subscriber, sources as Array<ObservableInput<T>>);\n  });\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ForkJoinSubscriber<T, R> extends OuterSubscriber<T, T> {\n  private completed = 0;\n  private values: T[];\n  private haveValues = 0;\n\n  constructor(destination: Subscriber<R>,\n              private sources: Array<ObservableInput<T>>) {\n    super(destination);\n\n    const len = sources.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      const source = sources[i];\n      const innerSubscription = subscribeToResult(this, source, null, i);\n\n      if (innerSubscription) {\n        this.add(innerSubscription);\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values[outerIndex] = innerValue;\n    if (!(innerSub as any)._hasValue) {\n      (innerSub as any)._hasValue = true;\n      this.haveValues++;\n    }\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, T>): void {\n    const { destination, haveValues, values } = this;\n    const len = values.length;\n\n    if (!(innerSub as any)._hasValue) {\n      destination.complete();\n      return;\n    }\n\n    this.completed++;\n\n    if (this.completed !== len) {\n      return;\n    }\n\n    if (haveValues === len) {\n      destination.next(values);\n    }\n\n    destination.complete();\n  }\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\nconst toString: Function = Object.prototype.toString;\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener: (eventName: string, handler: NodeEventHandler) => void | {};\n  removeListener: (eventName: string, handler: NodeEventHandler) => void | {};\n}\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(type: string, listener: ((evt: E) => void) | null, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener?: ((evt: E) => void) | null, options?: EventListenerOptions | boolean): void;\n}\n\nexport type EventTargetLike<T> = HasEventTargetAddRemove<T> | NodeStyleEventEmitter | NodeCompatibleEventEmitter | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> = EventTargetLike<T> | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, resultSelector: (...args: any[]) => T): Observable<T>;\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions, resultSelector: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n * ### Emits clicks happening on the DOM document\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * ### Use addEventListener with capture option\n * ```javascript\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: ((...args: any[]) => T)\n): Observable<T> {\n\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(target, eventName, <EventListenerOptions | undefined>options).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T>(subscriber => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options as EventListenerOptions);\n  });\n}\n\nfunction setupSubscription<T>(sourceObj: FromEventTarget<T>, eventName: string,\n                              handler: (...args: any[]) => void, subscriber: Subscriber<T>,\n                              options?: EventListenerOptions) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n    unsubscribe = () => source.removeEventListener(eventName, handler, options);\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is HasEventTargetAddRemove<any> {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { fromEvent } from './fromEvent';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(addHandler: (handler: Function) => any, removeHandler?: (handler: Function, signal?: any) => void): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEventPattern<T>(addHandler: (handler: Function) => any, removeHandler?: (handler: Function, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * then one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Example\n * ### Emits clicks happening on the DOM document\n *\n * ```javascript\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * ## Example\n * ### Use with API that returns cancellation token\n *\n * ```javascript\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * ## Example\n * ### Use with project function\n *\n * ```javascript\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs \"EVENT_TYPE\" \"EVENT_MESSAGE\" to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + \" --- \" + eventMessage // without that function only \"EVENT_TYPE\"\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"EVENT_TYPE --- EVENT_MESSAGE\"\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n * @static true\n * @name fromEventPattern\n * @owner Observable\n */\n\nexport function fromEventPattern<T>(addHandler: (handler: Function) => any,\n                                    removeHandler?: (handler: Function, signal?: any) => void,\n                                    resultSelector?: (...args: any[]) => T): Observable<T | T[]> {\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T | T[]>(subscriber => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n\n    let retValue: any;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return () => removeHandler(handler, retValue) ;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { identity } from '../util/identity';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate(0, x => x < 10, x => x + 1, x => x);\n *\n * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n * const res = generate(1, x => x < 5, x =>  * 2, x => x + 1, asap);\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n */\n  export function generate<T, S>(initialState: S,\n                                 condition: ConditionFunc<S>,\n                                 iterate: IterateFunc<S>,\n                                 resultSelector: ResultFunc<S, T>,\n                                 scheduler?: SchedulerLike): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * `generate` allows you to create stream of values generated with a loop very similar to\n * traditional for loop. First argument of `generate` is a beginning value. Second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * loop continues, if not, it stops. Third value is a function which takes previously defined\n * value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in regular for loop: first expression\n * initializes some state (for example numeric index), second tests if loop can make next\n * iteration (for example if index is lower than 10) and third states how defined value\n * will be modified on every step (index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First, condition function is ran. If it returned true, Observable\n * emits currently stored value (initial value at the first iteration) and then updates\n * that value with iterate function. If at some point condition returned false, Observable\n * completes at that moment.\n *\n * Optionally you can pass fourth parameter to `generate` - a result selector function which allows you\n * to immediately map value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * single object to the operator instead. That object has properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, so output Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is resultSelector\n * function or not). In case of single-parameter call, you can provide it as a\n * `scheduler` property on object passed to the operator. In both cases scheduler decides when\n * next iteration of the loop will happen and therefore when next value will be emitted\n * by the Observable. For example to ensure that each value is pushed to the observer\n * on separate task in event loop, you could use `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * @example <caption>Use with condition and iterate functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with condition, iterate and resultSelector functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with options object.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n * @example <caption>Use options object without condition function.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!') // This will never run.\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n *\n *\n * @see {@link from}\n * @see {@link create}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n */\nexport function generate<S>(initialState: S,\n                            condition: ConditionFunc<S>,\n                            iterate: IterateFunc<S>,\n                            scheduler?: SchedulerLike): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n *   resultSelector: x => x,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                               condition?: ConditionFunc<S>,\n                               iterate?: IterateFunc<S>,\n                               resultSelectorOrObservable?: (ResultFunc<S, T>) | SchedulerLike,\n                               scheduler?: SchedulerLike): Observable<T> {\n\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  if (arguments.length == 1) {\n    const options = initialStateOrOptions as GenerateOptions<T, S>;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity as ResultFunc<S, T>;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions as S;\n    resultSelector = identity as ResultFunc<S, T>;\n    scheduler = resultSelectorOrObservable as SchedulerLike;\n  } else {\n    initialState = initialStateOrOptions as S;\n    resultSelector = resultSelectorOrObservable as ResultFunc<S, T>;\n  }\n\n  return new Observable<T>(subscriber => {\n    let state = initialState;\n    if (scheduler) {\n      return scheduler.schedule<SchedulerState<T, S>>(dispatch, 0, {\n        subscriber,\n        iterate,\n        condition,\n        resultSelector,\n        state\n      });\n    }\n\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch<T, S>(this: SchedulerAction<SchedulerState<T, S>>, state: SchedulerState<T, S>) {\n  const { subscriber, condition } = state;\n  if (subscriber.closed) {\n    return undefined;\n  }\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n  if (condition) {\n    let conditionResult: boolean;\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n  let value: T;\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n  if (subscriber.closed) {\n    return undefined;\n  }\n  subscriber.next(value);\n  if (subscriber.closed) {\n    return undefined;\n  }\n  return this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\nimport { SubscribableOrPromise } from '../types';\n\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `iif` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * then controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `iif` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * ## Examples\n * ### Change at runtime which Observable will be subscribed\n * ```javascript\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second'),\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n * ```\n *\n * ### Control an access to an Observable\n * ```javascript\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'), // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"The end\"\n * ```\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n */\nexport function iif<T, F>(\n  condition: () => boolean,\n  trueResult: SubscribableOrPromise<T> = EMPTY,\n  falseResult: SubscribableOrPromise<F> = EMPTY\n): Observable<T|F> {\n  return defer<T|F>(() => condition() ? trueResult : falseResult);\n}\n","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isNumeric } from '../util/isNumeric';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n * ```javascript\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = async): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(v1: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: SchedulerLike): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```javascript\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```javascript\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n * ### Emit the number 7, then never emit anything else (not even complete)\n * ```javascript\n * function info() {\n *   console.log('Will not be called');\n * }\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe(x => console.log(x), info, info);\n *\n * ```\n *\n * @see {@link Observable}\n * @see {@link index/EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Deprecated in favor of using {@link NEVER} constant.\n */\nexport function never () {\n  return NEVER;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNext<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link index/EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the resuult of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n * Subscribe to the next Observable after map fails</caption>\n * ```javascript\n * import { onErrorResumeNext, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done'),\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<T, R>(...sources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  const [ first, ...remainder ] = sources;\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext(...first);\n  }\n\n  return new Observable(subscriber => {\n    const subNext = () => subscriber.add(\n      onErrorResumeNext(...remainder).subscribe(subscriber)\n    );\n\n    return from(first).subscribe({\n      next(value) { subscriber.next(value); },\n      error: subNext,\n      complete: subNext,\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * <img src=\"./img/pairs.png\" width=\"100%\">\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * ```javascript\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj)\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('the end!')\n * );\n *\n * // Logs:\n * // [\"foo\": 42],\n * // [\"bar\": 56],\n * // [\"baz\": 78],\n * // \"the end!\"\n * ```\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs<T>(obj: Object, scheduler?: SchedulerLike): Observable<[string, T]> {\n  if (!scheduler) {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(\n        scheduler.schedule<{ keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }>\n          (dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n      return subscription;\n    });\n  }\n}\n\n/** @internal */\nexport function dispatch<T>(this: SchedulerAction<any>,\n                            state: { keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }) {\n  const { keys, index, subscriber, subscription, obj } = state;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n *\n * ## Example\n * ### Subscribes to the observable that was the first to start emitting.\n *\n * ```javascript\n * const obs1 = interval(1000).pipe(mapTo('fast one'));\n * const obs2 = interval(3000).pipe(mapTo('medium one'));\n * const obs3 = interval(5000).pipe(mapTo('slow one'));\n *\n * race(obs3, obs1, obs2)\n * .subscribe(\n *   winner => console.log(winner)\n * );\n *\n * // result:\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(observables: Array<Observable<T>>): Observable<T>;\nexport function race<T>(observables: Array<Observable<any>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): Observable<T>;\nexport function race<T>(...observables: Array<Observable<any> | Array<Observable<any>>>): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = <Array<Observable<any>>>observables[0];\n    } else {\n      return <Observable<any>>observables[0];\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable as any, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { SchedulerAction, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n * Emits the numbers 1 to 10</caption>\n * ```javascript\n * const numbers = range(1, 10);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link timer}\n * @see {@link index/interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} [count=0] The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start: number = 0,\n                      count: number = 0,\n                      scheduler?: SchedulerLike): Observable<number> {\n  return new Observable<number>(subscriber => {\n    let index = 0;\n    let current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(current++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\n\n/** @internal */\nexport function dispatch(this: SchedulerAction<any>, state: any) {\n  const { start, index, count, subscriber } = state;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n\n  this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `dueTime` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `dueTime`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```javascript\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```javascript\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time specified as a Date object or as an integer denoting\n * milliseconds to wait before emitting the first value of 0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `dueTime` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput } from '../types';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T>(resourceFactory: () => Unsubscribable | void,\n                         observableFactory: (resource: Unsubscribable | void) => ObservableInput<T> | void): Observable<T> {\n  return new Observable<T>(subscriber => {\n    let resource: Unsubscribable | void;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    let result: ObservableInput<T> | void;\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    const source = result ? from(result) : EMPTY;\n    const subscription = source.subscribe(subscriber);\n    return () => {\n      subscription.unsubscribe();\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { ObservableInput, PartialObserver } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, R>(v1: ObservableInput<T>, resultSelector: (v1: T) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, resultSelector: (v1: T, v2: T2) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, resultSelector: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, T4, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, T4, T5, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, T2, T3, T4, T5, T6, R>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, resultSelector: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n\nexport function zip<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\nexport function zip<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\nexport function zip<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\nexport function zip<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\nexport function zip<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\nexport function zip<T>(array: ObservableInput<T>[]): Observable<T[]>;\nexport function zip<R>(array: ObservableInput<any>[]): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<T, R>(array: ObservableInput<T>[], resultSelector: (...values: Array<T>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<R>(array: ObservableInput<any>[], resultSelector: (...values: Array<any>) => R): Observable<R>;\n\nexport function zip<T>(...observables: Array<ObservableInput<T>>): Observable<T[]>;\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): Observable<R>;\nexport function zip<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n * Combine age and name from different sources\n * ```javascript\n * let age$ = of<number>(27, 25, 29);\n * let name$ = of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = of<boolean>(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map((age: number, name: string, isDev: boolean) => ({ age, name, isDev })),\n * )\n * .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R> {\n  const resultSelector = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  resultSelector: (...values: Array<any>) => R;\n\n  constructor(resultSelector?: (...values: Array<any>) => R) {\n    this.resultSelector = resultSelector;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private resultSelector: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              resultSelector?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    this.unsubscribe();\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        const destination = this.destination as Subscription;\n        destination.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryresultSelector(args: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config } from './internal/config';\n","/**\n * Created by pratik on 24/1/18.\n */\nimport { Injectable } from '@angular/core';\nimport {Subject} from 'rxjs/index';\nimport {Observable} from 'rxjs/index';\n\n@Injectable()\nexport class AccordionService {\n  private subject = new Subject<any>();\n\n  onClickEvent(data: number, parent: number) {\n    this.subject.next({data, parent});\n  }\n\n  clearEvents() {\n    this.subject.next();\n  }\n\n  getEvents(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","/**\n * Created by pratik on 27/11/17.\n */\n\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {AmexioAccordionComponent} from './accordion/accordion.component';\nimport {AmexioAccordionHeaderComponent} from './accordion/accordion.header.component';\nimport {AmexioAccordionTabComponent} from './accordion/accordion.pane';\nimport {AmexioLayoutComponent} from './basiclayout/layout.component';\nimport {AmexioLayoutItemComponent} from './basiclayout/layoutitem.component';\nimport {AmexioBorderLayoutComponent} from './border/borderlayout.component';\nimport {AmexioBorderLayoutItemComponent} from './border/borderlayoutitem.component';\nimport {AmexioBoxComponent} from './box/box.component';\nimport {AmexioCardComponent} from './card/card.component';\nimport {AmexioColumnComponent} from './columns/column.component';\nimport {AmexioGridComponent} from './gridlayout/grid.component';\nimport {AmexioGridItemComponent} from './gridlayout/griditem.component';\nimport {AmexioGridModel} from './gridlayout/gridmodel.component';\nimport {AmexioIconLayoutComponent} from './icon/icon.component';\nimport {AmexioRowComponent} from './rows/row.component';\n\nimport {CommonDataService} from '../services/data/common.data.service';\nimport {DeviceQueryService} from '../services/device/device.query.service';\nimport {IconLoaderService} from '../services/icon/icon.service';\n\nimport {AmexioGridLayoutService} from './gridlayout/amexiogridlayoutservice.service';\n\nexport * from './accordion/accordion.header.component';\nexport * from './accordion/accordion.pane';\nexport * from './accordion/accordion.component';\nexport * from './accordion/accordion.service';\nexport * from './border/borderlayoutitem.component';\nexport * from './border/borderlayout.component';\nexport * from './box/box.component';\nexport * from './card/card.component';\nexport * from './columns/column.component';\nexport * from './gridlayout/grid.component';\nexport * from './gridlayout/griditem.component';\nexport * from './rows/row.component';\nexport * from '../services/data/common.data.service';\nexport * from '../services/device/device.query.service';\nexport * from '../services/icon/icon.service';\nexport * from './gridlayout/amexiogridlayoutservice.service';\nconst LAYOUT_COMPONENTS = [\n  AmexioRowComponent,\n  AmexioColumnComponent,\n  AmexioGridComponent,\n  AmexioGridItemComponent,\n  AmexioBorderLayoutItemComponent,\n  AmexioBorderLayoutComponent,\n  AmexioCardComponent,\n  AmexioBoxComponent,\n  AmexioAccordionTabComponent,\n  AmexioAccordionComponent,\n  AmexioAccordionHeaderComponent,\n  AmexioIconLayoutComponent,\n  AmexioLayoutComponent,\n  AmexioLayoutItemComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  exports: LAYOUT_COMPONENTS,\n  declarations: LAYOUT_COMPONENTS,\n  providers : [CommonDataService, DeviceQueryService, IconLoaderService, AmexioGridLayoutService],\n})\nexport class AmexioLayoutModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AmexioLayoutModule,\n      providers: [CommonDataService, DeviceQueryService, IconLoaderService, AmexioGridLayoutService],\n    };\n  }\n}\n","/*\n Component Name : Amexio Carousel\n Component Selector : <[amexioTemplate]>\n Component Description : Amexio CarouselView displays a collection of\n images or other content in a horizontal layout with built-in navigation between the items.\n\n*/\n\nimport {Directive, EmbeddedViewRef, Input, OnDestroy, OnInit, TemplateRef, ViewContainerRef} from '@angular/core';\n@Directive({\n  selector: '[amexioTemplate]',\n})\nexport class AmexioTemplateDirective  {\n\n  @Input() type: string;\n\n  @Input('amexioTemplate') name: string;\n\n  constructor(public template: TemplateRef<any>) {\n  }\n  getType(): string {\n    return this.name;\n  }\n}\n","/**\n * Created by pratik on 28/12/17.\n */\n\n/*\n Component Name : Amexio carousel\n Component Selector : <amexio-carousel>\n Component Description : The CarouselView displays a collection of images or\n other content in a horizontal layout with built-in navigation between the items..\n*/\nimport {\n  AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, TemplateRef, ViewChild,\n} from '@angular/core';\nimport {AmexioTemplateDirective} from './carousel.template.directive';\nimport {AmexioTemplateWrapperDirective} from './carousel.wrapper.template.directive';\n\n@Component({\n  selector: 'amexio-carousel', template: `\n    <h4>{{header}}</h4>\n    <div class=\"tabwrapper\">\n      <div class=\"carouselnavigation float-left\" (click)=\"previous()\">\n        <amexio-pane-icon key=\"carousel_previous\"></amexio-pane-icon>\n      </div>\n      <div class=\"carouselnavigation float-right\" (click)=\"next()\">\n        <amexio-pane-icon key=\"carousel_next\"></amexio-pane-icon>\n      </div>\n      <ul #tab class=\"tab\">\n        <li class=\"tablistitems\" *ngFor=\"let item of data\" (mouseover)=\"stopTimeInterval($event)\"\n            (mouseleave)=\"startTimeInterval($event)\">\n          <ng-template [amexioTemplateWrapper]=\"itemTemplate\" [item]=\"item\"></ng-template>\n        </li>\n      </ul>\n    </div>\n  `,\n})\n\nexport class AmexioCarouselComponent implements  AfterContentInit, OnInit {\n\n    /*\nProperties\nname : header\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : User can bind title for accordion tab.\n*/\n  @Input() header: string;\n\n   /*\n  @Input() mode: 'single' | 'multiple';\n  */\n\n/*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault :\ndescription : Data Containing Image Path, Information and Video URL Refer the DataSource Tab\n*/\n  @Input() data: any;\n\n  /*\n  Properties\nname : shuffle-interval\ndatatype : number\nversion : 4.0 onwards\ndefault :\ndescription : Time interval for shuffling images\n*/\n  @Input('shuffle-interval') shuffleinterval: number;\n\n  timeInterval: any;\n\n  public itemTemplate: TemplateRef<any>;\n\n  @ContentChildren(AmexioTemplateDirective) templates: QueryList<any>;\n\n  @ViewChild('tab', {read: ElementRef}) public tabs: ElementRef;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n   this.startTimeInterval();\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach((item: any) => {\n        this.itemTemplate = item.template;\n    });\n  }\n\n  scrollData() {\n  }\n\n  next() {\n    const nxt = this.tabs.nativeElement;\n    nxt.scrollLeft = nxt.scrollLeft + 200;\n  }\n\n  previous() {\n    const prev = this.tabs.nativeElement;\n    prev.scrollLeft = prev.scrollLeft - 200;\n  }\n\n  shuffle() {\n\n  }\n\n  startTimeInterval() {\n    if (this.shuffleinterval != null) {\n      this.timeInterval = setInterval(() => {\n        const carouselItemPosix = this.tabs.nativeElement;\n        if (!((carouselItemPosix.scrollWidth - carouselItemPosix.offsetWidth - carouselItemPosix.scrollLeft ) <= 0)) {\n          // go next\n          carouselItemPosix.scrollLeft = carouselItemPosix.scrollLeft + 200;\n        } else if (carouselItemPosix.scrollLeft > 0) {\n          // go previous\n          carouselItemPosix.scrollLeft = carouselItemPosix.scrollLeft - 200;\n        }\n      }, this.shuffleinterval);\n    }\n  }\n\n  stopTimeInterval() {\n    clearTimeout(this.timeInterval);\n  }\n\n}\n","import {Directive, EmbeddedViewRef, Input, OnDestroy, OnInit, TemplateRef, ViewContainerRef} from '@angular/core';\n\n@Directive({\n    selector: '[amexioTemplateWrapper]',\n  })\n  export class AmexioTemplateWrapperDirective implements OnInit, OnDestroy {\n    /*\n  Properties\n  name : index\n  datatype :  number\n  version : 4.0 onwards\n  default : none\n  description : its a index of the collection of item of items.\n  */\n    @Input() index: number;\n     /*\n  Properties\n  name : amexioTemplateWrapper\n  datatype :  templateRef\n  version : 4.0 onwards\n  default : none\n  description : renders the carousel items in a collection\n  */\n    @Input('amexioTemplateWrapper') templateRef: TemplateRef<any>;\n    view: EmbeddedViewRef<any>;\n    _item: any;\n    constructor(public viewContainer: ViewContainerRef) {\n    }\n    ngOnInit() {\n      this.render();\n    }\n    set item(item: any) {\n      this._item = item;\n      if (this.view) {\n        this.view.destroy();\n        this.render();\n      }\n    }\n     /*\n  Properties\n  name : get item\n  datatype :   any\n  version : 4.0 onwards\n  default : none\n  description : gets the carousel item\n  */\n    @Input() get item(): any {\n      return this._item;\n    }\n    render() {\n      this.view = this.viewContainer.createEmbeddedView(this.templateRef, {\n        $implicit: this.item, index: this.index,\n      });\n    }\n    ngOnDestroy() {\n      this.view.destroy();\n    }\n  }\n","/**\n * Created by dattaram on 23/1/18.\n */\n\n/*\n Component Name : Amexio Dialogue\n Component Selector : <amexio-dialogue>\n Component Description :A Simple dialogue which renders various prompts like\n Confirmation/Alert based on type, title, body user has configured.\n */\n\nimport {\n  Component, EventEmitter, HostListener, Input, OnChanges, OnDestroy, OnInit, Output, Renderer2,\n  SimpleChanges,\n} from '@angular/core';\n@Component({\n  selector: 'amexio-dialogue', template: `\n    <div class=\"root-window\"\n         [ngStyle]=\"{'display' : show  ? 'block' : 'none'}\">\n      <div class=\"dialogue-sm\">\n        <div class=\"dialogue-content\">\n          <header [ngClass]=\"{ 'dialogue-material-design':materialDesign ,'dialogue-header':!materialDesign }\"\n          >\n            <div class=\"dialogue-table\">\n              <div class=\"tablerow\">\n                <div class=\"tablecol\">\n                  {{title}}\n                </div>\n                <div class=\"tablecol float-right\">\n                  <div *ngIf=\"closable\" class=\"icon-style\">\n                    <amexio-pane-icon [key]=\"'window_close'\" (onClick)=\"onCloseClick()\"></amexio-pane-icon>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </header>\n          <div class=\"dialogue-middle\" [ngStyle]=\"{'text-align':custom ? contentalign :'center'}\">\n            <span class=\"dialogue-icon\">\n              <span\n                [ngClass]=\"{'dialogue-success': messagetype  == 'help','dialogue-danger':messagetype  == 'error',\n                'dialogue-warning': messagetype  == 'warning'}\"\n                *ngIf=\"messagetype  || messagetype  != '' \">\n                <amexio-pane-icon [key]=\"'window-msgtype-'+ messagetype \"></amexio-pane-icon>\n              </span>\n               <ng-container *ngIf=\"!custom\">\n                 <span class=\"dialogue-message\">\n                        {{message}}\n                 </span>\n            </ng-container>\n            </span>\n            <ng-container *ngIf=\"custom\">\n              <ng-content select=\"amexio-body\"></ng-content>\n            </ng-container>\n\n          </div>\n          <footer *ngIf=\"custom\" class=\"dialogue-footer\"\n                  [ngClass]=\"{'flex-start':(footeralign=='left'),'flex-end':(footeralign=='right'),'flex-center':(footeralign=='center')}\">\n            <ng-content select=\"amexio-action\"></ng-content>\n          </footer>\n\n          <footer *ngIf=\"!custom\" class=\"dialogue-footer\"\n                  [ngClass]=\"{'dialogue-material-design-footer':materialDesign ,\n                  'dialogue-footer':!materialDesign, 'flex-start':(footeralign=='left'),\n                  'flex-end':(footeralign=='right'),'flex-center':(footeralign=='center')}\">\n            <amexio-button *ngIf=\"type =='confirm'\"  [size]=\"buttonsize\" [label]=\"secondaryactionlabel\"\n            [type]=\"defaultStyle\" (onClick)=\"getStatus('cancel')\"></amexio-button>\n            <div  class=\"custom-btn\">\n              <amexio-button *ngIf=\"type =='confirm' || type == 'alert'\"   [size]=\"buttonsize\"\n              [label]=\"primaryactionlabel\"\n                             [ngStyle]=\"{'color':materialDesign ? 'blue':'white'}\"\n                             [type]=\"buttontype\" (onClick)=\"getStatus('ok')\">\n                             </amexio-button>\n            </div>\n\n          </footer>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class AmexiodialoguePaneComponent implements OnChanges, OnInit, OnDestroy {\n\n  /*\n   Properties\n   name : close-on-escape\n   datatype : string\n   version : 4.2onwards\n   default : false\n   description : Enables And Disables the Escape button.\n   */\n  @Input('close-on-escape')  closeonescape: boolean;\n\n  /*\n   Properties\n   name : button-type\n   datatype : string\n   version : 4.2onwards\n   default : theme-color\n   description : show the type of button.\n   */\n  @Input('button-type')  buttontype: string;\n\n  /*\n   Properties\n   name : button-size\n   datatype :  string\n   version : 4.2 onwards\n   default :\n   description : Different Sizes of Buttons availabe : large, default, small & xsmall\n   */\n  @Input('button-size') buttonsize: string = 'large' || 'small' || 'default' || 'xsmall';\n\n  /*\n   Properties\n   name : footer-align\n   datatype : string\n   version : 4.0 onwards\n   default : right\n   description : Alignment of footer contents to right or left.\n   */\n  @Input('footer-align') footeralign: string;\n\n  /*\n   Properties\n   name : content-align\n   datatype : string\n   version : 4.0 onwards\n   default : center\n   description : Alignment of  contents to right or left or center.\n   */\n  @Input('content-align') contentalign: string;\n\n  /*\n   Properties\n   name : show-dialogue\n   datatype :  boolean\n   version : 4.0 onwards\n   default : false\n   description : \tShow / Hide Dialogue..\n   */\n  @Input('show-dialogue') showdialogue: boolean;\n\n  @Input() show: boolean;\n\n  @Output() showChange: EventEmitter<any> = new EventEmitter<any>();\n\n  /*\n   Properties\n   name : closable\n   datatype :  boolean\n   version : 4.0 onwards\n   default : false\n   description : User can close the Dialogue.\n   */\n  @Input() closable: boolean;\n\n  /*\n   Properties\n   name : title\n   datatype :  string\n   version : 4.0 onwards\n   default :\n   description : Title for dialog.\n   */\n  @Input() title: string;\n\n  /*\n   Properties\n   name :  message\n   datatype :  string\n   version : 4.0 onwards\n   default :\n   description : Alert or confirm message\n   */\n  @Input() message: string;\n\n  /*\n   Properties\n   name :  custom\n   datatype :  boolean\n   version : 4.0 onwards\n   default : false\n   description : User can custom dialogue box.\n   */\n  @Input() custom: boolean;\n\n  /*\n   Properties\n   name :  type\n   datatype :  'confirm'| 'alert'\n   version : 4.0 onwards\n   default : confirm\n   description : Mode to open, alert or dialogue mode.\n   */\n  @Input() type: 'confirm'| 'alert';\n\n  /*\n   Properties\n   name : primary-action-label\n   datatype :  'string\n   version : 4.0 onwards\n   default :\n   description : Label to be displayed for primary action.\n   */\n  @Input('primary-action-label') primaryactionlabel: string;\n\n  /*\n   Properties\n   name : secondary-action-label\n   datatype :  string\n   version : 4.0 onwards\n   default :\n   description : Label to be displayed for secondary action.\n   */\n  @Input('secondary-action-label') secondaryactionlabel: string;\n\n  /*\n   Properties\n   name : message-type\n   datatype :  string\n   version : 4.0 onwards\n   default :\n   description : Type of message like error,warning,help.\n   */\n  @Input('message-type') messagetype: string;\n\n  @Input('material-design') materialDesign: boolean;\n\n  /*\n   Events\n   name : actionStatus\n   datatype :  none\n   version : none\n   default : none\n   description : Fire when click on yes or no button\n   */\n  @Output() actionStatus: EventEmitter<any> = new EventEmitter<any>();\n\n  /*\n   Events\n   name : close\n   datatype :  none\n   version : none\n   default : none\n   description : Fire when user close dialogue\n   */\n  @Output() close: EventEmitter<any> = new EventEmitter<any>();\n  value = 0;\n  defaultStyle: string;\n  globalListenFunc: () => void;\n\n  constructor(private renderer: Renderer2) {\n    this.closable = true;\n    this.secondaryactionlabel  = 'Cancel';\n    this.primaryactionlabel   = 'Ok';\n    this.custom = false;\n    this.buttonsize = 'default';\n    this.buttontype = 'theme-color';\n    this.closeonescape = true;\n  }\n\n  ngOnInit() {\n\n    if (this.showdialogue) {\n      this.show = this.showdialogue;\n    }\n    if (this.footeralign == null) {\n      this.footeralign = 'right';\n    }\n    if (this.contentalign == null || this.contentalign === '') {\n      this.contentalign = 'center';\n    }\n    if (this.type == null) {\n      this.type = 'confirm';\n    }\n    this.defaultStyle = this.getDefaultStyle();\n    this.buttontype = this.getStyle();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['showdialogue']) {\n      this.show = changes.showdialogue.currentValue;\n      if (this.show && this.closeonescape) {\n        this.globalListenFunc = this.renderer.listen('document', 'keyup.esc', (e: any) => {\n          this.showdialogue = false ;\n          this.show = false;\n          this.showChange.emit(false);\n        });\n      } else if (this.globalListenFunc) {\n        this.globalListenFunc();\n      }\n    }\n  }\n\n  onCloseClick() {\n    if (this.closable) {\n      this.showdialogue = false ;\n      this.show = false;\n      this.showChange.emit(false);\n      this.close.emit(false);\n    }\n  }\n  getStatus(v: any) {\n    this.onCloseClick();\n    this.actionStatus.emit(v);\n  }\n\n  getDefaultStyle() {\n    if (this.materialDesign) {\n      return 'transparent';\n    } else {\n      return 'defualt';\n    }\n  }\n\n  getStyle() {\n    if (this.materialDesign) {\n      this.buttontype = 'transparent';\n      return this.buttontype;\n    } else {\n      return this.buttontype;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.globalListenFunc) {\n      this.globalListenFunc();\n    }\n  }\n\n}\n","/**\n * Created by pratik on 12/12/17.\n */\n\n /*\n Component Name : Amexio Accordion\n Component Selector : <amexio-accordion>\n Component Description : Amexio Accordion provides an easy way to organize big forms\n by grouping the fields in accordion tabs.\n\n*/\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-fieldset',\n  template: `\n    <fieldset>\n      <legend *ngIf=\"(title && title.length>0) || collapsible \" class=\"collapsible-legend\" (click)=\"onLegendClick()\">\n\n          <ng-container *ngIf=\"!collapsible\">\n            {{title}}\n          </ng-container>\n\n          <ng-container *ngIf=\"collapsible && !isActive\">\n            <amexio-pane-icon style=\"padding-right:5px\" key=\"fieldset_expand\"></amexio-pane-icon>{{title}}\n          </ng-container>\n\n          <ng-container *ngIf=\"collapsible && isActive\">\n            <amexio-pane-icon style=\"padding-right:5px\" key=\"fieldset_collpase\"></amexio-pane-icon>{{title}}\n          </ng-container>\n\n      </legend>\n      <div class=\"collapsible-fieldset\" [ngClass]=\"{'active' : isActive}\">\n        <ng-content></ng-content>\n      </div>\n    </fieldset>\n  `,\n})\n\nexport class AmexioFieldSetComponent implements OnInit {\n\n   /*\nProperties\nname : collapsible\ndatatype : boolean\nversion : 4.0 onwards\ndefault : true\ndescription : Set value true for collapsible fieldset.\n*/\n  @Input() collapsible: boolean;\n\n  /*\nProperties\nname : title\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Title for fieldset.\n*/\n  @Input() title: string;\n\n  isActive: boolean;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    if (!this.collapsible) {\n      this.isActive = true;\n    }\n  }\n\n  onLegendClick() {\n    if (this.collapsible) {\n      this.isActive = !this.isActive;\n    }\n  }\n\n}\n","/**\n * Created by ketangote on 11/23/17.\n */\n/*\n\n Component Name : Amexio Button\n Component Selector : <amexio-button>\n Component Description : A button component with various modes and configurations.\n*/\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nexport const COMPONENT_CLASS_MAP: any = {\n  primary: 'btn-primary-badge',\n  secondary: 'btn-secondary-badge',\n};\n@Component({\n  selector: 'amexio-button',\n  template: `\n    <button class=\"button\" [ngStyle]=\"{'cursor': disabled ? 'not-allowed':'pointer'}\" ng-disabled=\"disabled ? true: null\" [attr.title]=\"tooltip\" \n    [ngClass]=\"{'button-default': size=='default'\n            || size ==null,\n            'button-small': size=='small',\n            'button-large' : size=='large',\n            'button-block': block==true ,\n            'button-primary' : type == 'primary' || type == 'theme-color' ,\n            'button-secondary' : type == 'secondary' || type == 'theme-backgroundcolor',\n            'button-success' : type == 'success' || type == 'green',\n            'button-danger' : type=='danger' || type == 'red',\n            'button-warning' : type=='warning' || type == 'yellow',\n            'button-transparent' : type=='transparent',\n            'disabled' : disabled }\" (click)=\"buttonClick($event)\">\n            <span class=\"button-text\">\n              <span style=\"padding-right: 5px;\" *ngIf=\"icon\">\n                <amexio-form-icon [customclass]=\"icon\" >\n                </amexio-form-icon>\n              </span>\n              <span style=\"padding-right: 5px;\" *ngIf=\"loading\">\n                <amexio-form-icon key=\"button-loading-icon\"></amexio-form-icon>\n              </span>\n              {{label}}\n              <ng-container *ngIf=\"badge\">\n                <span [ngClass]=\"badgeCssClass\" >{{badge}}</span> \n             </ng-container>\n            </span>\n      \n    </button>\n  `,\n  styles: [`\n\n  `],\n})\nexport class AmexioButtonComponent implements OnInit {\n  badgeclsname: any;\n  /*\n  Properties\n  name : label\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Label on button\n  */\n  @Input() label: string;\n  /*\n  Properties\n  name :  badge\n  datatype : number\n  version : 4.1.9 onwards\n  default :\n  description : Badge  describes the badge value that has to be displayed on button\n  */\n  @Input('badge') badge: number;\n\n  /*\n  Properties\n  name :  icon\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : FaIcon classname\n  */\n  @Input() icon: string;\n  /*\n  Properties\n  name : type\n  datatype : string\n  version : 4.1 onwards\n  default :\n  description : Type of button  default / theme-color / theme-backgroundcolor /\n  green / red / yellow ( primary / secondary /success / danger &\n    warning Depricated v4.1 onwards)\n  */\n  @Input() type: string;\n  /*\n  Properties\n  name : tooltip\n  datatype : string\n  version : 4.1 onwards\n  default :\n  description : Tooltip on button hover\n  */\n  @Input() tooltip: string;\n  /*\n  Properties\n  name : disabled\n  datatype : boolean\n  version : 4.0 onwards\n  default : false\n  description : Enable/Disables the button\n  */\n  @Input() disabled: boolean;\n  /*\n  Properties\n  name : form-bind\n  datatype : string\n  version : 4.1.6 onwards\n  default :\n  description : To bind button to form\n  */\n  @Input('form-bind') formbind: string;\n  /*\n  Properties\n  name : size\n  datatype :  string\n  version : 4.0 onwards\n  default :\n  description : Different Sizes of Buttons availabe : large, default, small & xsmall\n  */\n  @Input() size: string;\n  /*\n  Properties\n  name : loading\n  datatype :  boolean\n  version : 4.0 onwards\n  default :\n  description : Loading attribute can be used for async task\n  */\n  @Input() loading: boolean;\n  /*\n  Events\n  name : onClick\n  datatype :  none\n  version : none\n  default : none\n  description : Fire when button click\n  */\n  @Output() onClick: any = new EventEmitter<any>();\n  /*\nProperties\nname : block\ndatatype :  boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Set true to show buttom block\n*/\n  @Input() block: boolean;\n\n  badgeCssClass = '';\n\n  // THIS METHOD IS USED FOR ADDING CSS CLASS DYNAMICALLY\n  constructor() { }\n  buttonClick(event: any) {\n    if (!this.disabled) {\n      this.onClick.emit(event);\n    }\n  }\n  ngOnInit(): void {\n    this.badgeCssClass = this.badgeClass();\n  }\n\n  badgeClass(): string {\n    let className = '';\n    if (this.type === 'primary' || this.type === 'theme-color') {\n      className = 'btn-primary-badge';\n    }\n    if (this.type === 'secondary' || this.type === 'theme-backgroundcolor') {\n      className = 'btn-secondary-badge';\n    }\n    if (this.type === 'success' || this.type === 'green') {\n      className = 'btn-success-badge';\n    }\n    if (this.type === 'danger' || this.type === 'red') {\n      className = 'btn-danger-badge';\n    }\n    if (this.type === 'warning' || this.type === 'yellow') {\n      className = 'btn-warning-badge';\n    }\n    if (this.type === 'transparent') {\n      className = 'btn-transparent-badge';\n    }\n    return className;\n  }\n\n  // THIS METHOD SET DISABLED PROPERTY FOR BUTTON\n  setDisabled(disabled: boolean) {\n    this.disabled = disabled;\n  }\n}\n","\n/*\n Component Name : Amexio Button Group\n Component Selector : <amexio-btn-group>\n Component Description : Amexio Button groups are containers for related action amexio-button.\n\n*/\nimport {\n  AfterContentInit, Component, ContentChildren, EventEmitter, Input, OnChanges, Output,\n  QueryList, SimpleChanges,\n} from '@angular/core';\nimport { AmexioButtonComponent } from '../buttons/button.component';\n@Component({\n  selector: 'amexio-btn-group',\n  template: `\n    <div class=\"btn-group\">\n        <ng-container *ngFor=\"let button of buttons\">\n            <button [attr.disabled]=\"button.disabled ? true: null\" [attr.title]=\"button.tooltip\" (click)=\"buttonGroupClick($event,button)\" [ngClass]=\"{'button-default': button.size=='default' || button.size ==null,\n        'button-small': button.size=='small',\n        'button-large' : button.size=='large',\n        'button-primary' : button.type == 'primary' || button.type == 'theme-color',\n        'button-secondary' : button.type == 'secondary' || button.type == null ||button.type == 'theme-backgroundcolor' ,\n        'button-success' : button.type == 'success' || button.type == 'green',\n        'button-danger' : button.type=='danger'|| button.type == 'red',\n        'button-warning' : button.type=='warning' || button.type == 'yellow',\n        'button-transparent' : button.type=='transparent',\n        'disabled' : button.disabled}\">\n          <ng-container *ngIf=\"button.icon!=null\">\n            <amexio-form-icon style=\"padding-right: 5px;\" [customclass]=\"button.icon\"></amexio-form-icon>\n          </ng-container>\n\n          {{button.label}} \n          <ng-container *ngIf=\"button.badge\">\n            <span [ngClass]=\"button.badgeCssClass\" >{{button.badge}}</span> \n         </ng-container>\n        </button>\n        </ng-container>\n    </div>\n  `,\n})\nexport class AmexioButtonGroupComponent implements AfterContentInit, OnChanges {\n  private componentLoaded: boolean;\n  /*\n Properties\n name : size\n datatype :  string\n version : 4.0 onwards\n default :\n description : Different Sizes of Buttons availabe : large, default, small & xsmall\n */\n  @Input() size: string;\n  /* for internal use*/\n\n  _buttonGroupLocalData: any = [];\n  @Input('buttonGroupLocalData')\n  set buttonGroupLocalData(value: any) {\n    this._buttonGroupLocalData = value;\n    if (this.componentLoaded) {\n      this.updateComponent();\n    }\n  }\n  get buttonGroupLocalData(): any {\n    return this._buttonGroupLocalData;\n  }\n  /*\n  Properties\n  name :  badge\n  datatype : number\n  version : 4.1.9 onwards\n  default :\n  description : Badge  describes the badge value that has to be displayed on button\n  */\n  @Input('badge') badge: number;\n  /*\n  Events\n  name : getButton\n  datatype :  none\n  version : none\n  default : none\n  description : Fire when button click\n  */\n  buttonGroupPreviewData: any;\n  previousData: any;\n  @Output() getButton: any = new EventEmitter<any>();\n  @ContentChildren(AmexioButtonComponent) btns: QueryList<AmexioButtonComponent>;\n  buttons: AmexioButtonComponent[] = [];\n\n  constructor() {\n  }\n  updateComponent() {\n    if (JSON.stringify(this.buttonGroupPreviewData) !== JSON.stringify(this.buttonGroupLocalData)) {\n      this.buttonGroupPreviewData = JSON.parse(JSON.stringify(this.buttonGroupLocalData));\n      this.buttons = this.buttonGroupLocalData;\n      this.setButtonSizes(this.buttons);\n    }\n  }\n  ngOnChanges(change: SimpleChanges) {\n    if (change.size && !change.size.isFirstChange()) {\n      this.updateButtonSizes(change.size);\n    }\n  }\n  buttonGroupClick(clickEvent: any, btnObj: any) {\n    if (this.buttonGroupLocalData || this.buttonGroupLocalData.length > 0) {\n      this.getButton.emit({ event: clickEvent, buttonObject: btnObj });\n    } else {\n      btnObj.onClick.emit(clickEvent);\n    }\n  }\n  ngAfterContentInit() {\n    if (this.buttonGroupLocalData && this.buttonGroupLocalData.length > 0) {\n      this.buttonGroupPreviewData = JSON.parse(JSON.stringify(this.buttonGroupLocalData));\n      this.buttons = this.buttonGroupLocalData;\n    } else {\n      this.buttons = this.btns.toArray();\n      this.addBadgeCssClass();\n    }\n    this.setButtonSizes(this.buttons);\n    this.componentLoaded = true;\n  }\n\n  addBadgeCssClass() {\n    this.buttons.forEach((btn: any) => {\n      btn.badgeCssClass = this.badgeClass(btn);\n    });\n  }\n\n  badgeClass(button: any): string {\n    let btnStyleClass = '';\n    switch (button.type) {\n      case 'primary': {\n        return 'btn-group-primary-badge';\n      }\n      case 'theme-color': {\n        return 'btn-group-primary-badge';\n      }\n      case 'secondary': {\n        return 'btn-group-secondary-badge';\n      }\n      case 'theme-backgroundcolor': {\n        return 'btn-group-secondary-badge';\n      }\n      case 'success': {\n        return 'btn-group-success-badge';\n      }\n      case 'green': {\n        return 'btn-group-success-badge';\n      }\n    }\n    btnStyleClass = this.badgeMoreClass(button);\n    return btnStyleClass;\n  }\n\n  setButtonSizes(btnArray: any) {\n    if (btnArray.length > 0) {\n      btnArray.forEach((btn: any) => {\n        btn.size = this.size;\n      });\n    }\n  }\n\n  badgeMoreClass(button: any): string {\n    let className = '';\n    if (button.type === 'danger' || button.type === 'red') {\n      className = 'btn-group-danger-badge';\n    }\n    if (button.type === 'warning' || button.type === 'yellow') {\n      className = 'btn-group-warning-badge';\n    }\n    if (button.type === 'transparent') {\n      className = 'btn-group-transparent-badge';\n    }\n    return className;\n  }\n  updateButtonSizes(size: any) {\n    this.buttons.forEach((btn: any) => {\n      btn.size = size;\n    });\n  }\n}\n"," /*\n Component Name : Amexio Form Action\n Component Selector : <amexio-form-action>\n Component Description : Amexio Form actions contains the action items within form\n\n*/\nimport {AfterViewInit, Component, ContentChildren, Input, OnInit, QueryList} from '@angular/core';\nimport { AmexioButtonGroupComponent } from './../../forms/buttongroup/button.group.component';\nimport { AmexioButtonComponent } from './../../forms/buttons/button.component';\n\n@Component({\n  selector: 'amexio-form-action', template: '<ng-content></ng-content>',\n})\n\nexport class AmexioFormActionComponent implements OnInit, AfterViewInit {\n /*\nProperties\nname : padding\ndatatype : string\nversion : 4.2 onwards\ndefault : left\ndescription : padding for Action.\n*/\n @Input() padding: string;\n\n  @ContentChildren(AmexioButtonComponent) btns: QueryList<AmexioButtonComponent>;\n  buttons: AmexioButtonComponent[] = [];\n\n  @ContentChildren(AmexioButtonGroupComponent) btngrp: QueryList<AmexioButtonGroupComponent>;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n\n    if (this.btns.length > 0) {\n      this.buttons = this.btns.toArray();\n    } else if (this.btngrp.length > 0) {\n      this.buttons = this.btngrp.toArray()[0].buttons;\n    }\n  }\n}\n","\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-form-body', template: '<ng-content></ng-content>',\n})\n\nexport class AmexioFormBodyComponent implements OnInit {\n  /*\nProperties\nname : padding\ndatatype : string\nversion : 4.2 onwards\ndefault : left\ndescription : padding for body.\n*/\n@Input() padding: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","import { AfterContentInit, Component, ContentChild, ContentChildren, Directive, Input, QueryList} from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\n@Directive({\n   selector: '[form-group]',\n})\nexport class AmexioFormGroupDirective implements AfterContentInit {\n\n    @Input('form-group') group: string;\n\n    @ContentChildren(NgModel, { descendants: true }) public models: QueryList<NgModel>;\n\n    modelsarray: NgModel[];\n\n    ngAfterContentInit() {\n        this.modelsarray = this.models.toArray();\n    }\n}\n","\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-form-header', template: `\n        <ng-content></ng-content>\n  `,\n})\n\nexport class AmexioFormHeaderComponent implements OnInit {\n    /*\nProperties\nname :padding\ndatatype : string\nversion : 4.2 onwards\ndefault : left\ndescription : padding for header.\n*/\n@Input() padding: string;\n  constructor() {\n  }\n  ngOnInit() {\n  }\n}\n","/*\nComponent Name : Amexio Form\nComponent Selector : <amexio-form>\nComponent Description : Amexio Form provides an easy way to organize big form components and validating them.\n\n*/\nimport {\n  AfterContentChecked, AfterContentInit, AfterViewInit, Component, ContentChildren,\n  ElementRef, EventEmitter, Input, OnInit, Output, QueryList, ViewChild,\n   ViewChildren} from '@angular/core';\nimport { FormGroup , NgForm, NgModel} from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { AmexioButtonComponent } from './../../forms/buttons/button.component';\nimport { AmexioFormActionComponent } from './form.action.component';\nimport { AmexioFormBodyComponent } from './form.body.component';\nimport { AmexioFormGroupDirective } from './form.group.directive';\nimport { AmexioFormHeaderComponent } from './form.header.component';\n\n@Component({\n  selector: 'amexio-form',\n  template: `\n    <form name=\"fname\" class=\"form-container form-group\" (window:resize)=\"onResize()\">\n\n        <header #formHeader class=\"form-header\" [style.padding]=\"headerPadding\" *ngIf=\"header\" [ngClass]=\"findformStyleClass()\">\n            <ng-content select=\"amexio-form-header\"></ng-content>\n        </header>\n\n        <div class=\"form-body formbody\" [style.padding]=\"bodyPadding\" [ngStyle]=\"{'height.px' : height,'overflow-y' : height!= null ? 'auto' : '','min-height.px' : minHeight}\">\n            <ng-content select=\"amexio-form-body\"></ng-content>\n        </div>\n\n        <footer #formFooter class=\"form-footer\" [style.padding]=\"footerPadding\" [ngClass]=\"{'flex-start':(footeralign=='left'),'flex-end':(footeralign=='right'),'flex-center':(footeralign=='center')}\">\n            <ng-content select=\"amexio-form-action\"></ng-content>\n            <br/>\n            <div *ngIf=\"!form.valid\" style=\"padding: 5px;\">\n                <button class=\"button\" [attr.title]=\"'click'\" (click)=\"showErrors($event)\" [ngClass]=\"'button-warning button-small button-round'\">\n                            <span class=\"button-text\">\n                              <span style=\"padding-right: 5px;\" *ngIf=\"icon\">\n                                <amexio-form-icon [customclass]=\"icon\" >\n                                </amexio-form-icon>\n                              </span>\n                              <span style=\"padding-right: 5px;\" *ngIf=\"loading\">\n                                <amexio-form-icon key=\"button-loading-icon\"></amexio-form-icon>\n                              </span>\n                              ?\n                            </span>\n                    </button>\n                <amexio-dialogue [show-dialogue]=\"showDialogue\" [custom]=\"true\" [content-align]=\"'left'\" [closable]=\"false\" [title]=\"'Invalid Fields'\" [type]=\"'confirm'\">\n\n                    <amexio-body *ngFor=\"let msg of errorMsgArray let index=index\">\n                        <amexio-label>{{index+1}}) {{msg.label}}</amexio-label><br>\n                    </amexio-body>\n\n                    <amexio-action>\n                        <amexio-button type=\"primary\" (onClick)=\"closeDialogue()\" [label]=\"'OK'\">\n                        </amexio-button>\n                    </amexio-action>\n                </amexio-dialogue>\n            </div>\n        </footer>\n    </form>\n  `,\n})\nexport class AmexioFormComponent implements OnInit, AfterViewInit, AfterContentInit, AfterContentChecked {\n\n/*\nProperties\nname : header-align\ndatatype : string\nversion : 4.2 onwards\ndefault : left\ndescription : Align of item elements inside card header example [right center left].\n*/\n  @Input('header-align') headeralign: string;\n\n  /*\nProperties\nname : footer-align\ndatatype :  string\nversion : 4.2 onwards\ndefault : right\ndescription : Align of item elements inside card footer example [right center left]\n*/\n  @Input('footer-align') footeralign: string;\n  /*\nProperties\nname : form-name\ndatatype :  string\nversion : 4.2 onwards\ndefault :\ndescription : Form binding attribute\n*/\n\n  @Input('form-name') fname: string;\n\n  /*\nProperties\nname : header\ndatatype : boolean\nversion : 4.2 onwards\ndefault : false\ndescription : Form header to display\n*/\n  @Input('header') header: string;\n\n  /*\nProperties\nname : show-error\ndatatype : boolean\nversion : 4.2 onwards\ndefault : false\ndescription : Flag to show form invalid error messages\n*/\n  @Input('show-error') showError = false;\n\n  /*\nProperties\nname : height\ndatatype :   any\nversion : 4.0 onwards\ndefault :\ndescription : User can set the height to form\n*/\n  @Input() height: any;\n  /*\nProperties\nname : min-height\ndatatype :   any\nversion : 4.0 onwards\ndefault :\ndescription : Provides minimum height of the form.\n*/\n  @Input('min-height') minHeight: any;\n\n  /*\nProperties\nname : body-height\ndatatype :   any\nversion : 4.0 onwards\ndefault :\ndescription : Provides form body height.\n*/\n  @Input('body-height') bodyheight: any;\n/*\nProperties\nname : form-group\ndatatype :   any\nversion : 5.3.2 onwards\ndefault :\ndescription : This attribute use for form binding.\n*/\n\n  @ViewChild('formHeader', { read: ElementRef }) public formHeader: ElementRef;\n\n  @ViewChild('formFooter', { read: ElementRef }) public formFooter: ElementRef;\n\n  /*\nEvents\nname : showErrorMsg\ndatatype : any\nversion : none\ndefault :\ndescription : Event fired if showError msg info button is clicked\n*/\n  @Output() showErrorMsg: any = new EventEmitter<any>();\n\n  componentError: any[] = [];\n\n  headerPadding: string;\n\n  bodyPadding: string;\n\n  footerPadding: string;\n\n  errorMsgArray: any[];\n\n  isFormValid: boolean;\n\n  showDialogue: boolean;\n\n  checkForm: boolean;\n\n  @ContentChildren(AmexioFormHeaderComponent) amexioHeader: QueryList<AmexioFormHeaderComponent>;\n\n  headerComponentList: AmexioFormHeaderComponent[];\n\n  @ContentChildren(AmexioFormBodyComponent) amexioBody: QueryList<AmexioFormBodyComponent>;\n\n  bodyComponentList: AmexioFormBodyComponent[];\n\n  @ContentChildren(AmexioFormActionComponent) amexioFooter: QueryList<AmexioFormActionComponent>;\n\n  footerComponentList: AmexioFormActionComponent[];\n\n  @ContentChildren(AmexioButtonComponent, { descendants: true }) btns: QueryList<AmexioButtonComponent>;\n  buttons: AmexioButtonComponent[];\n\n  @ViewChild(NgForm) public form: NgForm;\n\n  @ContentChildren(NgModel, { descendants: true }) public models: QueryList<NgModel>;\n\n  @ContentChildren(AmexioFormGroupDirective, { descendants: true }) public fb: QueryList<AmexioFormGroupDirective>;\n\n  constructor(public formBuilder: FormBuilder) {\n    this.checkForm = false;\n    this.isFormValid = false;\n    this.showDialogue = false;\n    this.headeralign = 'left';\n    this.footeralign = 'right';\n    this.errorMsgArray = [];\n  }\n\n  ngAfterContentInit() {\n    // FOR HEADER PADING\n    this.headerComponentList = this.amexioHeader.toArray();\n    this.headerComponentList.forEach((item: AmexioFormHeaderComponent, currentIndex) => {\n      if (item.padding) {\n        this.headerPadding = item.padding;\n      }\n    });\n\n    // FOR BODY PADDING\n    this.bodyComponentList = this.amexioBody.toArray();\n    this.bodyComponentList.forEach((item: AmexioFormBodyComponent, currentIndex) => {\n      if (item.padding) {\n        this.bodyPadding = item.padding;\n      }\n    });\n    // FOR FOOTER PADDING\n    this.footerComponentList = this.amexioFooter.toArray();\n    this.footerComponentList.forEach((item: AmexioFormActionComponent, currentIndex) => {\n      if (item.padding) {\n        this.footerPadding = item.padding;\n      }\n    });\n  }\n\n  onResize() {\n    if (this.bodyheight) {\n      let h = (window.innerHeight / 100) * this.bodyheight;\n\n      if (this.formHeader && this.formHeader.nativeElement && this.formHeader.nativeElement.offsetHeight) {\n        h = h - this.formHeader.nativeElement.offsetHeight;\n      }\n\n      if (this.formFooter && this.formFooter.nativeElement && this.formFooter.nativeElement.offsetHeight) {\n        h = h - this.formFooter.nativeElement.offsetHeight;\n      }\n      if (this.bodyheight === 100) {\n        h = h - 40;\n      }\n      this.minHeight = h;\n      this.height = h;\n    }\n  }\n  ngOnInit() {\n    this.buttons = [];\n  }\n\n  ngAfterViewInit() {\n\n    const ngContentModels = this.models.toArray();\n    const innerModelArray: any[] = [];\n    this.fb.forEach((fbnode: any) => {\n        const modelarray = fbnode.modelsarray;\n        const fgc = {};\n        modelarray.forEach((m: any) => {\n            fgc[m.name] = m.control;\n            innerModelArray.push(m);\n        });\n        const grp = this.formBuilder.group(fgc);\n        this.form.form.registerControl(fbnode.group, grp);\n    });\n\n    ngContentModels.forEach((model) => {\n      if (!this.isFieldPresentInParentAndChildBoth(innerModelArray, model.name )) {\n        if (!model.name || model.name === null) {\n          model.name = model.valueAccessor['name'];\n        }\n        this.form.control.registerControl(model.name, model.control);\n      }\n    });\n    this.form.form.updateValueAndValidity();\n    this.btns.toArray().forEach((btnCom) => {\n    if ((btnCom.formbind === this.fname) && !btnCom.disabled) {\n      this.buttons.push(btnCom);\n    }\n    });\n    this.validateForm();\n    this.onResize();\n  }\n\n  isFieldPresentInParentAndChildBoth(innerModelArray: any[], name: string): boolean {\n    let isPresent = false;\n    innerModelArray.forEach((innerModel: any) => {\n      if (name === innerModel.name) {\n         isPresent = true;\n      }\n    });\n    return isPresent;\n  }\n  closeDialogue() {\n    this.showDialogue = !this.showDialogue;\n  }\n  // THIS METHOD IS USED FOR ADDING MSG\n  addErrorMsg() {\n    if (this.form && this.form.status === 'INVALID') {\n      for ( const [key, value] of Object.entries( this.form.controls ) ) {\n        if (value && value.status === 'INVALID') {\n          const errorObject: any = {};\n          errorObject['label'] = key;\n          this.errorMsgArray.push(errorObject);\n          }\n        }\n    }\n  }\n\n  // REMOVE OBJECT FROM ARRAY\n  showErrors(event: any) {\n    this.errorMsgArray = [];\n    this.addErrorMsg();\n    this.showDialogue = !this.isFormValid;\n    if (!this.isFormValid) {\n      this.showDialogue = true;\n    } else {\n      this.showDialogue = false;\n    }\n  }\n\n  // THIS METHOD IS USED FOR DISABLE BUTTON\n  validateForm() {\n    if (this.form && this.form.status === 'INVALID') {\n      this.disableButton(true);\n    } else {\n     this.disableButton(false);\n    }\n  }\n\n  disableButton(flag: boolean) {\n    this.buttons.forEach((btn) => {\n      btn.disabled = flag;\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    this.validateForm();\n  }\n  findformStyleClass() {\n    if (this.headeralign === 'right') {\n      return 'flex-end';\n    }\n    if (this.headeralign === 'left') {\n      return 'flex-start';\n    }\n    if (this.headeralign === 'center') {\n      return 'flex-center';\n    }\n  }\n\n}\n","/**\n * Created by pratik on 21/12/17.\n */\nimport {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {IconLoaderService} from '../../services/icon/icon.service';\n\n@Component({\n  selector: 'amexio-pane-icon', template: `\n    <ng-container *ngIf=\"iconLoaderService.iconToUse == 'fa'\">\n      <ng-container *ngIf=\"customclass != null\">\n        <i class=\"{{customclass}}\" aria-hidden=\"true\" (click)=\"onClick.emit($event)\" style=\"cursor: pointer;\"></i>\n      </ng-container>\n      <ng-container *ngIf=\"customclass == null\">\n        <i [ngClass]=\"iconClass\" aria-hidden=\"true\" (click)=\"onClick.emit($event)\" style=\"cursor: pointer;\"></i>\n      </ng-container>\n    </ng-container>\n\n    <ng-container *ngIf=\"iconLoaderService.iconToUse == 'mat'\">\n\n      <ng-container *ngIf=\"customclass != null\">\n        <i class=\"material-icons\" (click)=\"onClick.emit($event)\" style=\"cursor: pointer;\">{{customclass}}</i>\n      </ng-container>\n\n      <ng-container *ngIf=\"customclass == null\">\n        <i class=\"material-icons\" (click)=\"onClick.emit($event)\" style=\"cursor: pointer;\">{{iconClass}}</i>\n      </ng-container>\n    </ng-container>\n  `,\n})\n\nexport class AmexioIconPaneComponent implements OnInit, OnChanges {\n\n  @Input() key: string;\n\n  @Input() customclass: string;\n\n  @Output() onClick: EventEmitter<any> = new EventEmitter<any>();\n\n  iconClass: string;\n\n  constructor(public iconLoaderService: IconLoaderService) {\n\n  }\n\n  ngOnInit() {\n    this.iconClass = this.getIconClass();\n  }\n\n  private getIconClass(): string {\n    if (this.iconLoaderService.iconMappings != null) {\n      const iconObject = this.iconLoaderService.iconMappings.find((obj: any) => obj.component === this.key);\n      if (iconObject != null) {\n        return iconObject[this.iconLoaderService.iconToUse.toString()];\n       } else {\n        return '';\n        }\n    }\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['key']) {\n      this.key = changes.key.currentValue;\n      this.iconClass = this.getIconClass();\n    }\n  }\n}\n","/**\n * Created by pratik on 14/12/17.\n */\n/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Pratik Kelwalkar\n *\n */\n\n/*\nComponent Name : Amexio panel\nComponent Selector : <amexio-panel>\nComponent Description : Panel provides an easy way to organize big forms by\ngrouping the fields in panel\n*/\nimport { Component, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output, Renderer2} from '@angular/core';\n\nimport { AmexioPanelHeaderComponent } from './../panel/panel.header.component';\n\n@Component({\n  selector: 'amexio-panel',\n  template: `\n    <div #id style=\"width: 100%\" (contextmenu)=\"loadContextMenu({event:$event,ref:id})\">\n        <ng-container *ngIf=\"collapsible; else elseBlock\">\n            <div *ngIf=\"header\" class=\"panel-accordion\" (click)=\"onTabClick(btn1)\">\n                <amexio-toolbar>\n                    <amexio-toolbar-item position-left>\n                        <amexio-label size=\"small\">\n                            {{title}}\n                        </amexio-label>\n                    </amexio-toolbar-item>\n                    <amexio-toolbar-item position-right>\n                        <ng-content select=\"amexio-panel-header\"></ng-content>\n                    </amexio-toolbar-item>\n                    <amexio-toolbar-item style=\"margin:auto\" position-right>\n                        <i [class]=\"iconclassKey\" aria-hidden=\"true\" #btn1></i>\n                    </amexio-toolbar-item>\n                </amexio-toolbar>\n            </div>\n        </ng-container>\n\n        <ng-template #elseBlock>\n            <div *ngIf=\"header\" class=\"panel-accordion\" (click)=\"onTabClick(btn1)\">\n                <amexio-toolbar>\n                    <amexio-toolbar-item position-left>\n                        <amexio-label size=\"small\">\n                            {{title}}\n                        </amexio-label>\n                    </amexio-toolbar-item>\n                    <amexio-toolbar-item position-right>\n                        <ng-content select=\"amexio-panel-header\"></ng-content>\n                    </amexio-toolbar-item>\n                </amexio-toolbar>\n            </div>\n        </ng-template>\n\n        <div class=\"panel-panel\" [ngClass]=\"{'panel-box-border':border}\" [style.textAlign]=\"contentAlign\" [ngStyle]=\"panelstyle\" [style.height.px]=\"height\">\n            <ng-content></ng-content>\n        </div>\n\n\n        <span [ngStyle]=\"contextStyle\">\n            <ul *ngIf=\"flag\" class=\"context-menu-list\" [ngClass]=\"{'dropdown-up' : posixUp}\">\n                <li (click)=\"onContextNodeClick(itemConfig)\" class=\"context-menu-list-items\" [ngStyle]=\"{'cursor': itemConfig.disabled ? 'not-allowed':'pointer'}\"\n                    [ngClass]=\"{'context-menu-separator':itemConfig.seperator}\" *ngFor=\"let itemConfig of contextmenu\">\n                    <em [ngStyle]=\"{'padding-left': itemConfig.icon ? '5px':'19px'}\" [ngClass]=\"itemConfig.icon\"></em>\n                    <span style=\"white-space: nowrap;display: inline ; padding-left:5px\">{{itemConfig.text}}\n                    </span>\n                </li>\n            </ul>\n        </span>\n    </div>\n  `,\n})\n\nexport class AmexioPanelComponent implements OnInit, OnDestroy {\n\n  /*\nProperties\nname : title\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Title for panel.\n*/\n  @Input() title: any;\n\n  /*\nProperties\nname : header\ndatatype :  boolean\nversion : 4.0 onwards\ndefault : true\ndescription : \tEnable/Disabled header.\n*/\n  @Input() header: boolean;\n  /*\nProperties\nname : paneltitle\ndatatype :  boolean\nversion : 4.0 onwards\ndefault : true\ndescription : \tEnable/Disabled header.\n*/\n  // @Input() paneltitle: boolean;\n  /*\nProperties\nname : expanded\ndatatype :  boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Pane will expand or collapse based on the boolean.\n*/\n  @Input() expanded: boolean;\n  /*\n Properties\n name : border\n datatype :  boolean\n version : 4.0 onwards\n default : false\n description : Pane will expand or collapse based on the boolean.\n */\n  @Input() border: boolean;\n\n  /*\nProperties\nname : collapsible\ndatatype :  boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Pane will expand or collapse based on the boolean.\n*/\n  @Input() collapsible = true;\n  /*\nProperties\nname : height\ndatatype :  number\nversion : 4.0 onwards\ndefault : none\ndescription : Height of panel must be in px ex.100, 250..\n*/\n  @Input() height: number;\n\n  /*\n Properties\n name :  context-menu\n datatype : string\n version : 5.0.1 onwards\n default :\n description : Context Menu provides the list of menus on right click.\n */\n  @Input('context-menu') contextmenu: any[];\n\n  @Input('content-align') contentAlign = 'left';\n\n  @Input() parentRef: any;\n  /*\nEvents\nname : onClick\ndatatype : none\nversion : none\ndefault : none\ndescription : Fires the on accordion pane click event.\n*/\n\n  @Input('fit') fit: boolean;\n\n  @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n  @Output() nodeRightClick: any = new EventEmitter<any>();\n\n  @Output() rightClick: any = new EventEmitter<any>();\n\n  iconclassKey: string;\n\n  panelWidth: any;\n\n  flag: boolean;\n\n  posixUp: boolean;\n\n  rightClickNodeData: any;\n\n  contextStyle: any;\n\n  mouseLocation: { left: number; top: number } = { left: 0, top: 0 };\n\n  private faFaIconUPCss = 'fa fa-caret-up';\n\n  private faFaIconDownCss = 'fa fa-caret-down';\n\n  panelstyle: any;\n  globalClickListenFunc: () => void;\n  constructor(private renderer: Renderer2) {\n    this.panelstyle = { visibility: 'visible' };\n  }\n  ngOnInit() {\n    if (!this.collapsible) {\n      this.expanded = true;\n    }\n    this.iconclassKey = this.expanded ? this.faFaIconUPCss : this.faFaIconDownCss;\n    if (this.height) {\n      return this.height;\n    }\n    this.updatestyle();\n  }\n\n  onTabClick(btn: any) {\n    btn.classList.toggle('active-accordion');\n    if (this.iconclassKey === this.faFaIconDownCss) {\n      this.iconclassKey = this.faFaIconUPCss;\n    } else if (this.iconclassKey === this.faFaIconUPCss) {\n      this.iconclassKey = this.faFaIconDownCss;\n    }\n    this.expanded = !this.expanded;\n    this.updatestyle();\n    this.onClick.emit();\n  }\n\n  private updatestyle() {\n    if (this.fit && this.expanded) {\n      this.panelstyle = { visibility: 'visible' };\n    } else if (this.fit && !this.expanded) {\n      this.panelstyle = { visibility: 'hidden' };\n    } else if (!this.fit && this.expanded) {\n      this.panelstyle = { display: 'block' };\n    } else if (!this.fit && !this.expanded) {\n      this.panelstyle = { display: 'none' };\n    } else {\n      this.panelstyle = { visibility: 'visible' };\n    }\n  }\n  // getcontextmenu\n  getContextMenu() {\n    if (this.contextmenu && this.contextmenu.length > 0) {\n      this.flag = true;\n      this.addListner();\n    }\n  }\n\n  getListPosition(elementRef: any): boolean {\n    const height = 240;\n    if ((window.screen.height - elementRef.getBoundingClientRect().bottom) < height) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  loadContextMenu(rightClickData: any) {\n    this.mouseLocation.left = rightClickData.event.clientX;\n    this.mouseLocation.top = rightClickData.event.clientY;\n    this.getContextMenu();\n    this.posixUp = this.getListPosition(rightClickData.ref);\n    rightClickData.event.preventDefault();\n    rightClickData.event.stopPropagation();\n    this.rightClickNodeData = rightClickData.data;\n    this.contextStyle = this.getContextMenuStyle();\n    this.nodeRightClick.emit(rightClickData);\n  }\n\n  onContextNodeClick(itemConfig: any) {\n    if (!itemConfig.disabled) {\n      const obj = {\n        menuData: itemConfig,\n        NodeData: this.rightClickNodeData,\n      };\n      this.flag = false;\n      this.removeListner();\n      this.rightClick.emit(obj);\n    }\n  }\n\n  getContextMenuStyle() {\n    return {\n      'cursor': 'default',\n      'position': 'fixed',\n      'display': this.flag ? 'block' : 'none',\n      'left': this.mouseLocation.left + 'px',\n      'top': this.mouseLocation.top + 'px',\n      'box-shadow': '1px 1px 2px #000000',\n      'width': '15%',\n    };\n  }\n\n  addListner() {\n    this.globalClickListenFunc = this.renderer.listen('document', 'click', (e: any) => {\n      this.flag = false;\n      if (!this.flag) {\n        this.removeListner();\n      }\n    });\n  }\n\n  removeListner() {\n    if (this.globalClickListenFunc) {\n      this.globalClickListenFunc();\n    }\n  }\n\n  ngOnDestroy(): void {\n   this.removeListner();\n  }\n\n}\n","\nimport {Component, HostBinding, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-panel-header', template: `\n    <ng-content></ng-content>\n  `,\n})\n\nexport class AmexioPanelHeaderComponent implements OnInit {\n\n  @HostBinding('attr.class') role = 'amexio-panel-header';\n\n    /*\nProperties\nname :padding\ndatatype : string\nversion : 4.2 onwards\ndefault : left\ndescription : padding for header.\n*/\n@Input() padding: string;\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","/**\n * Created by sagar on 6/9/17.\n */\n\n /*\n Component Name : Amexio Step block\n Component Selector : <amexio-step-block>\n Component Description : Amexio Step-box component is an indicator for the steps in a workflow.\n */\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-step-block', template: `\n  `,\n})\n\nexport class StepBlockComponent implements OnInit {\n\n  /*\nProperties\nname : active\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : The current active step.\n*/\n  @Input() active: boolean;\n\n    /*\nProperties\nname : label\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Label for step.\n*/\n  @Input() label: string;\n\n    /*\nProperties\nname : icon\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Icon for step box.\n*/\n  @Input() icon: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","/**\n * Created by pratik on 15/12/17.\n */\n\n /*\n Component Name : Amexio StepBox\n Component Selector : <amexio-steps>\n Component Description : Step-box component is an indicator for the steps in a workflow\n\n*/\nimport {\n  AfterContentInit, Component, ContentChildren, EventEmitter, Input,\n  Output, QueryList,\n} from '@angular/core';\nimport {StepBlockComponent} from './step-block';\n\n@Component({\n  selector: 'amexio-steps', template: `\n    <div class=\"stepwizard\" *ngIf=\"(index && !block && !icon)\">\n      <div class=\"stepwizard-row setup-panel\">\n        <div *ngFor=\"let stepBlock of stepBlockArray; let i = index\" class=\"stepwizard-step\" >\n          <button type=\"button\" [disabled]=\"!stepBlock.active\" [ngClass]=\"{'disabled index-step-inactive':!stepBlock.active,\n          'active':stepBlock.active}\"\n                  class=\"btn-circle button button-primary\" (click)=\"onStepClick(stepBlock,$event)\"\n                  >{{i + 1}}\n          </button>\n          <ng-container *ngIf=\"stepBlock.label && !stepBlock.active\">\n            <p>{{stepBlock.label}}</p>\n          </ng-container>\n          <ng-container *ngIf=\"stepBlock.label && stepBlock.active\">\n            <p><strong class=\"step-label-highlight\">{{stepBlock.label}}</strong></p>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n\n    <!--this code use when user give icon true bydefault it is false-->\n    <div class=\"stepwizard\" *ngIf=\"(icon && !index && !block)\">\n      <div class=\"stepwizard-row setup-panel\" >\n        <div *ngFor=\"let stepBlock of stepBlockArray; let i = index\" class=\"stepwizard-step\" >\n          <ng-container *ngIf=\"stepBlock.icon && stepBlock.active\">\n          <span [ngClass]=\"{'step-box-icon-active':stepBlock.active}\" (onClick)=\"onStepClick(stepBlock,$event)\">\n            <amexio-pane-icon [customclass]=\"stepBlock.icon\" ></amexio-pane-icon>\n          </span>\n            </ng-container>\n          <ng-container *ngIf=\"stepBlock.icon && !stepBlock.active\">\n          <span [ngClass]=\"{'step-block-icon-disable':!stepBlock.active}\">\n            <amexio-pane-icon [customclass]=\"stepBlock.icon\" (onClick)=\"onStepClick(stepBlock,$event)\"></amexio-pane-icon>\n            </span>\n          </ng-container>\n          <ng-container *ngIf=\"stepBlock.icon=='' || !stepBlock.icon\">\n            <br>\n          </ng-container>\n          <ng-container *ngIf=\"stepBlock.label && !stepBlock.active\">\n            <p style=\"cursor:not-allowed;\" (onClick)=\"onStepClick(stepBlock,$event)\">{{stepBlock.label}}</p>\n          </ng-container>\n          <ng-container *ngIf=\"stepBlock.label && stepBlock.active\">\n            <p style=\"cursor:pointer;\" ><strong class=\"step-label-highlight\"\n            [ngClass]=\"{'step-box-label-active':stepBlock.active}\">{{stepBlock.label}}</strong></p>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n\n    <!--This code use for steps of boxes-->\n    <div *ngIf=\"block\">\n      <div *ngIf=\"block\" class=\"step-box-sqaure\">\n        <div class=\"step-box-table\">\n          <ng-container *ngFor=\"let stepBlock of stepBlockArray; let i = index\">\n            <div class=\"step-box-table-item\" (click)=\"onStepClick(stepBlock,$event)\"  style=\"padding-top: 10px;\"\n            [ngClass]=\"{'disabled step-box-table-item-hover ':!stepBlock.active,'active':stepBlock.active}\">\n              <a>\n                <ng-container *ngIf=\"index\">\n                  {{i + 1}}<br>\n                </ng-container>\n                <ng-container *ngIf=\"icon && stepBlock.icon\">\n                <amexio-pane-icon [customclass]=\"stepBlock.icon\"></amexio-pane-icon>\n                </ng-container>\n                <ng-container *ngIf=\"stepBlock.label && !stepBlock.active\">\n                  <p style=\"word-wrap: break-word;\">{{stepBlock.label}}</p>\n                </ng-container>\n                <ng-container *ngIf=\"stepBlock.label && stepBlock.active\">\n                <p style=\"word-wrap: break-word;\"><strong>{{stepBlock.label}}</strong></p>\n                </ng-container>\n              </a>\n            </div>\n          </ng-container>\n\n        </div>\n      </div>\n\n    </div>\n  `,\n})\n\nexport class AmexioStepsComponent implements AfterContentInit {\n  private componentLoaded: boolean;\n   /*\nProperties\nname : index\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Show the indexes of steps.\n*/\n  @Input() index: boolean;\n\n    /*\nProperties\nname : icon\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : icon for stepbox.\n*/\n  @Input() icon: boolean;\n\n     /*\nProperties\nname :  block\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Show block based on boolean.\n*/\n  @Input() block: boolean;\n\n  /*\nEvents\nname : onClick\ndatatype : none\nversion : none\ndefault : none\ndescription :Event emitted on block click.\n*/\n  @Output() onClick: EventEmitter<any> = new EventEmitter<any>();\n\n  /*\nEvents\nname : getStepBlockData\ndatatype : none\nversion : none\ndefault : none\ndescription :Gives stepblock information .\n*/\n  @Output() getStepBlockData: EventEmitter<any> = new EventEmitter<any>();\n\n  @ContentChildren(StepBlockComponent) stepBlocks: QueryList<StepBlockComponent>;\n\n  stepBlockArray: StepBlockComponent[];\n\n       /*\nProperties\nname :  data\ndatatype : any\nversion : 4.0 onwards\ndefault :\ndescription : Provides data for stepblock.\n*/\n  _data: any;\n  @Input('data')\n   set data(value: any[]) {\n     this._data = value;\n     if (this.componentLoaded) {\n       this.updateComponent();\n     }\n   }\n   get data(): any[] {\n     return this._data;\n   }\n\n  stepPreviewData: any;\n\n  constructor() {\n  }\n\n  onStepClick(clickData: any, ev: any) {\n    this.getStepBlockData.emit({event: ev, data: clickData});\n    this.onClick.emit(clickData);\n  }\n\n  ngAfterContentInit() {\n    if (this.data && this.data.length > 0) {\n      this.stepPreviewData = JSON.parse(JSON.stringify(this.data));\n      this.stepBlockArray = this.data;\n    } else {\n      this.stepBlockArray = this.stepBlocks.toArray();\n    }\n    this.componentLoaded = true;\n  }\n\n  updateComponent() {\n    if (JSON.stringify(this.stepPreviewData) !== JSON.stringify(this.data)) {\n      this.stepPreviewData = JSON.parse(JSON.stringify(this.data));\n      this.stepBlockArray = this.data;\n    }\n  }\n}\n","/**\n * Created by pratik on 8/12/17.\n */\n\n/*\nComponent Name : Amexio Tab\nComponent Selector : <amexio-tab>\nComponent Description: Tab component for Angular Apps with multiple configurations\nsuch as Tab, Icon support\n\n*/\nimport { Component, EventEmitter, Input, OnInit, Output, ViewChild, ViewContainerRef } from '@angular/core';\n\n@Component({\n  selector: 'amexio-tab', template: `\n    <div role=\"tabpanel\" class=\"tab-pane active\" [attr.id]=\"tabId\" [hidden]=\"!active\">\n      <ng-content></ng-content>\n      <ng-template #target></ng-template>\n    </div>\n  `,\n})\nexport class AmexioTabPillComponent implements OnInit {\n\n  /*\nProperties\nname : title\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Title on Tab Button/Pill.\n*/\n  @Input() title: string;\n\n  /*\nProperties\nname : disabled\ndatatype : boolean\nversion : 4.1.4 onwards\ndefault : false\ndescription : Disable property for tab\n*/\n  @Input() disabled = false;\n\n  /*\nProperties\nname : active\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Set true for specific tab open as default tab..\n*/\n  @Input() active = false;\n\n  /*\nProperties\nname : icon\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Supports glyphicon only. Can add directly home instead of 'glyphicon glyphicon-home.\n*/\n  @Input() icon: string;\n\n  /*\nProperties\nname : amexio-color\ndatatype : string\nversion : 4.1.9 onwards\ndefault : black\ndescription : Font color of label\n*/\n  @Input('amexio-color') amexiocolor: string;\n\n  /*\n Properties\n name : closable\n datatype : boolean\n version : 4.2 onwards\n default : false\n description : Font color of label\n */\n  @Input() closable: boolean = null;\n\n  tabId: any;\n\n  @ViewChild('target', { read: ViewContainerRef }) public target: any;\n\n  constructor() {\n    this.tabId = Math.floor(Math.random() * 90000) + 10000;\n  }\n\n  ngOnInit() {\n  }\n}\n","/**\n * Created by ketangote on 12/1/17.\n */\n/*\n Component Name : Amexio RightAllignedTab\n Component Selector : <amexio-right-vertical-tab-view >\n Component Description : Right Aligned Vertical Tab component for Angular Apps with multiple\n configurations such as Tab, Icon support.\n*/\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { AmexioTabPillComponent } from '../tab.pill.component';\n\n@Component({\n  selector: 'amexio-right-vertical-tab-view',\n  template: `\n\n    <div class=\"righttable\">\n      <div class=\"righttablerow\">\n        <div class=\"tablecol verticalalign-tabcontent\">\n          <div style=\"float:left\" class=\"tabcontent\">\n            <ng-content></ng-content>\n          </div>\n        </div>\n\n        <div style=\"float:right\" class=\"righttablecol verticalalign-tabright\">\n          <div class=\"verticalnavtab verticalnavtab-right\">\n            <ul>\n              <li *ngFor=\"let tabnode of tabCollection\">\n                <div class=\"defaultnode\" [ngClass]=\"{'rightactivetab':tabnode.active,'disabled-tab':tabnode.disabled }\" \n                (click)=\"onTabClick(tabnode)\">\n                  <span *ngIf=\"tabnode.icon\" [ngClass]=\"tabnode.icon\"  aria-hidden=\"true\"></span>\n                  <span style=\"padding-left:5px\">{{tabnode.title}}</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  `,\n})\nexport class AmexioRightVerticalTabComponent implements AfterContentInit, AfterViewInit, OnInit {\n\n  @ViewChild('tab', { read: ElementRef }) public tabs: ElementRef;\n\n  @ContentChildren(AmexioTabPillComponent) queryTabs: QueryList<AmexioTabPillComponent>;\n\n  tabCollection: AmexioTabPillComponent[];\n\n  /*\nEvents\nname : onClick\ndatatype :none\nversion : 4.0 onwards\ndefault : none\ndescription : Callback to invoke on activated tab event.\n*/\n  @Output() onClick: any = new EventEmitter<any>();\n\n  content: string;\n\n  constructor(public render: Renderer2) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n  }\n\n  ngAfterContentInit() {\n    this.tabCollection = this.queryTabs.toArray();\n  }\n\n  onTabClick(tab: any) {\n    if (!tab.disabled) {\n      for (const i of this.tabCollection) {\n        if (i === tab) {\n          i['active'] = true;\n          this.onClick.emit(tab);\n        } else {\n          i['active'] = false;\n        }\n      }\n    }\n  }\n\n  closeTab(tabNode: AmexioTabPillComponent) {\n    const newTab: AmexioTabPillComponent[] = [];\n    let index = 0;\n    let tabHighlightIndex = 0;\n\n    this.tabCollection.forEach((tab) => {\n      tab.active = false;\n      if (tab.tabId === tabNode.tabId) {\n        tabHighlightIndex = index;\n      }\n      if (tab.tabId !== tabNode.tabId) {\n        newTab.push(tab);\n      }\n      index++;\n    });\n\n    if (tabHighlightIndex === newTab.length) {\n      tabHighlightIndex--;\n    }\n    this.activateTab(newTab[tabHighlightIndex].tabId);\n    this.tabCollection = newTab;\n  }\n\n  activateTab(tabId: number) {\n    this.tabCollection.forEach((tab) => {\n      tab.active = false;\n      if (tab.tabId === tabId) {\n        tab.active = true;\n      }\n    });\n  }\n}\n","import { ControlValueAccessor } from '@angular/forms';\n\nconst noop = () => {\n};\n\nexport abstract class ValueAccessorBase<T> implements ControlValueAccessor {\n\n  onTouchedCallback: () => void = noop;\n  onChangeCallback: (_: any) => void = noop;\n\n  innerValue: T;\n\n  // get accessor\n  get value(): T {\n    return this.innerValue;\n  }\n\n  // set accessor including call the onchange callback\n  set value(v: T) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value !== this.innerValue) {\n      this.innerValue = value;\n    }\n  }\n\n  // From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  // THIS METHOD GENERATE RANDOM STRING\n  generateName(name: string, fieldlabel: string, inputType: string): string {\n    let newName: string;\n    if (!name && fieldlabel) {\n      newName = fieldlabel.replace(/\\s/g, '');\n    } else if (!name && !fieldlabel) {\n      newName = inputType + '-' + this.getRandomString();\n    }\n    return newName;\n  }\n  getRandomString(): string {\n    const possibleCharacters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n    let randomString = '';\n    for (let i = 0; i < 6; i++) {\n      randomString += possibleCharacters.charAt(Math.floor(Math.random() * possibleCharacters.length));\n    }\n    return randomString;\n  }\n}\n","import { Component, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { ValueAccessorBase } from '../../base/value-accessor';\nimport { CommonDataService } from '../../services/data/common.data.service';\n\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'amexio-checkbox-group',\n  template: `\n    <!-- <div style=\"height: 300px;\" *ngIf=\"mask\">\n        <div class=\"spinner\"></div>\n    </div> -->\n    <div class=\"inputgroup form-group\">\n        <div *ngIf=\"fieldlabel\">\n            <label>{{fieldlabel}}</label>\n        </div>\n\n        <div *ngIf=\"horizontal\" style=\"display: inline-flex; flex-direction :row;\">\n            <checkbox *ngFor=\"let data of viewdata | async\" [checked]=\"data.checked\" [value]=\"data\" [disabled]=\"data?.disabled || disabled\" [label]=\"data[displayfield]\">\n            </checkbox>\n        </div>\n\n        <div *ngIf=\"!horizontal\" style=\"display: inline-flex;flex-direction :column;\">\n            <checkbox *ngFor=\"let data of viewdata | async\" [checked]=\"data.checked\" [value]=\"data\" [disabled]=\"data?.disabled || disabled\" [label]=\"data[displayfield]\">\n            </checkbox>\n        </div>\n    </div>\n  `,\n  providers: [\n  { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AmexioCheckBoxGroupComponent), multi: true },\n  { provide: NG_VALIDATORS, useExisting: forwardRef(() => AmexioCheckBoxGroupComponent), multi: true },\n]})\nexport class AmexioCheckBoxGroupComponent extends ValueAccessorBase<any>\n  implements OnInit, Validators {\n\n      /*\n  Properties\n  name : horizontal\n  datatype : boolean\n  version : 4.0 onwards\n  default : false\n  description : Set true for horizontal checkbox\n  */\n  @Input() horizontal: boolean;\n\n  /*\n  Properties\n  name : disabled\n  datatype : boolean\n  version : 4.0 onwards\n  default : false\n  description :  If true will not react on any user events and show disable icon over\n  */\n  @Input() disabled = false;\n\n  viewdata: any;\n  _data: any;\n  selectedCheckBox: any[];\n  @Input('data')\n  set data(v: any) {\n    this._data = v;\n    this.viewdata = of(this.data);\n  }\n\n  get data() {\n    return this._data;\n  }\n/*\n  Properties\n  name : field-label\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : The label of this field\n  */\n  @Input('field-label') fieldlabel: any;\n\n/*\n  Properties\n  name : display-field\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Name of key inside response data to display on ui.\n*/\n  @Input('display-field') displayfield: any;\n  /*\n  Properties\n  name : value-field\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Name of key inside response data.use to send to backend\n  */\n  @Input('value-field') valuefield: any;\n\n    /*\n Properties\n name : required\n datatype : boolean\n version : 4.1.7 onwards\n default : false\n description :  property to set if manditory\n */\n  @Input('required') required: false;\n\n  @Input('name') name: string;\n\n   /*\n  Properties\n  name : data-reader\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Key in JSON datasource for records\n  */\n  @Input('data-reader') datareader: string;\n  /*\n  Properties\n  name : http-method\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Type of HTTP call, POST,GET.\n  */\n  @Input('http-method') httpmethod: string;\n  /*\n  Properties\n  name : http-url\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : REST url for fetching datasource.\n  */\n  @Input('http-url') httpurl: string;\n\n  @Output() onSelection: any = new EventEmitter<any>();\n\n  private _model: any;\n\n  constructor(private httpService: CommonDataService) {\n    super();\n  }\n\n  ngOnInit() {\n    let reponseData: any;\n    if (this.httpmethod && this.httpurl) {\n      this.httpService.fetchData(this.httpurl, this.httpmethod).subscribe((response) => {\n        reponseData = response;\n      }, (error) => {\n      }, () => {\n        this.data = this.getResponseData(reponseData);\n      });\n    } else if (this.data && this.datareader) {\n      this.data = this.getResponseData(this.data);\n    }\n  }\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n\n  contains(value: any): boolean {\n    if ( this._model instanceof Array) {\n      this._model.forEach((obj) => {\n         if (obj[this.displayfield] === value[this.displayfield]) {\n          return true;\n        }\n      });\n    }\n    return false;\n  }\n\n   add(value: any) {\n    if (!this.contains(value)) {\n      if (this._model instanceof Array) {\n        this._model.push(value);\n      } else {\n        this._model = [value];\n      }\n      this.onChangeCallback(this._model);\n    }\n    this.emitCheckboxes(this._model);\n  }\n\n   remove(value: any) {\n    const index = this._model.indexOf(value);\n    if (!this._model || index < 0) {\n      return;\n    }\n    this._model.splice(index, 1);\n    this.onChangeCallback(this._model);\n    this.emitCheckboxes(this._model);\n  }\n  // THIS METHOD EMMIT SELECTED CHECKBOXES\n  emitCheckboxes(selectedCheckBoxes: any[]) {\n    this.selectedCheckBox = [];\n    if (selectedCheckBoxes && selectedCheckBoxes.length > 0) {\n      selectedCheckBoxes.forEach((obj) => {\n        obj.checked = true;\n        this.selectedCheckBox.push(obj);\n      });\n    }\n    this.onSelection.emit(this.selectedCheckBox);\n  }\n\n  public validate(c: FormControl) {\n    return (this.required && (this._model && this._model.length > 0)) || !this.required\n      ? null\n      : {\n          jsonParseError: {\n            valid: true,\n          },\n        };\n  }\n}\n","import { ViewChild } from '@angular/core';\nimport { FormControl, NgModel, Validators} from '@angular/forms';\n\nexport class AmexioFormValidator {\n\n    // @ViewChild(NgModel) model: NgModel;\n\n    // public validate(c: FormControl) {\n    //     return (this.model.valid ) ? null : {\n    //         jsonParseError: {\n    //             valid: true,\n    //         },\n    //     };\n    // }\n}\n","/**\n * Created by ketangote on 11/21/17.\n */\n/*\nComponent Name : Amexio Checkbox\nComponent Selector :  <amexio-checkbox>\nComponent Description : Single checkbox having boolean based values.\n*/\nimport { Component, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgModel, Validators } from '@angular/forms';\nimport { AmexioFormValidator } from './../form-validator/amexio.form.validator.component';\n\nconst noop = () => {\n};\n\n@Component({\n  selector: 'amexio-checkbox',\n  template: `\n\n    <div class=\"inputgroup form-group\" >\n        <label class=\"input-box-container\" >{{fieldlabel}}\n            <input type=\"checkbox\"  [ngClass]=\"{'checkbox-disable' : disabled}\" \n            [attr.checked]=\"value ? true: null\" \n            (input)=\"onInput()\" (click)=\"onClick()\" [attr.disabled] = \"disabled ? true: null\" [required]=\"required\">\n            <span class=\"input-box-checkbox-label\"></span>\n          </label>\n    </div>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AmexioCheckBoxComponent), multi: true,\n  }, {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => AmexioCheckBoxComponent), multi: true,\n}],\n})\nexport class AmexioCheckBoxComponent extends AmexioFormValidator implements ControlValueAccessor, OnInit, Validators {\n  // The internal dataviews model\n  private innerValue: any = '';\n  // Placeholders for the callbacks which are later provided\n  // by the Control Value Accessor\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  /*\n  Properties\n  name : field-label\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description :The label of this field\n  */\n  @Input('field-label') fieldlabel: string;\n  /*\n  Properties\n  name : disabled\n  datatype : boolean\n  version : 4.0 onwards\n  default : false\n  description :  If true will not react on any user events and show disable icon over\n  */\n  @Input() disabled: boolean;\n  /*\n  Properties\n  name : required\n  datatype : boolean\n  version : 4.0 onwards\n  default : false\n  description :  property to set if manditory\n  */\n  @Input() required = false;\n  /*\n  Events\n  name : onSelection\n  datatype : any\n  version : none\n  default : none\n  description : Event fired on checkbox click.\n  */\n  @Output() onSelection: any = new EventEmitter<any>();\n  /*\n  Events\n  name : input\n  datatype : any\n  version : none\n  default : none\n  description : On input event field.\n  */\n  @Output() input: any = new EventEmitter<any>();\n  @Input('name') name: string;\n  isValid: boolean;\n  @Output() isComponentValid: any = new EventEmitter<any>();\n\n  constructor() {\n    super();\n  }\n  ngOnInit() {\n    this.generateName();\n    this.isValid = !this.required;\n    this.isComponentValid.emit(!this.required);\n  }\n  onInput() {\n    this.isValid = this.value;\n    this.isComponentValid.emit(this.value);\n    this.input.emit(this.value);\n  }\n  onClick() {\n    this.value = !this.value;\n    this.isValid = this.value;\n    this.isComponentValid.emit(this.value);\n    this.onSelection.emit(this.value);\n  }\n  // get accessor\n  get value(): any {\n    if (this.required) {\n      this.isValid = this.innerValue;\n    } else {\n      this.isValid = true;\n    }\n    return this.innerValue;\n  }\n  // set accessor including call the onchange callback\n  set value(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n  // Set touched on blur\n  onBlur() {\n    this.onTouchedCallback();\n  }\n  onFocus() {\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value !== this.innerValue) {\n      this.innerValue = value;\n    }\n  }\n  // From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  // From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  // THIS MEHTOD CHECK INPUT IS VALID OR NOT\n  checkValidity(): boolean {\n    return this.isValid;\n  }\n\n  public validate(c: FormControl) {\n    return ((this.required && this.value) || !this.required) ? null : {\n        jsonParseError: {\n            valid: true,\n        },\n    };\n}\n // THIS METHOD GENERATE RANDOM STRING\n generateName() {\n  if (!this.name && this.fieldlabel ) {\n    this.name = this.fieldlabel.replace(/\\s/g, '');\n  } else if ( !this.name && !this.fieldlabel) {\n    this.name = 'textinput-' + this.getRandomString();\n  }\n}\ngetRandomString(): string {\n  const possibleCharacters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n  let randomString = '';\n  for (let i = 0; i < 6; i++) {\n    randomString += possibleCharacters.charAt(Math.floor(Math.random() * possibleCharacters.length));\n  }\n  return randomString;\n}\n}\n","import { InputValidator } from './input.validator';\nimport { ValueAccessorBase } from './value-accessor';\n\nexport class BaseInput<T> extends ValueAccessorBase<T> {\n\n    onBaseInputFocus(event: any) {\n        this.checkValidity();\n    }\n    onBaseInput(event: any) {\n        this.checkValidity();\n    }\n\n    onBlur2(event: any) {\n        this.checkValidity();\n    }\n\n    onBaseInputChange(event: any) {\n        this.checkValidity();\n    }\n\n    checkValidity() {\n    }\n\n    validateOnInit() {\n        return true;\n    }\n\n    isVali1d() {\n        return true;\n    }\n\n}\n","import { ChangeDetectorRef, ElementRef, Renderer2 } from '@angular/core';\nimport { BaseInput } from './base.input.component';\n\nexport class  EventBaseComponent<T> extends BaseInput<T> {\n\n    self = false;\n    itemClick = false;\n    dropdownstyle: any;\n    documentClickListener: any;\n\n    constructor(public renderer: Renderer2, public element: ElementRef, private cd: ChangeDetectorRef) {\n        super();\n        this.hide();\n    }\n\n    onBaseFocusEvent(event: any) {\n        this.self = true;\n        this.dropdownstyle = {visibility: 'visible'};\n        this.bindDocumentClickListener();\n    }\n\n    onBaseBlurEvent(event: any): boolean {\n        this.onBaseItemClicked();\n        return false;\n    }\n\n    onBaseItemClicked() {\n        this.itemClick = true;\n        this.hide();\n        this.unbindDocumentClickListener();\n        this.clearClicks();\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n             this.documentClickListener = this.renderer\n                                              .listen('document', 'click', (event: any) => this.handleDocumentListener(event));\n\n        }\n\n    }\n\n    handleDocumentListener(event: any) {\n        if (!this.self && !this.itemClick) {\n            this.hide();\n            this.unbindDocumentClickListener();\n        }\n        this.clearClicks();\n        this.cd.markForCheck();\n    }\n\n    clearClicks() {\n        this.self = false;\n        this.itemClick = false;\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n\n    }\n\n    hide() {\n        this.dropdownstyle = {visibility: 'hidden'};\n    }\n}\n","import { ChangeDetectorRef, ElementRef, Renderer2, ViewChild } from '@angular/core';\nimport { FormControl, NgModel, Validators} from '@angular/forms';\nimport { EventBaseComponent } from './event.base.component';\n\nexport class BaseFormValidator<T> extends EventBaseComponent<T> {\n\n    // @ViewChild(NgModel) model: NgModel;\n\n    // public validate(c: FormControl) {\n    //     return (this.model.valid ) ? null : {\n    //         jsonParseError: {\n    //             valid: true,\n    //         },\n    //     };\n    // }\n    constructor(public renderer: Renderer2, public element: ElementRef, private _cd: ChangeDetectorRef) {\n     super(renderer, element, _cd);\n    }\n}\n","/**\n * Created by pratik on 1/12/17.\n */\n\n/*\n Component Name : Amexio Dropdown\n Component Selector :  <amexio-dropdown>\n Component Description : Drop-Down component has been created to render\n N numbers of drop-down items based on data-set configured. Data-set can be\n configured using HTTP call OR Define fix number of dropdown-items. User can configure different attributes\n for enabling filter, multi-select, maximum selection in case of multi select.\n*/\nimport {\n  AfterViewInit, ChangeDetectorRef, Component, ContentChild,\n  ElementRef, EventEmitter, forwardRef, Input,\n  OnInit, Output, Renderer2, TemplateRef, ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgModel, Validators } from '@angular/forms';\nimport { BaseFormValidator } from '../../base/base.validator.component';\nimport { CommonDataService } from '../../services/data/common.data.service';\nimport { AmexioFormValidator } from './../form-validator/amexio.form.validator.component';\nconst noop = () => {\n};\n\n@Component({\n  selector: 'amexio-dropdown',\n  template: `\n    <div class=\"inputgroup\" #rootDiv>\n\n        <label *ngIf=\"haslabel\" [style.font-style]=\"fontstyle\" [style.font-family]=\"fontfamily\" [style.font-size]=\"fontsize\">\n          {{fieldlabel}}\n        </label>\n  \n        <input type=\"hidden\"\n               [ngModel]=\"value\"\n               (ngModelChange)=\"onChange($event)\"\n               #inp=\"ngModel\"\n        />\n        <input type=\"text\" class=\"input-control\"\n               [value]=\"displayValue\"\n               [ngClass]=\"{'input-control-error' : inp.invalid && (inp.dirty || inp.touched),'input-control-success' : inp.valid && (inp.dirty || inp.touched)}\"\n               (blur)=\"onblur($event)\"\n               (focus)=\"onFocus(rootDiv)\"\n               [attr.placeholder]=\"placeholder\"\n               [readonly]=\"readonly ? true : null\"\n               [attr.disabled]=\"disabled ? true: null\"\n               [required]=\"!allowblank\" (keyup)=\"onDropDownSearchKeyUp($event)\" (keydown)=\"navigateKey($event)\"/>\n  \n  \n        <span class=\"drodown-caret-down\" (click)=\"onIconClick()\">\n          <amexio-form-icon key=\"dropdown_caret\" *ngIf=\"!maskloader\" ></amexio-form-icon>\n          <em class=\"fa fa-spinner fa-spin\" *ngIf=\"maskloader\"></em>\n        </span>\n  \n        <span #dropdownitems class=\"dropdown\" [ngClass]=\"{'dropdown-up' : posixUp}\" [ngStyle]=\"dropdownstyle\">\n              <ul class=\"dropdown-list\">\n  \n                <li class=\"list-items\" [ngClass]=\"{'list-items-selected':item.selected}\" *ngFor=\"let item of filteredOptions\" (mousedown)=\"onItemSelect(item)\">\n                  <ng-container *ngIf=\"bodyTemplate\">\n                    <ng-template [ngTemplateOutlet]=\"bodyTemplate\" [ngTemplateOutletContext]=\"{ $implicit: { text : row }, row: item }\">\n                      </ng-template>\n                    </ng-container>\n                  <ng-container *ngIf=\"!bodyTemplate\">\n                    <span>{{item[displayfield]}}</span>\n                  </ng-container>            <span style=\"float : right\">{{item?.checked ? '&#10004;': ''}}</span>\n                </li>\n                 <ng-template *ngIf=\"filteredOptions && (filteredOptions.length < 1)\">\n                   <li class=\"list-items\">No Options</li>\n                 </ng-template>\n              </ul>\n            </span>\n        <span class=\"inputfieldbar\"></span>\n      </div>\n  \n  \n      <span *ngIf=\"iconfeedback && (inp.invalid && (inp.dirty || inp.touched) || inp.valid)\"\n            class=\"input-control-feedback\">\n              <span *ngIf=\"inp.invalid && (inp.dirty || inp.touched)\">&#9888;</span>\n              <span *ngIf=\"inp.valid && (inp.dirty || inp.touched)\"> &#10004;</span>\n  \n      </span>\n  \n      <span *ngIf=\"showToolTip && enablepopover\" class=\"tooltiptext\">\n              <div [innerHTML]=\"helpInfoMsg\"></div>\n      </span>\n  \n  \n  \n  \n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AmexioDropDownComponent), multi: true,\n  }, {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => AmexioDropDownComponent), multi: true,\n  }],\n})\nexport class AmexioDropDownComponent extends BaseFormValidator<any> implements OnInit, ControlValueAccessor, Validators {\n  /*\nProperties\nname : field-label\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : The label of this field\n*/\n  @Input('field-label') fieldlabel: string;\n  /*\nProperties\nname : allow-blank\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Sets if field is required\n*/\n  @Input('allow-blank') allowblank: boolean;\n\n  /*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault :\ndescription : Local data for dropdown.\n*/\n  _data: any;\n  componentLoaded: boolean;\n  @Input('data')\n  set data(value: any) {\n    this._data = value;\n    if (this.componentLoaded) {\n      this.setData(this._data);\n    }\n  }\n  get data(): any {\n    return this._data;\n  }\n  /*\n Properties\n name : data-reader\n datatype : string\n version : 4.0 onwards\n default :\n description : Key in JSON datasource for records\n */\n  @Input('data-reader') datareader: string;\n\n  /*\n  Properties\n  name : http-method\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Type of HTTP call, POST,GET.\n  */\n  @Input('http-method') httpmethod: string;\n\n  /*\n Properties\n name : http-url\n datatype : string\n version : 4.0 onwards\n default :\n description : REST url for fetching datasource.\n */\n  @Input('http-url') httpurl: string;\n\n  /*\nProperties\nname : display-field\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Name of key inside response data to display on ui.\n*/\n  @Input('display-field') displayfield: string;\n  /*\nProperties\nname : value-field\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Name of key inside response data.use to send to backend\n*/\n  @Input('value-field') valuefield: string;\n\n  /*\nProperties\nname : search\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : true for search box enable\n*/\n  @Input() search: boolean;\n  /*\n  Properties\n  name : readonly\n  datatype : boolean\n  version : 4.2.1 onwards\n  default : false\n  description : true for set dropdown input readonly.\n  */\n  @Input() readonly: boolean;\n\n  /*\nProperties\nname : multi-select\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : true for select multiple options\n*/\n  @Input('multi-select') multiselect: boolean;\n\n  @ViewChild('dropdownitems', { read: ElementRef }) public dropdownitems: ElementRef;\n\n  helpInfoMsg: string;\n\n  displayValue = '';\n\n  _errormsg: string;\n\n  filteredOptions: any[] = [];\n\n  get errormsg(): string {\n    return this._errormsg;\n  }\n  /*\n  Properties\n  name : error-msg\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Sets the error message\n  */\n  @Input('error-msg')\n  set errormsg(value: string) {\n    this.helpInfoMsg = value + '<br/>';\n  }\n  /*\n  Events\n  name : onBlur\n  datatype : any\n  version : 4.0 onwards\n  default :\n  description : \tOn blur event\n  */\n  @Output() onBlur: any = new EventEmitter<any>();\n  /*\nEvents\nname : input\ndatatype : any\nversion : none\ndefault :\ndescription : \tOn input event field.\n*/\n  @Output() input: any = new EventEmitter<any>();\n  /*\nEvents\nname : focus\ndatatype : any\nversion : none\ndefault :\ndescription : On field focus event\n*/\n  @Output() focus: any = new EventEmitter<any>();\n  /*\nEvents\nname : onSingleSelect\ndatatype : any\nversion : none\ndefault :\ndescription : Fire when drop down item selected.\n*/\n  @Output() onSingleSelect: any = new EventEmitter<any>();\n  /*\nEvents\nname : onMultiSelect\ndatatype : any\nversion :none\ndefault :\ndescription : Fire when multiple record select in drop down.this event is only\napplied when multi-select=true\n*/\n  @Output() onMultiSelect: any = new EventEmitter<any>();\n  /*\nEvents\nname : onClick\ndatatype : any\nversion :none\ndefault :\ndescription : On record select event.this event is only for normal dropdown.\n*/\n  @Output() onClick: any = new EventEmitter<any>();\n  showToolTip: boolean;\n  /*\nProperties\nname : place-holder\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Show place-holder inside dropdown component*/\n  @Input('place-holder') placeholder = '';\n  /*\nProperties\nname : disabled\ndatatype :  boolean\nversion : 4.0 onwards\ndefault : false\ndescription : If true will not react on any user events and show disable icon over*/\n  @Input() disabled: boolean;\n  /*\nProperties\nname : icon-feedback\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : */\n  @Input('icon-feedback') iconfeedback: boolean;\n  /*\nProperties\nname : font-style\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set font-style to field\n*/\n  @Input('font-style') fontstyle: string;\n  /*\nProperties\nname : font-family\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set font-family to field\n*/\n  @Input('font-family') fontfamily: string;\n  /*\nProperties\nname : font-size\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set font-size to field\n*/\n  @Input('font-size') fontsize: string;\n  /*\nProperties\nname : has-label\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : flag to set label\n*/\n  @Input('has-label') haslabel = true;\n  /*\nProperties\nname : enable-popover\ndatatype : boolean\nversion : 4.0 onwards\ndefault :false\ndescription : Set enable / disable popover.\n*/\n  @Input('enable-popover') enablepopover: boolean;\n\n  @ContentChild('amexioBodyTmpl') bodyTemplate: TemplateRef<any>;\n  posixUp: boolean;\n  isValid: boolean;\n  selectedindex = 0;\n  responseData: any;\n  previousData: any;\n  viewData: any;\n  multiselectValues: any[] = [];\n  maskloader = true;\n  scrollposition = 30;\n  // The internal dataviews model\n\n  @Output() isComponentValid: any = new EventEmitter<any>();\n  @Input('name') name: string;\n  constructor(\n    public dataService: CommonDataService, public element: ElementRef, public renderer: Renderer2, _cd: ChangeDetectorRef,\n  ) {\n    super(renderer, element, _cd);\n\n  }\n  ngOnInit() {\n    this.name = this.generateName(this.name, this.fieldlabel, 'dropdowninput');\n    this.isValid = this.allowblank;\n    this.isComponentValid.emit(this.allowblank);\n    if (this.placeholder === '') {\n      this.placeholder = 'Choose Option';\n    }\n    if (this.httpmethod && this.httpurl) {\n      this.dataService.fetchData(this.httpurl, this.httpmethod).subscribe((response) => {\n        this.responseData = response;\n      }, (error) => {\n      }, () => {\n        this.setData(this.responseData);\n      });\n    } else if (this.data) {\n      this.previousData = JSON.parse(JSON.stringify(this.data));\n      this.setData(this.data);\n    }\n    this.componentLoaded = true;\n  }\n  setData(httpResponse: any) {\n    // Check if key is added?\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      this.multiselectValues = [];\n      const dr = this.datareader.split('.');\n      if (dr) {\n        for (const ir of dr) {\n          responsedata = responsedata[ir];\n        }\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    this.setResponseData(responsedata);\n    this.multiSelection();\n    this.setUserSelection();\n    this.maskloader = false;\n  }\n  setResponseData(responsedata: any) {\n    if (responsedata) {\n      this.viewData = responsedata.sort((a: any, b: any) => a[this.displayfield].toLowerCase()\n        !== b[this.displayfield].toLowerCase() ?\n        a[this.displayfield].toLowerCase() < b[this.displayfield].toLowerCase() ? -1 : 1 : 0);\n      this.filteredOptions = this.viewData;\n    }\n  }\n  multiSelection() {\n    if (this.multiselect) {\n      let preSelectedMultiValues = '';\n      const optionsChecked: any = [];\n      this.viewData.forEach((row: any) => {\n        if (row.hasOwnProperty('checked')) {\n          if (row.checked) {\n            optionsChecked.push(row[this.valuefield]);\n            this.multiselectValues.push(row);\n            preSelectedMultiValues === '' ? preSelectedMultiValues +=\n              row[this.displayfield] : preSelectedMultiValues += ',' + row[this.displayfield];\n          }\n        } else {\n          row['checked'] = false;\n        }\n\n      });\n      this.displayValue = this.setMultiSelect();\n      this.onMultiSelect.emit(this.multiselectValues);\n    }\n  }\n\n  setUserSelection() {\n    // Set user selection\n    if (this.innerValue != null) {\n      const valueKey = this.valuefield;\n      const displayKey = this.displayfield;\n      const val = this.innerValue;\n      if (this.viewData.length > 0) {\n        this.viewData.forEach((item: any) => {\n          if (item[valueKey] === val) {\n            this.isValid = true;\n            this.isComponentValid.emit(true);\n            this.displayValue = item[displayKey];\n            this.onSingleSelect.emit(item);\n          }\n        });\n      }\n\n    }\n  }\n  onItemSelect(selectedItem: any) {\n    if (this.multiselect) {\n      const optionsChecked: any[] = [];\n      this.multiselectValues = [];\n      if (selectedItem.hasOwnProperty('checked')) {\n        selectedItem.checked = !selectedItem.checked;\n        this.filteredOptions.forEach((row: any) => {\n          if (row.checked) {\n            optionsChecked.push(row[this.valuefield]);\n            this.multiselectValues.push(row);\n          }\n        });\n        this.innerValue = optionsChecked;\n        this.displayValue = this.setMultiSelect();\n        this.onMultiSelect.emit(this.multiselectValues);\n      }\n    } else {\n      this.value = selectedItem[this.valuefield];  // Issue here?\n      this.displayValue = selectedItem[this.displayfield];\n      this.multiselect ? this.showToolTip = true : this.showToolTip = false;\n      this.onSingleSelect.emit(selectedItem);\n    }\n    this.isValid = true;\n    this.isComponentValid.emit(true);\n  }\n  setMultiSelectData() {\n    this.multiselectValues = [];\n    if (this.innerValue && this.innerValue.length > 0) {\n      const modelValue = this.innerValue;\n      this.filteredOptions.forEach((test) => {\n        modelValue.forEach((mdValue: any) => {\n          if (test[this.valuefield] === mdValue) {\n            if (test.hasOwnProperty('checked')) {\n              test.checked = true;\n            }\n            this.multiselectValues.push(test);\n          }\n        });\n      });\n    }\n  }\n  navigateKey(event: any) {\n  }\n  getDisplayText() {\n    if (this.innerValue != null || this.innerValue !== '') {\n      if (this.multiselect) {\n        this.displayValue = this.setMultiSelect();\n      } else {\n        this.displayValue = '';\n        this.filteredOptions.forEach((test) => {\n          if (test[this.valuefield] === this.innerValue) {\n            this.displayValue = test[this.displayfield];\n          }\n        });\n        this.displayValue = this.displayValue === undefined ? '' : this.displayValue;\n      }\n    }\n  }\n  setMultiSelect() {\n    this.setMultiSelectData();\n    let multiselectDisplayString: any = '';\n    this.multiselectValues.forEach((row: any) => {\n      multiselectDisplayString === '' ? multiselectDisplayString +=\n        row[this.displayfield] : multiselectDisplayString += ',' + row[this.displayfield];\n    });\n    if (this.multiselectValues.length > 0) {\n      return multiselectDisplayString;\n    } else {\n      return '';\n    }\n  }\n  onChange(event: string) {\n    this.innerValue = event;\n    this.isValid = true;\n    this.getDisplayText();\n    this.isComponentValid.emit(true);\n  }\n  onInput(input: any) {\n    this.input.emit();\n    this.isValid = input.valid;\n    this.isComponentValid.emit(input.valid);\n  }\n  onDropDownSearchKeyUp(event: any) {\n    if (this.search) {\n      const keyword = event.target.value;\n      if (keyword != null && keyword !== '' && keyword !== ' ') {\n        this.filteredOptions = [];\n        const search_Term = keyword.toLowerCase();\n        this.viewData.forEach((row: any) => {\n          if (row[this.displayfield].toLowerCase().startsWith(search_Term)) {\n            this.filteredOptions.push(row);\n          }\n        });\n      }\n      if (keyword === '') {\n        this.filteredOptions = this.viewData;\n      }\n    }\n    if (event.keyCode === 8) {\n      this.innerValue = '';\n    }\n    if (event.keyCode === 40 || event.keyCode === 38 || event.keyCode === 13) {\n      this.navigateUsingKey(event);\n    }\n    this.onBaseFocusEvent({});\n  }\n  navigateUsingKey(event: any) {\n    if (this.selectedindex > this.filteredOptions.length) {\n      this.selectedindex = 0;\n    }\n    if (event.keyCode === 40 || event.keyCode === 38 && this.selectedindex <\n      this.filteredOptions.length) {\n      this.navigateFilterOptions();\n    }\n    if (event.keyCode === 13 && this.filteredOptions[this.selectedindex]) {\n      this.onItemSelect(this.filteredOptions[this.selectedindex]);\n    }\n  }\n  navigateFilterOptions() {\n    if (!this.showToolTip) {\n      this.showToolTip = true;\n    }\n    let prevselectedindex = 0;\n    if (this.selectedindex === 0) {\n      this.selectedindex = 1;\n    } else {\n      prevselectedindex = this.selectedindex;\n      this.scrollPositionIndex(event);\n    }\n    if (this.filteredOptions[this.selectedindex]) {\n      this.filteredOptions[this.selectedindex].selected = true;\n    }\n    if (this.filteredOptions[prevselectedindex]) {\n      this.filteredOptions[prevselectedindex].selected = false;\n    }\n  }\n  scrollPositionIndex(event: any) {\n    if (event.keyCode === 40) {\n      this.selectedindex++;\n      if ((this.selectedindex > 5)) {\n        this.dropdownitems.nativeElement.scroll(0, this.scrollposition);\n        this.scrollposition = this.scrollposition + 30;\n      }\n    } else if (event.keyCode === 38) {\n      this.selectedindex--;\n      if (this.scrollposition >= 0 && this.selectedindex > 1) {\n        this.dropdownitems.nativeElement.scroll(0, this.scrollposition);\n        this.scrollposition = this.scrollposition - 30;\n      }\n      if (this.selectedindex === 1) {\n        this.scrollposition = 30;\n      }\n    }\n  }\n  // get accessor\n  get value(): any {\n    return this.innerValue;\n  }\n  // set accessor including call the onchange callback\n  set value(v: any) {\n\n    if (v != null && v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n  // Set touched on blur\n  onblur(event: any) {\n    if (event.target && event.target.value && this.filteredOptions &&\n      this.filteredOptions.length === 1) {\n      const fvalue = event.target.value;\n      const row = this.filteredOptions[0];\n      const rvalue = row[this.displayfield];\n      if (fvalue && rvalue && (fvalue.toLowerCase() === rvalue.toLowerCase())) {\n        this.onItemSelect(row);\n      }\n    }\n    this.onTouchedCallback();\n    this.onBaseBlurEvent(event);\n    this.onBlur.emit();\n  }\n  onFocus(elem: any) {\n    this.onBaseFocusEvent(elem);\n    this.showToolTip = true;\n    this.posixUp = this.getListPosition(elem);\n    this.focus.emit();\n  }\n  getListPosition(elementRef: any): boolean {\n    const dropdownHeight = 325; // must be same in dropdown.scss\n    if (window.screen.height - (elementRef.getBoundingClientRect().bottom) < dropdownHeight) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value != null) {\n      this.writeChangedValue(value);\n    } else {\n      this.innerValue = '';\n      if (this.allowblank) {\n        this.isValid = true;\n      }\n    }\n  }\n  writeChangedValue(value: any) {\n    if (value !== this.innerValue) {\n      let status = false;\n      if (this.viewData && this.viewData.length > 0) {\n        this.viewData.forEach((item: any) => {\n          if (item[this.valuefield] === value) {\n            this.isValid = true;\n            this.displayValue = item[this.displayfield];\n            status = true;\n            return;\n          }\n        });\n      }\n      if (!status) {\n        this.displayValue = '';\n      }\n      this.value = value;\n    }\n  }\n\n  // From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  // From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  onIconClick() {\n    if (!this.disabled) {\n      this.onBaseFocusEvent({});\n      this.showToolTip = !this.showToolTip;\n    }\n  }\n  // THIS MEHTOD CHECK INPUT IS VALID OR NOT\n  checkValidity(): boolean {\n    return this.isValid;\n  }\n  public validate(c: FormControl) {\n    return ((!this.allowblank && (this.value || this.value === 0) ) || this.allowblank) ? null : {\n      jsonParseError: {\n        valid: true,\n      },\n    };\n  }\n}\n","/**\n * Created by pratik on 7/2/18.\n */\n/*\n Component Name : Amexio Label\n Component Selector :  <'amexio-label>\n Component Description :Amexio Label can be easily wrapped\n around any text and configure using the different responsive styling\n*/\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n@Component({\n  selector: 'amexio-label',\n  template: `\n  <label class=\"label-content {{styleClass}}\" (click)=\"onLabel($event)\"\n    [ngStyle]=\"{'color' : fontColor,'cursor': enableclick ? 'pointer': 'text'}\">\n    <ng-content></ng-content>\n    <span class=\"label-badge\" *ngIf=\"badge\">{{badge}}</span>\n  </label>\n  `,\n})\nexport class AmexioLabelComponent implements OnInit {\n  /*\n  Properties\n  name : badge\n  datatype : number\n  version : 4.1.9 onwards\n  default : none\n  description : Badge Value for Label.\n  */\n  @Input('badge') badge: number;\n  /*\n  Properties\n  name : size\n  datatype : string\n  version : 4.0 onwards\n  default : small\n  description : Responsive Font size, large,medium,small & large-bold,medium-bold,small-bold\n  */\n  @Input('size') styleClass: string;\n  /*\n  Properties\n  name : font-color\n  datatype : string\n  version : 4.0 onwards\n  default : small\n  description : Font color of label\n  */\n  @Input('font-color') fontColor: string;\n  @Input('enable-click') enableclick = false;\n  @Output() onClick: any = new EventEmitter<any>();\n\n  tempStyleArray: any = ['large', 'medium', 'small', 'bold', 'large-bold', 'medium-bold', 'small-bold',\n    'large-44', 'large-24', 'large-50', 'large-54', 'large-56', 'large-60', 'large-64', 'large-68', 'large-78', 'large-9vw',\n    'large-44-bold', 'large-50-bold', 'large-24-bold', 'large-4vw', 'large-4vw-bold',\n    'large-54-bold', 'large-56-bold', 'large-60-bold', 'large-64-bold', 'large-68-bold', 'large-78-bold', 'large-9vw-bold'];\n  constructor() { }\n  ngOnInit() {\n    if (this.styleClass == null) {\n      this.styleClass = 'small';\n    } else {\n      this.styleClass = this.tempStyleArray.find((x: any) => x === this.styleClass);\n    }\n  }\n  onLabel(event: any) {\n    if (this.enableclick) {\n      this.onClick.emit(event);\n    }\n  }\n}\n","/*\n Component Name : Amexio Number Input\n Component Selector :  <amexio-number-input>\n Component Description : Number input component has been created\n with different configurable attributes for validation\n (min/max value,allow blank, custom regex), custom error message, help, custom styles\n*/\nimport {\n  Component, EventEmitter, forwardRef, Input, OnInit, Output, ViewChild,\n} from '@angular/core';\nimport { FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgModel, Validators } from '@angular/forms';\nimport { ValueAccessorBase } from '../../base/value-accessor';\n\n@Component({\n  selector: 'amexio-number-input',\n  template: `\n\n\n\n    <div class=\"inputgroup\">\n\n      <label *ngIf=\"haslabel\" [style.font-style]=\"fontstyle\" [style.font-family]=\"fontfamily\" [style.font-size]=\"fontsize\">\n          {{fieldlabel}}\n      </label>\n\n      <input type=\"number\" \n             class=\"input-control\"\n             [ngClass]=\"model.touched ? (isValid && model.touched) ? 'input-control-success' : 'input-control-error' :''\"\n             [(ngModel)]=\"value\"\n             (blur)=\"onBlurEvent()\" \n             (focus)=\"onFocus()\" \n             (input)=\"onInput()\" \n             (change)=\"onChangeEv()\"\n             [name]=\"name\" \n             [pattern]=\"regEx\"\n             [attr.placeholder]=\"placeholder\" \n             [attr.max]=\"maxvalue\" \n             [attr.min]=\"minvalue\" \n             [attr.disabled]=\"disabled ? true: null\"\n             [required]=\"!allowblank\" />\n\n\n      <ng-container *ngIf=\"iconfeedback\">\n          <span class=\"input-control-feedback\">\n              <span *ngIf=\"!isValid && model.touched\"><em class=\"fa fa-times\"></em></span>\n              <span *ngIf=\"isValid && model.touched\"><em class=\"fa fa-check\"></em></span>\n          </span>\n      </ng-container>\n\n\n      <span *ngIf=\"showToolTip && enablepopover\" class=\"dropdown tooltiptext\">\n          <div [innerHTML]=\"helpInfoMsg\"></div>\n      </span>\n      <span class=\"inputfieldbar\"></span>\n    </div>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AmexioNumberInputComponent), multi: true,\n  }, {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => AmexioNumberInputComponent), multi: true,\n  }],\n})\nexport class AmexioNumberInputComponent extends ValueAccessorBase<string> implements OnInit, Validators {\n\n  /*\nProperties\nname : field-label\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : The label of this field\n*/\n  @Input('field-label') fieldlabel: string;\n  /*\nProperties\nname : allow-blank\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Sets if field is required\n*/\n  @Input('allow-blank') allowblank: boolean;\n  /*\nProperties\nname : min-value\ndatatype : number\nversion : 4.0 onwards\ndefault :\ndescription : Defines the min range limit for number input.\n*/\n  @Input('min-value') minvalue: any;\n  /*\nProperties\nname : max-value\ndatatype : number\nversion : 4.0 onwards\ndefault :\ndescription : Defines the max range limit for number input.\n*/\n  @Input('max-value') maxvalue: any;\n\n  helpInfoMsg: string;\n\n  componentClass: any;\n\n  regEx: RegExp;\n\n  showToolTip: boolean;\n\n  _errormsg: string;\n\n  get errormsg(): string {\n    return this._errormsg;\n  }\n  /*\n  Properties\n  name : error-msg\n  datatype : none\n  version : 4.0 onwards\n  default : none\n  description : Sets the error message\n  */\n  @Input('error-msg')\n  set errormsg(value: string) {\n    this.helpInfoMsg = value + '<br/>';\n  }\n\n  _minerrormsg: string;\n\n  get minerrormsg(): string {\n    return this._minerrormsg;\n  }\n  /*\n  Properties\n  name : min-error-msg\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Sets the error message for min validation\n  */\n  @Input('min-error-msg')\n  set minerrormsg(value: string) {\n    this.helpInfoMsg = this.helpInfoMsg + 'Min value: ' + value + '<br/>';\n  }\n\n  _maxerrormsg: string;\n\n  get maxerrormsg(): string {\n    return this._maxerrormsg;\n  }\n\n  /*\n  Properties\n  name : max-error-msg\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Sets the error message for max validation\n  */\n  @Input('max-error-msg')\n  set maxerrormsg(value: string) {\n    this.helpInfoMsg = this.helpInfoMsg + 'Max value: ' + value;\n  }\n\n  isValid = false;\n  /*\nProperties\nname : place-holder\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : \tShow place-holder inside dropdown component\n*/\n  @Input('place-holder') placeholder: string;\n  /*\nProperties\nname : min-length\ndatatype : number\nversion : 4.0 onwards\ndefault :\ndescription : The smallest positive representable number -that is,\nthe positive number closest to zero (without actually being zero).\nThe smallest negative representable number is -min-length.\n*/\n  @Input('min-length') minlength: number;\n  /*\nProperties\nname : max-length\ndatatype : number\nversion : 4.0 onwards\ndefault :\ndescription : The smallest positive representable number -that is,\nthe positive number closest to zero (without actually being zero).\nThe smallest negative representable number is -max-length.\n*/\n  @Input('max-length') maxlength: number;\n\n  /*\n  Properties\n  name : disabled\n  datatype : boolean\n  version : 4.0 onwards\n  default : none\n  description : True to disable the field.\n  */\n  @Input() disabled: boolean;\n  /*\n  Events\n  name : onBlur\n  datatype : any\n  version : 4.0 onwards\n  default :\n  description : On blur event\n  */\n  @Output() onBlur: any = new EventEmitter<any>();\n  /*\n Events\n name : input\n datatype : any\n version : none\n default :\n description : \tOn input event field.\n */\n  @Output() input: any = new EventEmitter<any>();\n  /*\n Events\n name : focus\n datatype : any\n version : none\n default :\n description : On focus event field.\n */\n  @Output() focus: any = new EventEmitter<any>();\n  /*\n Events\n name : change\n datatype : any\n version : none\n default :\n description : On field value change event\n */\n  @Output() change: any = new EventEmitter<any>();\n\n  @Input('icon-feedback') iconfeedback: boolean;\n  /*\nProperties\nname : font-style\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set font-style to field\n*/\n  @Input('font-style') fontstyle: string;\n  /*\nProperties\nname : font-family\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set font-family to field\n*/\n  @Input('font-family') fontfamily: string;\n  /*\nProperties\nname : font-size\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set font-size to field\n*/\n  @Input('font-size') fontsize: string;\n  /*\nProperties\nname : has-label\ndatatype : boolean\nversion : 4.0 onwards\ndefault : true\ndescription : Flag to set label\n*/\n  @Input('has-label') haslabel = true;\n\n  @Input('name') name: string;\n\n  _pattern: string;\n\n  get pattern(): string {\n    return this._pattern;\n  }\n  /*\nProperties\nname : pattern\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Apply Reg-ex to the field\n*/\n  @Input('pattern')\n  set pattern(value: string) {\n    if (value != null) {\n      this.regEx = new RegExp(this.pattern);\n    }\n  }\n  /*\nProperties\nname : enable-popover\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set enable / disable popover.\n*/\n  @Input('enable-popover') enablepopover: boolean;\n\n  @ViewChild(NgModel) model: NgModel;\n\n  constructor() {\n    super();\n    this.showToolTip = false;\n  }\n\n  ngOnInit() {\n    this.name = this.generateName(this.name, this.fieldlabel, 'numberinput');\n  }\n  // THIS METHOD USED FOR BLUR EVENT.\n  onBlurEvent() {\n    this.showToolTip = false;\n    this.onBlur.emit(this.value);\n  }\n  // THIS METHOD USED FOR FOCUS EVENT .\n  onFocus() {\n    this.showToolTip = true;\n    this.focus.emit(this.value);\n  }\n  // THIS METHOD USED FOR  INPUT EVENT .\n  onInput() {\n    this.isValid = this.isFieldValidate();\n    this.input.emit(this.value);\n  }\n  // THIS METHOD USED FOR CHANGE EVENT  .\n  onChangeEv() {\n    this.change.emit(this.value);\n  }\n\n  isFieldValidate(): boolean {\n    if (this.minvalue && !this.maxvalue) {\n      return this.innerValue && (this.innerValue > this.minvalue);\n    } else if (!this.minvalue && this.maxvalue) {\n      return this.innerValue && (this.innerValue < this.maxvalue);\n    } else if (!this.minvalue && !this.maxvalue && this.innerValue) {\n      return true;\n    } else {\n      return this.innerValue && (this.innerValue > this.minvalue && this.innerValue < this.maxvalue);\n    }\n  }\n\n  public validate(c: FormControl) {\n    const isValid: boolean = (!this.allowblank && this.isFieldValidate()) || this.allowblank;\n    return isValid ? null : {\n      jsonParseError: {\n        valid: true,\n      },\n    };\n  }\n}\n","/**\n * Created by pratik on 27/11/17.\n * Update Ketan Gote on 11/2/2018 - Field Label and Data Rendering changes.\n */\n/*\n Component Name : Amexio Radiogroup\n Component Selector :  <amexio-radio-group>\n Component Description : Number input component has been created with different\n configurable attributes for validation (min/max value, allow blank, custom regex),\n custom error message, help, custom styles\n*/\nimport { ChangeDetectorRef, Component, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgModel, Validators } from '@angular/forms';\nimport { CommonDataService } from '../../services/data/common.data.service';\nimport { ValueAccessorBase } from './../../base/value-accessor';\nimport { AmexioFormValidator } from './../form-validator/amexio.form.validator.component';\n\nimport { of } from 'rxjs';\n\nconst noop = () => {\n};\n\n@Component({\n  selector: 'amexio-radio-group',\n  template: `\n    <div class=\"inputgroup from-group\">\n      <div *ngIf=\"fieldlabel\">\n        <label>{{fieldlabel}}</label>\n      </div>\n      <ng-container *ngIf=\"horizontal\">\n        <ng-container *ngFor=\"let rData of data\">\n          <span class=\"input-box-container\" style=\"padding-bottom:0px !important; margin: 5px !important\" (click)=\"onClick(rData)\" \n          [ngClass]=\"{'disable-component' : rData.disabled || disabled}\">{{rData[displayfield]}}\n            <input type=\"radio\" [required]=\"!allowblank\" [name]=\"name\" \n            [value]=\"rData[valuefield]\" [attr.disabled]=\"rData?.disabled ? true: null\"\n              [(ngModel)]=\"value\" [checked]=\"(value === rData[valuefield])\">\n            <span class=\"input-box-radiobox-label\"></span>\n          </span>\n        </ng-container>\n      </ng-container>\n\n      <ng-container *ngIf=\"!horizontal\">\n        <ng-container *ngFor=\"let rData of data\">\n          <div>\n            <span class=\"input-box-container\" style=\"padding-bottom:0px !important\" (click)=\"onClick(rData)\" [ngClass]=\"{'disable-component' : rData.disabled || disabled}\">{{rData[displayfield]}}\n              <input type=\"radio\" [required]=\"!allowblank\" [name]=\"name\" [checked]=\"(value === rData[valuefield])\" required\n                [value]=\"rData[valuefield]\" [attr.disabled]=\"rData?.disabled ? true: null\" [(ngModel)]=\"value\">\n              <span class=\"input-box-radiobox-label\"></span>\n            </span>\n          </div>\n        </ng-container>\n      </ng-container>\n    </div>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AmexioRadioGroupComponent), multi: true,\n  }, {\n    provide: NG_VALIDATORS, useExisting: AmexioRadioGroupComponent, multi: true,\n  }],\n})\n\nexport class AmexioRadioGroupComponent extends ValueAccessorBase<string> implements OnInit, Validators {\n\n  /*\n   Properties\n   name : allow-blank\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Sets if field is required\n   */\n  @Input('allow-blank') allowblank: boolean;\n  /*\n   Properties\n   name :name\n   datatype : string\n   version : 4.0 onwards\n   default : false\n   description :\n   */\n  @Input() name: string;\n\n  /*\n   Properties\n   name : field-label\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : The label of this field\n   */\n  @Input('field-label') fieldlabel: string;\n  /*\n   Properties\n   name : data-reader\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : \tKey in JSON datasource for records\n   */\n  @Input('data-reader') datareader: string;\n  /*\n   Properties\n   name : http-method\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Type of HTTP call, POST,GET.\n   */\n  @Input('http-method') httpmethod: string;\n  /*\n   Properties\n   name : http-url\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : \tREST url for fetching datasource.\n   */\n  @Input('http-url') httpurl: string;\n  /*\n   Properties\n   name : display-field\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Name of key inside response data to display on ui.\n   */\n  @Input('display-field') displayfield: string;\n  /*\n   Properties\n   name : value-field\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Name of key inside response data.use to send to backend\n   */\n  @Input('value-field') valuefield: string;\n  /*\n   Properties\n   name : default-value\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Default Value to be checked\n   */\n  @Input('default-value') defaultSelectedValue = '';\n  /*\n   Properties\n   name : horizontal\n   datatype : boolean\n   version : 4.0 onwards\n   default : false\n   description : Set true for horizontal checkbox\n   */\n  @Input() horizontal: boolean;\n  /*\n   Properties\n   name : data\n   datatype : any\n   version : 4.0 onwards\n   default :\n   description : \tLocal data for radio group.\n   */\n  @Input() data: any[] = [];\n  /*\n   Properties\n   name : disabled\n   datatype : boolean\n   version : 4.0 onwards\n   default : false\n   description : true to disable the field.\n   */\n  @Input() disabled: boolean;\n  /*\n   Events\n   name : onSelection\n   datatype : any\n   version : 4.0 onwards\n   default :\n   description : Fires selection event\n   */\n  @Output() onSelection: any = new EventEmitter<any>();\n\n  isValid: boolean;\n\n  // Placeholders for the callbacks which are later provided\n  // by the Control Value Accessor\n  // private onTouchedCallback: () => void = noop;\n  // private onChangeCallback: (_: any) => void = noop;\n\n  @Output() isComponentValid: any = new EventEmitter<any>();\n\n  viewData: any;\n\n  // The internal dataviews model\n  // private innerValue: any = '';\n\n  constructor(public amxHttp: CommonDataService, private cd: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.name = this.generateName(this.name, this.fieldlabel, 'textinput');\n    if (this.defaultSelectedValue) {\n      this.value = this.defaultSelectedValue;\n    }\n    this.isValid = this.allowblank;\n    this.isComponentValid.emit(this.allowblank);\n    if (this.httpmethod && this.httpurl) {\n      this.amxHttp.fetchData(this.httpurl, this.httpmethod).subscribe((response) => {\n        this.data = this.getResponseData(response);\n      });\n    } else if (this.data != null) {\n      this.data = this.getResponseData(this.data);\n    }\n  }\n\n  checkDefaultValidation(viewData: any) {\n    viewData.forEach((opt: any) => {\n      if (opt[this.valuefield] === this.innerValue || (opt.hasOwnProperty('selected') && opt.selected)) {\n        this.isValid = true;\n        this.isComponentValid.emit(true);\n        return;\n      }\n    });\n  }\n\n  checkSelectedFlag(viewData: any) {\n    viewData.forEach((opt: any) => {\n      if (this.innerValue === '' && (opt.hasOwnProperty('selected') && opt.selected)) {\n        this.value = opt[this.valuefield];\n        return;\n      }\n    });\n  }\n\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      if (dr != null) {\n        for (const ir of dr) {\n          responsedata = responsedata[ir];\n        }\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    this.checkSelectedFlag(responsedata);\n\n    if (!this.allowblank) {\n      this.checkDefaultValidation(responsedata);\n    }\n\n    return responsedata;\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value !== this.innerValue) {\n      this.innerValue = value;\n    }\n  }\n\n  // From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  // get accessor\n  get value(): any {\n    return this.innerValue;\n  }\n\n  // set accessor including call the onchange callback\n  set value(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  onClick(row: any) {\n    this.isValid = true;\n    this.value = row[this.valuefield];\n    this.isComponentValid.emit(true);\n    this.onSelection.emit(row);\n  }\n  // THIS MEHTOD CHECK INPUT IS VALID OR NOT\n  checkValidity(): boolean {\n    return this.isValid;\n  }\n  public validate(c: FormControl) {\n    return ((!this.allowblank && this.value) || this.allowblank) ? null : {\n      jsonParseError: {\n        valid: true,\n      },\n    };\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author -  Pratik Kelwalkar\n *\n */\n/*\n Component Name : Amexio Rating\n Component Selector :  <amexio-rating-input>\n Component Description : A simple configurable rating component with visual feedback.\n*/\nimport { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, forwardRef, HostListener, Input, NgModule, OnInit, Output } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator } from '@angular/forms';\n@Component({\n  selector: 'amexio-rating-input',\n  template: `\n    <div class=\"inputgroup\">\n        <ng-container *ngIf=\"fieldlabel\">\n            <label>\n              {{fieldlabel}}\n            </label>\n        </ng-container>\n\n\n        <div (mouseleave)=\"resetHovered()\" class=\"rating\" [class.disabled]=\"disabled\" [class.readonly]=\"readonly\" tabindex=\"0\" role=\"slider\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"ratingRange.length\" [attr.aria-valuenow]=\"model\">\n            <span *ngFor=\"let item of ratingRange; let index = index\">\n              <em (mouseenter)=\"setHovered(item)\"\n                 (mousemove)=\"changeHovered($event)\"\n                 (click)=\"rate(item)\"\n                 [attr.data-icon]=\"fullicon\"\n                 class=\"{{ iconclass }} half{{ calculateWidth(item) }}\"\n                 [title]=\"titles[index] || item\">{{ emptyicon }}</em>\n          </span>\n        </div>\n    </div>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AmexioRatingComponent),\n    multi: true,\n  },\n  {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => AmexioRatingComponent),\n    multi: true,\n  },\n  ],\n})\nexport class AmexioRatingComponent implements OnInit, ControlValueAccessor, Validator {\n  /*\n  Properties\n  name : icon-class\n  datatype : string\n  version : 4.0 onwards\n  default : star-icon\n  description : Sets if custom icon class is required\n  */\n  @Input('icon-class') iconclass = 'star-icon';\n  /*\n  Properties\n  name : full-icon\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : \tIcon for selected rating .This attribute is useful only\n  when user have custom rating icons.example\n  */\n  @Input('full-icon') fullicon = '★';\n  /*\n  Properties\n  name : empty-icon\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Icon for non-selected rating .This attribute is useful only\n  when user have custom rating icons.example\n  */\n  @Input('empty-icon') emptyicon = '☆';\n  /*\n  Properties\n  name : read-only\n  datatype : boolean\n  version : 4.0 onwards\n  default : false\n  description : If true will not react on any user events.\n  */\n  @Input('read-only') readonly: boolean;\n  /*\n  Properties\n  name : disabled\n  datatype : boolean\n  version : 4.0 onwards\n  default : false\n  description : If true will not react on any user events and show disable icon over\n  */\n  @Input() disabled: boolean;\n  /*\n  Properties\n  name : required\n  datatype : boolean\n  version : 4.0 onwards\n  default : false\n  description : validates the field\n  */\n  @Input() required: boolean;\n  /*\n  Properties\n  name : float\n  datatype : boolean\n  version : 4.0 onwards\n  default :false\n  description :\n  */\n  @Input() float: boolean;\n  /*\n  Properties\n  name : field-label\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : The label of this field\n  */\n  @Input('field-label') fieldlabel: string;\n  /*\n  Properties\n  name : titles\n  datatype : string array\n  version : 4.0 onwards\n  default : 1,2,3..\n  description : Array of titles\n  */\n  @Input() titles: string[] = [];\n  /*\n  Properties\n  name : max\n  datatype : number\n  version : 4.0 onwards\n  default :\n  description : Number of stars for rating component.\n  */\n  @Input()\n  set max(max: number) {\n    this._max = max;\n    this.buildRanges();\n  }\n  get max() {\n    return this._max;\n  }\n  // -------------------------------------------------------------------------\n  // Outputs\n  // -------------------------------------------------------------------------\n  /*\n  Events\n  name : onHover\n  datatype : any\n  version : 4.0 onwards\n  default :\n  description : Fires on hovering component\n  */\n  @Output() onHover = new EventEmitter();\n  /*\n  Events\n  name : onLeave\n  datatype : any\n  version : 4.0 onwards\n  default :\n  description : fires on leaving component and returns its value\n  */\n  @Output() onLeave = new EventEmitter();\n  // -------------------------------------------------------------------------\n  // Public\n  // -------------------------------------------------------------------------\n  model: number;\n  ratingRange: number[];\n  hovered = 0;\n  hoveredPercent: number = undefined;\n  // -------------------------------------------------------------------------\n  // Private\n  // -------------------------------------------------------------------------\n  private _max = 5;\n  private onChange: (m: any) => void;\n  private onTouched: (m: any) => void;\n  // -------------------------------------------------------------------------\n  // Implemented from ControlValueAccessor\n  // -------------------------------------------------------------------------\n  writeValue(value: number): void {\n    this.model = value;\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  // -------------------------------------------------------------------------\n  // Implemented from Va..\n  // -------------------------------------------------------------------------\n  validate(c: AbstractControl) {\n    if (this.required && !c.value) {\n      return {\n        required: true,\n      };\n    }\n    return null;\n  }\n  // -------------------------------------------------------------------------\n  // Lifecycle callbacks\n  // -------------------------------------------------------------------------\n  ngOnInit() {\n    this.buildRanges();\n  }\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n  calculateWidth(item: number) {\n    if (this.hovered > 0) {\n      if (this.hoveredPercent !== undefined && this.hovered === item) {\n        return this.hoveredPercent;\n      } else {\n        return this.hovered >= item ? 100 : 0;\n      }\n    } else {\n      return this.model >= item ? 100 : 100 - Math.round((item - this.model) * 10) * 10;\n    }\n  }\n  setHovered(hovered: number): void {\n    if (!this.readonly && !this.disabled) {\n      this.hovered = hovered;\n      this.onHover.emit(hovered);\n    }\n  }\n  changeHovered(event: MouseEvent): void {\n    if (!this.float) {\n      return;\n    }\n    const target = event.target as HTMLElement;\n    const relativeX = event.pageX - target.offsetLeft;\n    const percent = Math.round((relativeX * 100 / target.offsetWidth) / 10) * 10;\n    this.hoveredPercent = percent > 50 ? 100 : 50;\n  }\n  resetHovered() {\n    this.hovered = 0;\n    this.hoveredPercent = undefined;\n    this.onLeave.emit(this.hovered);\n  }\n  rate(value: number) {\n    if (!this.readonly && !this.disabled && value >= 0 && value <= this.ratingRange.length) {\n      const newValue = this.hoveredPercent ? (value - 1) + this.hoveredPercent / 100 : value;\n      this.model = newValue;\n    }\n  }\n  // -------------------------------------------------------------------------\n  // Private Methods\n  // -------------------------------------------------------------------------\n  private buildRanges() {\n    this.ratingRange = this.range(1, this.max);\n  }\n  private range(start: number, end: number) {\n    const foo: number[] = [];\n    for (let i = start; i <= end; i++) {\n      foo.push(i);\n    }\n    return foo;\n  }\n}\n","/*\nComponent Name : Amexio Text Input\nComponent Selector :  <amexio-text-input>\nComponent Description : Text input component has been created with\ndifferent configurable attributes for validation (min/max length, allow\nblank, custom regex), custom error message, help, custom styles.\n*/\nimport { Component, EventEmitter, forwardRef, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgModel, Validators } from '@angular/forms';\nimport { ValueAccessorBase } from '../../base/value-accessor';\n@Component({\n  selector: 'amexio-text-input',\n  template: `\n    <div class=\"inputgroup\">\n\n        <label *ngIf=\"haslabel\" [style.font-style]=\"fontstyle\" [style.font-family]=\"fontfamily\" [style.font-size]=\"fontsize\">\n          {{fieldlabel}}\n      </label>\n        <input type=\"text\" #inp=\"ngModel\"  class=\"input-control\" [ngClass]=\"inp.touched ? (isValid && inp.touched) ? 'input-control-success' : 'input-control-error' :''\" [(ngModel)]=\"value\" (blur)=\"onBlurEvent()\" (focus)=\"onFocusEvent()\" (input)=\"onInput()\" (change)=\"onChangeEv()\"\n            [name]=\"name\" [pattern]=\"regEx\" [attr.placeholder]=\"placeholder\" [maxlength]=\"maxlength\" [minlength]=\"minlength\" [attr.disabled]=\"disabled ? true: null\" [required]=\"!allowblank\" />\n\n\n        <ng-container *ngIf=\"iconfeedback\">\n            <span class=\"input-control-feedback\">\n              <span *ngIf=\"!isValid && inp.touched\"><em class=\"fa fa-times\"></em></span>\n            <span *ngIf=\"isValid && inp.touched\"><em class=\"fa fa-check\"></em></span>\n            </span>\n        </ng-container>\n\n\n        <span *ngIf=\"showToolTip && enablepopover\" class=\"dropdown tooltiptext\">\n          <div [innerHTML]=\"helpInfoMsg\"></div>\n      </span>\n        <span class=\"inputfieldbar\"></span>\n    </div>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AmexioTextInputComponent), multi: true,\n  }, {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => AmexioTextInputComponent), multi: true,\n  }],\n  encapsulation: ViewEncapsulation.None,\n})\n\nexport class AmexioTextInputComponent extends ValueAccessorBase<string> implements OnInit, Validators {\n\n  /*\n   Properties\n   name : field-label\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : The label of this field\n   */\n  @Input('field-label') fieldlabel: string;\n  /*\nProperties\nname : min-length\ndatatype : number\nversion : 4.0 onwards\ndefault :\ndescription : Minimum length required for textfield\n*/\n  @Input('min-length') minlength: number;\n  /*\nProperties\nname : mac-length\ndatatype : number\nversion : 4.0 onwards\ndefault :\ndescription : Maximum length required for textfield\n*/\n  @Input('max-length') maxlength: number;\n  /*\nProperties\nname : allow-blank\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Sets if field is required\n*/\n  @Input('allow-blank') allowblank: boolean;\n\n  helpInfoMsg: string;\n\n  regEx: RegExp;\n\n  showToolTip: boolean;\n\n  _errormsg: string;\n\n  get errormsg(): string {\n    return this._errormsg;\n  }\n  /*\n Properties\n name : error-msg\n datatype : none\n version : 4.0 onwards\n default : none\n description : Sets the error message\n */\n  @Input('error-msg')\n  set errormsg(value: string) {\n    this.helpInfoMsg = value + '<br/>';\n  }\n\n  _minerrormsg: string;\n\n  get minerrormsg(): string {\n    return this._minerrormsg;\n  }\n  /*\n Properties\n name : min-error-msg\n datatype : string\n version : 4.0 onwards\n default :\n description : Sets the error message for min validation\n */\n  @Input('min-error-msg')\n  set minerrormsg(value: string) {\n    this.helpInfoMsg = this.helpInfoMsg + '<b>Min Length<b/>: ' + value + '<br/>';\n  }\n\n  _maxerrormsg: string;\n\n  get maxerrormsg(): string {\n    return this._maxerrormsg;\n  }\n  /*\n Properties\n name : max-error-msg\n datatype : string\n version : 4.0 onwards\n default :\n description : Sets the error message for max validation\n */\n  @Input('max-error-msg')\n  set maxerrormsg(value: string) {\n    this.helpInfoMsg = this.helpInfoMsg + 'Max Length: ' + value;\n  }\n  /*\nProperties\nname : place-holder\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Show place-holder inside dropdown component\n*/\n  @Input('place-holder') placeholder: string;\n  /*\n Properties\n name : disabled\n datatype : boolean\n version : 4.0 onwards\n default : false\n description : True to disable the field.\n */\n  @Input() disabled: boolean;\n  /*\nProperties\nname : icon-feedback\ndatatype : boolean\nversion : 4.0 onwards\ndefault :false\ndescription :\n*/\n  @Input('icon-feedback') iconfeedback = false;\n  /*\nProperties\nname : font-style\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set font-style to field\n*/\n  @Input('font-style') fontstyle: string;\n  /*\nProperties\nname : font-family\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set font-family to field\n*/\n  @Input('font-family') fontfamily: string;\n  /*\nProperties\nname : font-size\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set font-size to field\n*/\n  @Input('font-size') fontsize: string;\n  /*\nProperties\nname : has-label\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Flag to set label\n*/\n  @Input('has-label') haslabel = true;\n\n  _pattern: string;\n\n  get pattern(): string {\n    return this._pattern;\n  }\n  /*\nProperties\nname : pattern\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Apply Reg-ex to the field\n*/\n  @Input('pattern')\n  set pattern(value: string) {\n    if (value != null) {\n      this._pattern = value;\n      this.regEx = new RegExp(this._pattern);\n    }\n  }\n  /*\n Properties\n name : enable-popover\n datatype : string\n version : 4.0 onwards\n default :\n description : Set enable / disable popover.\n */\n  @Input('enable-popover') enablepopover: boolean;\n\n  isValid = false;\n\n  @ViewChild(NgModel) model: NgModel;\n\n  @Input('name') name: string;\n\n  /*\n Events\n name : onBlur\n datatype : any\n version : 4.0 onwards\n default :\n description : On blur event\n */\n  @Output() onBlur: any = new EventEmitter<any>();\n  /*\nEvents\nname : input\ndatatype : any\nversion : none\ndefault :\ndescription :   On input event field.\n*/\n  @Output() input: any = new EventEmitter<any>();\n  /*\nEvents\nname : focus\ndatatype : any\nversion : none\ndefault :\ndescription : On focus event field.\n*/\n  @Output() focus: any = new EventEmitter<any>();\n  /*\nEvents\nname : change\ndatatype : any\nversion : none\ndefault :\ndescription : On field value change event\n*/\n  @Output() change: any = new EventEmitter<any>();\n  constructor() {\n    super();\n    this.showToolTip = false;\n  }\n\n  ngOnInit() {\n    this.name = this.generateName(this.name, this.fieldlabel, 'textinput');\n  }\n\n  // THIS METHOD USED FOR BLUR EVENT.\n  onBlurEvent() {\n    this.showToolTip = false;\n    this.onBlur.emit(this.value);\n  }\n  // THIS METHOD USED FOR FOCUS EVENT .\n  onFocusEvent() {\n    this.showToolTip = true;\n    this.focus.emit(this.value);\n  }\n  // THIS METHOD USED FOR  INPUT EVENT .\n  onInput() {\n    this.isValid = this.isFieldValid();\n    this.input.emit(this.value);\n  }\n  // THIS METHOD USED FOR CHANGE EVENT  .\n  onChangeEv() {\n    this.change.emit(this.value);\n  }\n\n  isFieldValid(): boolean {\n    let valid: boolean;\n    valid = (!this.allowblank && (this.value && ((this.value.length >= this.minlength) && this.value.length > 0)) ||\n      (!this.minlength && this.value && this.value.length > 0)) || this.allowblank;\n    return valid;\n  }\n  public validate(c: FormControl) {\n    return this.isFieldValid() ? null : {\n      jsonParseError: {\n        valid: true,\n      },\n    };\n}\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Pratik Kelwalkar\n *\n */\n/*\n Component Name : Amexio Toggle\n Component Selector :  <amexio-toggle>\n Component Description : Toggle Button\n*/\nimport {\n  AfterViewInit, Component, EventEmitter, forwardRef, Input, OnInit, Output, ViewEncapsulation,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgModel, Validators } from '@angular/forms';\nimport { AmexioFormValidator } from './../form-validator/amexio.form.validator.component';\n\nconst noop = () => {\n};\n\n@Component({\n  selector: 'amexio-toggle',\n  template: `\n    <div class=\"inputgroup \">\n\n    <label>{{fieldlabel}}</label>\n    <label class=\"toggle\">\n      <input type=\"checkbox\" checked\n             [name]=\"value\"\n             #rangeHndl\n             (blur)=\"onBlur()\"\n             [(ngModel)]=\"value\"\n             (change)=\"onToggle()\">\n      <span class=\"toggle-slider {{shape}}\"></span>\n    </label>\n    </div>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AmexioToggleComponent), multi: true,\n  }, {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => AmexioToggleComponent), multi: true,\n}],\n  encapsulation: ViewEncapsulation.None,\n})\n\nexport class AmexioToggleComponent extends AmexioFormValidator implements OnInit, ControlValueAccessor, Validators {\n  /*\nProperties\nname :shape\ndatatype : string\nversion : 4.0 onwards\ndefault : round\ndescription : Round or Square Shape for toggle switch ,example shape=round,square .\n*/\n  @Input() shape: string;\n  /*\nProperties\nname :field-label\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : The label of this field.\n*/\n  @Input('field-label') fieldlabel: string;\n  /*\n  Events\n  name : onChange\n  datatype : any\n  version : 4.0 onwards\n  default :\n  description : Event is fired on toggle component click\n  */\n  /*\n    Properties\n    name : required\n    datatype : boolean\n    version : 4.0 onwards\n    default : true\n    description : sets if field is required\n  */\n  @Input() required: boolean;\n\n  @Output() onChange: EventEmitter<any> = new EventEmitter<any>();\n\n  isValid: boolean;\n\n  @Output() isComponentValid: any = new EventEmitter<any>();\n\n  // The internal dataviews model\n  private innerValue: any = '';\n\n  // Placeholders for the callbacks which are later provided\n  // by the Control Value Accessor\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (this.shape === '' || this.shape == null) {\n      this.shape = 'round';\n    }\n    this.isValid = !this.required;\n    this.isComponentValid.emit(false);\n  }\n\n  onToggle() {\n    this.isValid = this.value;\n    this.isComponentValid.emit(this.value);\n    this.onChange.emit(this.value);\n  }\n\n  // get accessor\n  get value(): any {\n    return this.innerValue;\n  }\n\n  // set accessor including call the onchange callback\n  set value(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  // Set touched on blur\n  onBlur() {\n    this.onTouchedCallback();\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value && value !== this.innerValue) {\n      this.isValid = value;\n    }\n    if (!value && value !== this.innerValue) {\n      this.isValid = value;\n    }\n    this.innerValue = value;\n  }\n\n  // From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  // THIS MEHTOD CHECK INPUT IS VALID OR NOT\n  checkValidity(): boolean {\n    return this.isValid;\n  }\n\n  public validate(c: FormControl) {\n    return ((this.required && this.value) || !this.required)  ? null : {\n        jsonParseError: {\n            valid: true,\n        },\n    };\n  }\n}\n","/*****\n * Created by pratik on 18/12/17.\n\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n ****/\n\n /*\n Component Name : Amexio image\n Component Selector : <amexio-image>\n Component Description : Amexio image is an artifact that depicts visual\n perception.\n                        It supports icons (font-awesome) / image\n*/\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'amexio-image', template: `\n    <!--Normal image-->\n    <ng-container *ngIf=\"iconclass && (!path && !mda) && overlay || overlayText || titlePara || imgTitle \">\n    <div class=\"img-container\">\n      <ng-container *ngIf=\"path || (path && iconclass)\">\n        <ng-container *ngIf=\"!(width || height)\">\n          <img alt=\"title\" [src]=\"path\" [attr.class]=\"cclass\" (click)=\"onImageClick($event)\" [attr.title]=\"tooltip\">\n          <div *ngIf=\"overlay\" [ngClass]=\"overlayEffect\">\n            <div *ngIf=\"overlayText\" [ngClass]=\"overlayTextClass\">{{overlayText}}\n              <p *ngIf=\"titlePara\">{{titlePara}}</p>\n            </div>\n          </div>\n          <div *ngIf=\"imgTitle\" [ngClass]=\"position\">{{imgTitle}}</div>\n        </ng-container>\n        <ng-container *ngIf=\"width || height\">\n          <img alt=\"title\" [ngStyle]=\"{'width':width,'height':height}\" [attr.class]=\"cclass\" [src]=\"path\" (click)=\"onImageClick($event)\" [attr.title]=\"tooltip\">\n           <div *ngIf=\"overlay\" [ngClass]=\"overlayEffect\">\n            <div *ngIf=\"overlayText\" [ngClass]=\"overlayTextClass\">{{overlayText}}\n              <p *ngIf=\"titlePara\">{{titlePara}}</p>\n            </div>\n          </div>\n          <div *ngIf=\"imgTitle\" [ngClass]=\"position\">{{imgTitle}}</div>\n        </ng-container>\n      </ng-container>\n      </div>\n    </ng-container>\n\n\n\n    <ng-container *ngIf=\"!(iconclass && (!path && !mda) && overlay || overlayText || titlePara || imgTitle )\">\n        <ng-container *ngIf=\"path || (path && iconclass)\">\n        <ng-container *ngIf=\"!(width || height)\">\n        <img alt=\"title\" [src]=\"path\" [attr.class]=\"cclass\" (click)=\"onImageClick($event)\" [attr.title]=\"tooltip\">\n        </ng-container>\n        <ng-container *ngIf=\"width || height\">\n        <img alt=\"title\" [ngStyle]=\"{'width':width,'height':height}\" [attr.class]=\"cclass\" [src]=\"path\" (click)=\"onImageClick($event)\" [attr.title]=\"tooltip\">\n        </ng-container>\n        </ng-container>\n        </ng-container>\n    \n    <!--this is for fontawesome-->\n    <ng-container *ngIf=\"iconclass && (!path && !mda)\">\n      <em [attr.class]=\"iconclass\" [attr.title]=\"tooltip\" (click)=\"onImageClick($event)\"></em>\n      <label class=\"image-title\" *ngIf=\"title\" (click)=\"onImageClick($event)\" style=\"cursor: pointer\">{{title}}</label>\n    </ng-container>\n\n    <!--Material icon-->\n    <ng-container *ngIf=\"(iconclass && mda) && !path\">\n      <em [attr.class]=\"iconclass\" [attr.title]=\"tooltip\" (click)=\"onImageClick($event)\">{{mda}}</em>\n    </ng-container>\n\n    <ng-container *ngIf=\" title && !iconclass\">\n      <span style=\"font-size: medium\">{{title}}</span>\n    </ng-container>\n  `,\n})\n\nexport class AmexioImageComponent implements OnInit {\n\n    /*\nProperties\nname : tooltip\ndatatype :  string\nversion : 4.0 onwards\ndefault :\ndescription : TooltipMessage on image /icon.\n*/\n  @Input() tooltip: string;\n\n   /*\nProperties\nname : title\ndatatype :  string\nversion : 4.0 onwards\ndefault :\ndescription : Title of image\n*/\n  @Input() title: string;\n\n   /*\nProperties\nname : path\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Specifies the URL of an image, This attribute is useful only\nfor images\n*/\n  @Input() path: string;\n\n   /*\nProperties\nname : icon-class\ndatatype :  string\nversion : 4.0 onwards\ndefault :\ndescription : Material icon class name Material i.e icon-class=material-icons\n/ font-awesome i.e icon-class= fa fa-address-book fa-lg\n*/\n  @Input('icon-class') iconclass: string;\n\n   /*\nProperties\nname : c-class\ndatatype :  string\nversion : 4.0 onwards\ndefault :\ndescription : Used for custom style classes\n*/\n  @Input('c-class') cclass = '';\n\n   /*\nProperties\nname : mda\ndatatype :  string\nversion : 4.0 onwards\ndefault :\ndescription : This attribute is useful for only material icons . Material Example mda='cloud'\n\n*/\n  @Input() mda: string;\n\n   /*\nProperties\nname : width\ndatatype :  string\nversion : 4.0 onwards\ndefault :\ndescription : Width of image.\n*/\n  @Input() width: string;\n\n   /*\nProperties\nname : height\ndatatype :  string\nversion : 4.0 onwards\ndefault :\ndescription : Height of image.\n*/\n  @Input() height: string;\n\n   /*\nEvents\nname : onClick\ndatatype :  none\nversion : none\ndefault : none\ndescription : Get image / icon click event.\n*/\n  @Output() onClick: EventEmitter<any> = new EventEmitter<any>();\n\n   /*\nProperties\nname : filter\ndatatype :  string\nversion : 4.1.9 onwards\ndefault :\ndescription : Filter type can be saturate / hue / invert / grayscale / brightness / blur / sepia / shadow / opacity\n\n*/\n  @Input('filter') filter: string;\n\n   /*\nProperties\nname : overlay-effect\ndatatype :  string\nversion : 4.1.9 onwards\ndefault :\ndescription : Overlay-effect can be set fade / box / left / top / bottom /\nright / title\n\n*/\n  @Input('overlay-effect') overlayEffect: string;\n\n   /*\nProperties\nname : overlay-text\ndatatype :  string\nversion : 4.1.9 onwards\ndefault :\ndescription : Overlay-text can be set\n*/\n  @Input('overlay-text') overlayText: string;\n\n   /*\nProperties\nname : image-title\ndatatype :  string\nversion : 4.1.9 onwards\ndefault :\ndescription : Image-title can be set\n*/\n  @Input('image-title') imgTitle: string;\n\n   /*\nProperties\nname : title-position\ndatatype :  string\nversion : 4.1.9 onwards\ndefault : right\ndescription : Overlay-text can be set top-right / bottom-right / bottom-left / top-left / centered\n*/\n  @Input('title-position') position: string;\n\n   /*\nProperties\nname : para\ndatatype :  string\nversion : 4.1.9 onwards\ndefault :\ndescription : Description to display on hover\n*/\n  @Input('para') titlePara: string;\n\n  overlay = false;\n  overlayTextClass: string;\n\n  private imageCss = ' image-';\n\n  private overlayTextCss = 'overlay-text overlay-';\n\n  private textCss = '-text';\n\n  private imgFluidCss = ' img-fluid';\n\n  private overlayOverlayCss = 'overlay overlay-';\n\n  private imageTitleCss   = 'image-title image-';\n\n  private imageTitleBottomCss    = 'image-title image-bottom-right';\n\n  constructor() {\n  }\n\n  onImageClick(event: any) {\n    this.onClick.emit(event);\n  }\n\n  ngOnInit(): void {\n    if (!(this.width || this.height)) {\n      this.cclass = this.cclass + this.imgFluidCss;\n    }\n    if (this.filter) {\n      this.cclass = this.cclass + this.imageCss + this.filter;\n    }\n    if (this.overlayEffect) {\n      this.overlay = true;\n      if (!this.overlayText) {\n        this.overlayText = '';\n      }\n      if (this.overlayText) {\n        this.overlayTextClass = this.overlayTextCss + this.overlayEffect + this.textCss;\n      }\n      this.overlayEffect = this.overlayOverlayCss + this.overlayEffect;\n    }\n    if (this.position && !this.imgTitle) {\n      this.imgTitle = '';\n      }\n    if (this.imgTitle) {\n      if (this.position) {\n        this.position = this.imageTitleCss + this.position;\n      } else {\n        this.position = this.imageTitleBottomCss;\n      }\n    }\n  }\n\n}\n","\nimport { Component, ContentChildren, OnInit, QueryList} from '@angular/core';\nimport { AmexioButtonComponent } from '../../forms/buttons/button.component';\nimport { AmexioCheckBoxGroupComponent } from '../../forms/checkbox-group/checkbox.group.component';\nimport { AmexioCheckBoxComponent } from '../../forms/checkbox/checkbox.component';\nimport { AmexioDropDownComponent } from '../../forms/dropdown/dropdown.component';\nimport { AmexioLabelComponent } from '../../forms/label/label.component';\nimport { AmexioNumberInputComponent } from '../../forms/numberinput/numberinput.component';\nimport { AmexioRadioGroupComponent} from '../../forms/radio/radiogroup.component';\nimport { AmexioRatingComponent } from '../../forms/rating/rating.component';\nimport { AmexioTextInputComponent } from '../../forms/textinput/textinput.component';\nimport { AmexioToggleComponent } from '../../forms/toggle/toggle.component';\nimport { AmexioImageComponent } from '../../media/image/image.component';\n\n@Component({\n  selector: 'amexio-tab-action',\n  template: `\n   <ng-content></ng-content>\n   `,\n})\n\nexport class AmexioTabActionComponent implements OnInit {\n\n  @ContentChildren(AmexioTextInputComponent, { descendants: true }) queryTextinput: QueryList<AmexioTextInputComponent>;\n  textinput: AmexioTextInputComponent[];\n\n  @ContentChildren(AmexioCheckBoxComponent, { descendants: true }) queryCheckbox: QueryList<AmexioCheckBoxComponent>;\n  checkbox: AmexioCheckBoxComponent[];\n\n  @ContentChildren(AmexioRadioGroupComponent, { descendants: true }) queryRadioGroup: QueryList<AmexioRadioGroupComponent>;\n  radioGroup: AmexioRadioGroupComponent[];\n\n  @ContentChildren(AmexioLabelComponent, { descendants: true }) queryLabel: QueryList<AmexioLabelComponent>;\n  label: AmexioLabelComponent[];\n\n  @ContentChildren(AmexioNumberInputComponent, { descendants: true }) queryNumber: QueryList<AmexioNumberInputComponent>;\n  number: AmexioNumberInputComponent[];\n\n  @ContentChildren(AmexioRatingComponent, { descendants: true }) queryRating: QueryList<AmexioRatingComponent>;\n  rating: AmexioRatingComponent[];\n\n  @ContentChildren(AmexioToggleComponent, { descendants: true }) queryToggle: QueryList<AmexioToggleComponent>;\n  toggle: AmexioToggleComponent[];\n\n  @ContentChildren(AmexioButtonComponent, { descendants: true }) queryButton: QueryList<AmexioButtonComponent>;\n  button: AmexioButtonComponent[];\n\n  @ContentChildren(AmexioImageComponent, { descendants: true }) queryImage: QueryList<AmexioImageComponent>;\n  image: AmexioImageComponent[];\n\n  @ContentChildren(AmexioDropDownComponent, { descendants: true }) queryDropDown: QueryList<AmexioDropDownComponent>;\n  dropdown: AmexioDropDownComponent[];\n\n  @ContentChildren(AmexioCheckBoxGroupComponent, { descendants: true }) queryCheckBoxGroup: QueryList<AmexioCheckBoxGroupComponent>;\n  checkboxgroup: AmexioCheckBoxGroupComponent[];\n\n  actionComponent: any;\n\n  showContent: boolean;\n\n  constructor() {\n    this.showContent = false;\n    this.actionComponent = '';\n  }\n\n  ngOnInit() {\n  }\n\n  checkActionComponent() {\n    this.textinput = this.queryTextinput.toArray();\n    if (this.textinput.length > 0) {\n      this.actionComponent = 'text';\n      this.textinput[0].haslabel = false;\n      this.textinput[0].iconfeedback = false;\n    }\n\n    this.checkbox = this.queryCheckbox.toArray();\n    if (this.checkbox.length > 0) {\n      this.actionComponent = 'checkbox';\n      this.checkbox[0].fieldlabel = '';\n    }\n\n    this.radioGroup = this.queryRadioGroup.toArray();\n    if (this.radioGroup.length > 0) {\n      this.actionComponent = 'radiogroup';\n      this.radioGroup[0].fieldlabel = '';\n      this.radioGroup[0].horizontal = true;\n    }\n\n    this.label = this.queryLabel.toArray();\n    if (this.label.length > 0) {\n      this.actionComponent = 'label';\n    }\n\n    this.number = this.queryNumber.toArray();\n    if (this.number.length > 0) {\n      this.actionComponent = 'number';\n      this.number[0].fieldlabel = '';\n    }\n\n    this.rating = this.queryRating.toArray();\n    if (this.rating.length > 0) {\n      this.actionComponent = 'rating';\n      this.rating[0].fieldlabel = '';\n    }\n\n    this.toggle = this.queryToggle.toArray();\n    if (this.toggle.length > 0) {\n      this.actionComponent = 'toggle';\n      this.toggle[0].fieldlabel = '';\n    }\n\n    this.button = this.queryButton.toArray();\n    if (this.button.length > 0) {\n      this.actionComponent = 'button';\n    }\n\n    this.image = this.queryImage.toArray();\n    if (this.image.length > 0) {\n      this.actionComponent = 'image';\n    }\n    this.dropdown = this.queryDropDown.toArray();\n    if (this.dropdown.length > 0) {\n      this.actionComponent = 'dropdown';\n      this.dropdown[0].fieldlabel = '';\n    }\n\n    this.checkboxgroup = this.queryCheckBoxGroup.toArray();\n    if (this.checkboxgroup.length > 0) {\n      this.actionComponent = 'checkboxgroup';\n      this.checkboxgroup[0].fieldlabel = '';\n      this.checkboxgroup[0].horizontal = true;\n    }\n  }\n\n}\n","/**\n * Created by ketangote on 12/1/17.\n */\n\n/*\n Component Name : Amexio Tab\n Component Selector : <amexio-tab-view>\n Component Description : Tab component for Angular Apps with multiple configurations such as Tab, Icon support,\n Closable tabs, Amexio-color, Tab Position at top/bottom/ Tab\n\n */\nimport {\n  AfterContentInit, AfterViewInit, Component, ComponentFactoryResolver, ContentChildren, ElementRef, EventEmitter,\n  HostListener, Input, OnDestroy, OnInit, Output, QueryList, Renderer2, ViewChild, ViewContainerRef,\n} from '@angular/core';\nimport { AmexioTabActionComponent } from './tab.action';\nimport { AmexioTabPillComponent } from './tab.pill.component';\n\nexport const TOP_COMPONENT_CLASS_MAP: any = {\n  red: 'amexio-top-tab-red',\n  green: 'amexio-top-tab-green',\n  purple: 'amexio-top-tab-purple',\n  blue: 'amexio-top-tab-blue',\n  brown: 'amexio-top-tab-brown',\n  yellow: 'amexio-top-tab-yellow',\n  black: 'amexio-top-tab-black',\n  pink: 'amexio-top-tab-pink',\n  orange: 'amexio-top-tab-orange',\n};\n\nexport const BOTTOM_COMPONENT_CLASS_MAP: any = {\n  red: 'amexio-bottom-tab-red',\n  green: 'amexio-bottom-tab-green',\n  purple: 'amexio-bottom-tab-purple',\n  blue: 'amexio-bottom-tab-blue',\n  brown: 'amexio-bottom-tab-brown',\n  yellow: 'amexio-bottom-tab-yellow',\n  black: 'amexio-bottom-tab-black',\n  pink: 'amexio-bottom-tab-pink',\n  orange: 'amexio-bottom-tab-orange',\n};\n\n@Component({\n  selector: 'amexio-tab-view',\n  template: `\n    <div class=\"tabwrapper\">\n      <div *ngIf=\"showprev\" [ngClass]=\"{'tabnavigation float-right tabnavigation-bottom-left':tabPosition=='bottom', 'tabnavigation float-left':tabPosition=='top'}\" (click)=\"previous()\">\n        <amexio-pane-icon key=\"tab_previous\"></amexio-pane-icon>\n      </div>\n      <div *ngIf=\"shownext\" [ngClass]=\"{'tabnavigation float-right tabnavigation-bottom-right':tabPosition=='bottom','tabnavigation float-right':tabPosition=='top'}\" (click)=\"next()\">\n        <amexio-pane-icon key=\"tab_next\"></amexio-pane-icon>\n      </div>\n\n      <div #tab class=\"tab\" [ngClass]=\"{'bottomTab':tabPosition == 'bottom'}\">\n\n        <div #tabslist class=\"tablistitems {{tabPositionClass}}\">\n          <!-- HEADER -->\n\n          <div class=\"tablink\" style=\"padding-bottom:0%\" *ngIf=\"(this.action == true || header) && (fullPageTabs == false)\">\n            <div class=\"table\">\n              <div class=\"tablerow\">\n                <div class=\"tablecol\">\n                  {{header}}\n                </div>\n                <div class=\"tablecol\">\n                  <ng-content select=\"amexio-tab-action\"></ng-content>\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n\n          <div>\n            <div *ngFor=\"let tabnode of tabCollection\" class=\"tablink {{tabnode.amexiocolor+ ' '+tabnode.tabPillClass}}\" [style.width.px]=\"singleTabWidth\"\n                 (click)=\"onTabClick(tabnode)\" (contextmenu)=\"loadContextMenu($event,tabnode, tab)\">\n              <div class=\"table\">\n                <div class=\"tablerow\">\n                  <div *ngIf=\"tabnode.icon\" class=\"tablecol\">\n                    <amexio-pane-icon *ngIf=\"tabnode.icon\" [customclass]=\"tabnode.icon\"></amexio-pane-icon>\n                  </div>\n                  <div class=\"tablecol\">\n                    {{tabnode.title}}\n                  </div>\n                  <div *ngIf=\"tabnode.closable\" class=\"tablecol\">\n                    <amexio-pane-icon key=\"tab_close\" (onClick)=\"closeTab(tabnode)\"></amexio-pane-icon>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"tabcontent\" [attr.id]=\"componentId\" [ngStyle]=\"{'height.px' : height,'overflow-y' : height!= null ? 'auto' : '','min-height.px' : minHeight}\" >\n      <ng-content></ng-content>\n      <ng-template #target></ng-template>\n    </div>\n\n    <span [ngStyle]=\"contextStyle\">\n      <ul *ngIf=\"contextMenuFlag\" class=\"context-menu-list\" [ngClass]=\"{'dropdown-up' : posixUp}\">\n        <li (click)=\"onContextNodeClick(itemConfig)\" class=\"context-menu-list-items\" [ngStyle]=\"{'cursor': itemConfig.disabled ? 'not-allowed':'pointer'}\" [ngClass]=\"{'context-menu-separator':itemConfig.seperator}\"\n            *ngFor=\"let itemConfig of contextmenu\">\n          <em [ngStyle]=\"{'padding-left': itemConfig.icon ? '5px':'19px'}\" [ngClass]=\"itemConfig.icon\"></em>\n          <span style=\"white-space: nowrap;display: inline ; padding-left:5px\">{{itemConfig.text}}\n          </span>\n        </li>\n      </ul>\n    </span>\n  `,\n})\nexport class AmexioTabComponent implements AfterContentInit, AfterViewInit, OnInit, OnDestroy {\n\n  /*\n   Properties\n   name : closable\n   datatype : boolean\n   version : 4.0 onwards\n   default : false\n   description : This flag will make tab closable.\n   */\n  @Input() closable: boolean;\n\n  /*\n   Properties\n   name : header-align\n   datatype : string\n   version : 4.1.9 onwards\n   default : left\n   description : specify position of tabs(left/right/center).\n   */\n  @Input('header-align') headeralign: string;\n\n  /*\n   Properties\n   name : action\n   datatype : string\n   version : 4.1.9 onwards\n   default : left\n   description : This flag ensures the action component.\n   */\n  @Input() action: boolean;\n\n  /*\n   Properties\n   name : action-type-align\n   datatype : string\n   version : 4.1.9 onwards\n   default : left\n   description : specify position of action type(left/right).\n   */\n  @Input('action-type-align') typeActionAlign: string;\n\n  /*\n   Properties\n   name : divide-header-equally\n   datatype : boolean\n   version : 4.1.9 onwards\n   default : false\n   description : If \"true\" divides all tab equally.\n   */\n  @Input('divide-header-equally') fullPageTabs: boolean;\n\n  /*\n   Properties\n   name :tab-position\n   datatype : string\n   version : 4.1.9 onwards\n   default : top\n   description : Position of tab can be (top/bottom)\n   */\n  @Input('tab-position') tabPosition: string;\n\n  /*\n   Properties\n   name : header\n   datatype : string\n   version : 4.1.9 onwards\n   default : none\n   description : Header for Tab.\n   */\n  @Input() header: string;\n\n  height: any;\n\n  minHeight: any;\n\n  /*\n   Properties\n   name : body-height\n   datatype :   any\n   version : 4.2 onwards\n   default :\n   description : Provides form body height.\n   */\n  @Input('body-height') bodyheight: any;\n\n  /*\n   Properties\n   name :  context-menu\n   datatype : string\n   version : 5.0.1 onwards\n   default :\n   description : Context Menu provides the list of menus on right click.\n   */\n  @Input('context-menu') contextmenu: any[] = [];\n\n  /*\n   Properties\n   name : default-context-menu\n   datatype : boolean\n   version : 5.0.1 onwards\n   default : false\n   description : If \"true\" add two context menus i.e close All and close Others tabs.\n   */\n  @Input('default-context-menu') defaultContextMenu: boolean;\n\n  /*\n   Events\n   name : rightClick\n   datatype : none\n   version : 5.0.1\n   default : none\n   description : It will gives you row clicked data.\n   */\n  @Output() rightClick: any = new EventEmitter<any>();\n\n  @ViewChild('tab', { read: ElementRef }) public tabs: ElementRef;\n  @ViewChild('tabAction', { read: ElementRef }) public tabAction: ElementRef;\n  @ViewChild('headerWidth', { read: ElementRef }) public headerWidth: ElementRef;\n  @ViewChild('headerName', { read: ElementRef }) public headerName: ElementRef;\n  @ViewChild('tabslist', { read: ElementRef }) public tabslist: ElementRef;\n  @ViewChild('actionProperty', { read: ElementRef }) public actionProperty: ElementRef;\n\n  @ContentChildren(AmexioTabPillComponent) queryTabs: QueryList<AmexioTabPillComponent>;\n  tabCollection: AmexioTabPillComponent[];\n  @ViewChild('target', { read: ViewContainerRef }) target: any;\n\n  @ContentChildren(AmexioTabActionComponent, { descendants: true }) queryAction: QueryList<AmexioTabActionComponent>;\n\n  /*\n   Events\n   name : onClick\n   datatype : none\n   version : none\n   default : none\n   description : Callback to invoke on activated tab event.\n   */\n  @Output() onClick: any = new EventEmitter<any>();\n\n  /* for internal purpose .*/\n  _tabLocalData: any;\n  componentLoaded: boolean;\n  @Input('tabLocalData')\n  set tabLocalData(value: any) {\n    this._tabLocalData = value;\n    if (this.componentLoaded) {\n      this.updateTabComponent();\n    }\n  }\n  get tabLocalData(): any {\n    return this._tabLocalData;\n  }\n\n  tabPreviewData: any;\n\n  showprev = false;\n\n  private tabWidth1: number;\n  private totalTabs: number;\n\n  shownext = false;\n\n  content: string;\n\n  widthTabs: any;\n\n  headWidth: any;\n\n  singleTabWidth: any;\n\n  actionComp: any;\n\n  mouseLocation: { left: number; top: number } = { left: 0, top: 0 };\n\n  contextMenuFlag: boolean;\n\n  posixUp: boolean;\n\n  rightClickRowData: any;\n\n  private closeOthersConst = 'Close Others';\n\n  contextStyle: any;\n\n  dummyArray: any[] = [];\n\n  tabPositionClass = '';\n\n  componentId = '';\n\n  map = new Map<any, any>();\n\n  globalClickListenFunc: () => void;\n\n  constructor(\n    public render: Renderer2, private componentFactoryResolver: ComponentFactoryResolver,\n    private renderer: Renderer2,\n  ) {\n    this.headeralign = 'left';\n    this.typeActionAlign = 'left';\n    this.tabPosition = 'top';\n    this.fullPageTabs = false;\n    this.action = false;\n  }\n  ngOnInit() {\n    this.componentLoaded = true;\n    this.componentId = Math.floor(Math.random() * 90000) + 10000 + '_tabc';\n  }\n\n  updateTabComponent() {\n    if (this.tabs.nativeElement.scrollWidth > this.tabs.nativeElement.clientWidth) {\n      this.headeralign = 'left';\n    }\n    this.adjustWidth();\n\n    if (this.tabs && this.tabs.nativeElement\n      && this.headerWidth && this.headerWidth.nativeElement\n      && this.tabAction && this.tabAction.nativeElement\n      && this.tabWidth1 !== this.tabs.nativeElement.offsetWidth) {\n      this.headWidth = (this.tabAction.nativeElement.scrollWidth + this.headerWidth.nativeElement.scrollWidth);\n      this.widthTabs = this.tabs.nativeElement.offsetWidth - this.headWidth;\n    }\n\n    if (JSON.stringify(this.tabPreviewData) !== JSON.stringify(this.tabLocalData)) {\n      this.tabPreviewData = JSON.parse(JSON.stringify(this.tabLocalData));\n      this.tabCollection = this.tabLocalData;\n    }\n    this.tabPositionClass = this.findTabStyleClass();\n  }\n\n  ngAfterViewInit() {\n    this.tabWidth1 = this.tabs.nativeElement.offsetWidth;\n    this.totalTabs = this.tabCollection.length;\n    setTimeout(() => {\n      this.updateTabComponent();\n    }, 500);\n  }\n\n  adjustWidth() {\n    const tWidth = this.tabs.nativeElement.clientWidth;\n    const tlistWidth = this.tabslist.nativeElement.scrollWidth;\n    const hWidth = 0;\n    const totalElWidth = tlistWidth + hWidth;\n\n    if (totalElWidth > tWidth) {\n      this.shownext = true;\n    } else {\n      this.shownext = false;\n    }\n\n    if (this.fullPageTabs === true) {\n      if (totalElWidth > tWidth && this.fullPageTabs) {\n        this.shownext = true;\n      } else {\n        this.singleTabWidth = totalElWidth / this.totalTabs;\n      }\n    }\n    this.onAdjustHeight();\n  }\n\n  ngAfterContentInit() {\n    if (this.tabLocalData && this.tabLocalData.length > 0) {\n      this.tabPreviewData = JSON.parse(JSON.stringify(this.tabLocalData));\n      this.tabCollection = this.tabLocalData;\n    } else {\n      this.tabCollection = [];\n      this.tabCollection = this.queryTabs.toArray();\n    }\n\n    this.tabNodeProperties();\n\n    // To add action in tab\n    this.actionComp = this.queryAction.toArray();\n    if (this.actionComp.length > 0) {\n      this.actionComp[0].checkActionComponent();\n    }\n\n    this.tabPositionClass =  this.findTabStyleClass();\n\n  }\n\n  addDynamicTab(title: string, amexiocolor: string, closable: boolean, component: any) {\n    // get a component factory for our TabComponent\n    const tpCF = this.componentFactoryResolver.resolveComponentFactory(\n      AmexioTabPillComponent,\n    );\n    const tp = this.target.createComponent(tpCF);\n    // set the according properties on our component instance\n    const instance: AmexioTabPillComponent = tp.instance as AmexioTabPillComponent;\n    instance.title = title;\n    instance.active = true;\n    instance.closable = closable;\n    instance['tabpillinstance'] = this.target;\n    if (instance.amexiocolor === '') {\n      instance.amexiocolor = 'amexio-top-tab-black';\n    } else {\n      instance.amexiocolor = 'amexio-top-tab-' + amexiocolor;\n    }\n    // create dynamic component\n    const dynCF = this.componentFactoryResolver.resolveComponentFactory(\n      component,\n    );\n    const dynCmp = tp.instance.target.createComponent(dynCF);\n\n    // Push new tab and select it.\n    this.dummyArray.push(tp);\n    this.tabCollection.push(tp.instance);\n    this.selectTab(tp.instance);\n    this.adjustWidth();\n    return dynCmp.instance;\n  }\n\n  // Method to close all tab\n  closeAllTabs() {\n    this.tabCollection.forEach((tabs) => {\n      if (tabs.closable === true || this.closable === true) {\n        this.closeTab(tabs);\n      }\n    });\n  }\n\n  closeTabs(data: any) {\n    const tabList: any[] = [];\n    this.tabCollection.forEach((tabs) => {\n      tabs.active = false;\n      data.forEach((opt: any) => {\n        if (opt.toLowerCase() !== tabs.title.toLowerCase() && (tabs.closable === true || this.closable === true)) {\n          this.closeTab(tabs);\n        } else {\n          tabList.push(tabs);\n          this.asignTabPillClass(tabs);\n        }\n      });\n\n    });\n    tabList[tabList.length - 1].active = true;\n    this.asignTabPillClass(tabList[tabList.length - 1]);\n\n  }\n\n  // Method to set active tab on the basis of tab sequence or tab title\n  setActiveTab(input: any) {\n    let flag = false;\n    if (typeof input === 'string') {\n      this.tabCollection.forEach((tabs: any) => {\n        tabs.tabPillClass = '';\n        if (input.trim().toLowerCase() === tabs.title.trim().toLowerCase()) {\n          tabs.active = true;\n          flag = true;\n        } else {\n          tabs.active = false;\n        }\n        this.asignTabPillClass(tabs);\n      });\n    } else if (typeof input === 'number') {\n      this.tabCollection.forEach((tabs: any, index: number) => {\n        tabs.tabPillClass = '';\n        if (index + 1 === input) {\n          tabs.active = true;\n          flag = true;\n        } else {\n          tabs.active = false;\n\n        }\n        this.asignTabPillClass(tabs);\n      });\n    }\n    return flag;\n\n  }\n\n  setDisableTabs(disabledTabInput: any[]) {\n    const flag = false;\n    if (disabledTabInput.length > 0) {\n      disabledTabInput.forEach((ele: any) => {\n        if (typeof ele === 'string') {\n      this.disableTabByString(flag, ele);\n        } else if (typeof ele === 'number') {\n        this.disableTabByNumber(flag, ele);\n        }\n      });\n    }\n    return flag;\n  }\n\n  disableTabByString(flag: boolean, ele: string) {\n    this.tabCollection.forEach((tabs: any) => {\n      tabs.tabPillClass = '';\n      if (ele.trim().toLowerCase() === tabs.title.trim().toLowerCase()) {\n        tabs.disabled = true;\n        flag = true;\n      }\n      this.asignTabPillClass(tabs);\n    });\n  }\n\n  disableTabByNumber(flag: boolean, ele: number) {\n    this.tabCollection.forEach((tabs: any, index: number) => {\n      tabs.tabPillClass = '';\n      if (index + 1 === ele) {\n        tabs.active = true;\n        flag = true;\n      } else {\n        tabs.active = false;\n      }\n      this.asignTabPillClass(tabs);\n    });\n  }\n  setEnableTabs(disabledTabInput: any[]) {\n    const flag = false;\n    if (disabledTabInput.length > 0) {\n      disabledTabInput.forEach((ele: any) => {\n        if (typeof ele === 'string') {\n        this.enableTabByString(flag, ele);\n        } else if (typeof ele === 'number') {\n          this.enableTabByNumber(flag, ele);\n        }\n      });\n    }\n\n    return flag;\n  }\n\n  enableTabByString(flag: boolean, ele: string) {\n    this.tabCollection.forEach((tabs: any) => {\n      tabs.tabPillClass = '';\n      if (ele.trim().toLowerCase() === tabs.title.trim().toLowerCase()) {\n        tabs.disabled = false;\n        flag = true;\n      }\n      this.asignTabPillClass(tabs);\n    });\n  }\n\n  enableTabByNumber(flag: boolean, ele: number) {\n    this.tabCollection.forEach((tabs: any, index: number) => {\n      tabs.tabPillClass = '';\n      if (index + 1 === ele) {\n        tabs.disabled = false;\n        flag = true;\n      }\n      this.asignTabPillClass(tabs);\n    });\n  }\n\n  selectTab(tab: AmexioTabPillComponent) {\n    // deactivate all tabs\n    this.tabCollection.forEach((tab1: any) => {\n      tab1.active = false;\n    });\n    tab.active = true;\n    this.tabCollection.forEach((tab1: any) => {\n      this.asignTabPillClass(tab1);\n    });\n  }\n  tabNodeProperties() {\n\n    const tabWidth = this.tabCollection.length;\n    for (let i = 0; i < tabWidth; i++) {\n      if (this.tabPosition === 'top') {\n        this.tabCollection[i].amexiocolor = TOP_COMPONENT_CLASS_MAP[this.tabCollection[i].amexiocolor];\n      } else {\n        this.tabCollection[i].amexiocolor = BOTTOM_COMPONENT_CLASS_MAP[this.tabCollection[i].amexiocolor];\n      }\n      if (this.closable) {\n        if (this.tabCollection[i].closable === null || this.tabCollection[i].closable === true) {\n          this.tabCollection[i].closable = true;\n        } else if (this.tabCollection[i].closable === false) {\n          this.tabCollection[i].closable = false;\n        }\n      }\n      this.asignTabPillClass(this.tabCollection[i]);\n    }\n  }\n\n  onTabClick(tab: any) {\n    if (!tab.disabled && !tab.header) {\n      for (const i of this.tabCollection) {\n        if (i === tab) {\n          i['active'] = true;\n          this.asignTabPillClass(tab);\n          this.onClick.emit(tab);\n        } else {\n          i['active'] = false;\n          i['tabPillClass'] = '';\n        }\n      }\n      this.tabCollection.forEach((tab1: any) => {\n        this.asignTabPillClass(tab1);\n      });\n    }\n  }\n\n  next() {\n    const nxt = this.tabs.nativeElement;\n    nxt.scrollLeft = nxt.scrollLeft + 200;\n\n    if ((nxt.scrollWidth - nxt.offsetWidth - nxt.scrollLeft) <= 0) {\n      this.shownext = false;\n    }\n    this.showprev = true;\n  }\n\n  previous() {\n    const prev = this.tabs.nativeElement;\n    prev.scrollLeft = prev.scrollLeft - 200;\n\n    if (prev.scrollLeft === 0) {\n      this.showprev = false;\n    }\n    this.shownext = true;\n  }\n\n  closeTab(tabNode: AmexioTabPillComponent) {\n    const newTab: AmexioTabPillComponent[] = [];\n    let index = 0;\n    let tabHighlightIndex = 0;\n\n    this.tabCollection.forEach((tab: any, i: number) => {\n      tab.active = false;\n      if (tab.tabId === tabNode.tabId) {\n        tabHighlightIndex = index;\n        if (tab.hasOwnProperty('tabpillinstance')) {\n          tab.target.remove();\n        } else {\n          const removeNode = document.getElementById(tab.tabId).parentNode;\n          const parentRefNode = removeNode.parentNode;\n          parentRefNode.removeChild(removeNode);\n        }\n      } else if (tab.tabId !== tabNode.tabId) {\n        newTab.push(tab);\n      }\n      index++;\n    });\n\n    if (tabHighlightIndex === newTab.length) {\n      tabHighlightIndex--;\n    }\n    this.tabCollection = newTab;\n    if (tabHighlightIndex > -1) {\n      this.activateTab(newTab[tabHighlightIndex].tabId);\n    } else {\n      this.activateTab(null);\n    }\n    if (this.tabCollection.length === 1) {\n      this.closable = false;\n    }\n    if (newTab.length === 1) {\n      newTab[0].closable = false;\n    }\n  }\n  activateTab(tabId: number) {\n    if (tabId !== null) {\n      this.tabCollection.forEach((tab) => {\n        tab.active = false;\n        if (tab.tabId === tabId) {\n          tab.active = true;\n        }\n        this.asignTabPillClass(tab);\n      });\n    }\n  }\n\n  asignTabPillClass(tabData: any) {\n    tabData.tabPillClass = '';\n    if ((!tabData.amexiocolor || tabData.amexiocolor === '') && tabData.active && (this.tabPosition === 'top')) {\n      tabData.tabPillClass = 'activetab';\n    }\n    if ((!tabData.amexiocolor || tabData.amexiocolor === '') && (this.tabPosition === 'bottom') && tabData.active) {\n      tabData.tabPillClass = 'bottomActivetab';\n    }\n    if (tabData.disabled) {\n      tabData.tabPillClass = 'disabled-tab';\n    }\n    if ((tabData.amexiocolor !== '') && (this.tabPosition === 'top') && tabData.active) {\n      tabData.tabPillClass = 'activecolortab';\n    }\n    if ((tabData.amexiocolor !== '') && (this.tabPosition === 'bottom') && tabData.active) {\n      tabData.tabPillClass = 'activebottomcolortab';\n    }\n  }\n\n  findTabStyleClass() {\n    if (this.headeralign === 'right' && !this.fullPageTabs) {\n      return 'tabposition-right';\n    }\n    if (this.headeralign === 'left' && !this.fullPageTabs) {\n      return 'tabposition-left';\n    }\n    if (this.fullPageTabs === true) {\n      return 'equally-align-tabs';\n    }\n  }\n\n  onAdjustHeight() {\n\n    if (this.bodyheight) {\n      let h = (window.innerHeight / 100) * this.bodyheight;\n\n      if (this.tabs && this.tabs.nativeElement && this.tabs.nativeElement.offsetHeight) {\n        h = h - this.tabs.nativeElement.offsetHeight;\n      }\n      if (this.bodyheight === 100) {\n        h = h - 40;\n      }\n      this.minHeight = h;\n      this.height = h;\n    }\n  }\n\n  loadContextMenu(event: any, row: any, id: any) {\n    this.tempSelectedFlag(this.tabCollection);\n    this.mouseLocation.left = event.clientX;\n    this.mouseLocation.top = event.clientY;\n    row.active = true;\n    this.getContextMenu();\n    this.posixUp = this.getListPosition(id);\n    event.preventDefault();\n    event.stopPropagation();\n    this.rightClickRowData = row;\n    this.contextStyle = this.getContextMenuStyle();\n  }\n\n  tempSelectedFlag(tabs: any) {\n    tabs.forEach((tab: any) => {\n      if (tab.active) {\n        tab.active = false;\n      }\n    });\n  }\n\n  getContextMenu() {\n    if (this.defaultContextMenu) {\n      const obj = { text: 'Close All', icon: 'fa fa-close', disable: false };\n      const obj2 = { text: this.closeOthersConst, icon: 'fa fa-close', seperator: false, disabled: false };\n      let tmpflag = true;\n      for (const i of this.contextmenu) {\n        if (i.text === 'Close All' || i.text === this.closeOthersConst) {\n          tmpflag = false;\n        }\n      }\n      if (tmpflag) {\n        this.contextmenu.push(obj, obj2);\n      }\n      this.contextMenuFlag = true;\n      this.addListner();\n    } else if (this.contextmenu && this.contextmenu.length > 0) {\n      this.contextMenuFlag = true;\n      this.addListner();\n    }\n  }\n\n  getContextMenuStyle() {\n    return {\n      'cursor': 'default',\n      'position': 'fixed',\n      'display': this.contextMenuFlag ? 'block' : 'none',\n      'left': this.mouseLocation.left + 'px',\n      'top': this.mouseLocation.top + 'px',\n      'box-shadow': '1px 1px 2px #000000',\n      'width': '15%',\n    };\n  }\n\n  getListPosition(elementRef: any) {\n    const height = 240;\n    if ((window.screen.height - elementRef.getBoundingClientRect().bottom) < height) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  onContextNodeClick(itemConfig: any) {\n    let temptab;\n    this.tabCollection.forEach((obj) => {\n      if (obj.active) {\n        temptab = obj;\n      }\n    });\n    if (itemConfig.active) {\n      temptab = itemConfig;\n    }\n    if (!itemConfig.disabled) {\n      const obj = {\n        menuData: itemConfig,\n        rowData: this.rightClickRowData,\n      };\n      if (itemConfig.text === 'Close All') {\n        this.closeAllTabs();\n      }\n      if (itemConfig.text === this.closeOthersConst) {\n        this.closeOtherTabs(temptab);\n      }\n      this.contextMenuFlag = false;\n      this.removeListner();\n      this.rightClick.emit(obj);\n    }\n  }\n\n  closeOtherTabs(data: any) {\n    this.tabCollection.forEach((tabs) => {\n      if (data.title.toLowerCase() !== tabs.title.toLowerCase() && (tabs.closable === true || this.closable === true)) {\n        this.closeTab(tabs);\n      }\n    });\n  }\n\n  addListner() {\n    this.globalClickListenFunc = this.renderer.listen('document', 'click', (e: any) => {\n      this.contextMenuFlag = false;\n      if (!this.contextMenuFlag) {\n        this.removeListner();\n      }\n    });\n  }\n\n  removeListner() {\n    if (this.globalClickListenFunc) {\n      this.globalClickListenFunc();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.removeListner();\n  }\n}\n","/**\n * Created by ketangote on 12/1/17.\n */\n\n/*\nComponent Name : Amexio Accordion\nComponent Selector : <amexio-accordion>\nComponent Description : Amexio Accordion provides an easy way to organize big\nforms by grouping the fields in accordion tabs.\n\n*/\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { AmexioTabPillComponent } from '../tab.pill.component';\n\n@Component({\n  selector: 'amexio-vertical-tab-view',\n  template: `\n    <div class=\"vertical-table\">\n      <div class=\"vertical-tablerow\">\n        <div class=\"vertical-tablecol verticalalign-tableft\">\n          <div class=\"verticalnavtab verticalnavtab-left \">\n            <ul>\n              <li *ngFor=\"let tabnode of tabCollection\">\n                <div class=\"defaultnode\" [ngClass]=\"{'leftactivetab':tabnode.active,'disabled-tab':tabnode.disabled }\" (click)=\"onTabClick(tabnode)\">\n                  <span *ngIf=\"tabnode.icon\" [ngClass]=\"tabnode.icon\" style=\"padding-right:8px\"  aria-hidden=\"true\"></span>\n                  <span>{{tabnode.title}}</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div class=\"vertical-tablecol verticalalign-tabcontent\">\n          <div class=\"tabcontent\">\n            <ng-content></ng-content>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class AmexioVerticalTabComponent implements AfterContentInit, AfterViewInit, OnInit {\n\n  @ViewChild('tab', { read: ElementRef }) public tabs: ElementRef;\n\n  @ContentChildren(AmexioTabPillComponent) queryTabs: QueryList<AmexioTabPillComponent>;\n\n  /*\nEvents\nname : onClick\ndatatype : none\nversion : 4.0 onwards\ndefault :none\ndescription : Callback to invoke on activated tab event.\n*/\n  @Output() onClick: any = new EventEmitter<any>();\n\n  tabCollection: AmexioTabPillComponent[];\n\n  content: string;\n\n  constructor(public render: Renderer2) {\n  }\n\n  ngOnInit() {\n\n  }\n\n  ngAfterViewInit() {\n  }\n\n  ngAfterContentInit() {\n    this.tabCollection = this.queryTabs.toArray();\n  }\n\n  onTabClick(tab: any) {\n    if (!tab.disabled) {\n      for (const i of this.tabCollection) {\n        if (i === tab) {\n          i['active'] = true;\n          this.onClick.emit(tab);\n        } else {\n          i['active'] = false;\n        }\n      }\n    }\n  }\n\n  closeTab(tabNode: AmexioTabPillComponent) {\n    const newTab: AmexioTabPillComponent[] = [];\n    let index = 0;\n    let tabHighlightIndex = 0;\n\n    this.tabCollection.forEach((tab) => {\n      tab.active = false;\n      if (tab.tabId === tabNode.tabId) {\n        tabHighlightIndex = index;\n      }\n      if (tab.tabId !== tabNode.tabId) {\n        newTab.push(tab);\n      }\n      index++;\n    });\n\n    if (tabHighlightIndex === newTab.length) {\n      tabHighlightIndex--;\n    }\n    this.activateTab(newTab[tabHighlightIndex].tabId);\n    this.tabCollection = newTab;\n  }\n\n  activateTab(tabId: number) {\n    this.tabCollection.forEach((tab) => {\n      tab.active = false;\n    });\n  }\n}\n","import { Component, ContentChildren, EventEmitter, HostBinding, Input, OnInit, Output, QueryList, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'amexio-timeline-event',\n  template: `<div class=\"timeline-badge \" [ngClass]=\"{'timeline-badge-center': (alignment === 'center')\n  , 'timeline-badge-left': (alignment === 'right')\n  , 'timeline-badge-right': (alignment === 'left')}\">\n<amexio-pane-icon [customclass]=\"icon\"></amexio-pane-icon>\n</div>\n<div class=\"timeline-panel\" [ngClass]=\"{'timeline-panel-border':contentborder,\n 'timeline-panel-float-right': (contentalignment == 'right'),\n 'timeline-panel-float-left': (contentalignment == 'left'),\n 'timeline-panel-center': (alignment === 'center'),\n 'timeline-panel-right': (alignment === 'right'),\n 'timeline-panel-left': (alignment === 'left')}\">\n<div *ngIf=\"label\"><b>{{label}}</b></div>\n<ng-content></ng-content>\n</div>`,\n})\nexport class AmexiotimelineeventComponent {\n  @HostBinding('attr.class') timelineclass = 'timeline-item';\n  /*\nProperties\nname :label\ndatatype :string\nversion : 4.2onwards\ndefault :\ndescription : This will specify the label in timeline.\n*/\n  @Input('label') label: string;\n\n  /*\nProperties\nname :icon\ndatatype :string\nversion : 4.2onwards\ndefault :\ndescription : This will specify the label in timeline.\n*/\n  @Input('icon') icon: string;\n  /*\n  Properties\n  name :contentborder\n  datatype :string\n  version : 4.2onwards\n  default : false\n  description : This will specify the content border in timeline.\n  */\n  @Input('content-border') contentborder = true;\n\n  @Input('content-alignment') contentalignment: string;\n\n  alignment = 'center';\n\n  constructor() {\n  }\n\n}\n","import { AmexiotimelineeventComponent } from './amexiotimelineevent.component';\n\nexport class AmexioTimeLineModel {\n    timelineevents: AmexiotimelineeventComponent[];\n\n    contentalignment: string;\n\n    alignment: string;\n    constructor(timelineevents: AmexiotimelineeventComponent[], contentalignment: string, alignment: string) {\n        this.timelineevents = timelineevents;\n        this.alignment = alignment;\n        this.contentalignment = contentalignment;\n    }\n}\n","import { AfterContentInit, Component, ContentChildren, EventEmitter, Input, OnInit, Output, QueryList, ViewChild} from '@angular/core';\nimport { DeviceQueryService } from '../../services/device/device.query.service';\nimport { AmexiotimelineeventComponent } from './amexiotimelineevent.component';\nimport { AmexioTimeLineModel } from './amexiotimelinevent.model';\n\n@Component({\n  selector: 'amexio-timeline',\n  template: `\n    <div class='timeline' [ngClass]=\"{'timelinecenter': (alignment == 'center'), \n                                    'timelineleft': (alignment == 'left'), \n                                    'timelineright': (alignment == 'right')}\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class AmexiotimelineComponent implements OnInit, AfterContentInit {\n\n  @ContentChildren(AmexiotimelineeventComponent) querylist: QueryList<AmexiotimelineeventComponent>;\n\n  @Input('content-alignment') contentalignment: string;\n\n  alignment= 'center';\n\n  timelineevents: AmexiotimelineeventComponent[];\n\n  timelineModel: AmexioTimeLineModel;\n\n  constructor(public matchMediaService: DeviceQueryService) {\n    const that = this;\n\n    this.matchMediaService.OnPhone((mediaQueryList: MediaQueryList) => {\n      that.mobileOrTabletMode();\n    });\n\n    this.matchMediaService.OnTablet((mediaQueryList: MediaQueryList) => {\n      that.mobileOrTabletMode();\n    });\n\n    this.matchMediaService.OnDesktop((mediaQueryList: MediaQueryList) => {\n      that.desktopMode();\n    });\n  }\n  ngOnInit() {\n\n  }\n\n  ngAfterContentInit() {\n    this.timelineevents = this.querylist.toArray();\n    this.initContentAlignment();\n  }\n\n  private initContentAlignment() {\n    if (this.contentalignment) {\n      this.alignment = this.contentalignment;\n    }\n    let hasContentAlignment = true;\n    this.timelineevents.forEach((timeline: AmexiotimelineeventComponent) => {\n      if (timeline.contentalignment) {\n        hasContentAlignment = false;\n      }\n    });\n\n    if (hasContentAlignment) {\n      this.timelineevents.forEach((timeline: AmexiotimelineeventComponent, index) => {\n        if (this.contentalignment) {\n          timeline.contentalignment = this.contentalignment;\n        } else {\n          timeline.contentalignment = ((index % 2) === 0) ? 'right' : 'left';\n        }\n        timeline.alignment = this.alignment;\n      });\n    }\n\n    this.timelineModel = new AmexioTimeLineModel(JSON.parse(JSON.stringify(this.timelineevents)), this.contentalignment, this.alignment);\n\n  }\n\n  private mobileOrTabletMode() {\n    this.alignment = 'right';\n    this.timelineevents.forEach((timeline: AmexiotimelineeventComponent, index) => {\n      timeline.contentalignment = 'right';\n      timeline.alignment = this.alignment;\n    });\n  }\n\n  private desktopMode() {\n\n    this.alignment = this.timelineModel.alignment;\n    this.contentalignment = this.timelineModel.contentalignment;\n    const hasContentAlignment = true;\n    this.timelineevents.forEach((timeline: AmexiotimelineeventComponent, index) => {\n      const originalTimelineEvent1: AmexiotimelineeventComponent = this.timelineModel.timelineevents[index];\n      timeline.contentalignment = originalTimelineEvent1.contentalignment;\n      timeline.alignment = originalTimelineEvent1.alignment;\n    });\n  }\n}\n","\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-window-header', template: `\n    <ng-content></ng-content>\n  `,\n})\n\nexport class AmexioWindowHeaderComponent implements OnInit {\n    /*\nProperties\nname :padding\ndatatype : string\nversion : 4.2 onwards\ndefault : left\ndescription : padding for header.\n*/\n@Input() padding: string;\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","/**\n * Created by ketangote on 12/18/17.\n */\n\n/*\n Component Name : Amexio Window\n Component Selector : <amexio-window>\n Component Description:  Window Pane component is a customizable Modal Pane in which user can enter custom content\n\n */\nimport {\n  Component, ContentChildren, ElementRef, EventEmitter, HostListener,\n  Input, OnChanges, OnDestroy, OnInit, Output, QueryList, Renderer2, SimpleChanges, ViewChild,\n} from '@angular/core';\nimport { AmexioWindowHeaderComponent } from './window.pane.header.component';\nexport enum KEY_CODE_window {\n  esc = 27,\n}\n@Component({\n  selector: 'amexio-window',\n  template: `\n    <div #id class=\"root-window model-fade\" [ngClass]=\"{'modal-window-max': isFullWindow,'modal-window-min': !isFullWindow}\"\n        [ngStyle]=\"{'display' : show ? 'block' : 'none'}\" (contextmenu)=\"loadContextMenu({event:$event,ref:id})\">\n        <div class=\"modal-window-lg\" [ngStyle]=\"{'height': bodyHeight ? '100%':'auto'}\">\n            <div class=\"modal-window-content\" [ngClass]=\"styleClass\" [style.height]=\"bodyHeight+'%'\">\n                <header [ngClass]=\"{ 'window-material-design-header':materialDesign,'modal-window-header':!materialDesign}\"\n                    *ngIf=\"header\">\n                    <div class=\"modal-window-table\">\n                        <div class=\"tablerow\">\n                            <div class=\"tablecol\">\n                                <ng-content select=\"amexio-header\"></ng-content>\n                                <ng-content select=\"amexio-window-header\"></ng-content>\n                            </div>\n                            <div class=\"tablecol float-right\">\n                                <ng-container *ngIf=\"(!isFullWindow && maximize)\">\n                                    <amexio-pane-icon [key]=\"'window_maximize'\" (onClick)=\"sizeChange()\"></amexio-pane-icon>\n                                    &nbsp;\n                                </ng-container>\n                                <ng-container *ngIf=\"(isFullWindow && maximize)\">\n                                    <amexio-pane-icon [key]=\"'window_restore'\" (click)=\"sizeChange()\"></amexio-pane-icon>\n                                    &nbsp;\n                                </ng-container>\n                                <ng-container *ngIf=\"closable\">\n                                    <amexio-pane-icon [key]=\"'window_close'\" (onClick)=\"onCloseClick()\"></amexio-pane-icon>\n                                    &nbsp;\n                                </ng-container>\n                            </div>\n                        </div>\n                    </div>\n                </header>\n                <div class=\"modal-window-middle\">\n                    <ng-content select=\"amexio-body\"></ng-content>\n                </div>\n                <footer *ngIf=\"footer\" class=\"modal-window-footer\" [ngClass]=\"{'window-material-design-footer':materialDesign ,\n             'modal-window-footer':!materialDesign,\n             'modal-window-footer-max': isFullWindow && maximize,'flex-start':(footeralign =='left'),\n             'flex-end':(footeralign=='right'),'flex-center':(footeralign=='center')}\">\n                    <div [ngClass]=\"{'footer-right-align': (isFullWindow && maximize)}\">\n                        <ng-content select=\"amexio-action\"></ng-content>\n                    </div>\n                </footer>\n            </div>\n\n        </div>\n    </div>\n    <ng-container *ngIf=\"flag\">\n        <span [ngStyle]=\"contextStyle\" style=\" z-index: 5; position: absolute;\">\n            <ul class=\"context-menu-list\" [ngClass]=\"{'dropdown-up' : posixUp}\">\n                <li (click)=\"onContextNodeClick(itemConfig)\" class=\"context-menu-list-items\" [ngStyle]=\"{'cursor': itemConfig.disabled ? 'not-allowed':'pointer'}\"\n                    [ngClass]=\"{'context-menu-separator':itemConfig.seperator}\" *ngFor=\"let itemConfig of contextmenu\">\n                    <em [ngStyle]=\"{'padding-left': itemConfig.icon ? '5px':'19px'}\" [ngClass]=\"itemConfig.icon\"></em>\n                    <span style=\"white-space: nowrap;display: inline ; padding-left:5px\">{{itemConfig.text}}\n                    </span>\n                </li>\n            </ul>\n        </span>\n    </ng-container>\n  `,\n})\nexport class AmexioWindowPaneComponent implements OnChanges, OnInit, OnDestroy {\n  /*\n   Properties\n   name : vertical-position\n   datatype : string\n   version : 4.1 onwards\n   default : none\n   description : Postion of window vertically: top or bottom or center.\n   This attribute is ignored if user specify position explicitly\n   (using position-top/position-bottom/position-left/position-right)\n   */\n  @Input('vertical-position') verticalposition: string;\n  /*\n   Properties\n   name : horizontal-position\n   datatype : none\n   version : 4.1 onwards\n   default : none\n   description : Postion of Window horizontally: left or right or center.\n   This attribute is ignored if user specify position explicitly\n   (using position-top/position-bottom/position-left/position-right)\n   */\n  @Input('horizontal-position') horizontalposition: string;\n  /*\n   Properties\n   name : close-on-escape\n   datatype : string\n   version : 4.2onwards\n   default : false\n   description : Enables And Disables the Escape button.\n   */\n  @Input('close-on-escape') closeonescape: boolean;\n  /*\n   Properties\n   name : position-top\n   datatype : none\n   version : 4.2 onwards\n   default : none\n   description : Takes top position in percentage or pixel\n   */\n  @Input('position-top') top: string;\n  /*\n   Properties\n   name : position-bottom\n   datatype : none\n   version : 4.2onwards\n   default : none\n   description : Takes top position in percentage or pixel\n   */\n  @Input('position-bottom') bottom: string;\n  /*\n   Properties\n   name : relative\n   datatype : boolean\n   version : 4.1 onwards\n   default : none\n   description : Place floating button at relative position\n   */\n  @Input('relative') relative = false;\n\n  /*\n   Properties\n   name : footer-align\n   datatype : string\n   version : 4.0 onwards\n   default : right\n   description : Alignment of footer contents to right or left.\n   */\n  @Input('footer-align') footeralign: string;\n\n  /*\n   Properties\n   name : show-window\n   datatype : boolean\n   version : 4.0 onwards\n   default : false\n   description : Show / Hide Window.\n   */\n  @Input('show-window') showWindow: boolean;\n\n  @Input('material-design') materialDesign: boolean;\n\n  @Input() show: boolean;\n\n  @ViewChild('windowHeader', { read: ElementRef }) public windowHeader: ElementRef;\n\n  @Output() showChange: EventEmitter<any> = new EventEmitter<any>();\n\n  /*\n   Properties\n   name : body-height\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Assign body height in percentage, in case of maximize=true it will be set to 100% by default\n   */\n  @Input('body-height') bodyHeight: string;\n\n  isFullWindow: boolean;\n\n  /*\n   Properties\n   name : maximize\n   datatype : boolean\n   version : 4.0 onwards\n   default :false\n   description : User can maximize the window to full screen.\n   */\n  @Input() maximize: boolean;\n\n  /*\n   Properties\n   name : closable\n   datatype : boolean\n   version : 4.0 onwards\n   default : false\n   description : User can close the window.\n   */\n  @Input() closable: boolean;\n\n  /*\n   Properties\n   name : header\n   datatype : boolean\n   version : 4.0 onwards\n   default : false\n   description : it is flag that decides header visibility\n   */\n  @Input() header: boolean;\n\n  /*\n   Properties\n   name : footer\n   datatype : boolean\n   version : 4.0 onwards\n   default : false\n   description : it is flag that decides footer visibility\n   */\n  @Input() footer: boolean;\n  /*\n   Events\n   name : close\n   datatype : none\n   version : none\n   default : none\n   description : close the window\n   */\n  private window = ' window-';\n  /*\nProperties\nname :  context-menu\ndatatype : string\nversion : 5.0.1 onwards\ndefault :\ndescription : Context Menu provides the list of menus on right click.\n*/\n  // context menu input output\n  @Input('context-menu') contextmenu: any[];\n\n  @Input() parentRef: any;\n\n  @Output() nodeRightClick: any = new EventEmitter<any>();\n\n  @Output() rightClick: any = new EventEmitter<any>();\n\n  @ContentChildren(AmexioWindowHeaderComponent) amexioHeader: QueryList<AmexioWindowHeaderComponent>;\n  headerComponentList: AmexioWindowHeaderComponent[];\n\n  @Output() close: EventEmitter<any> = new EventEmitter<any>();\n  styleClass: string;\n\n  constructor(private renderer: Renderer2) {\n    this.header = true;\n    this.closable = true;\n    this.closeonescape = true;\n    if (this.verticalposition == null) {\n      this.verticalposition = 'center';\n    }\n    if (this.horizontalposition == null) {\n      this.horizontalposition = 'center';\n    }\n    this.positionclass = this.window + this.verticalposition + this.window + this.horizontalposition;\n  }\n  flag: boolean;\n\n  posixUp: boolean;\n\n  rightClickNodeData: any;\n\n  contextStyle: any;\n\n  mouseLocation: { left: number; top: number } = { left: 0, top: 0 };\n  absoluteposition = false;\n  positionclass: string;\n  globalListenFunc: () => void;\n  globalClickListenFunc: () => void;\n  // THIS METHOD IS USED FOR SETTING CSS CLASSSES\n\n  sizeChange() {\n    this.isFullWindow = !this.isFullWindow;\n    this.setClass();\n  }\n\n  onCloseClick() {\n    if (this.closable) {\n      this.showWindow = false;\n      this.show = false;\n      this.showChange.emit(false);\n      this.close.emit(this.showWindow);\n\n    }\n  }\n  ngOnInit() {\n    if (this.showWindow) {\n      this.show = this.showWindow;\n    }\n\n    if (this.maximize == null) {\n      this.maximize = false;\n      this.isFullWindow = false;\n    } else if (this.maximize) {\n      this.isFullWindow = true;\n      this.bodyHeight = '100%';\n    }\n    if (this.footeralign == null) {\n      this.footeralign = 'right';\n    }\n\n    if (this.verticalposition === '') {\n      this.verticalposition = 'center';\n    }\n    if (this.horizontalposition === '') {\n      this.horizontalposition = 'center';\n    }\n    this.positionclass = this.window + this.verticalposition + this.window + this.horizontalposition;\n    this.setClass();\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['show']) {\n      this.setShowFlag(changes.show.currentValue);\n    }\n    if (changes['showWindow']) {\n      this.setShowFlag(changes.showWindow.currentValue);\n    }\n  }\n  setShowFlag(changedValue: any) {\n    this.show = changedValue;\n    if (this.show && this.closeonescape) {\n      this.globalListenFunc = this.renderer.listen('document', 'keyup.esc', (e: any) => {\n        this.showWindow = false;\n        this.showChange.emit(false);\n      });\n    } else if (this.globalListenFunc) {\n      this.globalListenFunc();\n    }\n  }\n  setClass() {\n    if (this.isFullWindow) {\n      this.styleClass = 'modal-window-content-max';\n    } else {\n      this.styleClass = this.positionclass;\n    }\n  }\n  // context menu code below\n  getContextMenu() {\n    if (this.contextmenu && this.contextmenu.length > 0) {\n      this.flag = true;\n      this.addListner();\n    }\n  }\n\n  getListPosition(elementRef: any): boolean {\n    const height = 240;\n    if ((window.screen.height - elementRef.getBoundingClientRect().bottom) < height) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  loadContextMenu(rightClickData: any) {\n    this.mouseLocation.left = rightClickData.event.clientX;\n    this.mouseLocation.top = rightClickData.event.clientY;\n    this.getContextMenu();\n    this.posixUp = this.getListPosition(rightClickData.ref);\n    rightClickData.event.preventDefault();\n    rightClickData.event.stopPropagation();\n    this.rightClickNodeData = rightClickData.data;\n    this.contextStyle = this.getContextMenuStyle();\n    this.nodeRightClick.emit(rightClickData);\n  }\n\n  onContextNodeClick(itemConfig: any) {\n    if (!itemConfig.disabled) {\n      const obj = {\n        menuData: itemConfig,\n        NodeData: this.rightClickNodeData,\n      };\n      this.flag = false;\n      this.removeListner();\n      this.rightClick.emit(obj);\n    }\n  }\n\n  getContextMenuStyle() {\n    return {\n      'cursor': 'default',\n      'position': 'fixed',\n      'display': this.flag ? 'block' : 'none',\n      'left': this.mouseLocation.left + 'px',\n      'top': this.mouseLocation.top + 'px',\n      'box-shadow': '1px 1px 2px #000000',\n      'width': '15%',\n    };\n  }\n\n  addListner() {\n    this.globalClickListenFunc = this.renderer.listen('document', 'click', (e: any) => {\n      this.flag = false;\n      if (!this.flag) {\n        this.removeListner();\n      }\n    });\n  }\n\n  removeListner() {\n    if (this.globalClickListenFunc) {\n      this.globalClickListenFunc();\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeListner();\n    if (this.globalListenFunc) {\n      this.globalListenFunc();\n    }\n  }\n}\n","/**\n * Created by manisha on 7/6/18.\n */\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'amexio-searchbox-options',\n  template: `\n  <form class=\"advancesearchform\" *ngIf=\"advanceSearchFlag\"  [style.width]=\"formwidth+'px'\">\n    <label class=\"search-form-label\">\n        {{title}}\n    </label>\n    <span class=\"fa fa-window-close fa-1x close-icon\"  (click)=\"closeSearchForm()\"></span>\n    <hr class=\"hrclass\">\n             <ng-content></ng-content>\n</form>\n`,\n})\n\nexport class AmexioSearchAdvanceComponent implements OnInit {\n  @Input() title = 'Advance Search';\n  @Input('form-width') formwidth: number;\n  advanceSearchFlag = false;\n  constructor() { }\n  closeSearchForm() {\n    this.advanceSearchFlag = false;\n  }\n  ngOnInit() {\n  }\n}\n","\nimport {\n  AfterContentInit, ChangeDetectorRef, Component, ContentChild, ElementRef,\n  EventEmitter, Input, OnInit, Output, Renderer2, ViewChild,\n} from '@angular/core';\nimport { AmexioSearchAdvanceComponent } from '../advancesearch/searchadvance.component';\n\nimport {BaseFormValidator} from '../../base/base.validator.component';\nimport { CommonDataService } from '../../services/data/common.data.service';\n@Component({\n  selector: 'amexio-searchbox',\n  template: `\n    <div class=\"input-group\">\n      <div class=\"input-group-prepend\">\n        <input type=\"text\" class=\"form-control\" (keyup)=\"onInputClick($event)\" #inp [(ngModel)]=\"selectedValue\"\n          [attr.placeholder]=\"placeholder\" (click)=\"onSelectClick()\" (focus)=\"onFocus()\">\n      </div>\n\n\n\n      <div class=\"input-group-text-search \" (click)=\"onSearchButtonClick($event)\">\n        <em class=\"fa fa-search iconColor\">\n        </em>\n      </div>\n\n    </div>\n\n\n\n    <form [ngStyle]=\"dropdownstyle\" class=\"dropdownposition\">\n      <ng-container *ngIf=\"!advanceSearchFlag\">\n        <ul #dropdownitems [style.width]=\"width+'px'\" class=\"search-dropdown-list\" [ngClass]=\"selectCssClass()\">\n\n          <li class=\"search-list-items \" [ngClass]=\"{'search-list-items-selected':item.selected}\" *ngFor=\"let item of viewData\"\n            (click)=\"onItemSelect(item)\">\n            <div style=\"white-space: nowrap;display: inline;\">{{item[displayfield]}}</div>\n          </li>\n        </ul>\n        <ng-container *ngIf=\"selectedValue.length > 0\">\n          <div [style.width]=\"width+'px'\" class=\"advancesearchbuttondiv\">\n            <button class=\"fa fa-search btncolor\" [style.width]=\"width+'px'\" class=\"advancesearchbtn fa fa-search\" (click)=\"advanceSearch()\">\n              {{advanceButtonLabel}}\n            </button>\n          </div>\n        </ng-container>\n\n      </ng-container>\n    </form>\n\n    <div [ngStyle]=\"{'block': advanceSearchRef.advanceSearchFlag ? 'block' : 'none'}\">\n\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class SearchboxtoolComponent extends BaseFormValidator<string> implements OnInit, AfterContentInit {\n  private componentLoaded: boolean;\n  /*\n   Properties\n   name : data\n   datatype : any\n   version : 4.2 onwards\n   default : none\n   description : Local data for dropdown.\n   */\n  _data: any;\n  @Input('data')\n  set data(value: any[]) {\n    this._data = value;\n    if (this.componentLoaded) {\n      this.updateComponent();\n    }\n  }\n  get data(): any[] {\n    return this._data;\n  }\n  /*\n   Properties\n   name : data-reader\n   datatype : string\n   version : 4.2 onwards\n   default : none\n   description : Key in JSON datasource for records\n   */\n  @Input('data-reader') datareader: any;\n  /*\n   Properties\n   name : http-url\n   datatype : string\n   version : 4.2 onwards\n   default : none\n   description : REST url for fetching datasource.\n   */\n  @Input('http-url') httpurl: string;\n  /*\n   Properties\n   name : place-holder\n   datatype : string\n   version : 4.2 onwards\n   default : none\n   description : Show place-holder inside dropdown component\n   */\n  @Input('place-holder') placeholder: string;\n  /*\n   Properties\n   name : display-field\n   datatype : string\n   version : 4.2 onwards\n   default : none\n   description : Sets key inside response data to display.\n   */\n  @Input('display-field') displayfield: string;\n  /*\n   Properties\n   name : http-method\n   datatype : string\n   version : 4.2 onwards\n   default : none\n   description : Type of HTTP call, POST,GET.\n   */\n  @Input('http-method') httpmethod: string;\n  /*\n   Properties\n   name : title\n   datatype : string\n   version : 4.2 onwards\n   default : none\n   description : sets title to advance search form\n   */\n  @Input() title = 'Advance Search';\n  /*\n   Properties\n   name : value-field\n   datatype : string\n   version : 4.2 onwards\n   default : none\n   description : Name of key inside response data.use to send to backend\n   */\n  @Input('value-field') valuefield: string;\n  /*\n   Properties\n   name : width\n   datatype : number\n   version : 4.2 onwards\n   default : none\n   description : Sets width to auto recommendation list.\n   */\n  @Input() width = 500;\n  /*\n   Events\n   name : keyup\n   description : Fires when keyup event occurs\n   */\n  @Output() keyup: any = new EventEmitter<any>();\n  /*\n   Events\n   name : onSearchItemClick\n   description : Fires when search item is selected\n   */\n  @Output() onSearchItemClick: any = new EventEmitter<any>();\n  /*\n   Events\n   name : onSearchClick\n   description : Fires when search button is clicked\n   */\n  @Output() onSearchClick: any = new EventEmitter<any>();\n  @ContentChild(AmexioSearchAdvanceComponent) advanceSearchRef: AmexioSearchAdvanceComponent;\n  @ViewChild('dropdownitems', { read: ElementRef }) public dropdownitems: ElementRef;\n  @ViewChild('inp', { read: ElementRef }) public inp: ElementRef;\n  value: string;\n  responseData: any;\n  viewData: any;\n  textValue: any;\n  localData: any;\n  caretFlag = false;\n  searchFlag = false;\n  searchTextBox = false;\n  displayValue: any;\n  isComponentValid: boolean;\n  selectedValue: any = '';\n  advanceSearchFlag = false;\n  labelValue: string;\n  previousData: any;\n  selectedindex = 0;\n  scrollposition = 30;\n  enableAdvanceSearch = false;\n  advanceButtonLabel: string;\n  enableAdvnSearch: boolean;\n  constructor(\n    public element: ElementRef, private dataService: CommonDataService,\n    public renderer: Renderer2, _cd: ChangeDetectorRef,\n  ) {\n    super(renderer, element, _cd);\n  }\n\n  ngAfterContentInit() {\n    this.advanceSearchRef.formwidth = this.width;\n    this.enableAdvnSearch = this.advanceSearchRef.advanceSearchFlag;\n    this.enableAdvanceSearch = true;\n    if (this.advanceSearchRef) {\n      this.enableAdvanceSearch = true;\n      if (this.advanceSearchRef.title) {\n        this.advanceButtonLabel = this.advanceSearchRef.title;\n      } else if (!this.advanceSearchRef.title || this.advanceSearchRef.title === '') {\n        this.advanceButtonLabel = 'Advance Search';\n      }\n    }\n  }\n\n  ngOnInit() {\n    if (this.httpmethod && this.httpurl) {\n      this.dataService.fetchData(this.httpurl, this.httpmethod).subscribe((response) => {\n        this.responseData = response;\n      }, (error) => {\n      }, () => {\n        this.setData(this.responseData);\n      });\n    } else if (this.data) {\n      this.previousData = JSON.parse(JSON.stringify(this.data));\n      this.setData(this.data);\n    }\n    this.componentLoaded = true;\n  }\n  updateComponent() {\n    if (JSON.stringify(this.previousData) !== JSON.stringify(this.data)) {\n      this.previousData = JSON.parse(JSON.stringify(this.data));\n      this.setData(this.data);\n    }\n  }\n  onSelectClick() {\n    this.advanceSearchFlag = false;\n  }\n  onInputClick(event: any) {\n    this.searchFlag = true;\n    this.onBaseFocusEvent({});\n    const keyword: any = event.target.value;\n    this.viewData = [];\n    if (keyword != null && keyword !== ' ') {\n      const search_term = keyword.toLowerCase();\n      this.localData.forEach((item: any) => {\n        if (item != null && item[this.displayfield].toLowerCase().startsWith(search_term)) {\n          this.viewData.push(item);\n        }\n      });\n      this.keyup.emit(event);\n    }\n    // logic for arrow keys and enter key press\n    // 40=down-arrow and 38=up-arrow and 13=enter\n    if (event.keyCode === 40 || event.keyCode === 38 || event.keyCode === 13) {\n      // if key pressed is up down or enter then process accordingly\n      // call function for process\n      this.navigateKeys(event);\n    }\n    if (!this.selectedValue || this.selectedValue === '') {\n      this.viewData = [];\n    }\n  }\n  onFocus() {\n    if (this.selectedValue.length > 0) {\n      const keyword = this.selectedValue;\n      this.viewData = [];\n      if (keyword != null && keyword !== ' ') {\n        const search_term = keyword.toLowerCase();\n        this.localData.forEach((item1: any) => {\n          if (item1 != null && item1[this.displayfield].toLowerCase().startsWith(search_term)) {\n            // if word exist in start\n            this.viewData.push(item1);\n          }\n        });\n        this.searchFlag = true;\n        this.onBaseFocusEvent({});\n        this.keyup.emit(event);\n      }\n      this.selectedValueOnFocus();\n    }\n  }\n\n  // If Selected Value is blank, then view data will be reset\n  selectedValueOnFocus() {\n    if (!this.selectedValue || this.selectedValue === '') {\n      this.viewData = [];\n    }\n  }\n\n  navigateKeys(event: any) {\n    if (this.selectedindex > this.viewData.length) {\n      this.selectedindex = 0;\n    }\n    if (event.keyCode === 40 ||\n      event.keyCode === 38\n      && this.selectedindex < this.viewData.length) {\n      this.navigateKeysCondition(event);\n    }\n\n    if (event.keyCode === 13 && this.viewData[this.selectedindex]) {\n      this.onItemSelect(this.viewData[this.selectedindex]);\n    }\n  }\n\n  // Method will be called when keycode will be 40 or 38\n  navigateKeysCondition(event: any) {\n    let prevselectedindex = 0;\n    if (this.selectedindex === 0) {\n      this.selectedindex = 1;\n    } else {\n      prevselectedindex = this.selectedindex;\n      if (event.keyCode === 40) {\n        this.selectedindex++;\n        if ((this.selectedindex > 5)) {\n          this.dropdownitems.nativeElement.scroll(0, this.scrollposition);\n          this.scrollposition = this.scrollposition + 30;\n        }\n      } else if (event.keyCode === 38) {\n        this.eventKeyCodeCondition();\n      }\n    }\n    if (this.viewData[this.selectedindex]) {\n      this.viewData[this.selectedindex].selected = true;\n    }\n    if (this.viewData[prevselectedindex]) {\n      this.viewData[prevselectedindex].selected = false;\n    }\n  }\n\n  // If keycode is 38\n  eventKeyCodeCondition() {\n    this.selectedindex--;\n    if (this.scrollposition >= 0 && this.selectedindex > 1) {\n      this.dropdownitems.nativeElement.scroll(1, this.scrollposition);\n      this.scrollposition = this.scrollposition - 30;\n    }\n    if (this.selectedindex === 1) {\n      this.scrollposition = 30;\n    }\n  }\n\n  onSearchButtonClick(event: any) {\n    this.onSearchClick.emit(event);\n  }\n  selectCssClass(): string {\n    if (this.viewData.length > 5) {\n      return 'dropdown-list scroll';\n    } else {\n      return 'dropdown-list';\n    }\n  }\n  onItemSelect(item: any) {\n    this.value = item[this.valuefield];\n    this.selectedValue = item[this.displayfield];\n    this.searchFlag = this.onBaseBlurEvent({});\n    this.onSearchItemClick.emit(item);\n  }\n  advanceSearch() {\n    this.advanceSearchRef.advanceSearchFlag = true;\n    this.advanceSearchFlag = true;\n    this.searchFlag = this.onBaseBlurEvent({});\n  }\n  closeSearchForm() {\n    this.advanceSearchFlag = false;\n  }\n  getResponseData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      if (dr != null) {\n        for (const ir of dr) {\n          responsedata = responsedata[dr[ir]];\n        }\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    return responsedata;\n  }\n  setData(httpResponse: any) {\n    let responsedata = httpResponse;\n    // Check if key is added?\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[dr[ir]];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    this.viewData = responsedata;\n    this.localData = JSON.parse(JSON.stringify(this.viewData));\n  }\n}\n","/**\n * Created by pratik on 13/12/17.\n */\n/*\n Component Name : Amexio Button Dropdown\n Component Selector : <amexio-btn-dropdown-item>\n Component Description : Amexio Dropdown Button component with various modes and configurations .\n\n*/\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n@Component({\n  selector: 'amexio-btn-dropdown-item', template: '',\n})\nexport class AmexioButtonDropDownItemComponent implements OnInit {\n/*\nProperties\nname : label\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : gives label to the button\n*/\n  @Input() label: string;\n\n /*\nProperties\nname :  badge\ndatatype : number\nversion : 4.1.9 onwards\ndefault : none\ndescription : badge  describes the badge value that has to be displayed on button\n*/\n@Input('badge') badge: number;\n  /*\nProperties\nname : disabled\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Enable/Disables the button\n*/\n  @Input() disabled: boolean;\n/*\nProperties\nname :  icon\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Fa icon class name\n*/\n  @Input() icon: string;\n/*\nEvents\nname : onClickRoute\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : routes on click of button\n*/\n  @Input() onClickRoute: string;\n\n  iconStyleClass: string;\n\n/*\nEvents\nname : onItemClick\ndatatype : none\nversion : none\ndefault : none\ndescription : Fire when button-dropdown item button/link click\n*/\n  @Output() onItemClick: EventEmitter<any> = new EventEmitter<any>();\n  constructor() {\n  }\n  ngOnInit() {\n  }\n}\n","/**\n * Created by pratik on 13/12/17.\n */\n/*\n Component Name : Amexio Button Dropdown\n Component Selector : <amexio-btn-dropdown>\n Component Description : Amexio Dropdown Button component with various modes and configurations .\n*/\nimport {\n  AfterContentInit, ChangeDetectorRef, Component, ContentChildren, ElementRef, EventEmitter, Input,\n  Output, QueryList, Renderer2, ViewChild,\n} from '@angular/core';\nimport {BaseFormValidator} from '../../base/base.validator.component';\nimport {AmexioButtonDropDownItemComponent} from './button.dropdown.item';\n\n@Component({\n  selector: 'amexio-btn-dropdown', template: `\n    <div class=\"button-group\" #rootDiv>\n       <button class=\"button-dropdown-main\" (blur)=\"onblur($event)\" (click)=\"onClick(rootDiv)\" #btnRef\n               [ngClass]=\"{'button-default': size=='default' || size ==null,\n               'button-small': size=='small',\n               'button-large' : size=='large',\n               'button-primary' : type == 'primary' || type == null || type == 'theme-color',\n               'button-success' : type == 'success' || type == 'green',\n               'button-danger' : type=='danger' || type == 'red',\n               'button-warning' : type=='warning' ||  type == 'yellow'}\">\n         <amexio-form-icon style=\"float:right;\" key=\"button_caret-down\"></amexio-form-icon>\n         <span [attr.disabled]=\"disabled ? true: null\">{{label}} &nbsp;&nbsp;</span>\n         <!--<i class=\"fa fa-caret-down\" style=\"float:right;\" ></i>-->\n       </button>\n      <div class=\"button-dropdown\" [ngClass]=\"{'button-dropdown-up' : posixUp}\"  [ngStyle]=\"dropdownstyle\">\n        <ng-container *ngFor=\"let itemData of dropdownItemData\">\n          <div [ngClass]=\"{'button-default': size=='default' || size ==null,'button-small': size=='small','button-large' : size=='large'}\">\n            <div [ngStyle]=\"{'cursor': itemData.disabled ? 'not-allowed':'pointer'}\"\n                 (click)=\"btnItemClick($event,itemData)\">\n              <amexio-form-icon style=\"padding-right: 5px;\" [customclass]=\"itemData.iconStyleClass\"></amexio-form-icon>\n              <span [attr.disabled]=\"itemData.disabled ? true: null\">{{itemData.label}}&nbsp;&nbsp;</span>\n              <!--<i [class]=\"itemData.iconStyleClass\" aria-hidden=\"true\" style=\"float:right;\" ></i>-->\n              <ng-container *ngIf=\"itemData.badge\">\n              <span class=\"btn-dropdown-badge\">{{itemData.badge}}</span>\n              </ng-container>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  `,\n})\n\nexport class AmexioButtonDropdownComponent extends BaseFormValidator<any> implements AfterContentInit {\n  @ViewChild('btnRef')  btnReference: any;\n  private componentLoaded: boolean;\n/*\nProperties\nname : label\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Label on button\n*/\n  @Input() label: string;\n  openContent: boolean;\n  posixUp: boolean;\n  @ContentChildren(AmexioButtonDropDownItemComponent) buttons: QueryList<AmexioButtonDropDownItemComponent>;\n  dropdownItemData: any[] = [];\n/*\n For internal use\n*/\n\n  _buttonGroupLocalData: any;\n  @Input('buttonGroupLocalData')\n   set data(value: any[]) {\n     this._buttonGroupLocalData = value;\n     if (this.componentLoaded) {\n       this.updateComponent();\n     }\n   }\n   get buttonGroupLocalData(): any {\n     return this._buttonGroupLocalData;\n   }\n/*\nProperties\nname : type\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Type of button : default,theme-color,theme-backgroundcolor,\ngreen, red, yellow ( primary, secondary ,success , danger & warning Depricated v4.1 onwards)\n*/\n  @Input() type: string;\n   /*\nProperties\nname : disabled\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Enable/Disables the button\n*/\n  @Input() disabled: boolean;\n /*\nProperties\nname : size\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Different Sizes of Buttons availabe : large, default, small & xsmall\n*/\n  @Input() size: string;\n/*\nProperties\nname :  badge\ndatatype : number\nversion : 4.1.9 onwards\ndefault : none\ndescription : Badge  describes the badge value that has to be displayed on button\n*/\n@Input('badge') badge: number;\n/*\nEvents\nname : click\ndatatype :  none\nversion : none\ndefault : none\ndescription : Fire when button-dropdown item button/link click\n*/\n  @Output() click: any = new EventEmitter<any>();\n   /*\nEvents\nname : getLinkData\ndatatype :  none\nversion : none\ndefault : none\ndescription : Fire when button-dropdown item button/link click\n*/\n  @Output() getLinkData: any = new EventEmitter<any>();\n  buttonGroupPreviewData: any;\n  constructor(\n    public element: ElementRef, renderer: Renderer2, _cd: ChangeDetectorRef,\n  ) {\n    super(renderer, element, _cd);\n  }\n  updateComponent() {\n    if (JSON.stringify(this.buttonGroupPreviewData) !== JSON.stringify(this.buttonGroupLocalData)) {\n      this.buttonGroupPreviewData = JSON.parse(JSON.stringify(this.buttonGroupLocalData));\n      this.dropdownItemData = this.buttonGroupLocalData;\n    }\n  }\n  ngAfterContentInit() {\n    if (this.buttonGroupLocalData && this.buttonGroupLocalData.length > 0 ) {\n      this.buttonGroupPreviewData = JSON.parse(JSON.stringify(this.buttonGroupLocalData));\n      this.dropdownItemData = this.buttonGroupLocalData;\n      this.createDropdownItemConfig(this.dropdownItemData);\n    } else {\n      this.createDropdownItemConfig(this.buttons.toArray());\n    }\n    this.componentLoaded = true;\n  }\n  createDropdownItemConfig(btnCollection: any) {\n    const itemRefArray = btnCollection;\n    for (const itemConfig of itemRefArray) {\n      const data: any = {\n        label: itemConfig.label,\n        disabled: itemConfig.disabled,\n        onItemClick: itemConfig.onItemClick,\n        iconStyleClass: itemConfig.iconStyleClass,\n        icon: itemConfig.icon,\n        badge: itemConfig.badge,\n        onClickRoute: itemConfig.onClickRoute,\n      };\n      data.iconStyleClass = data.icon;\n      this.dropdownItemData.push(data);\n    }\n  }\n  onClick(elem: any) {\n    this.openContent = !this.openContent;\n    if (this.openContent) {\n      this.onBaseFocusEvent({});\n    } else {\n     this.openContent = this.onBaseBlurEvent(elem);\n    }\n    this.posixUp = this.getListPosition(elem);\n    this.click.emit();\n  }\n  getListPosition(elementRef: any): boolean {\n    const dropdownHeight = 325; // must be same in dropdown.scss\n    if (window.screen.height - (elementRef.getBoundingClientRect().bottom) < dropdownHeight) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  onblur(eve: any) {\n    this.openContent = this.onBaseBlurEvent(eve);\n  }\n\n  btnItemClick(clickEvent: any, itemData: any) {\n    if (this.buttonGroupLocalData && this.buttonGroupLocalData.length > 0) {\n      this.getLinkData.emit({event: clickEvent, parentRef: this, data: itemData});\n    } else {\n      if (!itemData.disabled) {\n        itemData.onItemClick.emit(clickEvent);\n        this.openContent = !this.openContent;\n        this.onBaseBlurEvent(event);\n      }\n    }\n  }\n}\n","/**\n * Created by pratik on 13/12/17.\n */\n\n /*\n Component Name : Amexio Button Split Dropdown\n Component Selector : <amexio-btn-dropdown-item>\n Component Description : Amexio Dropdown Button component with various modes and configurations .\n\n*/\nimport {AfterContentInit, Component, ContentChildren, Input, OnInit, QueryList} from '@angular/core';\nimport {AmexioButtonDropDownItemComponent} from './button.dropdown.item';\n\n@Component({\n  selector: 'amexio-btn-split-dropdown', template: `\n    <div class=\"dropdown-button\" [ngStyle]=\"getBackgroundColor()\">\n      <button class=\"button\" [attr.disabled]=\"disabled ? true: null\"\n              [ngClass]=\"{'button-default': size=='default' || size ==null,\n              'button-small': size=='small','button-large' : size=='large',\n              'button-primary' : type == 'primary' || type == null,\n              'button-success' : type == 'success',' button-danger' : type=='danger',\n              'button-warning' : type=='warning'}\">\n        {{label}}\n      </button>\n      <button class=\"button\"\n              [ngClass]=\"{'button-default': size=='default' || size ==null,\n              'button-small': size=='small',\n              'button-large' : size=='large',\n              'button-primary' : type == 'primary' || type == null || type == 'theme-color',\n              'button-success' : type == 'success' || type == 'green',\n              'button-danger' : type=='danger' || type == 'red',\n              'button-warning' : type=='warning' ||  type == 'yellow'}\">\n              (click)=\"onClick()\"><i class=\"fa fa-chevron-down\" aria-hidden=\"true\"></i></button>\n      <div class=\"dropdown-button-content\" [ngStyle]=\"{'display' : openContent ? 'block' : 'none'}\">\n        <ul class=\"dropdown-list\">\n          <ng-container *ngFor=\"let itemData of dropdownItemData\">\n            <li class=\"list-items\" [ngClass]=\"{'disabled':itemData.disabled}\" (click)=\"itemClick($event,itemData)\">\n            <ng-container *ngIf=\"itemData.icon!=null\">\n              <!--<i [class]=\"itemData.iconStyleClass\" aria-hidden=\"true\"></i>-->\n              <amexio-form-icon style=\"padding-right: 5px;\" [customclass]=\"itemData.iconStyleClass\"></amexio-form-icon>\n            </ng-container>{{itemData.label}}\n            </li>\n          </ng-container>\n        </ul>\n      </div>\n    </div>\n  `,\n})\nexport class AmexioSpiltButtonDropdownComponent implements AfterContentInit {\n/*\nProperties\nname : label\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Label on button\n*/\n  @Input() label: string;\n/*\nProperties\nname :  badge\ndatatype : number\nversion : 4.1.9 onwards\ndefault : none\ndescription : Badge  describes the badge value that has to be displayed on button\n*/\n@Input('badge') badge: number;\n  openContent: boolean;\n  @ContentChildren(AmexioButtonDropDownItemComponent) buttons: QueryList<AmexioButtonDropDownItemComponent>;\n  dropdownItemData: any[] = [];\n/*\nProperties\nname : type\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Type of button : default,theme-color,theme-backgroundcolor,\n green, red, yellow ( primary, secondary ,success , danger\n   & warning Depricated v4.1 onwards)\n*/\n  @Input() type: string;\n/*\nProperties\nname : disabled\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Enable/Disables the button\n*/\n  @Input() disabled: boolean;\n\n/*\nProperties\nname : size\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Different Sizes of Buttons availabe : large, default, small & xsmall\n*/\n  @Input() size: string;\n  constructor() {\n  }\n  ngAfterContentInit() {\n    this.createDropdownItemConfig();\n  }\n  createDropdownItemConfig() {\n    let itemRefArray = [];\n    itemRefArray = this.buttons.toArray();\n    for (const itemConfig of itemRefArray) {\n      const data: any = {\n        label: itemConfig.label,\n        disabled: itemConfig.disabled,\n        onItemClick: itemConfig.onItemClick,\n        iconStyleClass: itemConfig.iconStyleClass,\n        icon: itemConfig.icon,\n        onClickRoute: itemConfig.onClickRoute,\n      };\n      data.iconStyleClass = data.icon;\n      this.dropdownItemData.push(data);\n    }\n  }\n\n  onClick() {\n    this.openContent = !this.openContent;\n  }\n  itemClick(event: any, itemData: any) {\n    itemData.onItemClick.emit(event);\n  }\n  getBackgroundColor() {\n    let colorCode: string;\n    if (this.type === 'primary' || this.type === 'theme-color') {\n      colorCode = '#0275d8';\n    } else if (this.type === 'success' || this.type === 'green') {\n      colorCode = '#5cb85c';\n     } else if (this.type === 'danger' || this.type === 'red') {\n        colorCode = '#d9534f';\n      } else if (this.type === 'warning' || this.type === 'yellow') {\n        colorCode = '#f0ad4e';\n      }\n    return {\n      'background-color': colorCode,\n    };\n  }\n}\n","import { Component, Host, Input, OnInit } from '@angular/core';\nimport { AmexioCheckBoxGroupComponent } from './checkbox.group.component';\n@Component({\n  selector: 'checkbox',\n  template: `\n    <!-- <div style=\"display: flex;\" (click)=\"toggleCheck()\">\n        <input class=\"form-control\" type=\"checkbox\" [checked]=\"isChecked()\" />\n        <label>{{label}}</label>\n    </div> <br/> -->\n\n    <label class=\"input-box-container\" [ngClass]=\"{'disable-component' : disabled || disabled}\">\n        {{label}}\n        <input type=\"checkbox\" class=\"form-control\" [ngClass]=\"{'checkbox-disable' : disabled}\" [checked]=\"checked\" (click)=\"toggleCheck()\">\n        <span class=\"input-box-checkbox-label\"></span>\n      </label>\n  `,\n})\nexport class CheckboxComponent implements OnInit {\n  @Input() label: any;\n\n  @Input() value: any;\n\n  @Input() name: any;\n\n  @Input() checked: boolean;\n\n  @Input() disabled: boolean;\n\n  constructor(@Host() private checkboxGroup: AmexioCheckBoxGroupComponent) {}\n\n  toggleCheck() {\n    if (!this.checked) {\n      this.checkboxGroup.add(this.value);\n    } else {\n      this.checkboxGroup.remove(this.value);\n    }\n    this.checked = !this.checked;\n  }\n\n  isChecked() {\n    return this.checked || this.checkboxGroup.contains(this.value);\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      if (this.checked) {\n       this.checkboxGroup.add(this.value);\n      }\n    }, 200);\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'amexio-chip',\n  template: `\n\n    <div class=\"chips\" style=\"cursor: pointer;\" [ngStyle]=\"{'background-color': color}\">\n        <amexio-form-icon [customclass]=\"icon\"></amexio-form-icon>\n        <amexio-label (click)=\" onLabelClick($event)\">\n          <span style=\"cursor: pointer;padding-left:10px\">\n            {{label}}\n          </span>\n        </amexio-label>\n        <span class=\"badge\" *ngIf=\"badge\">{{badge}}</span>\n        <ng-container *ngIf=\"closable\">\n          <i class=\"fa fa-times\" style=\"cursor: pointer; margin-left:10px\" (click)=\"onCloseClick($event) \"></i>\n        </ng-container>\n      </div>\n  `,\n  styles: [`\n\n  `],\n})\nexport class AmexioChipComponent implements OnInit {\n  /*\nProperties\nname : icon\ndatatype :\nversion : 5.3.1 onwards\ndefault :\ndescription : The icon is for determining of icon.\n*/\n  @Input('icon') icon: string;\n  /*\nProperties\nname : label\ndatatype :\nversion : 5.3.1onwards\ndefault :\ndescription : The label is for determining of label.\n*/\n  @Input('label') label: any;\n  /*\nProperties\nname : color\ndatatype :\nversion : 5.3.1onwards\ndefault :\ndescription : The color is for determining color of particular chip.\n*/\n  @Input ('color') color: any;\n  /*\nProperties\nname : badge\ndatatype :\nversion : 5.3.1onwards\ndefault :\ndescription : The badge is for determining value of particular chip.\n*/\n  @Input('badge') badge: any;\n  /*\nProperties\nname : closeable\ndatatype :\nversion : 5.3.1onwards\ndefault :\ndescription : The closeable is for closing particular chip.\n*/\n  @Input('closable') closable: false;\n  /*\n    Events\n    name :  closeClick\n    datatype : none\n    version : none\n    default : none\n    description : It will fire only on selection of checkbox and gives you selected record data.\n    */\n  @Output() closeClick: any = new EventEmitter<any>();\n  /*\n   Events\n   name :  labelClick\n   datatype : none\n   version : none\n   default : none\n   description : It will fire only on selection of checkbox and gives you selected record data.\n   */\n  @Output() labelClick: any = new EventEmitter<any>();\n  constructor() {\n  }\n  onCloseClick(event: any) {\n    this.closeClick.emit(this.createObject());\n  }\n  onLabelClick(event: any) {\n    this.labelClick.emit(this.createObject());\n  }\n  ngOnInit() {\n  }\n  createObject(): object {\n    const obj = {};\n    obj['icon'] = this.icon;\n    obj['label'] = this.label;\n    obj['badge'] = this.badge;\n    obj['closable'] = this.closable;\n    obj['color'] = this.color;\n    return obj;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { AmexioChipComponent } from '../chip/chip.component';\n\n@Component({\n  selector: 'amexio-chips',\n  template: `\n    <ng-container *ngIf=\"data?.length > 0; else elseBlock\">\n      <ng-container *ngFor=\"let item of data\">\n          <amexio-chip [icon]=\"item.icon\" [label]=\"item.label\" [badge]=\"item.badge\" [closable]=\"item.closable\" [color]=\"item.color\"\n              (closeClick)=\"onCloseChipsClick($event)\" (labelClick)=\"emitSelectedLabel($event) \">\n          </amexio-chip>\n      </ng-container>\n    </ng-container>\n    <ng-template #elseBlock>\n          <ng-content></ng-content>\n    </ng-template>\n  `,\n  styles: [`\n\n  `],\n})\nexport class AmexioChipsComponent {\n  /*\n Properties\n name : data\n datatype :\n version : 5.3onwards\n default :\n description : The Data is set of json value like icon,label and closable.\n */\n  @Input('data') data: any[];\n  /*\n    Events\n    name : selectedRowData\n    datatype : none\n    version : none\n    default : none\n    description : It will fire only on selection of checkbox and gives you selected record data.\n    */\n  @Output() selectedchipsData: any = new EventEmitter<any>();\n  constructor() {\n  }\n  onCloseChipsClick(item: any) {\n    this.data.forEach((element: any, index: number) => {\n      if (element.label === item.label) {\n        this.data.splice(index, 1);\n      }\n    });\n    this.emitSelectedLabel(item);\n  }\n  emitSelectedLabel(item: any) {\n    this.selectedchipsData.emit(item);\n  }\n}\n","export class AmexioCreditCardModel {\n    owner: string;\n    cvv: number;\n    cardnumber: number;\n    expMonth: number;\n    expYear: number;\n    constructor() {\n      this.owner = '';\n      this.cvv = null;\n      this.cardnumber = null;\n      this.expMonth = 1;\n      this.expYear = 2018;\n    }\n  }\n","/*\n**\nCreated By:Ankita\n*/\nimport { Component, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AmexioCreditCardModel } from '../../../models/creditcardmodel.component';\nconst noop = () => {\n};\n@Component({\n  selector: 'amexio-creditcard',\n  template: `\n    <!-- <pre><code>{{creditCardModel|json}}</code></pre> -->\n    <ng-container *ngIf=\"templateFlag\">\n\n            <div class=\"creditCardFormSglCol\">\n                <div class=\"imageSglCol\">\n                    <i *ngFor=\"let cardimage of cardGroupData\" [style.color]=\"cardimage.color\" [attr.class]=\"cardimage.iconName\" style=\"font-size:50px\">\n                    </i>\n                </div>\n                <div class=\"ownerdetailsSglCol\">\n                    <label *ngIf=\"showlabel\">CARD HOLDER NAME</label>\n                    <div class=\"ownerSglCol\">\n                        <input [ngClass]=\"{'input-control-success':isNameValid,'input-control-failure':(!isNameValid && inpowner.touched)}\" type=\"text\" placeholder=\"CARD HOLDER NAME\"\n                            #inpowner=\"ngModel\" class=\"input-control\" [(ngModel)]=\"creditCardModel.owner\" (keyup)=\"onNameClick(inpowner)\">\n                    </div>\n                </div>\n        \n                <div class=\"cardNumberSglCol\">\n                    <label *ngIf=\"showlabel\">CARD NUMBER</label>\n                    <input type=\"text\" placeholder=\"CARD NUMBER\" maxlength=\"19\" class=\"input-control\" [ngModel]=\"dummyCreditCardNumber\" (ngModelChange)=\"onChangeCardNumber($event)\"\n                    [value]=\"cardNumberValue\" #inp=\"ngModel\" [ngClass]=\"{'input-control-success':validPatternCard,'input-control-failure':(!validPatternCard && (inp.dirty || inp.touched))}\" (keyup)=\"onInput(inp)\"\n                    />\n                </div>\n                <label *ngIf=\"showlabel\">EXP DATE</label>\n                <div class=\"expiration-dateSglCol\">\n                    <div class=\"monthSglCol\">\n                        <select [ngModel]=\"dummyMonth\" (ngModelChange)=\"onChangeMonth($event)\" placeholder=\"MM\" style=\"padding:10px\">\n                            <option *ngFor=\"let months of dateData\">{{months.month}}</option>\n                        </select>\n                    </div>\n                    <div class=\"dateSglCol\">\n                        <select [(ngModel)]=\"creditCardModel.expYear\" yearControl=\"yearControl\" style=\"padding:10px\" placeholder=\"YY\">\n                            <option *ngFor=\"let year of yearList\">{{year}}</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"cvvSglCol\">\n                    <label *ngIf=\"showlabel\">CVV</label>\n                    <input #inpcvv=\"ngModel\" [ngClass]=\"{'input-control-success':isCvvValid,'input-control-failure':(!isCvvValid && inpcvv.touched)}\"\n                        type=\"password\" placeholder=\"CVV\" maxlength=\"3\" class=\"input-control\" [(ngModel)]=\"creditCardModel.cvv\" (keyup)=\"onClick(inpcvv)\">\n                </div>\n            </div>\n            </ng-container>\n            <br>\n            <ng-container *ngIf=\"!templateFlag\">\n            <div class=\"creditCardForm\">\n                <div class=\"owner\">\n                    <label *ngIf=\"showlabel\">CARD HOLDER NAME</label>\n                    <input [ngClass]=\"{'input-control-success':isNameValid,'input-control-failure':(!isNameValid && inpowner.touched)}\" type=\"text\" placeholder=\"CARD HOLDER NAME\"\n                       #inpowner=\"ngModel\" class=\"input-control\" [(ngModel)]=\"creditCardModel.owner\" (keyup)=\"onNameClick(inpowner)\">\n                </div>\n                <div [ngClass]=\"{'image-label':showlabel==true,'image':showlabel==false}\">\n                    <i *ngFor=\"let cardimage of cardGroupData\" [style.color]=\"cardimage.color\" [attr.class]=\"cardimage.iconName\" style=\"font-size:40px\"></i>\n                </div>\n        \n        \n                <div class=\"cardNumber\">\n                    <label *ngIf=\"showlabel\">CARD NUMBER</label>\n                    <input type=\"text\" placeholder=\"CARD NUMBER\" maxlength=\"19\" class=\"input-control\" [ngModel]=\"dummyCreditCardNumber\" (ngModelChange)=\"onChangeCardNumber($event)\"\n                    [value]=\"cardNumberValue\"   #inp=\"ngModel\" [ngClass]=\"{'input-control-success':validPatternCard,'input-control-failure':(!validPatternCard && (inp.dirty || inp.touched))}\" (keyup)=\"onInput(inp)\" />\n                </div>\n        \n                <div [ngClass]=\"{'expiration-date-label':showlabel==true,'expiration-date':showlabel==false}\" >\n                    <label *ngIf=\"showlabel\">EXP DATE</label>\n                    <div class=\"exp-month-date-label\">\n                        <div class=\"month\">\n                            <select [ngModel]=\"dummyMonth\" (ngModelChange)=\"onChangeMonth($event)\" style=\"padding:10px\" placeholder=\"MM\">\n                                <option *ngFor=\"let months of dateData\">{{months.month}}</option>\n                            </select>\n                        </div>\n                        <div class=\"date\">\n                            <select [(ngModel)]=\"creditCardModel.expYear\" yearControl=\"yearControl\" style=\"padding:10px\" placeholder=\"YY\">\n                                <option *ngFor=\"let year of yearList\">{{year}}</option>\n                            </select>\n                        </div>\n                    </div>\n        \n                </div>\n        \n                <div class=\"cvv\">\n                    <label *ngIf=\"showlabel\">CVV</label>\n                    <input #inpcvv=\"ngModel\" [ngClass]=\"{'input-control-success':isCvvValid,'input-control-failure':(!isCvvValid && (inpcvv.dirty ||inpcvv.touched))}\"\n                        type=\"password\" placeholder=\"CVV\" maxlength=\"3\" class=\"input-control\" [(ngModel)]=\"creditCardModel.cvv\" (keyup)=\"onClick(inpcvv)\">\n                </div>\n            </div>\n            </ng-container>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AmexioCreditcardComponent), multi: true,\n  }],\n  styles: [`\n\n  `],\n})\nexport class AmexioCreditcardComponent implements ControlValueAccessor, OnInit {\n  /*\n  Properties\n  name : yearcount\n  datatype : string\n  version : 5.2.3onwards\n  default :\n  description : the minexp will set the dropdown to user defined dropdown.\n  */\n  @Input('year-count') yearcount = 12;\n  /*\n Properties\n name : showlabel\n datatype : boolean\n version : 5.2.3onwards\n default :\n description : the showlabel will set the label of creditcard.\n */\n  @Input('show-label') showlabel = 'false';\n  /*\n Properties\n name : template\n datatype : String\n version : 5.2.3onwards\n default :\n description : the template\n */\n  @Input('template') template: string;\n  templateFlag: boolean;\n  creditCardModel: AmexioCreditCardModel;\n  inp: string;\n  cardName: any;\n  cardPattern: any;\n  isNameValid = false;\n  isCvvValid = false;\n  cardRegexMap: Map<any, string>;\n  cardPatternMap: Map<any, string>;\n  visaEagerReg: any = /^4/;\n  visaReg: any = /^4\\d{12}(\\d{3}|\\d{6})?$/;\n  mastropattern: any = /^(?:5[06789]\\d\\d|(?!6011[0234])(?!60117[4789])(?!60118[6789])(?!60119)(?!64[456789])(?!65)6\\d{3})\\d{8,15}$/;\n  masttroeagerPattern: any = /^(5(018|0[23]|[68])|6[37]|60111|60115|60117([56]|7[56])|60118[0-5]|64[0-3]|66)/;\n  masterpattern: any = /^5[1-5]\\d{14}$/;\n  mastereagerPattern: any = /^5[1-5]/;\n  validEagerCard: any;\n  validPatternCard: any;\n  isFullCardValid = false;\n  cvvRegex: any = /^[0-9]{3,4}$/;\n  dateData: any;\n  year: Date = new Date();\n  currentYear: any;\n  yearList: any[] = [];\n  eagarflag: boolean;\n  eagarValue = '';\n  fullPatternValue = '';\n  fullPatternflag: boolean;\n  isValidFullString: boolean;\n  cardGroupData: any;\n  cardNumberValue: string;\n  dummyCreditCardNumber: string;\n  dummyMonth: string;\n  // The internal dataviews model\n  // Placeholders for the callbacks which are later provided\n  // by the Control Value Accessor\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  // From ControlValueAccessor Interface\n  writeValue(modelValue: any) {\n    if (modelValue) {\n      this.creditCardModel = modelValue;\n      this.onChangeCardNumber(this.creditCardModel.cardnumber);\n      this.onChangeMonth('0' + this.creditCardModel.expMonth);\n      this.isNameValid = true;\n      this.isCvvValid = this.cvvRegex.test(this.creditCardModel.cvv);\n      this.cardRegexMap.forEach((value: any, key: string) => {\n        const isEagarValid = value.test(this.dummyCreditCardNumber);\n        if (isEagarValid) {\n          this.eagarflag = isEagarValid;\n          this.eagarValue = key;\n        }\n      });\n      this.validEagerCard = this.eagarValue;\n      this.switchCaseMethod();\n      this.onCheckValidation();\n\n    }\n  }\n  onChangeCardNumber(event: any) {\n    this.dummyCreditCardNumber = this.creditCardNumberSpaceRemove(event);\n    const concatCardNumber = this.replaceSpace(this.dummyCreditCardNumber);\n    this.cardPatternMap.forEach((value: any, key: string) => {\n      // Condition for Full String Regex\n      this.isValidFullString = value.test(concatCardNumber);\n      if (this.isValidFullString) {\n        this.fullPatternflag = this.isValidFullString;\n        this.fullPatternValue = key;\n      }\n    });\n    this.validPatternCard = this.fullPatternValue;\n    this.creditCardModel.cardnumber = +concatCardNumber;\n  }\n  // From ControlValueAccessor Interface\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  // From ControlValueAccessor Interface\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  // method to check owners length\n  onNameClick(inp: any) {\n    if (inp.model.length > 0) {\n      this.isNameValid = true;\n    } else {\n      this.isNameValid = false;\n    }\n  }\n  // method to check Cvv Number\n  onClick(inpcvv: any) {\n    this.isCvvValid = this.cvvRegex.test(inpcvv.model);\n  }\n  // method to check Card Number\n  onInput(inp: any) {\n    // Condition for null check\n    if (inp.model !== '') {\n      let fullPatternFlag: boolean;\n      let isValidFullString: boolean;\n      let fullPatternValue = '';\n      const concatValue = this.replaceSpace(inp.model);\n      this.cardPatternMap.forEach((value: any, key: string) => {\n        // Condition for Full String Regex\n        isValidFullString = value.test(concatValue);\n        if (isValidFullString) {\n          fullPatternFlag = isValidFullString;\n          fullPatternValue = key;\n        }\n      });\n      this.validPatternCard = fullPatternValue;\n      let eagarflag: boolean;\n      let eagarValue = '';\n      this.cardRegexMap.forEach((value: any, key: string) => {\n        const isEagarValid = value.test(concatValue);\n        if (isEagarValid) {\n          eagarflag = isEagarValid;\n          eagarValue = key;\n        }\n      });\n      this.validEagerCard = eagarValue;\n    } else {\n      this.validEagerCard = '';\n    }\n    this.switchCaseMethod();\n    this.onCheckValidation();\n    if (inp.model !== '') {\n      this.cardNumberValue = this.creditCardNumberSpaceRemove(inp.model);\n    }\n\n  }\n  // THIS MEHTOD IS SUED FOR REPALCE SPACE WITH STRING AND RETURN TO REGEX\n  private replaceSpace(value: any): string {\n    let newString = '';\n    if (value) {\n      const stringArray = value.split(' ');\n      if (stringArray) {\n        stringArray.forEach((element: any) => {\n          newString = newString.concat(element);\n        });\n      }\n    }\n    return newString;\n  }\n  // Map Implementation for key value pair\n  ngOnInit() {\n    this.cardRegexMap = new Map();\n    this.cardPatternMap = new Map();\n    this.cardRegexMap.set('eagerflagvisa', this.visaEagerReg);\n    this.cardRegexMap.set('mastereagerPattern', this.mastereagerPattern);\n    this.cardRegexMap.set('masttroeagerPattern', this.masttroeagerPattern);\n    this.cardPatternMap.set('visaReg', this.visaReg);\n    this.cardPatternMap.set('masterpattern', this.masterpattern);\n    this.cardPatternMap.set('mastropattern', this.mastropattern);\n    this.cardName = '';\n    this.currentYear = this.year.getFullYear();\n\n    if (this.template === 'single-column') {\n      this.templateFlag = true;\n    } else if (this.template === 'double-column') {\n      this.templateFlag = false;\n    }\n    for (let i = 0; i < this.yearcount; i++) {\n      this.yearList.push(this.currentYear + i);\n    }\n\n  }\n  creditCardNumberSpaceRemove(value: any) {\n    value = value.toString();\n    const v = value.replace(/\\s+/g, '').replace(/[^0-9]/gi, '');\n    const matches = v.match(/\\d{4,16}/g);\n    const match = matches && matches[0] || '';\n    const parts = [];\n    let len;\n    let i;\n    for (i = 0, len = match.length; i < len; i += 4) {\n      parts.push(match.substring(i, i + 4));\n    }\n    if (parts.length) {\n      return parts.join(' ');\n    } else {\n      return value;\n    }\n  }\n  switchCaseMethod() {\n    switch (this.validEagerCard) {\n      case 'eagerflagvisa':\n        this.cardName = 'fa fa-cc-visa';\n        break;\n      case 'mastereagerPattern':\n        this.cardName = 'fa fa-cc-mastercard';\n        break;\n      case 'masttroeagerPattern':\n        this.cardName = 'fa fa-credit-card';\n        break;\n      case '':\n        this.cardName = '';\n        break;\n      default:\n        this.cardName = '';\n        break;\n    }\n  }\n  onCheckValidation() {\n    this.cardGroupData.forEach((element: any) => {\n      if (element.key === this.validEagerCard) {\n        element.color = 'blue';\n      } else {\n        element.color = 'black';\n      }\n    });\n  }\n  constructor() {\n    if (this.template === 'single-column') {\n      this.templateFlag = true;\n    } else if (this.template === 'double-column') {\n      this.templateFlag = false;\n    }\n    this.creditCardModel = new AmexioCreditCardModel();\n    this.dummyMonth = '0' + this.creditCardModel.expMonth;\n    this.dateData = [\n      {\n        month: '01',\n      },\n      {\n        month: '02',\n      },\n      {\n        month: '03',\n      },\n      {\n        month: '04',\n      },\n      {\n        month: '05',\n      },\n      {\n        month: '06',\n      },\n      {\n        month: '07',\n      },\n      {\n        month: '08',\n      },\n      {\n        month: '09',\n      },\n      {\n        month: '10',\n      },\n      {\n        month: '11',\n      },\n      {\n        month: '12',\n      },\n    ];\n    this.cardGroupData = [\n      {\n        iconName: 'fa fa-cc-visa',\n        key: 'eagerflagvisa',\n        color: 'black',\n      },\n      {\n        iconName: 'fa fa-cc-mastercard',\n        key: 'mastereagerPattern',\n        color: 'black',\n      },\n      {\n        iconName: 'fa fa-credit-card',\n        key: 'masttroeagerPattern',\n        color: 'black',\n      },\n    ];\n  }\n  onChangeMonth(event: any) {\n    this.dummyMonth = event;\n    this.creditCardModel.expMonth = +this.dummyMonth;\n  }\n}\n","import { ChangeDetectorRef, ElementRef, Renderer2 } from '@angular/core';\nimport { AmexioFormValidator } from '../forms/form-validator/amexio.form.validator.component';\nimport { BaseInput } from './base.input.component';\n\nexport class  ListBaseDatepickerComponent<T> extends AmexioFormValidator {\n\n    self = false;\n    itemClick = false;\n    dropdownstyle: any;\n    documentClickListener: any;\n\n    constructor(private renderer: Renderer2, public element: ElementRef, private cd: ChangeDetectorRef) {\n      super();\n      this.hide();\n    }\n\n    focus(event: any) {\n        this.self = true;\n        this.dropdownstyle = {visibility: 'visible'};\n        this.bindDocumentClickListener();\n    }\n\n    blur(event: any) {\n        this.itemClicked();\n    }\n\n    itemClicked() {\n        this.itemClick = true;\n        this.hide();\n        this.unbindDocumentClickListener();\n        this.clearClicks();\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n             this.documentClickListener = this.renderer\n                                              .listen('document', 'click', (event: any) => this.handleDocumentListener(event));\n\n        }\n\n    }\n\n    handleDocumentListener(event: any) {\n        if (!this.self && !this.itemClick) {\n            this.hide();\n            this.unbindDocumentClickListener();\n        }\n        this.clearClicks();\n        this.cd.markForCheck();\n    }\n\n    clearClicks() {\n        this.self = false;\n        this.itemClick = false;\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n\n    }\n\n    hide() {\n        this.dropdownstyle = {visibility: 'hidden'};\n    }\n}\n","/*\n Component Name : Amexio Date time picker\n Component Selector :  <amexio-date-time-picker>\n Component Description : This component is flexible for both Date and time picker with all required configurations in Style.\n */\nimport {\n  ChangeDetectorRef, Component, ElementRef,\n  EventEmitter, forwardRef, Input, OnInit, Output, Renderer2,\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgModel, Validators } from '@angular/forms';\nimport { ListBaseDatepickerComponent } from '../../base/list.base.datepicker.component';\nimport { AmexioFormValidator } from './../form-validator/amexio.form.validator.component';\n\nconst noop = () => {\n};\n\n@Component({\n  selector: 'amexio-date-time-picker',\n  template: `\n    <div>\n      <div class=\"inputgroup\" *ngIf=\"!inlineDatepicker\" #rootDiv>\n\n        <label>\n          {{fieldlabel}}\n        </label>\n\n        <ng-container *ngIf=\"datepicker && !timepicker\">\n          <input type=\"text\" #pickerDt value=\"{{dateModel|date:dateformat}}\" [attr.disabled]=\"disabled ? true: null\" [required]=\"required ? true: null\"\n                 (blur)=\"onBlur()\" (focus)=\"onFocus(rootDiv)\" (focusout)=\"onFocusOut(pickerDt)\" (change)=\"change.emit()\" class=\"input-control\"\n                 [ngStyle]=\"{'cursor': readonly ? 'not-allowed':'pointer'}\" placeholder=\"Choose Date\" />\n        </ng-container>\n\n        <ng-container *ngIf=\"timepicker\">\n          <input type=\"text\" [(ngModel)]=\"selectedDate\" value=\"{{selectedDate|date:dateformat}} {{hrs + ' : ' + min}}\" [attr.disabled]=\"disabled ? true: null\"\n                 [attr.required]=\"required ? true: null\" (blur)=\"onBlur()\" (focus)=\"onFocus(rootDiv)\" (input)=\"onInput($event)\"\n                 (change)=\"change.emit()\" class=\"input-control\" [ngStyle]=\"{'cursor': readonly ? 'not-allowed':'pointer'}\" placeholder=\"Choose Time\"\n          />\n        </ng-container>\n\n        <div class=\"drodown-caret-down\" style=\"cursor: pointer\" (click)=\"openPicker(rootDiv)\">\n          <ng-container *ngIf=\"timepicker\">\n            <amexio-form-icon key=\"datepicker-clock-icon\"></amexio-form-icon>\n          </ng-container>\n          <ng-container *ngIf=\"!timepicker\">\n            <amexio-form-icon key=\"datepicker_calendar\"></amexio-form-icon>\n          </ng-container>\n\n        </div>\n\n\n      </div>\n\n      <div [ngStyle]=\"dropdownstyle\" [ngStyle]=\"positionClass\" [ngClass]=\"{'datetimepicker1':inlineDatepicker , 'datetimepicker':!inlineDatepicker}\">\n\n        <div class=\"datetimepickertopbar\" [ngStyle]=\"{'display': datepicker ? 'block' : 'none'}\">\n          <ul>\n            <li class=\"prev\">\n              <amexio-form-icon key=\"datepicker_previous_fast\" (onClick)=\"prevYear($event)\"></amexio-form-icon>\n              <amexio-form-icon key=\"datepicker_previous\" (onClick)=\"prevMonth($event)\"></amexio-form-icon>\n            </li>\n            <li class=\"next\">\n              <amexio-form-icon key=\"datepicker_next\" (onClick)=\"nextMonth($event)\"></amexio-form-icon>\n              <amexio-form-icon key=\"datepicker_next_fast\" (onClick)=\"nextYear($event)\"></amexio-form-icon>\n            </li>\n            <li>\n                        <span *ngIf=\"dropdownDatepicker\">\n                        <span style=\"cursor:pointer\"(click)=\"dropdownDatePicker()\">\n                            {{selectedDate | date:'MMMM'}}\n                            <br>\n                            <span class=\"title\">{{selectedDate | date:'y'}}</span>\n                        </span>\n                        <span  (onClick)=\" dropdownDatePicker()\" style=\"cursor:pointer\">\n                            <amexio-form-icon key=\"dropdown_caret\" (onClick)=\"dropdownDatePicker()\"></amexio-form-icon>\n                        </span>\n                    </span>\n\n              <span *ngIf=\"!dropdownDatepicker\">\n                        {{selectedDate | date:'MMMM'}}\n                        <br>\n                        <span class=\"title\" style=\"cursor:auto\">{{selectedDate | date:'y'}}</span>\n                    </span>\n\n            </li>\n          </ul>\n        </div>\n        <div *ngIf=\"!drop\">\n          <ul class=\"weekdays\" [ngStyle]=\"{'display': datepicker ? 'block' : 'none'}\">\n            <li *ngFor=\"let dayTitle of daysTitle\">{{dayTitle.text}}</li>\n          </ul>\n\n          <ul class=\"days\" [ngStyle]=\"{'display': datepicker ? 'block' : 'none'}\">\n\n            <ng-container *ngFor=\"let dayArray of daysArray\">\n              <li *ngFor=\"let day of dayArray\" (click)=\"onDateClick(day.date)\" [ngClass]=\"{'date1':validateDays(day.date) , 'date1':day.isDisabled}\">\n                            <span (click)=\"onDateClick(day.date)\" class=\"day\" [ngClass]=\"{'active':day.selected, 'currentMonth':day.isCurrentMonth, 'notCurrentMonth':!day.isCurrentMonth,'invaliddays':validateDays(day.date), 'disabled':day.isDisabled}\">\n                                {{ day.date | date:'d' }}\n                            </span>\n              </li>\n            </ng-container>\n\n\n            <li class=\"date-today\">\n              <amexio-button type=\"primary\" label=\"TODAY\" (onClick)=\"setToday()\" size=\"small\"></amexio-button>\n            </li>\n\n\n          </ul>\n        </div>\n        <table class=\"table\"  [ngStyle]=\"{'display': timepicker ? 'block' : 'none'}\" style=\"cursor : pointer;text-align: center;padding: 5px;\">\n          <!--if picker is true-->\n          <tr style=\"padding: 10px;\">\n            <td colspan=\"2\"></td>\n            <td (click)=\"plus('hrs', $event);\">&#9650;</td>\n            <td></td>\n            <td (click)=\"plus('min', $event);\">&#9650;</td>\n            <td colspan=\"2\"></td>\n          </tr>\n          <tr>\n            <td colspan=\"2\"></td>\n            <td>{{hrs}}</td>\n            <td>:</td>\n            <td>{{min}}</td>\n            <td colspan=\"2\">\n            </td>\n          </tr>\n          <tr>\n            <td colspan=\"2\"></td>\n            <td (click)=\"minus('hrs', $event);\">&#9660;</td>\n            <td></td>\n            <td (click)=\"minus('min', $event);\">&#9660;</td>\n            <td colspan=\"2\">\n            </td>\n          </tr>\n\n        </table>\n\n        <!--dropdown datepicker -->\n        <div [ngStyle]=\"positionClass\" class=\"datedropdown\" *ngIf=\"drop && !timepicker\">\n\n          <div class=\"dropdiv1\">\n\n                    <span class=\"dropspan1\">\n                        <ul class=\"dropul1\">\n                            <li class=\"li4\" (click)=\"getDropdownMonth(month)\" *ngFor=\"let month of monthList1\">\n                                <span [ngClass]=\"{'change4':month.flag}\"> {{month.name}}</span>\n                            </li>\n\n                        </ul>\n                    </span>\n\n            <span class=\"dropspan2\">\n                        <ul class=\"dropul2\">\n                            <li class=\"li4\" (click)=\"getDropdownMonth(month)\" *ngFor=\"let month of monthList2\">\n                                <span [ngClass]=\"{'change4':month.flag}\"> {{month.name}}</span>\n                            </li>\n\n                        </ul>\n                    </span>\n\n            <span class=\"dropspan1\">\n                        <ul class=\"dropul1\">\n                            <li [ngClass]=\"{ 'disablearrow':backArrowFlag}\" class=\"dropiconpadding\" (click)=\"arrowClickBack()\">\n                                <amexio-form-icon key=\"paginator_first\" (onClick)=\"arrowClickBack()\"></amexio-form-icon>\n                            </li>\n                            <li [ngClass]=\"{ 'disablearrow':year.disabled}\" class=\"li4\" (click)=\"getDropdownYear(year)\" *ngFor=\"let year of yearList1\">\n                                <span [ngClass]=\"{'change4':year.flag && !year.disabled}\">\n                                    {{year.year}}\n                                </span>\n                            </li>\n\n\n                        </ul>\n                    </span>\n\n            <span class=\"dropspan4\">\n                        <ul class=\"dropul2\">\n\n                            <li [ngClass]=\"{ 'disablearrow':forwardArrowFlag}\" class=\"dropiconpadding\" (click)=\"arrowClickForward()\">\n                                <amexio-form-icon key=\"paginator_last\" (onClick)=\"arrowClickForward()\"></amexio-form-icon>\n                            </li>\n                            <li [ngClass]=\"{ 'disablearrow ':year.disabled}\" class=\"li4\" (click)=\"getDropdownYear(year)\" *ngFor=\"let year of yearList2\">\n                                <span [ngClass]=\"{'change4':year.flag && !year.disabled}\">\n                                    {{year.year}}\n                                </span>\n                            </li>\n\n                        </ul>\n                    </span>\n\n          </div>\n          <div class=\"btndiv1\">\n                    <span class=\"dropbtnspan\">\n                        <button (click)=\"navigateDropdown()\" class=\"datedropbtn\">\n                            ok\n                        </button>\n                        <button class=\"datedropbtn\" (click)=\"negateDrop()\">\n                            cancel\n                        </button>\n                    </span>\n\n\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n  `],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AmexioDateTimePickerComponent), multi: true,\n  }, {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => AmexioDateTimePickerComponent), multi: true,\n  }],\n})\nexport class AmexioDateTimePickerComponent extends ListBaseDatepickerComponent<string> implements OnInit, Validators {\n  /*\n   Properties\n   name : date-format\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : The label of this field\n   */\n  @Input('date-format') dateformat: string;\n  /*\n   Properties\n   name : date-picker\n   datatype : boolean\n   version : 4.0 onwards\n   default : false\n   description : Enable/Disable Date Picker\n   */\n  @Input('date-picker') datepicker: boolean;\n  /*\n   Properties\n   name : time-picker\n   datatype : boolean\n   version : 4.0 onwards\n   default : false\n   description : Enable/Disable Time Picker\n   */\n  @Input('time-picker') timepicker: boolean;\n  /*\n   Properties\n   name : field-label\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description :The label of this field\n   */\n  @Input('field-label') fieldlabel: string;\n  /*\n   Properties\n   name : disabled\n   datatype : boolean\n   version : 4.1.5 onwards\n   default : false\n   description : Disable Date/Time Picker field\n   */\n  @Input('disabled') disabled: boolean;\n  /*\n   Properties\n   name : read-only\n   datatype : boolean\n   version : 4.0 onwards\n   default : false\n   description : Disable Date/Time Picker field\n   */\n  @Input('read-only') readonly: boolean;\n  /*\n   Properties\n   name : min-date\n   datatype : string\n   version : 4.2 onwards\n   default : none\n   description : sets minimum date range\n   */\n  @Input('min-date') minDate: string;\n  /*\n   Properties\n   name : max-date\n   datatype : string\n   version : 4.2 onwards\n   default : none\n   description : sets maximum date range\n   */\n  @Input('max-date') maxDate: string;\n  /*\n   Properties\n   name : diabled-date\n   datatype :  any\n   version : 4.2 onwards\n   default : none\n   description : sets disabled dates range\n   */\n  @Input('disabled-date') diabledDate: any[] = [];\n  /*\n   Properties\n   name : inline-datepicker\n   datatype :  boolean\n   version : 4.2 onwards\n   default : none\n   description : sets inline calender\n   */\n  @Input('inline-datepicker') inlineDatepicker = false;\n  /*\n   Properties\n   name : dropdown-datepicker\n   datatype :  boolean\n   version : 4.2 onwards\n   default : none\n   description : sets dropdown datepicker\n   */\n  @Input('dropdown-datepicker') dropdownDatepicker = false;\n  /*\n   Properties\n   name : required\n   datatype : boolean\n   version : 4.0 onwards\n   default : false\n   description : Flag to allow blank field or not\n   */\n  @Input() required = false;\n  posixUp: boolean;\n  positionClass: any;\n  /*\n   Events\n   name : blur\n   description : On blur event\n   */\n  // @Output() blur: EventEmitter<any> = new EventEmitter<any>();\n  /*\n   Properties\n   name : change\n   description : On field value change event\n   */\n  @Output() change: EventEmitter<any> = new EventEmitter<any>();\n  /*\n   Properties\n   name : input\n   description : On input event field.\n   */\n  @Output() input: EventEmitter<any> = new EventEmitter<any>();\n  /*\n   Properties\n   name : focus\n   description : On field focus event\n   */\n  // @Output() focus: EventEmitter<any> = new EventEmitter<any>();\n  showToolTip: boolean;\n  drop = false;\n  elementId: string;\n  daysTitle: any[];\n  tempFlag = true;\n  curYear: any;\n  curMonth: any;\n  monthNo: any;\n  yearNo: any;\n  pickerele: any;\n  daysArray: any;\n  yearList1: any[];\n  yearList2: any[];\n  monthList1: any[];\n  monthList2: any[];\n  selectedDate: any;\n  hostFlag = false;\n  currrentDate: any;\n  dateModel: any;\n  isValid: boolean;\n  @Output() isComponentValid: any = new EventEmitter<any>();\n  backArrowFlag = false;\n  forwardArrowFlag = false;\n  hrs: number;\n  min: number;\n  viewmode: string;\n  // The internal dataviews model\n  private innerValue: any = '';\n  // Placeholders for the callbacks which are later provided\n  // by the Control Value Accessor\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n  constructor(public element: ElementRef, private cdf: ChangeDetectorRef, renderer: Renderer2) {\n    super(renderer, element, cdf);\n    this.viewmode = '1';\n\n    this.yearList1 = [{ year: 0, flag: false, disabled: false }, { year: 0, flag: false, disabled: false },\n    { year: 0, flag: false, disabled: false }, { year: 0, flag: false, disabled: false },\n    { year: 0, flag: false, disabled: false }];\n    this.yearList2 = [{ year: 0, flag: false, disabled: false }, { year: 0, flag: false, disabled: false },\n    { year: 0, flag: false, disabled: false }, { year: 0, flag: false, disabled: false },\n    { year: 0, flag: false, disabled: false }];\n    this.monthList1 = [{ name: 'Jan', flag: false, num: 4 }, { name: 'Feb', flag: false },\n    { name: 'Mar', flag: false }, { name: 'Apr', flag: false }, { name: 'May', flag: false },\n    { name: 'Jun', flag: false }];\n    this.monthList2 = [{ name: 'Jul', flag: false }, { name: 'Aug', flag: false }, { name: 'Sep', flag: false },\n    { name: 'Oct', flag: false }, { name: 'Nov', flag: false }, { name: 'Dec', flag: false }];\n    this.minDate = '';\n    this.maxDate = '';\n    this.elementId = new Date().getTime() + '';\n    this.selectedDate = new Date();\n    this.currrentDate = new Date();\n    this.curYear = this.currrentDate.getFullYear();\n    let i = 0;\n    let j = 0;\n    for (i = 4; i >= 0; i--) {\n      this.yearList1[j].year = this.curYear - i;\n      j++;\n    }\n    j = 0;\n    for (i = 1; i <= 5; i++) {\n      this.yearList2[j].year = this.curYear + i;\n      j++;\n    }\n    this.daysTitle = [];\n    this.daysArray = [];\n    this.timepicker = false;\n    this.hrs = this.currrentDate.getHours();\n    this.min = this.currrentDate.getMinutes();\n    this.initDaysTitle();\n    this.createDaysForCurrentMonths(this.currrentDate);\n    this.monthList1.forEach((tmpElement: any) => {\n    });\n  }\n  ngOnInit() {\n    if (this.inlineDatepicker) {\n      this.showToolTip = true;\n      this.dropdownstyle = { visibility: 'visible' };\n    }\n    this.isValid = !this.required;\n    this.isComponentValid.emit(!this.required);\n    if (this.dateformat != null) {\n      this.dateformat = 'dd/MM/yyyy';\n    }\n    if (this.minDate.length > 0 || this.maxDate.length > 0) {\n      this.minMaxDateFound();\n    }  // main if ends\n    // logic for disabling yrs before min and after max\n    if (this.minDate.length > 0 || this.maxDate.length > 0) {\n      const min = new Date(this.minDate);\n      const max = new Date(this.maxDate);\n      this.yearList1.forEach((element: any) => {\n        this.disableMinMaxYear(element, min, max);\n      });\n      this.yearList2.forEach((element: any) => {\n        this.disableMinMaxYear(element, min, max);\n      });\n    }\n  }\n  private initDaysTitle() {\n    this.daysTitle.push({ text: 'Mo' });\n    this.daysTitle.push({ text: 'Tu' });\n    this.daysTitle.push({ text: 'We' });\n    this.daysTitle.push({ text: 'Th' });\n    this.daysTitle.push({ text: 'Fr' });\n    this.daysTitle.push({ text: 'Sa' });\n    this.daysTitle.push({ text: 'Su' });\n  }\n  private createDaysForCurrentMonths(selectedPeriod: any) {\n    this.daysArray = [];\n    const date = new Date(selectedPeriod.getFullYear(), selectedPeriod.getMonth(), 1, 0, 0, 0, 0); // Starting at the 1st of the month\n    const extras = (date.getDay() + 6) % 7; // How many days of the last month do we need to include?\n    date.setDate(date.getDate() - extras); // Skip back to the previous monday\n    while (this.daysArray.length < 6) {\n      const rowDays = [];\n      for (let i = 0; i < 7; i++) {\n        const day: any = {\n          date: null, selected: false, isCurrentMonth: null, isDisabled: false,\n        };\n        day.date = new Date(date.getTime());\n        day.isCurrentMonth = (date.getMonth() === selectedPeriod.getMonth());\n        if (this.dateModel && (date.getMonth() === this.dateModel.getMonth()) && (date.getDate() === this.dateModel.getDate())) {\n          day.selected = true;\n        } else if ((date.getMonth() === this.currrentDate.getMonth()) && (date.getDate() === this.currrentDate.getDate())) {\n          if (this.dateModel) {\n            day.selected = false;\n          } else {\n            day.selected = true;\n          }\n        }\n        rowDays.push(day);\n        date.setDate(date.getDate() + 1);\n      }\n      this.daysArray.push(rowDays);\n    }\n  }\n  onDateClick(dateObj: any) {\n    if (this.inlineDatepicker === false) {\n      super.itemClicked();\n    }\n    this.hostFlag = true;\n    this.selectedDate = dateObj;\n    this.selectedDate.setHours(this.hrs);\n    this.selectedDate.setMinutes(this.min);\n    this.resetSelection(dateObj);\n    this.dateModel = this.selectedDate;\n    this.value = this.selectedDate;\n    this.isValid = true;\n    this.isComponentValid.emit(true);\n    if (this.inlineDatepicker) {\n      this.showToolTip = true;\n    } else {\n      this.showToolTip = !this.showToolTip;\n    }\n  }\n  resetSelection(dateObj: any) {\n    for (const i of this.daysArray) {\n      for (const j of i) {\n        const day = j;\n        if (day.date.getTime() === dateObj.getTime()) {\n          day.selected = true;\n        } else {\n          day.selected = false;\n        }\n      }\n    }\n  }\n  onInput(event: any) {\n    if (event.target.value != null && event.target.value !== '') {\n      const timeValue = event.target.value.split(':');\n      if (timeValue != null) {\n        const hrs = parseInt(timeValue[0].trim(), 10);\n        const mins = parseInt(timeValue[1].trim(), 10);\n        this.selectedDate.setHours(hrs);\n        this.selectedDate.setMinutes(mins);\n        this.hrs = hrs;\n        this.min = mins;\n        this.value = this.selectedDate;\n        this.change.emit(this.value);\n        event.stopPropagation();\n      }\n    }\n  }\n  public nextMonth(event: any) {\n    this.setDateData('plus', 1, event);\n    this.disableddays(this.diabledDate);\n  }\n  public prevMonth(event: any) {\n    this.setDateData('minus', 1, event);\n    this.disableddays(this.diabledDate);\n  }\n  public nextYear(event: any) {\n    this.setDateData1('plus', 12, event);\n  }\n  public prevYear(event: any) {\n    this.setDateData1('minus', 12, event);\n  }\n  // this function validates month\n  setDateData(state: string, mon: number, event: any) {\n    const d = new Date(this.currrentDate.getFullYear(), this.currrentDate.getMonth(), this.currrentDate.getDate());\n    const min = new Date(this.minDate);\n    const max = new Date(this.maxDate);\n    // checks if selected date is within maximum range of month\n    if (state === 'plus') {\n      this.setPlusData(d, max, mon);\n    } else if (state === 'minus') {\n      this.setMinusData(d, min, mon);\n    }\n    this.currrentDate = d;\n    this.initDate();\n    event.stopPropagation();\n  }\n\n  // Set Plus Data\n  setPlusData(d: any, max: any, mon: any) {\n    if (this.maxDate.length > 0) {\n      if (d.getFullYear() === max.getFullYear()) {\n        this.setMaxFullYear(d, max, mon);\n      } else {\n        // logic to chk if year is valid\n        if (d.getFullYear() <= max.getFullYear()) {\n          d.setMonth(d.getMonth() + mon);\n        }\n      }\n    } else { // outer ends\n      d.setMonth(d.getMonth() + mon);\n    } // checks if selected date is within minimum range of month\n  }\n\n  // Set Max Full Year\n  setMaxFullYear(d: any, max: any, mon: any) {\n    if ((d.getMonth() !== max.getMonth()) && d.getFullYear() <= max.getFullYear() && d.getMonth() <= max.getMonth()) {\n      d.setMonth(d.getMonth() + mon);\n    }\n  }\n  // Set Minus Data\n  setMinusData(d: any, min: any, mon: any) {\n    if (this.minDate.length > 0) {\n      if (d.getFullYear() === min.getFullYear()) {\n        this.setMinFullYear(d, min, mon);\n      } else {\n        d.setMonth(d.getMonth() - mon);\n      }\n    } else {\n      d.setMonth(d.getMonth() - mon);\n    }\n  }\n\n  // Set Min Full year\n  setMinFullYear(d: any, min: any, mon: any) {\n    if ((d.getMonth() !== min.getMonth()) && d.getFullYear() >= min.getFullYear() && d.getMonth() >= min.getMonth()) {\n      // logic to chk if year is valid\n      d.setMonth(d.getMonth() - mon);\n    }\n  }\n  // this function validates year\n  setDateData1(state: string, mon: number, event: any) {\n    const d = new Date(this.currrentDate.getFullYear(), this.currrentDate.getMonth(), this.currrentDate.getDate());\n    const min = new Date(this.minDate);\n    const max = new Date(this.maxDate);\n    // checks if selected date is within maximum range of year\n    if (state === 'plus') {\n      if (this.maxDate.length > 0) {\n        if (d.getFullYear() <= max.getFullYear() - 1) {\n          d.setMonth(d.getMonth() + mon);\n        }\n      } else {\n        d.setMonth(d.getMonth() + mon);\n      }  // checks if selected date is within minimum range of year\n    } else if (state === 'minus') {\n      if (this.minDate.length > 0) {\n        if (d.getFullYear() >= min.getFullYear() + 1) {\n          d.setMonth(d.getMonth() - mon);\n        }\n      } else {\n        d.setMonth(d.getMonth() - mon);\n      }\n    }\n    this.currrentDate = d;\n    this.initDate();\n    event.stopPropagation();\n  }\n  private setToday() {\n    this.currrentDate = new Date();\n    this.initDate();\n    this.showToolTip = !this.showToolTip;\n  }\n  initDate() {\n    this.daysArray = [];\n    this.createDaysForCurrentMonths(this.currrentDate);\n    this.selectedDate = this.currrentDate;\n    this.dateModel = this.selectedDate;\n    this.value = this.selectedDate;\n    this.innerValue = '';\n  }\n  plus(type: string, event: any) {\n    if (type === 'min') {\n      if (this.min === 59) {\n        this.min = -1;\n        this.hrs++;\n      }\n      this.min++;\n    }\n    if (type === 'hrs') {\n      this.hrs++;\n    }\n    if (this.hrs === 24) {\n      this.hrs = 0;\n    }\n    this.selectedDate.setHours(this.hrs);\n    this.selectedDate.setMinutes(this.min);\n    this.value = this.selectedDate;\n    this.isValid = true;\n    this.isComponentValid.emit(true);\n    this.change.emit(this.value);\n    event.stopPropagation();\n  }\n  minus(type: string, event: any) {\n    if (type === 'min') {\n      if (this.min === 0) {\n        this.min = 60;\n        this.hrs--;\n      }\n      this.min--;\n    }\n    if (type === 'hrs') {\n      this.hrs--;\n    }\n    if (this.hrs === 0) {\n      this.hrs = 23;\n    }\n    this.selectedDate.setHours(this.hrs);\n    this.selectedDate.setMinutes(this.min);\n    this.value = this.selectedDate;\n    this.isValid = true;\n    this.isComponentValid.emit(true);\n    this.change.emit(this.value);\n    event.stopPropagation();\n  }\n  // get accessor\n  get value(): any {\n    return this.innerValue;\n  }\n  // set accessor including call the onchange callback\n  set value(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n  // Set touched on blur\n  onBlur() {\n    this.onTouchedCallback();\n  }\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n     if (value !== '') {\n      if (value !== this.innerValue) {\n        this.validateWriteValue(value);\n      }\n    } else {\n      this.dateModel = '';\n    }\n  }\n\n  validateWriteValue(value: any) {\n    this.innerValue = value;\n    if (this.innerValue instanceof Date || ('number' === typeof this.innerValue)) {\n      if (('number' === typeof this.innerValue)) {\n        this.innerValue = new Date(this.innerValue);\n      }\n      this.dateModel = this.innerValue;\n      this.currrentDate = this.dateModel;\n      this.selectedDate = this.currrentDate;\n      this.createDaysForCurrentMonths(this.dateModel);\n      if (this.required) {\n        this.isValid = true;\n      }\n    } else {\n      this.negateisValid();\n    }\n  }\n\n  negateisValid() {\n    this.isValid = false;\n    this.hrs = 0;\n    this.min = 0;\n  }\n\n  // From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n  // From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  onFocus(elem: any) {\n  }\n  onFocusOut(value: any) {\n    if (isNaN(Date.parse(value.value))) {\n      this.isValid = false;\n      value.value = '';\n    } else {\n      this.value = Date.parse(value.value);\n      this.isValid = true;\n    }\n  }\n  openPicker(elem: any) {\n    super.focus(elem);\n    this.hostFlag = false;\n    this.pickerele = elem;\n    if (this.inlineDatepicker) {\n      this.showToolTip = this.inlineDatepicker;\n    } else {\n      this.showToolTip = true;\n    }\n    this.posixUp = this.getListPosition(elem);\n    this.disableddays(this.diabledDate);\n  }\n  getListPosition(elementRef: any): boolean {\n    const dropdownHeight = 350; // must be same in dropdown.scss\n    if (window.innerHeight - (elementRef.getBoundingClientRect().bottom) < dropdownHeight) {\n    if ((elementRef.getBoundingClientRect().top - dropdownHeight - elementRef.getBoundingClientRect().height) > 0) {\n    this.positionClass = {\n    top: (elementRef.getBoundingClientRect().top - dropdownHeight - elementRef.getBoundingClientRect().height) + 'px',\n    };\n    } else if ((dropdownHeight - elementRef.getBoundingClientRect().top) > 0) {\n    this.positionClass = {\n    top: (dropdownHeight - elementRef.getBoundingClientRect().top) + 'px',\n    };\n    } else if ((elementRef.getBoundingClientRect().top - dropdownHeight) > 0) {\n    this.positionClass = {\n    top: (elementRef.getBoundingClientRect().top - dropdownHeight) + 'px',\n    };\n    }\n    return true;\n    } else {\n    this.positionClass = {\n    top: (elementRef.getBoundingClientRect().top + elementRef.getBoundingClientRect().height) + 'px'};\n    return false;\n    }\n    }\n  onSelect() {\n    this.showToolTip = false;\n  }\n  private validateDays(days: any) {\n    const max = new Date(this.maxDate);\n    const min = new Date(this.minDate);\n    // check1: if min max is null return false\n    if (this.maxDate.length <= 0 && this.minDate.length <= 0) {\n      return false;\n    }\n    if ((this.maxDate.length > 0 && this.minDate.length <= 0) ||\n      (this.maxDate.length > 0 && this.minDate.length > 0)) {\n      this.validateMaxDate(days, max);\n    }\n    if ((this.maxDate.length <= 0 && this.minDate.length > 0) || (this.maxDate.length > 0 && this.minDate.length > 0)) {\n      // 3\n      if (days.getDate() < min.getDate() &&\n        days.getMonth() === min.getMonth() && days.getFullYear() === min.getFullYear()) {\n        return true;\n        // 4\n      } else if (days.getMonth() < min.getMonth() && days.getFullYear() === min.getFullYear()) {\n        return true;\n      }\n    }\n    this.disableddays(this.diabledDate);\n  }\n\n  private validateMaxDate(days: any, max: any) {\n    // check if days greater than max return\n    // 1\n    if (days.getDate() > max.getDate() &&\n      days.getMonth() >= max.getMonth() && days.getFullYear() >= max.getFullYear()) {\n      return true;\n      // 2\n    } else if (days.getMonth() > max.getMonth() && days.getFullYear() === max.getFullYear()) {\n      return true;\n    }\n  }\n  private disableddays(dates: any) {\n    if (dates) {\n      dates.forEach((element: any) => {\n        const From = new Date(element.from);\n        const To = new Date(element.to);\n        this.daysArray.forEach((element2: any) => {\n          element2.forEach((element1: any) => {\n            if (element1.date.getFullYear() <= To.getFullYear() && element1.date.getMonth()\n              <= To.getMonth() && element1.date.getDate() <= To.getDate() && element1.date.getFullYear() >= From.getFullYear() &&\n              element1.date.getMonth() >= From.getMonth() &&\n              element1.date.getDate() >= From.getDate()) {\n              element1.isDisabled = true;\n            }\n          });\n        });\n      });\n    }\n  }\n  dropdownDatePicker() {\n    this.monthList1.forEach((element: any) => {\n      this.elementFlagMethod(element);\n    });\n    this.monthList2.forEach((element: any) => {\n      this.elementFlagMethod(element);\n    });\n    this.yearList1.forEach((element: any) => {\n      this.elementFlagMethod(element);\n    });\n    this.yearList2.forEach((element: any) => {\n      this.elementFlagMethod(element);\n    });\n    this.hostFlag = true;\n    this.tempFlag = false;\n    this.drop = true;\n    super.focus({});\n  }\n\n  // Added method to avois recursive code\n  elementFlagMethod(element: any) {\n    if (element.flag) {\n      element.flag = false;\n    }\n  }\n\n  negateDrop() {\n    this.hostFlag = true;\n    this.drop = false;\n    this.showToolTip = true;\n    this.tempFlag = true;\n  }\n  getDropdownMonth(month: any) {\n    this.monthList1.forEach((element: any) => {\n      this.elementFlagMethod(element);\n    });\n    this.monthList2.forEach((element: any) => {\n      this.elementFlagMethod(element);\n    });\n    this.monthList1.forEach((element: any) => {\n      this.chkMonth(element, month);\n    });\n    this.monthList2.forEach((element: any) => {\n      this.chkMonth(element, month);\n    });\n    switch (month.name) {\n      case 'Jan':\n        this.monthNo = 0;\n        break;\n      case 'Feb':\n        this.monthNo = 1;\n        break;\n      case 'Mar':\n        this.monthNo = 2;\n        break;\n      case 'Apr':\n        this.monthNo = 3;\n        break;\n      case 'May':\n        this.monthNo = 4;\n        break;\n      case 'Jun':\n        this.monthNo = 5;\n        break;\n      case 'Jul':\n        this.monthNo = 6;\n        break;\n      case 'Aug':\n        this.monthNo = 7;\n        break;\n      case 'Sep':\n        this.monthNo = 8;\n        break;\n      case 'Oct':\n        this.monthNo = 9;\n        break;\n      case 'Nov':\n        this.monthNo = 10;\n        break;\n      case 'Dec':\n        this.monthNo = 11;\n        break;\n      default:\n        break;\n    }\n    super.focus({});\n  }\n  // this function broken from chk month getDropdownMonth()\n  chkMonth(element: any, month: any) {\n    if (element.name === month.name) {\n      element.flag = true;\n    }\n  }\n\n  // this function is broken from getDropdownYear\n  private yearFlagNegate(element: any) {\n    this.elementFlagMethod(element);\n  }\n  // this function is broken from getDropdownYear\n  yearFlag(element: any, year: any) {\n    if (element.year === year.year) {\n      element.flag = true;\n    }\n  }\n\n  getDropdownYear(year: any) {\n    this.yearList1.forEach((element: any) => {\n      // negate dropdown year flag\n      this.yearFlagNegate(element);\n    });\n    this.yearList2.forEach((element: any) => {\n      // negate dropdown year flag\n      this.yearFlagNegate(element);\n    });\n    this.yearList1.forEach((element: any) => {\n      this.yearFlag(element, year);\n    });\n    this.yearList2.forEach((element: any) => {\n      this.yearFlag(element, year);\n    });\n    this.yearNo = year.year;\n    super.focus({});\n  }\n  navigateDropdown() {\n    this.hostFlag = true;\n    this.selectedDate = new Date();\n    if (this.yearNo != null && this.monthNo != null) {\n      this.selectedDate.setFullYear(this.yearNo);\n      this.selectedDate.setMonth(this.monthNo);\n    } else if (this.yearNo != null && this.monthNo === null) {\n      this.selectedDate.setFullYear(this.yearNo);\n    } else if (this.yearNo === null && this.monthNo != null) {\n      this.selectedDate.setMonth(this.monthNo);\n    }\n    this.drop = false;\n    this.daysArray = [];\n    this.createDaysForCurrentMonths(this.selectedDate);\n    this.disableddays(this.diabledDate);\n    this.tempFlag = true;\n    this.cdf.detectChanges();\n    this.yearList1.forEach((element: any) => {\n      this.elementFlagMethod(element);\n    });\n    this.yearList2.forEach((element: any) => {\n      this.elementFlagMethod(element);\n    });\n    this.daysArray = [];\n    this.createDaysForCurrentMonths(this.selectedDate);\n    this.disableddays(this.diabledDate);\n    super.focus({});\n  }\n  cancelDropdown() {\n    this.drop = false;\n    this.showToolTip = true;\n  }\n  arrowClickBack() {\n    let i;\n    // disable flag logic\n    this.disableYearFlag();\n    if (this.minDate.length > 0 || this.maxDate.length > 0) {\n      // arrow click logic\n      this.backArrow();\n    } else {\n      for (i = 0; i < 5; i++) {\n        this.yearList1[i].year = this.yearList1[i].year - 10;\n        this.yearList2[i].year = this.yearList2[i].year - 10;\n      } // for ends\n    } // main else ends\n    // disable flag logic\n    this.disableYearFlag();\n    // rechking arrow flags after reinitialization of yrlist1 & 2\n    this.rechkYearFlag();\n  }\n\n  // this function is obtained by breaking arrowClickBack() for dropdown year back arrow logic for if\n  private backArrow() {\n    const min = new Date(this.minDate);\n    const max = new Date(this.maxDate);\n    this.yearList1.forEach((element: any) => {\n      if (element.year === min.getFullYear() ||\n        (element.year === min.getFullYear() && element.year === max.getFullYear())) {\n        this.backArrowFlag = true;\n      }\n      if (element.year === max.getFullYear() && element.year !== min.getFullYear()) {\n        this.forwardArrowFlag = true;\n        this.backArrowFlag = false;\n      }\n      if (element.year !== min.getFullYear() && element.year !== max.getFullYear()) {\n        this.forwardArrowFlag = false;\n        this.backArrowFlag = false;\n      }\n    });\n    // resets Arrow Flag\n    this.resetYearFlag();\n  }\n  // this function is broken from resetArrowFlag()\n  alterBackArrow(element: any, min: any) {\n    if (element.year === min.getFullYear()) {\n      this.backArrowFlag = true;\n    }\n  }\n\n  // this function is broken from backArrow() resets Arrow Flag\n  private resetArrowFlag() {\n    const min = new Date(this.minDate);\n    const max = new Date(this.maxDate);\n    this.yearList2.forEach((element: any) => {\n      this.alterBackArrow(element, min);\n      if (element.year === max.getFullYear() ||\n        (element.year === min.getFullYear() && element.year === max.getFullYear())) {\n        this.forwardArrowFlag = true;\n      }\n    });\n  }\n\n  // this fn is broken from  backArrow() and it resets Year Flag\n  resetYearFlag() {\n    let i;\n    if (!this.backArrowFlag) {\n      for (i = 0; i < 5; i++) {\n        this.yearList1[i].year = this.yearList1[i].year - 10;\n        this.yearList2[i].year = this.yearList2[i].year - 10;\n        this.yearList1[i].disabled = false;\n        this.yearList2[i].disabled = false;\n      }\n    } /* if ends */\n  }\n\n  // this function is broken from forwardArrow()\n  private alterBackForwardArrow(element: any) {\n    const min = new Date(this.minDate);\n    const max = new Date(this.maxDate);\n    if (element.year === min.getFullYear()) {\n      this.backArrowFlag = true;\n    }\n    if (element.year === max.getFullYear() ||\n      (element.year === min.getFullYear() && element.year === max.getFullYear())) {\n      this.forwardArrowFlag = true;\n    }\n  }\n  // this function is obtained by breaking arrowClickForward() for dropdown year forward arrow logic for if\n  private forwardArrow() {\n    let i;\n    // chk yearlist1\n    this.chkYearList1();\n    this.yearList2.forEach((element: any) => {\n      this.alterBackForwardArrow(element);\n    });\n    if (!this.forwardArrowFlag) {\n      for (i = 0; i < 5; i++) {\n        this.yearList1[i].year = this.yearList1[i].year + 10;\n        this.yearList2[i].year = this.yearList2[i].year + 10;\n        this.yearList1[i].disabled = false;\n        this.yearList2[i].disabled = false;\n      }  // for ends\n    }   // if ends\n  }\n\n  // chk yearlist1 broken from forwardArrow()\n  chkYearList1() {\n    const min = new Date(this.minDate);\n    const max = new Date(this.maxDate);\n    this.yearList1.forEach((element: any) => {\n      if (element.year === min.getFullYear() ||\n        (element.year === min.getFullYear() && element.year === max.getFullYear())) {\n        this.backArrowFlag = true;\n      }\n      if (element.year === min.getFullYear() && element.year !== max.getFullYear()) {\n        this.forwardArrowFlag = false;\n        this.backArrowFlag = true;\n      }\n      if (element.year !== min.getFullYear() && element.year !== max.getFullYear()) {\n        this.forwardArrowFlag = false;\n        this.backArrowFlag = false;\n      }\n      if (element.year === max.getFullYear()) {\n        this.forwardArrowFlag = true;\n      }\n    });\n  }\n\n  // this function is obtained by breaking arrowClickBack() and arrowClickForward()\n  // for rechking arrow flags after reinitialization of yrlist1 & 2\n  rechkYearFlag() {\n    this.yearList1.forEach((element: any) => {\n      const min = new Date(this.minDate);\n      const max = new Date(this.maxDate);\n      if (element.year === min.getFullYear() ||\n        (element.year === min.getFullYear() && element.year === max.getFullYear())) {\n        this.backArrowFlag = true;\n      }\n      if (element.year === max.getFullYear()) {\n        this.forwardArrowFlag = true;\n      }\n      if (element.year !== min.getFullYear() && element.year !== max.getFullYear()) {\n        this.forwardArrowFlag = false;\n        this.backArrowFlag = false;\n      }\n    });\n    this.yearList2.forEach((element: any) => {\n      this.alterBackForwardArrow(element);\n    });\n  }\n  // this function is broken from disableYearFlag() , here year flag disable altered to true\n  yearFlagDisable(element: any) {\n    const min = new Date(this.minDate);\n    const max = new Date(this.maxDate);\n    if (element.year < min.getFullYear() || element.year > max.getFullYear()) {\n      element.disabled = true;\n    } // if ends\n  }\n\n  // this function is obtained by breaking arrowClickBack() and arrowClickForward()\n  // for disabling year flag\n  disableYearFlag() {\n    if (this.minDate.length > 0 || this.maxDate.length > 0) {\n      this.yearList1.forEach((element: any) => {\n        this.yearFlagDisable(element);\n      }); // for ends\n      this.yearList2.forEach((element: any) => {\n        this.yearFlagDisable(element);\n      }); // for ends\n    } // outer if ends\n  }\n\n  arrowClickForward() {\n    let i;\n    // disable flag logic\n    this.disableYearFlag();\n    if (this.minDate.length > 0 || this.maxDate.length > 0) {\n      this.forwardArrow();\n    } else {\n      for (i = 0; i < 5; i++) {\n        this.yearList1[i].year = this.yearList1[i].year + 10;\n        this.yearList2[i].year = this.yearList2[i].year + 10;\n      }\n    }\n    // disable flag logic\n    this.disableYearFlag();\n    // rechking arrow flags after reinitialization of yrlist1 & 2\n    this.rechkYearFlag();\n  }\n  // onInit Method: If min max date is provided\n  minMaxDateFound() {\n    const min = new Date(this.minDate);\n    const max = new Date(this.maxDate);\n    this.yearList1.forEach((element: any) => {\n      if (element.year === min.getFullYear() ||\n        (element.year === min.getFullYear() && element.year === max.getFullYear())) {\n        this.backArrowFlag = true;\n      }\n      if (element.year === max.getFullYear()) {\n        this.forwardArrowFlag = true;\n      }\n    });\n    this.yearList2.forEach((element: any) => {\n      if (element.year === min.getFullYear()) {\n        this.backArrowFlag = true;\n      }\n      if (element.year === max.getFullYear() ||\n        (element.year === min.getFullYear() && element.year === max.getFullYear())) {\n        this.forwardArrowFlag = true;\n      }\n    });\n  }\n\n  // Method to disable when min max year provided\n  disableMinMaxYear(element: any, min: any, max: any) {\n    if (element.year < min.getFullYear() || element.year > max.getFullYear()) {\n      element.disabled = true;\n    }\n  }\n\n  // THIS MEHTOD CHECK INPUT IS VALID OR NOT\n  checkValidity(): boolean {\n    return this.isValid;\n  }\n\n  public validate(c: FormControl) {\n    return (this.value || !this.required) ? null : {\n      jsonParseError: {\n        valid: true,\n      },\n    };\n  }\n}\n","\n/*\n Component Name : Amexio  Dropdown Menu\n Component Selector : <amexio-drop-down-menu-items>\n Component Description : Amexio Dropdown component with various modes and configurations .\n */\n\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n@Component({\n  selector: 'amexio-drop-down-menu-item',\n  template: `\n    <div *ngIf=\"!(icon && label)\" class=\"dropdowndivider\" style=\"padding-bottom: 5px;\">\n      <ng-content></ng-content>\n    </div>\n    <a *ngIf=\" (icon || label)\" (click)=\"onItemClick($event)\" [ngClass]=\"{'dropdowndivider':separator}\">\n\n      <ng-container *ngIf=\"icon\">\n        <em [style.float]=\"iconalign\" [ngClass]=\"icon\"></em>\n      </ng-container>\n\n      <ng-container *ngIf=\"label\">\n        <span [style.float]=\"labelalign\" style=\"padding: 5px;\">\n          {{label}}\n        </span>\n      </ng-container>\n\n    </a>\n  `,\n})\nexport class AmexioDropDownitemsComponent implements OnInit {\n  toggle: boolean;\n/*\n   Properties\n   name : label\n   datatype : string\n   version : 4.2 onwards\n   default :\n   description : Label Dropdown\n   */\n  @Input() label: string;\n  /*\n   Properties\n   name : icon\n   datatype : string\n   version : 4.2 onwards\n   default :\n   description : icon on DropDown Menu\n   */\n  @Input() icon: string;\n  /*\n   Properties\n   name : label-align\n   datatype : string\n   version : 4.2 onwards\n   default :\n   description : Label-align for label right/left\n   */\n  @Input ('label-align') labelalign: string;\n  /*\n   Properties\n   name : icon-align\n   datatype : string\n   version : 4.2 onwards\n   default :\n   description : icon-align for text field right/left\n   */\n  @Input ('icon-align') iconalign: string;\n  /*\n   Properties\n   name : add-seperator\n   datatype :  boolean\n   version : 4.2 onwards\n   default : false\n   description : add divider to the dropdown menu list\n   */\n  @Input ('separator') separator: boolean;\n\n  /*\n   Properties\n   name : add-seperator\n   datatype :  boolean\n   version : 4.2 onwards\n   default : false\n   description : add divider to the dropdown menu list\n   */\n\n  @Output() onClick: any = new EventEmitter<any>();\n  ngOnInit() {\n    if (this.iconalign && this.labelalign\n      && this.iconalign.toLowerCase() === this.labelalign.toLowerCase()) {\n      this.iconalign = null;\n      this.labelalign = null;\n    } else if (this.iconalign && this.iconalign === 'left') {\n      this.labelalign = 'right';\n      this.iconalign = null;\n    } else if (this.iconalign && this.iconalign === 'right') {\n      this.labelalign = null;\n    }\n  }\n  onItemClick(clickEvent: any) {\n  this.toggle = false;\n  const e = {\n      event: clickEvent,\n      this: this,\n    };\n  this.onClick.emit(e);\n  }\n}\n","import {\n  AfterContentInit, Component, ContentChildren, ElementRef, EventEmitter,\n  HostListener, Input, OnInit, Output, QueryList,\n} from '@angular/core';\nimport { AmexioDropDownitemsComponent } from './dropdownmenu.component.items';\n\nimport { DeviceQueryService } from '../../services/device/device.query.service';\n@Component({\n  selector: 'amexio-drop-down-menu',\n  template: `\n    <div (click)=\"showDropDownContent($event)\" class=\"dropdown-menu\" \n         [style.padding]=\"padding\"\n         [ngStyle]=\"{'background-color':(transparent)?'unset':'null'}\">\n\n      <span >\n        <em *ngIf=\"icon\" style=\"padding-right: 5px;\" [ngClass]=\"icon\">&nbsp;</em>{{title}}&nbsp;</span>\n      <ng-container *ngIf=\"downArrowIcon\">\n        <em *ngIf=\"!toggle\"  class=\"fa fa-angle-down \"></em>\n        <em *ngIf=\"toggle\"  class=\"fa fa-angle-up \"></em>\n      </ng-container>\n\n    </div>\n\n    <div   *ngIf=\"toggle\" class=\"dropdown-menu-content\"\n         [style.height]=\"height\"   [ngClass]=\"{'menu-right':xposition}\">\n\n      <ng-content></ng-content>\n      <amexio-drop-down-menu-item (onClick)=\"onDropDownMenuClick($event)\"  *ngFor=\"let node of data\"\n                                    [icon-align]=\"node.iconalign\"\n                                    [label-align]=\"node.labelalign\"\n                                    [label]=\"node.label\"\n                                    [separator]=\"node.separator\"\n                                    [icon]=\"node.icon\">\n      </amexio-drop-down-menu-item>\n\n    </div>\n  `,\n})\nexport class AmexioDropDownMenuComponent implements AfterContentInit, OnInit {\n  toggle: boolean;\n  xposition = false;\n  top: number;\n  /* for internal use*/\n  @Input() dropDownMenuLocalData: any;\n  /*\n   Properties\n   name : data\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : data what you want to add in list\n   */\n  @Input() data: any[];\n  /*\n   Properties\n   name : title\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : title on Dropdown\n   */\n  @Input() title: string;\n  /*\n   Properties\n   name : icon\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : icon on DropDown Menu\n   */\n  @Input() icon: string;\n\n  /*\n   Properties\n   name : flag\n   datatype : string\n   version : 4.0 onwards\n   default : right\n   description : flag for icon position right/left\n   */\n  @Input('icon-align') iconalign: string;\n  /*\n   Properties\n   name : padding\n   datatype : string\n   version : 4.2 onwards\n   default :\n   description : padding for hover button\n   */\n  @Input() padding: string;\n  /*\n   Properties\n   name : menu icon\n   datatype : string\n   version : 4.2 onwards\n   default :\n   description : icon on menu\n   */\n  @Input('down-arrow-icon') downArrowIcon = true;\n  /*\n   Properties\n   name : transparent\n   datatype : string\n   version : 4.2 onwards\n   default :\n   description : transparent style for menu\n   */\n  @Input() transparent = false;\n  /*\n   Properties\n   name : height\n   datatype :   any\n   version : 4.2 onwards\n   default :\n   description : User can set the height to menu body..\n   */\n  @Input() height: any;\n  @Output() onClick: any = new EventEmitter<any>();\n  @ContentChildren(AmexioDropDownitemsComponent) dropdowns: QueryList<AmexioDropDownitemsComponent>;\n  optionsCollection: AmexioDropDownitemsComponent[] = [];\n  constructor(public element: ElementRef, public matchMediaService: DeviceQueryService) {\n    this.iconalign = 'left';\n    this.padding = '5px 10px';\n  }\n  ngOnInit() {\n    if (this.data) {\n      this.data.forEach((node: any) => {\n        if (!node.iconalign && this.iconalign) {\n          node.iconalign = this.iconalign;\n        }\n        if (!node.labelalign) {\n          node.labelalign = 'left';\n        }\n      });\n    }\n  }\n  ngAfterContentInit() {\n    this.optionsCollection = this.dropdowns.toArray();\n    this.optionsCollection.forEach((node: any) => node.onClick.subscribe((eventdata: any) => {\n      this.toggle = false;\n    }));\n  }\n  @HostListener('document:click', ['$event.target'])\n  @HostListener('document: touchstart', ['$event.target'])\n  public onElementOutClick(targetElement: HTMLElement) {\n    let parentFound = false;\n    while (targetElement !== null && !parentFound) {\n      if (targetElement === this.element.nativeElement) {\n        parentFound = true;\n      }\n      targetElement = targetElement.parentElement;\n    }\n    if (!parentFound) {\n      this.toggle = false;\n    }\n  }\n  showDropDownContent(event: any) {\n    this.toggle = !this.toggle;\n    this.top = event.target.getBoundingClientRect().top + 25;\n    if ((this.matchMediaService.browserWindow().innerWidth - event.clientX) < 200) {\n      this.xposition = true;\n    } else {\n      this.xposition = false;\n    }\n  }\n  getIconPosition(childposition: any, parentIconPosition: string): boolean {\n    if (childposition.hasOwnProperty('iconalign') && childposition.iconalign !== '') {\n      if (childposition.iconalign === 'right') {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      if (parentIconPosition === 'right') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n  onDropDownMenuClick(event: any) {\n    this.toggle = false;\n    this.onClick.emit(event);\n  }\n  getLabelPosition(childPosition: any, parentLabelPosition: string): boolean {\n    if (childPosition.hasOwnProperty('labelalign') && childPosition.labelalign !== '') {\n      if (childPosition.labelalign === 'right') {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      if (parentLabelPosition === 'right') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n}\n","/*\n Component Name : Amexio Email Input\n Component Selector :  <amexio-email-input>\n Component Description : Email input field\n */\nimport { Component, EventEmitter, forwardRef, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgModel, Validators } from '@angular/forms';\nimport { ValueAccessorBase } from '../../base/value-accessor';\n\n@Component({\n  selector: 'amexio-email-input',\n  template: `\n\n    <div class=\"inputgroup\">\n\n      <label *ngIf=\"hasLabel\" [style.font-style]=\"fontstyle\" [style.font-family]=\"fontfamily\" [style.font-size]=\"fontsize\">\n        {{fieldlabel}}\n      </label> \n\n      <input type=\"email\" \n             class=\"input-control\"\n             [ngClass]=\"model.touched ? (isValid && model.touched) ? 'input-control-success' : 'input-control-error' :''\"\n             [(ngModel)]=\"value\"\n             (blur)=\"onblur()\"\n             (focus)=\"onFocus()\"\n             (input)=\"onInput()\"\n             (change)=\"onChangeEv()\"\n             [name]=\"name\"\n             [pattern]=\"regEx\"\n             [attr.placeholder]=\"placeholder\"\n             [attr.disabled] = \"disabled ? true: null\"\n             [required]=\"!allowblank\"/>\n\n             <ng-container *ngIf=\"iconfeedback\">\n              <span class=\"input-control-feedback\">\n                  <span *ngIf=\"!isValid && model.touched\"><em class=\"fa fa-times\"></em></span>\n                  <span *ngIf=\"isValid && model.touched\"><em class=\"fa fa-check\"></em></span>\n              </span>\n          </ng-container>\n    \n    \n          <span *ngIf=\"showToolTip && enablepopover\" class=\"dropdown tooltiptext\">\n              <div [innerHTML]=\"helpInfoMsg\"></div>\n          </span>\n          <span class=\"inputfieldbar\"></span>\n        </div>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AmexioEmailInputComponent), multi: true,\n  }, {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => AmexioEmailInputComponent), multi: true,\n  }],\n})\nexport class AmexioEmailInputComponent extends ValueAccessorBase<string> implements OnInit, Validators {\n\n  /*\n   Properties\n   name : field-label\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : The label of this field\n   */\n  @Input('field-label') fieldlabel: string;\n  /*\n   Properties\n   name : has-label\n   datatype : boolean\n   version : 4.0 onwards\n   default : false\n   description : Flag to set label\n   */\n  @Input('has-label') hasLabel = true;\n  /*\n   Properties\n   name : allow-blank\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Sets if field is required\n   */\n  @Input('allow-blank') allowblank: boolean;\n  @ViewChild(NgModel) model: NgModel;\n\n  helpInfoMsg: string;\n\n  regEx: RegExp;\n\n  showToolTip: boolean;\n\n  _errormsg: string;\n\n  get errormsg(): string {\n    return this._errormsg;\n  }\n  /*\n   Properties\n   name : error-msg\n   datatype : none\n   version : 4.0 onwards\n   default : none\n   description : Sets the error message\n   */\n  @Input('error-msg')\n\n  set errormsg(value: string) {\n    this.helpInfoMsg = value + '<br/>';\n  }\n\n  @Input('place-holder') placeholder: string;\n  /*\n   Properties\n   name : disabled\n   datatype : boolean\n   version : 4.0 onwards\n   default : false\n   description : True to disable the field.\n   */\n  @Input() disabled: boolean;\n  /*\n   Properties\n   name : icon-feedback\n   datatype : boolean\n   version : 4.0 onwards\n   default : false\n   description :\n   */\n  @Input('icon-feedback') iconfeedback: boolean;\n  /*\n   Properties\n   name : font-style\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Set font-style to field\n   */\n  @Input('font-style') fontstyle: string;\n  /*\n   Properties\n   name : font-family\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Set font-family to field\n   */\n  @Input('font-family') fontfamily: string;\n  /*\n   Properties\n   name : font-size\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Set font-size to field\n   */\n  @Input('font-size') fontsize: string;\n\n  emailpattern: any = /\\S+@\\S+\\.\\S+/;\n\n  _pattern: string;\n\n  get pattern(): string {\n    return this._pattern;\n  }\n  /*\n   Properties\n   name : pattern\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Apply Reg-ex to the field\n   */\n  @Input('pattern')\n  set pattern(value: string) {\n    if (value != null) {\n      this._pattern = value;\n      this.regEx = new RegExp(this._pattern);\n    }\n  }\n  /*\n   Properties\n   name : enable-popover\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Set enable / disable popover.\n   */\n  @Input('enable-popover') enablepopover: boolean;\n  /*\n   Events\n   name : onBlur\n   datatype : any\n   version : 4.0 onwards\n   default :\n   description : On blur event\n   */\n  @Output() onBlur: any = new EventEmitter<any>();\n  /*\n   Events\n   name : input\n   datatype : any\n   version : none\n   default :\n   description : \tOn input event field.\n   */\n  @Output() input: any = new EventEmitter<any>();\n  /*\n   Events\n   name : focus\n   datatype : any\n   version : none\n   default :\n   description : On focus event field.\n   */\n  @Output() focus: any = new EventEmitter<any>();\n  /*\n   Events\n   name : change\n   datatype : any\n   version : none\n   default :\n   description : On field value change event\n   */\n  @Output() change: any = new EventEmitter<any>();\n\n  isValid: boolean;\n  @Input('name') name: string;\n  constructor() {\n    super();\n    this.showToolTip = false;\n  }\n\n  ngOnInit() {\n    this.name = this.generateName(this.name, this.fieldlabel, 'emailinput');\n  }\n  // THIS METHOD USED FOR BLUR EVENT.\n  onblur() {\n    this.showToolTip = false;\n    this.onBlur.emit(this.value);\n  }\n  // THIS METHOD USED FOR FOCUS EVENT .\n  onFocus() {\n    this.showToolTip = true;\n    this.focus.emit(this.value);\n  }\n  // THIS METHOD USED FOR  INPUT EVENT .\n  onInput() {\n    this.isValid = this.isFieldValid();\n    this.input.emit(this.value);\n  }\n  // THIS METHOD USED FOR CHANGE EVENT  .\n  onChangeEv() {\n    this.change.emit(this.value);\n  }\n  // THIS METHOD IS USED FOR VALIDATION\n  isFieldValid(): boolean {\n    return (!this.allowblank  && this.emailpattern.test(this.value)) || this.allowblank;\n  }\n  public validate(c: FormControl) {\n    return this.isFieldValid() ? null : {\n      jsonParseError: {\n        valid: true,\n      },\n    };\n  }\n}\n","/*\n Component Name : Amexio Fileupload\n Component Selector :  <amexio-fileupload>\n Component Description : This component use for uploading all types of files.\n */\nimport { AfterViewInit, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CommonDataService } from '../../services/data/common.data.service';\n@Component({\n  selector: 'amexio-fileupload',\n  template: `\n    <div class='input-group' *ngIf='!droppable'>\n        <ng-container *ngIf='fieldlabel'>\n            <label>{{fieldlabel}}</label>\n        </ng-container>\n        <ng-container *ngIf='!fieldlabel'>\n            <label>Choose File</label>\n        </ng-container>\n        <input type='file' class='input-control' [attr.accept]='filetype' (change)='uploadFile($event,false)' [attr.multiple]='multiplefile' #inp>\n    </div>\n    <ng-container *ngIf='droppable'>\n        <ng-container *ngIf='fieldlabel'>\n            <label>{{fieldlabel}}</label>\n        </ng-container>\n        <ng-container *ngIf='!fieldlabel'>\n            <label>Drag and Drop Files below</label>\n        </ng-container>\n        <div class='upload-drop-zone {{dropClass}}' (drop)='onFileDrop($event)' (dragover)='onDragOver($event)' (dragleave)='dropClass = \"\";' #drpZone>\n            Just drag and drop files here\n        </div>\n    </ng-container>\n\n    <div class='file-upload-box' style='width: 100%'>\n        <li *ngFor='let file of uploadedFiles ; let index = index' class='file-upload-info'>\n            <span class='uploaded-file-name'>({{file.name}} &nbsp;  &nbsp; ({{file.size}}) )</span>\n            <amexio-form-icon key='tab_close' class='close-icon' (onClick)='closeFile(file,index)'>\n            </amexio-form-icon>\n        </li>\n    </div>\n  `,\n})\nexport class AmexioFileUploadComponent implements OnInit, AfterViewInit {\n  /*\n   Properties\n   name : field-label\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : The label of this field\n   */\n  @Input('field-label') fieldlabel: string;\n  /*\n   Properties\n   name : http-url\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : REST url for fetching datasource.\n   */\n  @Input('http-url') httpurl: string;\n  /*\n   Properties\n   name : http-method\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Type of HTTP call, POST,GET.\n   */\n  @Input('http-method') httpmethod: string;\n  /*\n   Properties\n   name : file-type\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Defines the file type of file to upload. Shows only given file type at the time of\n   file upload.example for 1.image [file-type]=image/* 2.for pdf [file-type]=application/pdf\n   */\n  @Input('file-type') filetype: string;\n  /*\n   Properties\n   name : multiple-file\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Defines if there are multiple file to upload\n   */\n  @Input('multiple-file') multiplefile: string;\n  /*\n   Propertiee\n   name : param-name\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Used to specify URL query parametername. same with backend rest controller paramater objectname Default [file]\n   */\n  @Input('param-name') paramname: string;\n  /*\n   Properties\n   name : droppable\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : Allow Drop Zone For Files.\n   */\n  @Input() droppable: boolean;\n\n  responseData: any;\n\n  /*\n   Events\n   name : onRemove\n   datatype : any\n   version : none\n   default :\n   description : On remove click event\n   */\n  @Output() onRemove: EventEmitter<any> = new EventEmitter<any>();\n\n  uploadedFiles: any[] = [];\n\n  dropClass: string;\n\n  constructor(public dataService: CommonDataService) {}\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {}\n\n  formatBytes(bytes: number, decimals: any) {\n    if (bytes === 0) {\n      return '0 Bytes';\n    }\n    const k = 1024;\n    const dm = decimals || 2;\n    // tslint:disable-next-line:one-variable-per-declaration\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n  onFileDrop(event: any) {\n    event.preventDefault();\n    this.dropClass = '';\n    const dt = event.dataTransfer;\n    if (dt.items) {\n      // Use DataTransferItemList interface to access the file(s)\n      // tslint:disable-next-line:prefer-for-of\n      for (let i = 0; i < dt.items.length; i++) {\n        if (dt.items[i].kind === 'file') {\n          const f = dt.items[i].getAsFile();\n          this.uploadFile(f, true);\n        }\n      }\n    } else {\n    }\n  }\n\n  onDragOver(event: any) {\n    event.preventDefault();\n    this.dropClass = 'drop';\n  }\n\n  closeFile(filedata: any, index: any) {\n    this.onRemove.emit({ fileData: filedata });\n    this.uploadedFiles.splice(index, 1);\n  }\n\n  //  For Uploading files\n  uploadFile(event: any, singleFile: boolean) {\n    if (singleFile) {\n      const formData = new FormData();\n      formData.append(this.paramname, event);\n      this.dataService\n        .uploadFile(this.httpurl, this.httpmethod, formData)\n        .subscribe(\n          (response: any) => {\n            this.responseData = response;\n          },\n          (error: any) => {},\n          () => {\n\n          },\n        );\n      this.uploadedFiles.push({\n        name: event.name,\n        size: this.formatBytes(event.size, 2),\n      });\n    } else {\n      this.serviceCall(event);\n   }\n  }\n\n  serviceCall(event: any) {\n    const fileList: FileList = event.target.files != null ? event.target.files : event;\n    const formData = new FormData();\n    if (fileList) {\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < fileList.length; i++) {\n      if (!this.paramname) {\n        this.paramname = 'file';\n      }\n      formData.append(this.paramname, fileList[i]);\n    }\n    this.uploadService(formData);\n    if (fileList.length === 1) {\n      const fsize = this.formatBytes(fileList[0].size, 2);\n      this.uploadedFiles.push({ name: fileList[0].name, size: fsize });\n    } else if (fileList.length > 1) {\n      // tslint:disable-next-line:prefer-for-of\n      for (let i = 0; i < fileList.length; i++) {\n        const fsize = this.formatBytes(fileList[i].size, 2);\n        this.uploadedFiles.push({ name: fileList[i].name, size: fsize });\n      }\n    }\n  }\n}\n\nuploadService(formData: FormData) {\n  this.dataService.uploadFile(this.httpurl, this.httpmethod, formData)\n  .subscribe(\n    (response: any) => {\n      this.responseData = response;\n    },\n    (error: any) => {},\n    () => {\n\n    },\n  );\n}\n}\n","/**\n * Created by ketangote on 26/2/2018.\n */\n/*\nComponent Name : Amexio Floating-Button\nComponent Selector :  <amexio-floating-button>\nComponent Description : A Floating button component with various position\noptions (vertical/horizontal/top/bottom/left/right)\n*/\nimport { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\n@Component({\n  selector: 'amexio-floating-button',\n  template: `\n    <div class=\"floatingbutton\" [ngClass]=\"addCSSClasses()\" [ngStyle]=\"{'top':top,'bottom':bottom,'left':left,'right':right}\" (click)=\"buttonClick($event)\">\n        <amexio-form-icon *ngIf=\"icon\" [customclass]=\"icon\">\n        </amexio-form-icon>\n        {{label}}\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AmexioFloatingButtonComponent implements OnInit {\n  /*\n  Properties\n  name : vertical-position\n  datatype : string\n  version : 4.1 onwards\n  default : none\n  description : Postion floating button vertically: top or bottom or center.\n  This attribute is ignored if user specify position explicitly\n  (using position-top/position-bottom/position-left/position-right)\n  */\n  @Input('vertical-position') verticalposition: string;\n  /*\n  Properties\n  name : horizontal-position\n  datatype : none\n  version : 4.1 onwards\n  default : none\n  description : Postion floating button horizontally: left or right or center.\n  This attribute is ignored if user specify position explicitly\n  (using position-top/position-bottom/position-left/position-right)\n  */\n  @Input('horizontal-position') horizontalposition: string;\n  /*\n  Properties\n  name : position-top\n  datatype : none\n  version : 4.1 onwards\n  default : none\n  description : Takes top position in percentage or pixel\n  */\n  @Input('position-top') top: string;\n  /*\n  Properties\n  name : position-bottom\n  datatype : none\n  version : 4.1 onwards\n  default : none\n  description : Takes bottom position in percentage or pixel\n  */\n  @Input('position-bottom') bottom: string;\n  /*\n  Properties\n  name : position-left\n  datatype : none\n  version : 4.1 onwards\n  default : none\n  description : Takes left position in percentage or pixel\n  */\n  @Input('position-left') left: string;\n  /*\n  Properties\n  name : position-right\n  datatype : none\n  version : 4.1 onwards\n  default : none\n  description : Takes right position in percentage or pixel\n  */\n  @Input('position-right') right: string;\n  /*\n  Properties\n  name : label\n  datatype : none\n  version : 4.1 onwards\n  default : none\n  description : Label on floating button, this is activated in case of block=square\n  */\n  @Input('label') label: string;\n  /*\n  Properties\n  name : block\n  datatype : none\n  version : 4.1 onwards\n  default : none\n  description : Display button as round or square\n  */\n  @Input('block') block = 'circle';\n  /*\n  Properties\n  name : icon\n  datatype : string\n  version : 4.1 onwards\n  default : none\n  description : FaIcon class-name.\n  */\n  @Input('icon') icon: string;\n  /*\n  Properties\n  name : type\n  datatype : string\n  version : 4.1 onwards\n  default : none\n  description : Type of button - default / theme-color / theme-backgroundcolor / green / red / yellow\n  */\n  @Input('type') type: string;\n  /*\n  Properties\n  name : disabled\n  datatype : string\n  version : 4.1 onwards\n  default : none\n  description :Enable/Disables the button\n  */\n  @Input('disabled') disabled: string;\n  /*\n  Properties\n  name : relative\n  datatype : boolean\n  version : 4.1 onwards\n  default : none\n  description : Place floating button at relative position\n  */\n  @Input('relative') relative = false;\n  /*\n  Events\n  name : onClick\n  datatype : any\n  version : none\n  default : none\n  description : Event is fired when button is click\n  */\n  @Output() onClick: any = new EventEmitter<any>();\n  /*\n  Properties\n  name : size\n  datatype : string\n  version : 5.4 onwards\n  default : none\n  description : large, default, small & xsmall\n  */\n  @Input('size') size: string;\n\n  positionclass: string;\n  absoluteposition = false;\n  constructor() {\n  }\n  ngOnInit() {\n    this.addCSSClasses();\n  }\n  // THIS METHOD IS USED FOR SETTING CSS CLASSSES\n  addCSSClasses(): any {\n    if (this.top || this.bottom || this.right || this.left) {\n      this.absoluteposition = true;\n    }\n    this.positionclass = '';\n    if (this.relative) {\n      this.positionclass = ' floatingbutton-relative ';\n    } else {\n      this.positionclass = ' floatingbutton-fixed ';\n    }\n    if (!this.absoluteposition && !this.relative) {\n      this.btnPositionCss();\n    }\n    if (this.block === 'circle') {\n      this.setCricle();\n    } else if (this.block === 'square') {\n      this.positionclass = this.positionclass + ' floatingbutton-square';\n    }\n    if (this.type === 'theme-color') {\n      this.themeColorCss();\n    } else if (this.type === 'green') {\n      this.greenColorType();\n\n    } else if (this.type === 'red') {\n      this.redColorType();\n\n    } else if (this.type === 'yellow') {\n      this.yellowColorType();\n\n    } else {\n      this.defaultType();\n    }\n    return this.positionclass;\n  }\n\n  private setCricle() {\n    if (this.size && (this.size === 'large' || this.size === 'small')) {\n      this.positionclass = this.positionclass + ' floatingbutton-circle-' + this.size;\n    } else {\n      this.positionclass = this.positionclass + ' floatingbutton-circle';\n    }\n    this.label = '';\n  }\n\n  // Method to call css class on the basis of theme color\n  themeColorCss() {\n    this.positionclass = this.disabled ? this.positionclass + ' floatingbutton-theme-color-disabled' :\n      this.positionclass + ' floatingbutton-theme-color';\n  }\n\n  // Css for button type default.\n  defaultType() {\n    this.positionclass = this.disabled ? this.positionclass + ' floatingbutton-default-disabled' :\n      this.positionclass + 'floatingbutton-default';\n  }\n\n  // Css for button type yellow.\n  yellowColorType() {\n    this.positionclass = this.disabled ? this.positionclass + 'floatingbutton-yellow-disabled' :\n      this.positionclass + ' floatingbutton-yellow';\n  }\n\n  // Css for button type red.\n  redColorType() {\n    this.positionclass = this.disabled ? this.positionclass + 'floatingbutton-red-disabled' :\n      this.positionclass + ' floatingbutton-red';\n  }\n  // Css for button type green.\n  greenColorType() {\n    this.positionclass = this.disabled ? this.positionclass + ' floatingbutton-green-disabled' :\n      this.positionclass + ' floatingbutton-green';\n  }\n\n  // Css on btn position\n  btnPositionCss() {\n    if (this.verticalposition === null) {\n      this.verticalposition = 'top';\n    } else if (this.horizontalposition === null) {\n      this.horizontalposition = 'right';\n    }\n    this.positionclass = this.positionclass + ' floatingbutton-' +\n      this.verticalposition + ' floatingbutton-' + this.horizontalposition +\n      ' floatingbutton-default';\n  }\n\n  // Method for button click\n  buttonClick(clickEvent: any) {\n    if (!this.disabled) {\n      this.onClick.emit({ thisObj: this, event: clickEvent });\n    }\n  }\n}\n","/**\n * Created by ketangote on 26/2/2018.\n */\n/*\n Component Name : Amexio Floating-Button group\n Component Selector :  <amexio-floating-group-button>\n Component Description : A Floating group button component with various position options (vertical/horizontal/top/bottom/left/right)\n*/\nimport { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, Renderer2 } from '@angular/core';\nimport { ListBaseDatepickerComponent } from '../../base/list.base.datepicker.component';\n@Component({\n  selector: 'amexio-floating-group-button',\n  template: `\n\n    <amexio-floating-button (onClick)=\"onFloatingButtonClick($event)\" \n            [vertical-position]=\"verticalposition\" \n            [horizontal-position]=\"horizontalposition\" \n            [icon]=\"icon\" \n            [type]=\"type\"\n            [disabled]=\"disabled\"\n            [relative]=\"relative\"\n            [position-top]=\"top\"\n            [position-bottom]=\"bottom\"\n            [position-left]=\"left\"\n            [position-right]=\"right\">\n    </amexio-floating-button>                \n    \n    <!-- *ngIf=\"togglefloatinggroup\" -->\n    <div class=\"floatinggroup\"  [ngStyle]=\"dropdownstyle\" \n    [ngStyle]=\"{'top':floatinggroupyposition, 'left':floatinggroupxposition}\">\n        <div class=\"floatinggroupitems\" *ngFor=\"let node of data\" >\n            <div *ngIf=\"node.icon\" class=\"floatingbutton-circle\" [ngClass]=\"node.typeclass\" (click)=\"onButtonClick(node,$event)\">\n                <amexio-form-icon [customclass]=\"node.icon\" >\n                </amexio-form-icon>\n            </div>\n        </div>\n    </div>\n  `,\n})\nexport class AmexioFloatingGroupButtonComponent extends ListBaseDatepickerComponent<string> implements OnInit {\n    /*\n  Properties\n  name : vertical-position\n  datatype : string\n  version : 4.1 onwards\n  default : none\n  description : Positions floating button vertically:\n  top or bottom or center. This attribute is ignored if user specify position\n  explicitly (using position-top/position-bottom/position-left/position-right)\n  */\n @Input('vertical-position') verticalposition: string;\n /*\n Properties\n name : horizontal-position\n datatype : none\n version : 4.1 onwards\n default : none\n description : Positions floating button horizontally: left or right or center.\n This attribute is ignored if user specify position explicitly\n (using position-top/position-bottom/position-left/position-right)\n */\n @Input('horizontal-position') horizontalposition: string;\n /*\n Properties\n name : position-top\n datatype : none\n version : 4.1 onwards\n default : none\n description : Takes top position in percentage or pixel\n */\n @Input('position-top') top: string;\n /*\n Properties\n name : position-bottom\n datatype : none\n version : 4.1 onwards\n default : none\n description : Takes bottom position in percentage or pixel\n */\n @Input('position-bottom') bottom: string;\n /*\n Properties\n name : position-left\n datatype : none\n version : 4.1 onwards\n default : none\n description : Takes left position in percentage or pixel\n */\n @Input('position-left') left: string;\n /*\n Properties\n name : position-right\n datatype : none\n version : 4.1 onwards\n default : none\n description : Takes right position in percentage or pixel\n */\n @Input('position-right') right: string;\n /*\n Properties\n name : icon\n datatype : string\n version : 4.1 onwards\n default : none\n description : FaIcon classname.\n */\n @Input('icon') icon: string;\n /*\n Properties\n name : type\n datatype : string\n version : 4.1 onwards\n default : none\n description : Type of button - default  / theme-color /\n theme-backgroundcolor / green / red / yellow\n */\n @Input('type') type: string;\n /*\n Properties\n name : disabled\n datatype : string\n version : 4.1 onwards\n default : none\n description :Enable/Disables the button\n */\n @Input('disabled') disabled: string;\n /*\n Properties\n name : relative\n datatype : boolean\n version : 4.1 onwards\n default : none\n description : Place floating buttong at relative position\n */\n @Input('relative') relative = false;\n /*\n Properties\n name : floating-group-position\n datatype : string\n version : 4.1 onwards\n default : none\n description : Positions floating button group at specified position\n */\n @Input('floating-group-position') floatinggroupposition: string;\n /*\n Properties\n name : data\n datatype : array\n version : 4.1 onwards\n default : none\n description : local data for buttons\n */\n @Input('data') data: any[];\n /*\n Events\n name : onClick\n datatype : any\n version : none\n default : none\n description : Event is fired when button is click\n */\n @Output() onClick: any = new EventEmitter<any>();\n floatinggroupxposition: string;\n floatinggroupyposition: string;\n togglefloatinggroup = false;\n datacount = 0;\n constructor(private elementref: ElementRef, private cdf: ChangeDetectorRef, renderer: Renderer2) {\nsuper(renderer, elementref, cdf);\n}\n ngOnInit() {\n  this.dropdownstyle = {visibility: 'hidden'};\n  if (this.data && this.data.length > 0) {\n     this.datacount = this.data.length;\n     this.data.forEach((node: any) => {\n       if (!node['type']) {\n         node['type'] = this.type;\n         node['typeclass'] = 'floatingbutton-' + this.type;\n       } else {\n         node['typeclass'] = 'floatingbutton-' + node['type'];\n       }\n     });\n   }\n }\n buttonClick(clickEvent: any) {\n   const x = clickEvent.currentTarget.getBoundingClientRect().left;\n   const y = clickEvent.currentTarget.getBoundingClientRect().top;\n   if (!this.disabled) {\n     if (this.floatinggroupposition === 'bottom') {\n       this.floatinggroupxposition = (x) + 'px';\n       this.floatinggroupyposition = (y + 70) + 'px';\n     }\n     if (this.floatinggroupposition === 'top') {\n       this.floatinggroupxposition = (x) + 'px';\n       this.floatinggroupyposition = (y - (70 * this.datacount)) + 'px';\n     }\n     this.toggleVisibility();\n     this.togglefloatinggroup = !this.togglefloatinggroup;\n     this.onClick.emit({ thisObj: this, event: clickEvent });\n   }\n }\n\n toggleVisibility() {\n  if (this.dropdownstyle.visibility === 'visible') {\n    super.itemClicked();\n    } else {\n     const event: any = '';\n     super.focus(event);\n    }\n }\n\n onFloatingButtonClick(event: any) {\n   this.buttonClick(event.event);\n }\n onButtonClick(node: any, clickEvent: any) {\n   this.toggleVisibility();\n   this.togglefloatinggroup = !this.togglefloatinggroup;\n   this.onClick.emit({ this: node, parent: this, event: clickEvent });\n }\n\n}\n","/**\n * Created by pratik on 21/12/17.\n */\n /*\n Component Name : Amexio Icon\n Component Selector :  <amexio-form-icon>\n Component Description :\n*/\nimport {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {IconLoaderService} from '../../services/icon/icon.service';\n@Component({\n  selector: 'amexio-form-icon',\n   template: `\n    <ng-container *ngIf=\"iconLoaderService.iconToUse == 'fa' \">\n      <ng-container *ngIf=\"customclass != null\">\n        <i class=\"{{customclass}}\" aria-hidden=\"true\" (click)=\"onClick.emit($event)\"></i>\n      </ng-container>\n      <ng-container *ngIf=\"customclass == null\">\n        <i class=\"{{iconClass}}\" aria-hidden=\"true\" (click)=\"onClick.emit($event)\"></i>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"iconLoaderService.iconToUse == 'mat'\">\n      <ng-container *ngIf=\"customclass != null\">\n        <i class=\"material-icons\" (click)=\"onClick.emit($event)\">{{customclass}}</i>\n      </ng-container>\n      <ng-container *ngIf=\"customclass == null\">\n        <i class=\"material-icons\" (click)=\"onClick.emit($event)\">{{iconClass}}</i>\n      </ng-container>\n    </ng-container>\n  `,\n})\n\nexport class AmexioFormIconComponent implements OnInit, OnChanges {\n\n/*\nProperties\nname : key\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets the key for icon\n*/\n  @Input() key: string;\n/*\nEvents\nname : onClick\ndatatype : any\nversion : none\ndefault : none\ndescription : Event is fired when button is click\n*/\n  @Output() onClick: EventEmitter<any> = new EventEmitter<any>();\n/*\nProperties\nname : customclass\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets the customclass for icon\n*/\n  @Input() customclass: string;\n\n  iconClass: string;\n\n  constructor(public iconLoaderService: IconLoaderService) {\n  }\n  ngOnInit() {\n    this.iconClass = this.getIconClass();\n  }\n  getIconClass(): string {\n    if (this.iconLoaderService.iconMappings != null) {\n      const iconObject = this.iconLoaderService.iconMappings.find(\n        (obj: any) => obj.component === this.key);\n      if (iconObject != null) {\n        return iconObject[this.iconLoaderService.iconToUse.toString()];\n       } else {\n        return '';\n       }\n    }\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['key']) {\n      this.key = changes.key.currentValue;\n      this.iconClass = this.getIconClass();\n    }\n  }\n}\n","/*\n Component Name : Amexio Email Input\n Component Selector :  <amexio-email-input>\n Component Description : Email input field\n*/\nimport { Component, EventEmitter, forwardRef, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgModel, Validators } from '@angular/forms';\nimport { ValueAccessorBase } from '../../base/value-accessor';\n\n@Component({\n  selector: 'amexio-password-input',\n  template: `\n\n\n\n    <div class=\"inputgroup\">\n\n      <label *ngIf=\"haslabel\" [style.font-style]=\"fontstyle\" [style.font-family]=\"fontfamily\" [style.font-size]=\"fontsize\">\n          {{fieldlabel}}\n      </label>\n\n      <input type=\"password\" \n             class=\"input-control\"\n             [ngClass]=\"model.touched ? (isValid && model.touched) ? 'input-control-success' : 'input-control-error' :''\"\n             [(ngModel)]=\"value\"\n             (blur)=\"onblur()\" \n             (focus)=\"onFocus()\" \n             (input)=\"onInput()\" \n             (change)=\"onChangeEv()\"\n             [name]=\"name\" \n             [pattern]=\"regEx\"\n             [attr.placeholder]=\"placeholder\" \n             [maxlength]=\"maxlength\" \n             [minlength]=\"minlength\"\n             [attr.disabled]=\"disabled ? true: null\"\n             [required]=\"!allowblank\" />\n\n\n      <ng-container *ngIf=\"iconfeedback\">\n          <span class=\"input-control-feedback\">\n              <span *ngIf=\"!isValid && model.touched\"><em class=\"fa fa-times\"></em></span>\n              <span *ngIf=\"isValid && model.touched\"><em class=\"fa fa-check\"></em></span>\n          </span>\n      </ng-container>\n\n\n      <span *ngIf=\"showToolTip && enablepopover\" class=\"dropdown tooltiptext\">\n          <div [innerHTML]=\"helpInfoMsg\"></div>\n      </span>\n      <span class=\"inputfieldbar\"></span>\n    </div>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AmexioPasswordComponent), multi: true,\n  }, {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => AmexioPasswordComponent), multi: true,\n  }],\n})\nexport class AmexioPasswordComponent extends ValueAccessorBase<string> implements OnInit, Validators {\n  /*\n  Properties\n  name : field-label\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : The label of this field\n  */\n  @Input('field-label') fieldlabel: string;\n  /*\n  Properties\n  name : min-length\n  datatype : number\n  version : 4.0 onwards\n  default :\n  description : The smallest positive representable number -that is,\n  the positive number closest to zero (without actually being zero).\n  The smallest negative representable number is -min-length.\n  */\n  @Input('min-length') minlength: number;\n  /*\n  Properties\n  name : max-length\n  datatype : number\n  version : 4.0 onwards\n  default :\n  description : The smallest positive representable number -that is,\n  the positive number closest to zero (without actually being zero).\n  The smallest negative representable number is -max-length.\n  */\n  @Input('max-length') maxlength: number;\n  /*\nProperties\nname : allow-blank\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Sets if field is required\n*/\n  @Input('allow-blank') allowblank: boolean;\n  componentClass: any;\n  helpInfoMsg: string;\n  isValid: boolean;\n  regEx: RegExp;\n  showToolTip: boolean;\n  _errormsg: string;\n  get errormsg(): string {\n    return this._errormsg;\n  }\n  /*\n  Properties\n  name : error-msg\n  datatype : none\n  version : 4.0 onwards\n  default : none\n  description : Sets the error message\n  */\n  @Input('error-msg')\n  set errormsg(value: string) {\n    this.helpInfoMsg = value + '<br/>';\n  }\n  _minerrormsg: string;\n  get minerrormsg(): string {\n    return this._minerrormsg;\n  }\n  /*\n  Properties\n  name : min-error-msg\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Sets the error message for min validation\n  */\n  @Input('min-error-msg')\n  set minerrormsg(value: string) {\n    this.helpInfoMsg = this.helpInfoMsg + '<b>Min Length<b/>: ' + value + '<br/>';\n  }\n  _maxerrormsg: string;\n  get maxerrormsg(): string {\n    return this._maxerrormsg;\n  }\n  /*\n  Properties\n  name : max-error-msg\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Sets the error message for max validation\n  */\n  @Input('max-error-msg')\n  set maxerrormsg(value: string) {\n    this.helpInfoMsg = this.helpInfoMsg + 'Max Length: ' + value;\n  }\n  /*\n  Properties\n  name : place-holder\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description :\tShow place-holder inside dropdown component\n  */\n  @Input('place-holder') placeholder: string;\n  /*\n  Properties\n  name : disabled\n  datatype : boolean\n  version : 4.0 onwards\n  default : false\n  description : True to disable the field.\n  */\n  @Input() disabled: boolean;\n  /*\n  Properties\n  name : icon-feedback\n  datatype : boolean\n  version : 4.0 onwards\n  default : false\n  description :\n  */\n  @Input('icon-feedback') iconfeedback: boolean;\n  /*\n  Properties\n  name : font-style\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Set font-style to field\n  */\n  @Input('font-style') fontstyle: string;\n  /*\nProperties\nname : font-family\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set font-family to field\n*/\n  @Input('font-family') fontfamily: string;\n  /*\n  Properties\n  name : font-size\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Set font-size to field\n  */\n  @Input('font-size') fontsize: string;\n  /*\n  Properties\n  name : has-label\n  datatype : boolean\n  version : 4.0 onwards\n  default : false\n  description : flag to set label\n  */\n  @Input('has-label') haslabel = true;\n  _pattern: string;\n  get pattern(): string {\n    return this._pattern;\n  }\n  /*\n  Properties\n  name : pattern\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Apply Reg-ex to the field\n  */\n  @Input('pattern')\n  set pattern(value: string) {\n    if (value != null) {\n      this.regEx = new RegExp(this.pattern);\n    }\n  }\n  /*\nProperties\nname : enable-popover\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set enable / disable popover.\n*/\n  @Input('enable-popover') enablepopover: boolean;\n\n  /*\n  Events\n  name : onBlur\n  datatype : any\n  version : 4.0 onwards\n  default :\n  description : On blur event\n  */\n  @Output() onBlur: any = new EventEmitter<any>();\n  /*\nEvents\nname : input\ndatatype : any\nversion : none\ndefault :\ndescription : \tOn input event field.\n*/\n  @Output() input: any = new EventEmitter<any>();\n  /*\nEvents\nname : focus\ndatatype : any\nversion : none\ndefault :\ndescription : On focus event field.\n*/\n  @Output() focus: any = new EventEmitter<any>();\n  /*\nEvents\nname : change\ndatatype : any\nversion : none\ndefault :\ndescription : On field value change event\n*/\n  @Output() change: any = new EventEmitter<any>();\n  @ViewChild(NgModel) model: NgModel;\n  @Input('name') name: string;\n  constructor() {\n    super();\n    this.showToolTip = false;\n  }\n\n  // THIS METHOD USED FOR BLUR EVENT.\n  onblur() {\n    this.showToolTip = false;\n    this.onBlur.emit(this.value);\n  }\n  // THIS METHOD USED FOR FOCUS EVENT .\n  onFocus() {\n    this.showToolTip = true;\n    this.focus.emit(this.value);\n  }\n  // THIS METHOD USED FOR  INPUT EVENT .\n  onInput() {\n    this.isValid = this.isFieldValid();\n    this.input.emit(this.value);\n  }\n  // THIS METHOD USED FOR CHANGE EVENT  .\n  onChangeEv() {\n    this.change.emit(this.value);\n  }\n\n  ngOnInit() {\n    this.isValid = this.isFieldValid();\n    this.name = this.generateName(this.name, this.fieldlabel, 'passwordinput');\n  }\n\n  // THIS METHOD IS USED FOR VALIDATION\n  isFieldValid(): boolean {\n    return (!this.allowblank && (this.value && ((this.value.length >= this.minlength) && this.value.length > 0)) ||\n      (!this.minlength && this.value && this.value.length > 0)) || this.allowblank;\n  }\n  public validate(c: FormControl) {\n    return this.isFieldValid() ? null : {\n      jsonParseError: {\n        valid: true,\n      },\n    };\n  }\n}\n","\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class LoadRecaptchaService {\n\n  constructor() {\n  }\n\n  loadScript(): any {\n    const script = document.createElement('script');\n    script.innerHTML = '';\n    script.src = 'https://www.google.com/recaptcha/api.js?render=explicit';\n    script.async = true;\n    script.defer = true;\n    return script;\n  }\n}\n","/**\n * Created by dattaram on 12/9/18.\n */\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { LoadRecaptchaService } from './load.recaptcha.service';\ndeclare var grecaptcha: any;\n@Component({\n  selector: 'amexio-google-recaptcha',\n  template: `\n    <div class=\"g-recaptcha\" [attr.id]=\"componentId\">\n    </div>\n  `,\n})\n\nexport class RecaptchaComponent implements OnInit {\n  @Input('site-key') sitekey: string;\n\n  @Output() onSuccess = new EventEmitter<any>();\n\n  @Output() onFailure = new EventEmitter<any>();\n\n  responseStructure: any;\n  componentId: any;\n  constructor(private _loadRecaptchaService: LoadRecaptchaService) {\n    this.responseStructure = {};\n  }\n  ngOnInit() {\n    this.componentId =\n      +Math.floor(Math.random() * 90000) + 10000 + 'google';\n\n    const script = this._loadRecaptchaService.loadScript();\n    const body = document.body as HTMLDivElement;\n    script.onload = () => {\n      grecaptcha.ready(() => {\n        this.rendercaptcha();\n      });\n    };\n    body.appendChild(script);\n  }\n  rendercaptcha() {\n    grecaptcha.render(this.componentId, {\n      sitekey: this.sitekey, callback: (response: any) => {\n        if (response && response.length > 0) {\n          this.responseStructure['success'] = true;\n          this.responseStructure['response'] = response;\n          this.onSuccess.emit(this.responseStructure);\n        } else {\n          this.responseStructure['success'] = false;\n          this.responseStructure['response'] = '';\n          this.onFailure.emit(this.responseStructure);\n        }\n      },\n    });\n  }\n}\n","/**\n * Created by pratik on 29/1/18.\n */\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DomHandler {\n\n  public static zindex = 1000;\n\n  private calculatedScrollbarWidth: number = null;\n\n  private browser: any;\n\n  public addClass(element: any, className: string): void {\n    if (element.classList) {\n      element.classList.add(className);\n    } else {\n      element.className += ' ' + className;\n    }\n  }\n\n  public addMultipleClasses(element: any, className: string): void {\n    if (element.classList) {\n      const styles: string[] = className.split(' ');\n      for (const i of styles) {\n        element.classList.add([i]);\n      }\n\n    } else {\n      const styles: string[] = className.split(' ');\n      for (const i of styles) {\n        element.className += ' ' + [i];\n      }\n    }\n  }\n\n  public removeClass(element: any, className: string): void {\n    if (element.classList) {\n      element.classList.remove(className);\n    } else {\n      element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }\n  }\n\n  public hasClass(element: any, className: string): boolean {\n    if (element.classList) {\n      return element.classList.contains(className);\n    } else {\n      return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n    }\n  }\n\n  public siblings(element: any): any {\n    return Array.prototype.filter.call(element.parentNode.children, (child: any) => {\n      return child !== element;\n    });\n  }\n\n  public find(element: any, selector: string): any[] {\n    return element.querySelectorAll(selector);\n  }\n\n  public findSingle(element: any, selector: string): any {\n    return element.querySelector(selector);\n  }\n\n  public index(element: any): number {\n    const children = element.parentNode.childNodes;\n    let num = 0;\n    for (const i of children) {\n      if (i === element) {\n        return num;\n      }\n      if (i.nodeType === 1) {\n        num++;\n      }\n    }\n    return -1;\n  }\n\n  public relativePosition(element: any, target: any): void {\n    const elementDimensions = (element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } :\n      this.getHiddenElementDimensions(element));\n    const targetHeight = target.offsetHeight;\n    const targetWidth = target.offsetWidth;\n    const targetOffset = target.getBoundingClientRect();\n    const viewport = this.getViewport();\n    let top;\n    let left;\n\n    if ((targetOffset.top + targetHeight + elementDimensions.height) > viewport.height) {\n      top = -1 * (elementDimensions.height);\n      if (targetOffset.top + top < 0) {\n        top = 0;\n      }\n    } else {\n      top = targetHeight;\n    }\n\n    if ((targetOffset.left + elementDimensions.width) > viewport.width) {\n      left = targetWidth - elementDimensions.width;\n    } else {\n      left = 0;\n    }\n    element.style.top = top + 'px';\n    element.style.left = left + 'px';\n  }\n\n  public absolutePosition(element: any, target: any): void {\n    const elementDimensions = (element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight }\n      : this.getHiddenElementDimensions(element));\n    const elementOuterHeight = elementDimensions.height;\n    const elementOuterWidth = elementDimensions.width;\n    const targetOuterHeight = target.offsetHeight;\n    const targetOuterWidth = target.offsetWidth;\n    const targetOffset = target.getBoundingClientRect();\n    const windowScrollTop = this.getWindowScrollTop();\n    const windowScrollLeft = this.getWindowScrollLeft();\n    const viewport = this.getViewport();\n    let top;\n    let left;\n\n    if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n      top = targetOffset.top + windowScrollTop - elementOuterHeight;\n      if (top < 0) {\n        top = 0 + windowScrollTop;\n      }\n    } else {\n      top = targetOuterHeight + targetOffset.top + windowScrollTop;\n    }\n\n    if (targetOffset.left + targetOuterWidth + elementOuterWidth > viewport.width) {\n      left = targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth;\n    } else {\n      left = targetOffset.left + windowScrollLeft;\n    }\n    element.style.top = top + 'px';\n    element.style.left = left + 'px';\n  }\n\n  public getHiddenElementOuterHeight(element: any): number {\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    const elementHeight = element.offsetHeight;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n\n    return elementHeight;\n  }\n\n  public getHiddenElementOuterWidth(element: any): number {\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    const elementWidth = element.offsetWidth;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n\n    return elementWidth;\n  }\n\n  public getHiddenElementDimensions(element: any): any {\n    const dimensions: any = {};\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    dimensions.width = element.offsetWidth;\n    dimensions.height = element.offsetHeight;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n\n    return dimensions;\n  }\n\n  public scrollInView(container: any, item: any) {\n    const borderTopValue: string = getComputedStyle(container).getPropertyValue('borderTopWidth');\n    const borderTop: number = borderTopValue ? parseFloat(borderTopValue) : 0;\n    const paddingTopValue: string = getComputedStyle(container).getPropertyValue('paddingTop');\n    const paddingTop: number = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n    const containerRect = container.getBoundingClientRect();\n    const itemRect = item.getBoundingClientRect();\n    const offset = (itemRect.top + document.body.scrollTop) - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n    const scroll = container.scrollTop;\n    const elementHeight = container.clientHeight;\n    const itemHeight = this.getOuterHeight(item);\n\n    if (offset < 0) {\n      container.scrollTop = scroll + offset;\n    } else if ((offset + itemHeight) > elementHeight) {\n      container.scrollTop = scroll + offset - elementHeight + itemHeight;\n    }\n  }\n\n  public fadeIn(element: any, duration: number): void {\n    element.style.opacity = 0;\n\n    let last = +new Date();\n    let opacity = 0;\n    const tick = () => {\n      opacity = +element.style.opacity.replace(',', '.') + (new Date().getTime() - last) / duration;\n      element.style.opacity = opacity;\n      last = +new Date();\n    };\n\n    tick();\n  }\n\n  public fadeOut(element: any, ms: any) {\n    let opacity = 1;\n    const interval = 50;\n    const duration = ms;\n    const gap = interval / duration;\n\n    const fading = setInterval(() => {\n      opacity = opacity - gap;\n\n      if (opacity <= 0) {\n        opacity = 0;\n        clearInterval(fading);\n      }\n\n      element.style.opacity = opacity;\n    }, interval);\n  }\n\n  public getWindowScrollTop(): number {\n    const doc = document.documentElement;\n    return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n  }\n\n  public getWindowScrollLeft(): number {\n    const doc = document.documentElement;\n    return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n  }\n\n  public matches(element: any, selector: string): boolean {\n    const p = Element.prototype;\n    const f = p['matches'] || p.webkitMatchesSelector || p['mozMatchesSelector'] || p.msMatchesSelector || function(s: any) {\n      return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n    };\n    return f.call(element, selector);\n  }\n\n  public getOuterWidth(el: any, margin?: any) {\n    let width = el.offsetWidth;\n\n    if (margin) {\n      const style = getComputedStyle(el);\n      width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    }\n\n    return width;\n  }\n\n  public getHorizontalPadding(el: any) {\n    const style = getComputedStyle(el);\n    return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n  }\n\n  public getHorizontalMargin(el: any) {\n    const style = getComputedStyle(el);\n    return parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n  }\n\n  public innerWidth(el: any) {\n    let width = el.offsetWidth;\n    const style = getComputedStyle(el);\n\n    width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    return width;\n  }\n\n  public width(el: any) {\n    let width = el.offsetWidth;\n    const style = getComputedStyle(el);\n\n    width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    return width;\n  }\n\n  public getInnerHeight(el: any) {\n    let height = el.offsetHeight;\n    const style = getComputedStyle(el);\n\n    height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n    return height;\n  }\n\n  public getOuterHeight(el: any, margin?: any) {\n    let height = el.offsetHeight;\n\n    if (margin) {\n      const style = getComputedStyle(el);\n      height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n    }\n\n    return height;\n  }\n\n  public getHeight(el: any): number {\n    let height = el.offsetHeight;\n    const style = getComputedStyle(el);\n\n    height -= (parseFloat(style.paddingTop) + parseFloat(style.paddingBottom)\n      + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth));\n\n    return height;\n  }\n\n  public getWidth(el: any): number {\n    let width = el.offsetWidth;\n    const style = getComputedStyle(el);\n\n    width -= (parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) +\n      parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth));\n\n    return width;\n  }\n\n  public getViewport(): any {\n    const win = window;\n    const d = document;\n    const e = d.documentElement;\n    const g = d.getElementsByTagName('body')[0];\n    const w = win.innerWidth || e.clientWidth || g.clientWidth;\n    const h = win.innerHeight || e.clientHeight || g.clientHeight;\n\n    return { width: w, height: h };\n  }\n\n  public getOffset(el: any) {\n    const rect = el.getBoundingClientRect();\n\n    return {\n      top: rect.top + document.body.scrollTop,\n      left: rect.left + document.body.scrollLeft,\n    };\n  }\n\n  getUserAgent(): string {\n    return navigator.userAgent;\n  }\n\n  isIE() {\n    const ua = window.navigator.userAgent;\n\n    const msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n      // IE 10 or older => return version number\n      return true;\n    }\n\n    const trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n      // IE 11 => return version number\n      return true;\n    }\n\n    const edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n      // Edge (IE 12+) => return version number\n      return true;\n    }\n\n    // other browser\n    return false;\n  }\n\n  appendChild(element: any, target: any) {\n    if (this.isElement(target)) {\n      target.appendChild(element);\n    } else if (target.el && target.el.nativeElement) {\n      target.el.nativeElement.appendChild(element);\n    } else {\n      throw new Error('Cannot append ' + target + ' to ' + element);\n    }\n  }\n\n  removeChild(element: any, target: any) {\n    if (this.isElement(target)) {\n      target.removeChild(element);\n    } else if (target.el && target.el.nativeElement) {\n      target.el.nativeElement.removeChild(element);\n    } else {\n      throw new Error('Cannot remove ' + element + ' from ' + target);\n    }\n  }\n\n  isElement(obj: any) {\n    return (typeof HTMLElement === 'object' ? obj instanceof HTMLElement :\n      obj && typeof obj === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string'\n    );\n  }\n\n  calculateScrollbarWidth(): number {\n    if (this.calculatedScrollbarWidth !== null) {\n      return this.calculatedScrollbarWidth;\n    }\n\n    const scrollDiv = document.createElement('div');\n    scrollDiv.className = 'ui-scrollbar-measure';\n    document.body.appendChild(scrollDiv);\n\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n\n    this.calculatedScrollbarWidth = scrollbarWidth;\n\n    return scrollbarWidth;\n  }\n\n  invokeElementMethod(element: any, methodName: string, args?: any[]): void {\n    (element)[methodName].apply(element, args);\n  }\n\n  clearSelection(): void {\n    if (window.getSelection) {\n      if (window.getSelection().empty) {\n        window.getSelection().empty();\n      } else if (window.getSelection().removeAllRanges &&\n        window.getSelection().rangeCount > 0 &&\n        window.getSelection().getRangeAt(0).getClientRects().length > 0) {\n        window.getSelection().removeAllRanges();\n      }\n    } else if (document['selection'] && document['selection'].empty) {\n      try {\n        document['selection'].empty();\n      } catch (error) {\n        // ignore IE bug\n      }\n    }\n  }\n\n  getBrowser() {\n    if (!this.browser) {\n      const matched = this.resolveUserAgent();\n      this.browser = {};\n\n      if (matched.browser) {\n        this.browser[matched.browser] = true;\n        this.browser['version'] = matched.version;\n      }\n\n      if (this.browser['chrome']) {\n        this.browser['webkit'] = true;\n      } else if (this.browser['webkit']) {\n        this.browser['safari'] = true;\n      }\n    }\n\n    return this.browser;\n  }\n\n  resolveUserAgent() {\n    const ua = navigator.userAgent.toLowerCase();\n    const match: any = /(chrome)[ \\/]([\\w.]+)/.exec(ua) ||\n      /(webkit)[ \\/]([\\w.]+)/.exec(ua) ||\n      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) ||\n      /(msie) ([\\w.]+)/.exec(ua) ||\n      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) ||\n      [];\n\n    return {\n      browser: match[1] || '',\n      version: match[2] || '0',\n    };\n  }\n}\n","/*\n Component Name : Amexio Slider\n Component Selector :  <amexio-slider>\n Component Description : Slider with draggable input provide a way to input values\n*/\n\nimport { Component, ElementRef, EventEmitter, forwardRef, Input, NgZone, OnDestroy, Output, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DomHandler } from './slider.handler';\n\n@Component({\n  selector: 'amexio-slider',\n  template: `\n    <div [ngStyle]=\"style\" [class]=\"styleClass\"\n    [ngClass]=\"{'ui-slider ui-widget ui-widget-content ui-corner-all':true,'disable-component':disabled,\n            'ui-slider-horizontal':orientation == 'horizontal',\n            'ui-slider-vertical':orientation == 'vertical','ui-slider-animate':animate}\"\n         (click)=\"onBarClick($event)\">\n      <span *ngIf=\"range && orientation == 'horizontal'\" class=\"ui-slider-range ui-widget-header ui-corner-all\"\n      [ngStyle]=\"{'left':handleValues[0] + '%',width: (handleValues[1] - handleValues[0] + '%')}\"></span>\n      <span *ngIf=\"range && orientation == 'vertical'\" class=\"ui-slider-range ui-widget-header ui-corner-all\"\n      [ngStyle]=\"{'bottom':handleValues[0] + '%',height: (handleValues[1] - handleValues[0] + '%')}\"></span>\n      <span *ngIf=\"!range && orientation=='vertical'\" class=\"ui-slider-range ui-slider-range-min ui-widget-header ui-corner-all\"\n      [ngStyle]=\"{'height': handleValue + '%'}\"></span>\n      <span *ngIf=\"!range && orientation=='horizontal'\" class=\"ui-slider-range ui-slider-range-min ui-widget-header ui-corner-all\"\n      [ngStyle]=\"{'width': handleValue + '%'}\"></span>\n      <span *ngIf=\"!range\" class=\"ui-slider-handle ui-state-default ui-corner-all ui-clickable\"\n      (mousedown)=\"onMouseDown($event)\" (touchstart)=\"onTouchStart($event)\" (touchmove)=\"onTouchMove($event)\" (touchend)=\"dragging=false\"\n            [style.transition]=\"dragging ? 'none': null\" [ngStyle]=\"{'left': orientation == 'horizontal' ? handleValue + '%' : null,\n            'bottom': orientation == 'vertical' ? handleValue + '%' : null}\"></span>\n      <span *ngIf=\"range\" (mousedown)=\"onMouseDown($event,0)\"\n      (touchstart)=\"onTouchStart($event,0)\" (touchmove)=\"onTouchMove($event,0)\" (touchend)=\"dragging=false\"\n      [style.transition]=\"dragging ? 'none': null\" class=\"ui-slider-handle ui-state-default ui-corner-all ui-clickable\"\n            [ngStyle]=\"{'left': rangeStartLeft, 'bottom': rangeStartBottom}\"\n            [ngClass]=\"{'ui-slider-handle-active':handleIndex==0}\"></span>\n      <span *ngIf=\"range\" (mousedown)=\"onMouseDown($event,1)\"\n      (touchstart)=\"onTouchStart($event,1)\" (touchmove)=\"onTouchMove($event,1)\"\n      (touchend)=\"dragging=false\"\n      [style.transition]=\"dragging ? 'none': null\"\n      class=\"ui-slider-handle ui-state-default ui-corner-all ui-clickable\"\n            [ngStyle]=\"{'left': rangeEndLeft, 'bottom': rangeEndBottom}\" [ngClass]=\"{'ui-slider-handle-active':handleIndex==1}\"></span>\n    </div>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AmexioSliderComponent), multi: true,\n  }],\n})\nexport class AmexioSliderComponent implements OnDestroy, ControlValueAccessor {\n\n  /*\nProperties\nname : animate\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Sets if animate flag is set\n*/\n  @Input() animate: boolean;\n  /*\nProperties\nname : disabled\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Sets if slider is disabled\n*/\n  @Input() disabled: boolean;\n  /*\nProperties\nname : min-value\ndatatype : number\nversion : 4.0 onwards\ndefault :\ndescription : Min slider value\n*/\n  @Input('min-value') min = 0;\n  /*\nProperties\nname : max-value\ndatatype : number\nversion : 4.0 onwards\ndefault :\ndescription : Max slider value\n*/\n  @Input('max-value') max = 100;\n  /*\nProperties\nname : orientation\ndatatype : string\nversion : 4.0 onwards\ndefault : horizontal\ndescription : Vertical or Horizontal Orientation of slider\n*/\n  @Input() orientation = 'horizontal';\n  /*\nProperties\nname : step-value\ndatatype : number\nversion : 4.0 onwards\ndefault :\ndescription : Step value in slider\n*/\n  @Input('step-value') step: number;\n  /*\nProperties\nname : range\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Range set to the slider\n*/\n  @Input() range: boolean;\n\n  @Input() style: any;\n  /*\nProperties\nname : style-class\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Styling class applied slider\n*/\n  @Input('style-class') styleClass: string;\n  /*\nEvents\nname : onChange\ndatatype : any\nversion : 4.0 onwards\ndefault :\ndescription : Triggers when slider is moved\n*/\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\n  /*\nEvents\nname : onSlideEnd\ndatatype : any\nversion : 4.0 onwards\ndefault :\ndescription : Triggers when slider reaches the end\n*/\n  @Output() onSlideEnd: EventEmitter<any> = new EventEmitter();\n\n  public dragging: boolean;\n\n  public dragListener: any;\n\n  public mouseupListener: any;\n\n  public initX: number;\n\n  public initY: number;\n\n  public barWidth: number;\n\n  public barHeight: number;\n\n  public sliderHandleClick: boolean;\n\n  public handleIndex = 0;\n\n  public startHandleValue: any;\n\n  public startx: number;\n\n  public starty: number;\n\n  public value: number;\n\n  public values: number;\n\n  public handleValue: number;\n\n  public handleValues: number[] = [];\n\n  public onModelChange: any = () => { };\n\n  public onModelTouched: any = () => { };\n\n  constructor(public el: ElementRef, public domHandler: DomHandler, public renderer: Renderer2, private ngZone: NgZone) { }\n\n  onMouseDown(event: Event, index?: number) {\n    if (this.disabled) {\n      return;\n    }\n\n    this.dragging = true;\n    this.updateDomData();\n    this.sliderHandleClick = true;\n    this.handleIndex = index;\n    this.bindDragListeners();\n    event.preventDefault();\n  }\n\n  onTouchStart(event: any, index?: number) {\n    const touchobj = event.changedTouches[0];\n    this.startHandleValue = (this.range) ? this.handleValues[index] : this.handleValue;\n    this.dragging = true;\n    this.handleIndex = index;\n\n    if (this.orientation === 'horizontal') {\n      this.startx = parseInt(touchobj.clientX, 10);\n      this.barWidth = this.el.nativeElement.children[0].offsetWidth;\n    } else {\n      this.starty = parseInt(touchobj.clientY, 10);\n      this.barHeight = this.el.nativeElement.children[0].offsetHeight;\n    }\n\n    event.preventDefault();\n  }\n\n  onTouchMove(event: any, index?: number) {\n    const touchobj = event.changedTouches[0];\n    let handleValue = 0;\n\n    if (this.orientation === 'horizontal') {\n      handleValue = Math.floor(((parseInt(touchobj.clientX, 10) - this.startx) * 100) / (this.barWidth)) + this.startHandleValue;\n    } else {\n      handleValue = Math.floor(((this.starty - parseInt(touchobj.clientY, 10)) * 100) / (this.barHeight)) + this.startHandleValue;\n    }\n\n    this.setValueFromHandle(event, handleValue);\n\n    event.preventDefault();\n  }\n\n  onBarClick(event: any) {\n    if (this.disabled) {\n      return;\n    }\n\n    if (!this.sliderHandleClick) {\n      this.updateDomData();\n      this.handleChange(event);\n    }\n\n    this.sliderHandleClick = false;\n  }\n\n  handleChange(event: Event) {\n    const handleValue = this.calculateHandleValue(event);\n    this.setValueFromHandle(event, handleValue);\n  }\n\n  bindDragListeners() {\n    this.ngZone.runOutsideAngular(() => {\n      if (!this.dragListener) {\n        this.dragListener = this.renderer.listen('document', 'mousemove', (event: any) => {\n          if (this.dragging) {\n            this.ngZone.run(() => {\n              this.handleChange(event);\n            });\n          }\n        });\n      }\n\n      if (!this.mouseupListener) {\n        this.mouseupListener = this.renderer.listen('document', 'mouseup', (event: any) => {\n          this.mouseUpListMethod();\n        });\n      }\n    });\n  }\n\n  mouseUpListMethod() {\n    if (this.dragging) {\n      this.dragging = false;\n      this.ngZone.run(() => {\n        if (this.range) {\n          this.onSlideEnd.emit({ originalEvent: event, values: this.values });\n        } else {\n          this.onSlideEnd.emit({ originalEvent: event, value: this.value });\n        }\n      });\n    }\n  }\n\n  unbindDragListeners() {\n    if (this.dragListener) {\n      this.dragListener();\n    }\n\n    if (this.mouseupListener) {\n      this.mouseupListener();\n    }\n  }\n\n  setValueFromHandle(event: Event, handleValue: any) {\n    const newValue = this.getValueFromHandle(handleValue);\n\n    if (this.range) {\n      if (this.step) {\n        this.handleStepChange(newValue, this.values[this.handleIndex]);\n      } else {\n        this.handleValues[this.handleIndex] = handleValue;\n        this.updateValue(newValue, event);\n      }\n    } else {\n      if (this.step) {\n        this.handleStepChange(newValue, this.value);\n      } else {\n        this.handleValue = handleValue;\n        this.updateValue(newValue, event);\n      }\n    }\n  }\n\n  handleStepChange(newValue: number, oldValue: number) {\n    const diff = (newValue - oldValue);\n    let val = oldValue;\n\n    if (diff < 0) {\n      val = oldValue + Math.ceil((newValue - oldValue) / this.step) * this.step;\n    } else if (diff > 0) {\n      val = oldValue + Math.floor((newValue - oldValue) / this.step) * this.step;\n    }\n\n    this.updateValue(val);\n    this.updateHandleValue();\n  }\n\n  writeValue(value: any): void {\n    if (this.range) {\n      this.values = value || [0, 0];\n    } else {\n      this.value = value || 0;\n    }\n\n    this.updateHandleValue();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onModelTouched = fn;\n  }\n\n  setDisabledState(val: boolean): void {\n    this.disabled = val;\n  }\n\n  get rangeStartLeft() {\n    return this.isVertical() ? 'auto' : this.handleValues[0] + '%';\n  }\n\n  get rangeStartBottom() {\n    return this.isVertical() ? this.handleValues[0] + '%' : 'auto';\n  }\n\n  get rangeEndLeft() {\n    return this.isVertical() ? 'auto' : this.handleValues[1] + '%';\n  }\n\n  get rangeEndBottom() {\n    return this.isVertical() ? this.handleValues[1] + '%' : 'auto';\n  }\n\n  isVertical(): boolean {\n    return this.orientation === 'vertical';\n  }\n\n  updateDomData(): void {\n    const rect = this.el.nativeElement.children[0].getBoundingClientRect();\n    this.initX = rect.left + this.domHandler.getWindowScrollLeft();\n    this.initY = rect.top + this.domHandler.getWindowScrollTop();\n    this.barWidth = this.el.nativeElement.children[0].offsetWidth;\n    this.barHeight = this.el.nativeElement.children[0].offsetHeight;\n  }\n\n  calculateHandleValue(event: any): number {\n    if (this.orientation === 'horizontal') {\n      return ((event.pageX - this.initX) * 100) / (this.barWidth);\n    } else {\n      return (((this.initY + this.barHeight) - event.pageY) * 100) / (this.barHeight);\n    }\n  }\n\n  updateHandleValue(): void {\n    if (this.range) {\n      this.handleValues[0] = (this.values[0] < this.min ? 0 : this.values[0] - this.min) * 100 / (this.max - this.min);\n      this.handleValues[1] = (this.values[1] > this.max ? 100 : this.values[1] - this.min) * 100 / (this.max - this.min);\n    } else {\n      if (this.value < this.min) {\n        this.handleValue = 0;\n      } else if (this.value > this.max) {\n        this.handleValue = 100;\n      } else {\n        this.handleValue = (this.value - this.min) * 100 / (this.max - this.min);\n      }\n    }\n  }\n\n  updateValue(val: number, valueEvent?: Event): void {\n    if (this.range) {\n      let value = val;\n\n      if (this.handleIndex === 0) {\n        if (value < this.min) {\n          value = this.min;\n          this.handleValues[0] = 0;\n        } else if (value > this.values[1]) {\n          value = this.values[1];\n          this.handleValues[0] = this.handleValues[1];\n        }\n      } else {\n        if (value > this.max) {\n          value = this.max;\n          this.handleValues[1] = 100;\n        } else if (value < this.values[0]) {\n          value = this.values[0];\n          this.handleValues[1] = this.handleValues[0];\n        }\n      }\n\n      this.values[this.handleIndex] = Math.floor(value);\n      this.onModelChange(this.values);\n      this.onChange.emit({ event: valueEvent, values: this.values });\n    } else {\n      this.updateValueNoRange(val, valueEvent);\n    }\n  }\n\n  updateValueNoRange(val: number, valueEvent?: Event) {\n    if (val < this.min) {\n      val = this.min;\n      this.handleValue = 0;\n    } else if (val > this.max) {\n      val = this.max;\n      this.handleValue = 100;\n    }\n\n    this.value = Math.floor(val);\n    this.onModelChange(this.value);\n    this.onChange.emit({ event: valueEvent, value: this.value });\n  }\n\n  getValueFromHandle(handleValue: number): number {\n    return (this.max - this.min) * (handleValue / 100) + this.min;\n  }\n\n  ngOnDestroy() {\n    this.unbindDragListeners();\n  }\n}\n","/**\n * Created by kedar on 17/09/18.\n */\n/*\nComponent Name : Amexio Spinner\nComponent Selector :  <amexio-spinner>\nComponent Description :\n*/\nimport { Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, Renderer2, ViewChild } from '@angular/core';\n@Component({\n  selector: 'amexio-spinner',\n  template: `\n    <div #loadindicator [ngStyle]=\"{'display': show ? 'block': 'none'}\" \n    [style.color]='color' [style.font-size]= 'size'\n     [ngClass]=\"{\n            'rectangle-bounces' :type == 'rectanglebounce',\n            'rings' :type == 'ring',\n            'half-circles' :type == 'halfcircle',\n            'fading-circles' :type == 'fadingcircle',\n            'ball-spins' :type == 'ballspin',\n            'fire-spins' :type == 'firespin',\n            'three-bounces' :type == 'threebounce',\n            'spinner-rounds' :type == 'spinnerround'}\n            \">\n    </div>\n  `,\n})\n\nexport class AmexioSpinnerComponent implements OnInit {\n  private _type: string;\n  private _color: string;\n\n  /*\n  Events\n  name : type\n  datatype : any\n  version : none\n  default : none\n  description : spinner have different type , specify the type as per user choice.\n  */\n  @Input('type') type: any;\n  /*\n   Events\n   name : color\n   datatype : string\n   version : none\n   default : none\n   description : spinner want color\n   */\n  @Input('color')\n  set color(v: string) {\n    const ischanges: boolean = (this._color !== v);\n    this._color = v;\n    if (ischanges) {\n      this.assignColor();\n    }\n  }\n  get color() {\n    return this._color;\n  }\n  /*\n  Events\n  name : show\n  datatype : boolean\n  version : none\n  default : true\n  description : if show  is true than and only than the spinner is enable, if false then it is disable.\n  */\n  @Input() show = true;\n\n  /*\n  Events\n  name : size\n  datatype : string\n  version : none\n  default : true\n  description : size for spinner.\n  */\n  @Input('size') size: string;\n\n  @ViewChild('loadindicator') element: ElementRef;\n\n  alpha = '0.2';\n\n  constructor(private renderer: Renderer2) {\n  }\n\n  ngOnInit() {\n    this.assignColor();\n  }\n  private assignColor() {\n    if (this.type === 'spinnerround' && this.color) {\n      let newColor: any;\n      const r = parseInt(this.color.slice(1, 3), 16);\n      const g = parseInt(this.color.slice(3, 5), 16);\n      const b = parseInt(this.color.slice(5, 7), 16);\n\n      if (this.alpha) {\n        newColor = `rgba(${r}, ${g}, ${b}, ${this.alpha})`;\n      } else {\n        newColor = `rgba(${r}, ${g}, ${b})`;\n      }\n      const inlinecss = 'margin: 60px auto;font-size: 10px;position: relative;text-indent: -9999em;border-top: 1.1em solid ' + newColor +\n        '; border-right: 1.1em solid ' + newColor +\n        ';border-left: 1.1em solid ;-webkit-transform: translateZ(0);-ms-transform: translateZ(0);border-bottom: 1.1em solid ' + newColor +\n        ';transform: translateZ(0);  -webkit-animation: load8 1.1s infinite linear;animation: load8 1.1s infinite linear;';\n      const inlinecssafter = ' border-radius: 50%; width: 10em; height: 10em;';\n      this.insertStyleSheetRule('.dynamicclass { ' + inlinecss + inlinecssafter + '}');\n      this.insertStyleSheetRule('@-webkit-keyframes load8 { 0% {  -webkit-transform: rotate(0deg);  transform: rotate(0deg);} ' +\n        '100%{-webkit-transform: rotate(360deg); transform: rotate(360deg);} }');\n      this.renderer.addClass(this.element.nativeElement, 'dynamicclass');\n    }\n  }\n\n  insertStyleSheetRule(ruleText: any) {\n    const sheets: any = document.styleSheets;\n    if (sheets.length === 0) {\n      const style = document.createElement('style');\n      style.appendChild(document.createTextNode(''));\n      document.head.appendChild(style);\n    }\n    const sheet: any = sheets[sheets.length - 1];\n    sheet.insertRule(ruleText, sheet.rules ? sheet.rules.length : sheet.cssRules.length);\n  }\n}\n","/**\n * Created by pratik on 20/12/17.\n */\n\n/*\nComponent Name : Amexio Tag Input\nComponent Selector :  <amexio-tag-input>\nComponent Description : Tags based multi input with typeahead facility.\n*/\nimport {\n  ChangeDetectorRef, Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, Renderer2, ViewChild,\n} from '@angular/core';\n\nimport { CommonDataService } from '../../services/data/common.data.service';\n\nimport {BaseFormValidator} from '../../base/base.validator.component';\n\n@Component({\n  selector: 'amexio-tag-input', template: `\n    <div class=\"inputgroup\" #rootDiv>\n\n        <label *ngIf=\"haslabel\" [style.font-style]=\"fontstyle\" [style.font-family]=\"fontfamily\" [style.font-size]=\"fontsize\">\n        {{fieldlabel}}\n      </label>\n\n\n        <div class=\"tag-input\" [ngClass]=\"{'loading-mask' : maskloader}\">\n            <div class=\"tag\" *ngFor=\"let item of onSelections\">\n                {{item[key]}}\n                <span class=\"closebtn\" (click)=\"removePill(item)\">&times;</span>\n            </div>\n\n            <input type=\"text\" class=\"input-control\" [ngClass]=\"{'input-control-error' : inp.invalid && (inp.dirty || inp.touched),'input-control-success' : inp.valid && (inp.dirty || inp.touched)}\" (focus)=\"onFocus(rootDiv)\" (input)=\"onInput(inp)\" (keyup)=\"onKeyUp($event)\"\n                [attr.placeholder]=\"placeholder\" [attr.disabled]=\"disabled ? true: null\" [required]=\"allowblank ? true: null\" #inp/>\n\n        </div>\n\n\n        <span #dropdownitems class=\"dropdown\" [ngClass]=\"{'dropdown-up' : posixUp}\" [ngStyle]=\"dropdownstyle\" #tagDropRef>\n        <ul class=\"dropdown-list\">\n          <li class=\"list-items\" [ngClass]=\"{'list-items-selected':item.selected}\"\n              *ngFor=\"let item of filteredResult\"\n              (click)=\"setValue(item,inp)\"><div>{{item[displayfield]}}</div></li>\n        </ul>\n      </span>\n\n    </div>\n\n\n    <span *ngIf=\"iconfeedback && (inp.invalid && (inp.dirty || inp.touched) || inp.valid)\" class=\"input-control-feedback\">\n            <span *ngIf=\"inp.invalid && (inp.dirty || inp.touched)\">&#9888;</span>\n    <span *ngIf=\"inp.valid && (inp.dirty || inp.touched)\"> &#10004;</span>\n\n    </span>\n\n    <span *ngIf=\"showToolTip && enablepopover\" class=\"tooltiptext\">\n            <div [innerHTML]=\"helpInfoMsg\"></div>\n    </span>\n  `,\n})\n\nexport class AmexioTagsInputComponent extends BaseFormValidator<any> implements OnInit {\n  /*\nProperties\nname : field-label\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : The label of this field\n*/\n  @Input('field-label') fieldlabel: string;\n  /*\nProperties\nname : allow-blank\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Sets if field is required\n*/\n  @Input('allow-blank') allowblank: boolean;\n  /*\nProperties\nname : data\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Input data source\n*/\n  @Input() data: any;\n  /*\n Properties\n name : data-reader\n datatype : string\n version : 4.0 onwards\n default :\n description : Key in JSON datasource for records\n */\n  @Input('data-reader') datareader: string;\n  /*\n  Properties\n  name : http-method\n  datatype : string\n  version : 4.0 onwards\n  default :\n  description : Type of HTTP call, POST,GET.\n  */\n  @Input('http-method') httpmethod: string;\n  /*\n Properties\n name : http-url\n datatype : string\n version : 4.0 onwards\n default :\n description : REST url for fetching datasource.\n */\n  @Input('http-url') httpurl: string;\n  /*\nProperties\nname : display-field\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Name of key inside response data to display on ui.\n*/\n  @Input('display-field') displayfield: string;\n  /*\nProperties\nname : value-field\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Name of key inside response data.use to send to backend\n*/\n  @Input('value-field') valuefield: string;\n\n  @Input('place-holder') placeholder: string;\n\n  @Input() disabled: boolean;\n\n  @Input('icon-feedback') iconfeedback: boolean;\n  /*\nProperties\nname : font-style\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set font-style to field\n*/\n  @Input('font-style') fontstyle: string;\n  /*\nProperties\nname : font-family\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set font-family to field\n*/\n  @Input('font-family') fontfamily: string;\n  /*\nProperties\nname : font-size\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set font-size to field\n*/\n  @Input('font-size') fontsize: string;\n  /*\nProperties\nname : enable-popover\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Set enable / disable popover.\n*/\n  @Input('enable-popover') enablepopover: boolean;\n  /*\nProperties\nname : key\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Key as input to tags\n*/\n  @Input() key: any;\n  /*\n  Properties\n  name : trigger-char\n  datatype : number\n  version : 4.0 onwards\n  default :\n  description : Sets the trigger char length\n  */\n  @Input('trigger-char') triggerchar: number;\n\n  /*\n Properties\n name : has-label\n datatype : boolean\n version : 4.0 onwards\n default : false\n description : flag to set label\n */\n  @Input('has-label') haslabel = true;\n  /*\n Events\n name : input\n datatype : any\n version : none\n default :\n description :\tOn input event field.\n */\n  @Output() input: any = new EventEmitter<any>();\n  /*\nEvents\nname : onChange\ndatatype : any\nversion : none\ndefault :\ndescription : on change event\n*/\n  @Output() onChange: EventEmitter<any> = new EventEmitter<any>();\n  /*\nEvents\nname : focus\ndatatype : any\nversion : none\ndefault :\ndescription : On field focus event\n*/\n  @Output() focus: any = new EventEmitter<any>();\n\n  onSelections: any[] = [];\n\n  displayValue: any;\n\n  activeindex = 0;\n\n  currentActive: any;\n\n  helpInfoMsg: string;\n\n  _errormsg: string;\n\n  posixUp: boolean;\n\n  selectedindex = 0;\n\n  scrollposition = 30;\n\n  get errormsg(): string {\n    return this._errormsg;\n  }\n\n  @Input('error-msg')\n  set errormsg(value: string) {\n    this.helpInfoMsg = value + '<br/>';\n  }\n\n  showToolTip: boolean;\n\n  responseData: any;\n\n  previousData: any;\n\n  viewData: any;\n\n  filteredResult: any;\n\n  @ViewChild('inp') inpHandle: any;\n\n  @ViewChild('tagDropRef') tagDropRef: any;\n\n  @ViewChild('dropdownitems', { read: ElementRef }) public dropdownitems: ElementRef;\n\n  isValid: boolean;\n\n  @Output() isComponentValid: any = new EventEmitter<any>();\n\n  maskloader = true;\n\n  constructor(\n    public dataService: CommonDataService, public element: ElementRef,\n    public renderer: Renderer2, _cd: ChangeDetectorRef,\n  ) {\n    super(renderer, element, _cd);\n  }\n\n  ngOnInit() {\n    this.isComponentValid.emit(this.allowblank);\n\n    if (this.placeholder === '' || this.placeholder === null) {\n      this.placeholder = 'Choose Option';\n    }\n\n    if (!this.triggerchar) {\n      this.triggerchar = 1;\n    }\n\n    if (this.httpmethod && this.httpurl) {\n      this.dataService.fetchData(this.httpurl, this.httpmethod).subscribe((response) => {\n        this.responseData = response;\n      }, (error) => {\n      }, () => {\n        this.setData(this.responseData);\n      });\n\n    } else if (this.data) {\n      this.previousData = JSON.parse(JSON.stringify(this.data));\n      this.setData(this.data);\n    }\n\n  }\n\n  navigateKey(event: any) {\n\n  }\n\n  onKeyUp(event: any) {\n    this.filteredResult = [];\n    this.showToolTip = false;\n    const keyword: any = event.target.value;\n    if (keyword !== null && keyword !== ' ' && keyword.length >= this.triggerchar) {\n      const search_term = keyword.toLowerCase();\n      this.viewData.forEach((item: any) => {\n        if (item != null && item[this.key].toLowerCase().startsWith(search_term)) {\n            this.filteredResult.push(item);\n        }\n      });\n      if (this.filteredResult.length > 0) {\n        this.showToolTip = true;\n        this.onBaseFocusEvent({});\n      } else {\n        this.showToolTip = this.onBaseBlurEvent({});\n      }\n    }\n    if (event.keyCode === 40 || event.keyCode === 38 || event.keyCode === 13) {\n      this.navigateUsingKey(event);\n    }\n  }\n  navigateUsingKey(event: any) {\n\n    if (this.selectedindex > this.filteredResult.length) {\n      this.selectedindex = 0;\n    }\n    if (event.keyCode === 40 || event.keyCode === 38 && this.selectedindex < this.filteredResult.length) {\n      this.keyUpDownMethod(event);\n    }\n\n    if (event.keyCode === 13 && this.filteredResult[this.selectedindex]) {\n      this.onItemSelect(this.filteredResult[this.selectedindex]);\n    }\n\n  }\n\n  // Method when up arrow or down arrow is pressed\n\n  keyUpDownMethod(event: any) {\n    if (!this.showToolTip) {\n      this.showToolTip = true;\n    }\n    let prevselectedindex = 0;\n    if (this.selectedindex === 0) {\n      this.selectedindex = 1;\n    } else {\n      prevselectedindex = this.selectedindex;\n      if (event.keyCode === 40) {\n        this.selectedindex++;\n        if ((this.selectedindex > 5)) {\n          this.dropdownitems.nativeElement.scroll(0, this.scrollposition);\n          this.scrollposition = this.scrollposition + 30;\n        }\n      } else if (event.keyCode === 38) {\n        this.keyUpMethod();\n      }\n    }\n\n    if (this.filteredResult[this.selectedindex]) {\n      this.filteredResult[this.selectedindex].selected = true;\n    }\n    if (this.filteredResult[prevselectedindex]) {\n      this.filteredResult[prevselectedindex].selected = false;\n    }\n  }\n\n  // Method when keyCode is 38 i.e Up\n  keyUpMethod() {\n    this.selectedindex--;\n    if (this.scrollposition >= 0 && this.selectedindex > 1) {\n      this.dropdownitems.nativeElement.scroll(0, this.scrollposition);\n      this.scrollposition = this.scrollposition - 30;\n    }\n    if (this.selectedindex === 1) {\n      this.scrollposition = 30;\n    }\n  }\n  showAllData(activerow: number) {\n    let i = 0;\n    this.viewData.forEach((item: any) => {\n      if (item != null) {\n        if (i === activerow) {\n          item.active = true;\n          this.currentActive = item;\n        } else {\n          item.active = false;\n        }\n        item.activerow = activerow;\n        this.filteredResult.push(item);\n      }\n      i++;\n    });\n\n    if (this.filteredResult.length > 0) {\n      this.showToolTip = true;\n    }\n\n  }\n\n  onItemSelect(row: any) {\n    this.value = row[this.valuefield];\n    this.displayValue = row[this.displayfield];\n    this.showToolTip = false;\n  }\n\n  onInput(input: any) {\n    this.input.emit();\n  }\n\n  // get accessor\n  get value(): any {\n    return this.innerValue;\n  }\n\n  // set accessor including call the onchange callback\n  set value(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  onFocus(elem: any) {\n    this.inpHandle.nativeElement.placeholder = '';\n    this.showToolTip = true;\n    this.onBaseFocusEvent({});\n    this.posixUp = this.getListPosition(elem);\n    this.focus.emit(this.value);\n  }\n\n  getListPosition(elementRef: any): boolean {\n\n    const dropdownHeight = 325;\n    // must be same in dropdown.scss\n    if (elementRef) {\n      if (window.screen.height - (elementRef.getBoundingClientRect().bottom) < dropdownHeight) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  setData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n\n    this.viewData = responsedata;\n    this.maskloader = false;\n  }\n\n  setValue(value: any, ref: any) {\n    this.inpHandle.nativeElement.value = '';\n    this.onSelections.push(value);\n    this.onChange.emit(this.onSelections);\n    if (this.onSelections.length > 0) {\n      this.isValid = true;\n      this.isComponentValid.emit(true);\n    }\n    this.showToolTip = false;\n  }\n\n  removePill(item: any) {\n    let indexToRemove: number = null;\n    this.onSelections.forEach((selectedVal, index) => {\n      if (selectedVal === item) {\n        indexToRemove = index;\n      }\n    });\n    this.onSelections.splice(indexToRemove, 1);\n    if (this.onSelections.length === 0) {\n      this.isValid = false;\n      this.isComponentValid.emit(false);\n    }\n    this.onChange.emit(this.onSelections);\n  }\n     // THIS MEHTOD CHECK INPUT IS VALID OR NOT\n  checkValidity(): boolean {\n    return this.isValid;\n  }\n\n}\n","/*\n\nComponent Name : Amexio Textarea Input\nComponent Selector :  <amexio-textarea-input>\nComponent Description : TextArea input component has been created with\ndifferent configurable attributes for validation\n(min/max value, allow blank, custom regex), custom error message, help, custom styles.\n\n*/\nimport { Component, ElementRef, EventEmitter, forwardRef, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgModel, Validators } from '@angular/forms';\nimport { ValueAccessorBase } from '../../base/value-accessor';\n\n@Component({\n  selector: 'amexio-textarea-input',\n  template: `\n\n    <div class=\"inputgroup form-group\">\n\n      <label *ngIf=\"haslabel\" [style.font-style]=\"fontstyle\" [style.font-family]=\"fontfamily\" [style.font-size]=\"fontsize\">\n        {{fieldlabel}}\n      </label>\n\n      <textarea type=\"text\" class=\"input-control\"\n             [(ngModel)]=\"value\"\n             #inp=\"ngModel\"\n             [ngClass]=\"componentClass\"\n             (blur)=\"onBlurEvent()\"\n             (focus)=\"onFocus()\"\n             (input)=\"onInput()\"\n             [name]=\"name\"\n             [pattern]=\"regEx\"\n             #ref\n             [attr.placeholder]=\"placeholder\"\n             [attr.rows]=\"rows\"\n             [attr.cols]=\"columns\"\n             [attr.disabled] = \"disabled ? true: null\"\n             [required]=\"!allowblank\">\n      </textarea>\n\n      <span *ngIf=\"iconfeedback && (inp.invalid && (inp.dirty || inp.touched) || inp.valid)\" class=\"input-control-feedback\">\n            <span *ngIf=\"!isValid && inp.touched\"><em class=\"fa fa-times\"></em></span>\n            <span *ngIf=\"isValid && inp.touched\"><em class=\"fa fa-check\"></em></span>\n          </span>\n\n      <span *ngIf=\"showToolTip && enablepopover\" class=\"dropdown tooltiptext\">\n            <div  [innerHTML]=\"helpInfoMsg\"></div>\n      </span>\n      <span class=\"inputfieldbar\"></span>\n    </div>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AmexioTextAreaComponent), multi: true,\n  }, {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => AmexioTextAreaComponent), multi: true,\n  }],\n})\nexport class AmexioTextAreaComponent extends ValueAccessorBase<string> implements OnInit, Validators {\n\n  /*\nProperties\nname : field-label\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : The label of this field\n*/\n  @Input('field-label') fieldlabel: string;\n  /*\nProperties\nname : rows\ndatatype : number\nversion : 4.0 onwards\ndefault : none\ndescription : rows to have in textarea\n*/\n  @Input() rows: number;\n  /*\nProperties\nname : rows\ndatatype : number\nversion : 4.0 onwards\ndefault : none\ndescription : rows to have in textarea\n*/\n  @Input() columns: number;\n  /*\nProperties\nname : allow-blank\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Sets if field is required\n*/\n  @Input('allow-blank') allowblank: boolean;\n\n  componentClass: any;\n\n  helpInfoMsg: string;\n\n  regEx: RegExp;\n\n  showToolTip: boolean;\n\n  _errormsg: string;\n\n  @Output() isComponentValid: any = new EventEmitter<any>();\n\n  /*\nEvents\nname : onBlur\ndatatype : any\nversion : 4.0 onwards\ndefault :\ndescription : On blur event\n*/\n  @Output() onBlur: any = new EventEmitter<any>();\n  /*\n Events\n name : input\n datatype : any\n version : none\n default :\n description : \tOn input event field.\n */\n  @Output() input: any = new EventEmitter<any>();\n  /*\n Events\n name : focus\n datatype : any\n version : none\n default :\n description : On focus event field.\n */\n  @Output() focus: any = new EventEmitter<any>();\n  /*\n Events\n name : change\n datatype : any\n version : none\n default :\n description : On field value change event\n */\n  @Output() change: any = new EventEmitter<any>();\n\n  @ViewChild('ref', { read: ElementRef }) public inputRef: ElementRef;\n  get errormsg(): string {\n    return this._errormsg;\n  }\n  /*\n  Properties\n  name : error-msg\n  datatype : none\n  version : 4.0 onwards\n  default : none\n  description : sets the error message\n  */\n  @Input('error-msg')\n  set errormsg(value: string) {\n    this.helpInfoMsg = value + '<br/>';\n  }\n\n  _minerrormsg: string;\n\n  get minerrormsg(): string {\n    return this._minerrormsg;\n  }\n  /*\n  Properties\n  name : min-error-msg\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description : sets the error message for min validation\n  */\n  @Input('min-error-msg')\n  set minerrormsg(value: string) {\n    this.helpInfoMsg = this.helpInfoMsg + '<b>Min Length<b/>: ' + value + '<br/>';\n  }\n\n  _maxerrormsg: string;\n\n  get maxerrormsg(): string {\n    return this._maxerrormsg;\n  }\n  /*\n  Properties\n  name : max-error-msg\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description : sets the error message for max validation\n  */\n  @Input('max-error-msg')\n  set maxerrormsg(value: string) {\n    this.helpInfoMsg = this.helpInfoMsg + 'Max Length: ' + value;\n  }\n\n  /*\nProperties\nname : place-holder\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription :\tShow place-holder inside dropdown component\n*/\n  @Input('place-holder') placeholder: string;\n  /*\n  Properties\n  name : disabled\n  datatype : boolean\n  version : 4.0 onwards\n  default : none\n  description : true to disable the field.\n  */\n  @Input() disabled: boolean;\n  /*\nProperties\nname : icon-feedback\ndatatype : boolean\nversion : 4.0 onwards\ndefault : none\ndescription :\n*/\n  @Input('icon-feedback') iconfeedback: boolean;\n  /*\nProperties\nname : font-style\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Set font-style to field\n*/\n  @Input('font-style') fontstyle: string;\n  /*\nProperties\nname : font-family\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Set font-family to field\n*/\n  @Input('font-family') fontfamily: string;\n  /*\nProperties\nname : font-size\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Set font-size to field\n*/\n  @Input('font-size') fontsize: string;\n  /*\nProperties\nname : has-label\ndatatype : boolean\nversion : 4.0 onwards\ndefault : none\ndescription : flag to set label\n*/\n  @Input('has-label') haslabel = true;\n\n  _pattern: string;\n\n  isValid: boolean;\n\n  get pattern(): string {\n    return this._pattern;\n  }\n  /*\nProperties\nname : pattern\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Apply Reg-ex to the field\n*/\n  @Input('pattern')\n  set pattern(value: string) {\n    if (value != null) {\n      this._pattern = value;\n      this.regEx = new RegExp(this._pattern);\n    }\n  }\n  /*\nProperties\nname : enable-popover\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Set enable / disable popover.\n*/\n  @Input('enable-popover') enablepopover: boolean;\n\n  @Input('name') name: string;\n\n  constructor() {\n    super();\n    this.showToolTip = false;\n  }\n  ngOnInit() {\n    this.name = this.generateName(this.name, this.fieldlabel, 'textareainput');\n    this.isComponentValid.emit(this.allowblank);\n  }\n\n  // Set touched on blur\n  onBlurEvent() {\n    this.showToolTip = false;\n    this.onBlur.emit(this.value);\n  }\n\n  onFocus() {\n    this.showToolTip = true;\n    this.focus.emit(this.value);\n  }\n\n  onInput() {\n    this.isValid = this.isFieldValid();\n    this.input.emit(this.value);\n  }\n\n  onChangeEv() {\n    this.change.emit(this.value);\n  }\n\n  // THIS METHOD IS USED FOR VALIDATION\n  isFieldValid(): boolean {\n    return (!this.allowblank && (this.value && (this.value.length > 0)) ||\n      (this.value && this.value.length > 0)) || this.allowblank;\n  }\n  public validate(c: FormControl) {\n    return this.isFieldValid() ? null : {\n      jsonParseError: {\n        valid: true,\n      },\n    };\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'amexio-toolbar-item',\n  template: `\n  <div [ngClass]=\"{'toolbaritemseperatorright':(seperatorposition === 'right'),'toolbaritemseperatorleft':(seperatorposition === 'left')}\">\n  <ng-content></ng-content>\n  </div>\n   `,\n})\nexport class ToolbaroneComponent implements OnInit {\n  /*\nProperties\nname :seperator-position\ndatatype :string\nversion : 4.2onwards\ndefault :\ndescription : This will seperate the toolbar right and left.\n*/\n@Input('seperator-position') seperatorposition: string;\n\n  constructor() {\n  }\n  ngOnInit() {\n  }\n}\n","import { AfterContentInit, Component, ContentChildren, ElementRef,\nEventEmitter, Input, OnInit, Output, QueryList, ViewChild } from '@angular/core';\nimport { AmexioFormHeaderComponent } from './../../panes/form/form.header.component';\nimport { AmexioPanelHeaderComponent} from './../../panes/panel/panel.header.component';\nimport { AmexioWindowHeaderComponent } from './../../panes/window/window.pane.header.component';\nimport { ToolBarActionComponent } from './toolbaraction.component';\nimport { ToolbaroneComponent } from './toolbarone.component';\n\n@Component({\n  selector: 'amexio-toolbar',\n  template: `\n\n\n    <div class=\"toolbar\">\n        <div class=\"topnavmainbar\">\n            <div class=\"toolbar-item\">\n                <ng-content select=\"[position-left]\"></ng-content>\n                <ng-content select=\"amexio-panel-header\"></ng-content>\n                <ng-content select=\"amexio-form-header\"></ng-content>\n                <ng-content select=\"amexio-window-header\"></ng-content>\n            </div>\n            <div class=\"toolbar-item\">\n                <ng-content select=\"[position-center]\"></ng-content>\n            </div>\n            <div class=\"toolbar-item\">\n                <ng-content select=\"[position-right]\"></ng-content>\n            </div>\n        </div>\n    </div>\n  `,\n})\nexport class ToolbarComponent implements AfterContentInit, OnInit {\n\n  /*\nProperties\nname : seperator\ndatatype :boolean\nversion : 4.2onwards\ndefault :\ndescription : This will seperate the toolbar.\n*/\n  @Input('seperator') seperator: boolean;\n  /*\n  Properties\n  name :toolbarposition\n  datatype :string\n  version : 4.0 onwards\n  default :\n  description : This will allign the toolbar.\n  */\n  @Input('toolbar-position') toolbarposition: string;\n  /*\n  Events\n  name : onClick\n  datatype : none\n  version : none\n  default : none\n  description : Callback to invoke on activated tab event.\n  */\n  @Output() onClick: any = new EventEmitter<any>();\n  @Input() tabLocalData: any;\n  tabPreviewData: any;\n\n  constructor() {\n    this.toolbarposition = 'top';\n    this.seperator = false;\n  }\n\n  @ContentChildren(ToolbaroneComponent) queryTool: QueryList<ToolbaroneComponent>;\n  toolCollection: ToolbaroneComponent[];\n\n  ngOnInit() {\n  }\n\n  ngAfterContentInit() {\n    this.toolCollection = this.queryTool.toArray();\n    for (const i of this.toolCollection) {\n      [i]['position'] = this.getToolbaritemposition([i]['position']);\n    }\n  }\n  getToolbaritemposition(position: any): any {\n\n    if (position === 'right') {\n      return 'main-right';\n    }\n    if (position === 'left') {\n      return 'main-left';\n    }\n    if (position === 'center') {\n      return 'main-center';\n    }\n    if (position === '') {\n      return 'main-center';\n    }\n  }\n  onToolClick(tool: any) {\n    if (!tool.disabled) {\n      for (const i of this.toolCollection) {\n        if ([i] === tool) {\n          [i]['active'] = true;\n          this.onClick.emit(tool);\n        } else {\n          [i]['active'] = false;\n        }\n      }\n    }\n  }\n\n  // THIS METHOD IS  FOR APPLIED SPERATOR CLASS\n  getSeperatotClass(toolnode: any): any {\n    let cssName = '';\n    if (this.seperator) {\n      cssName = 'seperator-line';\n    }\n    cssName = cssName + toolnode.position;\n    return cssName;\n  }\n\n  getToolbarPosition() {\n    if (this.toolbarposition === 'top') {\n      return '';\n    }\n    if (this.toolbarposition === 'right') {\n      return '';\n    }\n    if (this.toolbarposition === 'bottom') {\n      return '';\n    }\n  }\n}\n","/*\nComponent Name : Amexio ToolBar\nComponent Selector : <amexio-toolbar-action>\nComponent Description :\n*/\nimport { Component, ContentChildren, EventEmitter, Input, OnInit, Output, QueryList } from '@angular/core';\nimport { AmexioButtonComponent } from '../buttons/button.component';\nimport { AmexioDropDownComponent } from '../dropdown/dropdown.component';\nimport { AmexioLabelComponent } from '../label/label.component';\n@Component({\n  selector: 'amexio-toolbar-action',\n  template:\n    `\n   <ng-content></ng-content>\n  `,\n})\nexport class ToolBarActionComponent implements OnInit {\n  @ContentChildren(AmexioDropDownComponent, { descendants: true }) queryDropDown: QueryList<AmexioDropDownComponent>;\n  dropdown: AmexioDropDownComponent[];\n\n  @ContentChildren(AmexioButtonComponent, { descendants: true }) queryButton: QueryList<AmexioButtonComponent>;\n  button: AmexioButtonComponent[];\n\n  @ContentChildren(AmexioLabelComponent, { descendants: true }) queryLabel: QueryList<AmexioLabelComponent>;\n  label: AmexioLabelComponent[];\n\n  /*\nProperties\nname : type\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Indicate the type of menu-items (link / button / textfield /menu )\n*/\n  @Input() type: string;\n\n  /*\nProperties\nname : title\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Title for link, button and menu header\n*/\n  @Input() title: string;\n  /*\n  Events\n  name : navLinkClick\n  datatype : any\n  version : none\n  default : none\n  description : Fire when nav item is clicked,\n  This event is fired when nav item type is defined as 'link/button/menu'\n\n  */\n  @Output() navLinkClick: any = new EventEmitter<any>();\n  actionComponent: any;\n  constructor() {\n    this.actionComponent = '';\n  }\n\n  ngOnInit() {\n  }\n\n  onClick(clickEvent: any) {\n    const node = {\n      title: this.title,\n      type: this.type,\n    };\n    this.navLinkClick.emit({ data: node, event: clickEvent });\n  }\n  checkActionComponent() {\n    this.dropdown = this.queryDropDown.toArray();\n    if (this.dropdown.length > 0) {\n      this.actionComponent = 'dropdown';\n      this.dropdown[0].fieldlabel = '';\n    }\n\n    this.button = this.queryButton.toArray();\n    if (this.button.length > 0) {\n      this.actionComponent = 'button';\n    }\n\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\n\n@Component({\n    selector: 'dropdown-list-item',\n    template: `\n          <ul class=\"dropdown-list\">\n              <li  [ngClass]=\"{'list-items-selected': (i === highlightrow)}\" \n                   class=\"list-items\" \n                   [attr.valuefield]=\"item[valuefield]\" \n                   [attr.displayfield]=\"item[displayfield]\" \n                   *ngFor=\"let item of viewdata | async | filterpipe : displayfield : displayValue ; index as i\"  \n                  (mousedown)=\"onDropDownListClick(item)\">\n                  <ng-container *ngIf=\"!template\">\n                      <div>{{item[displayfield]}}</div>    \n                  </ng-container>\n\n                  <ng-container *ngIf=\"template\">\n                      <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ $implicit: { text : row }, row: item }\">\n                      </ng-template>\n                  </ng-container>\n    \n              </li>\n          </ul>\n    `,\n})\nexport class DropDownListComponent implements OnInit {\n\n    template: TemplateRef<any>;\n    @Input('data') viewdata: any;\n    @Input('highlight-row') highlightrow: any;\n    @Input('value-field') valuefield: any;\n    @Input('display-field') displayfield: any;\n    @Input('display-value') displayValue: any;\n    @Output() itemclick: any = new EventEmitter<any>();\n\n    constructor( public elementRef: ElementRef) {\n    }\n\n    ngOnInit() {\n    }\n\n    onDropDownListClick(event: any) {\n        this.itemclick.emit(event);\n    }\n\n    scroll(rowindex: number) {\n        const listitems = this.elementRef.nativeElement.getElementsByClassName('list-items')[rowindex];\n        if (listitems) {\n            listitems.scrollIntoView({ behavior: 'smooth'});\n        }\n    }\n\n    selectedItem() {\n        return this.elementRef.nativeElement.getElementsByClassName('list-items list-items-selected');\n    }\n}\n","import { ChangeDetectorRef, ElementRef, Renderer2 } from '@angular/core';\nimport { BaseInput } from './base.input.component';\n\nexport class  ListBaseComponent<T> extends BaseInput<T> {\n\n    self = false;\n    itemClick = false;\n    dropdownstyle: any;\n    documentClickListener: any;\n\n    constructor(private renderer: Renderer2, public element: ElementRef, private cd: ChangeDetectorRef) {\n        super();\n        this.hide();\n    }\n\n    onFocusEvent(event: any) {\n        this.self = true;\n        this.dropdownstyle = {visibility: 'visible'};\n        this.bindDocumentClickListener();\n    }\n\n    blur(event: any) {\n        this.itemClicked();\n    }\n\n    itemClicked() {\n        this.itemClick = true;\n        this.hide();\n        this.unbindDocumentClickListener();\n        this.clearClicks();\n    }\n\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n             this.documentClickListener = this.renderer\n                                              .listen('document', 'click', (event: any) => this.handleDocumentListener(event));\n\n        }\n\n    }\n\n    handleDocumentListener(event: any) {\n        if (!this.self && !this.itemClick) {\n            this.hide();\n            this.unbindDocumentClickListener();\n        }\n        this.clearClicks();\n        this.cd.markForCheck();\n    }\n\n    clearClicks() {\n        this.self = false;\n        this.itemClick = false;\n    }\n\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n\n    }\n\n    hide() {\n        this.dropdownstyle = {visibility: 'hidden'};\n    }\n}\n","/**\n * Created by ketangote on 11/21/17.\n */\n\n/*\nComponent Name : Amexio Typeahead Input\nComponent Selector :  <amexio-typeahead>\nComponent Description : Type Ahead Component provides a power type ahead on the\ntext field where users entry is provided with a filtered result.\n*/\n\nimport {\n  AfterViewInit, ChangeDetectorRef, Component, ContentChild,\n  ElementRef, EventEmitter, forwardRef, HostListener, Input,\n  OnChanges, OnInit, Output, QueryList, Renderer2,\n  SimpleChanges, TemplateRef, ViewChild, ViewChildren,\n} from '@angular/core';\nimport { FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgModel, Validators} from '@angular/forms';\nimport { CommonDataService } from '../../services/data/common.data.service';\nimport { DropDownListComponent } from './../../base/dropdownlist.component';\nimport { ListBaseComponent } from './../../base/list.base.component';\n\nimport { of } from 'rxjs';\n@Component({\n  selector: 'amexio-typeahead',\n  template: `\n\n\n    <div class=\"inputgroup form-group\">\n\n      <label *ngIf=\"haslabel\" [style.font-style]=\"fontstyle\" [style.font-family]=\"fontfamily\" [style.font-size]=\"fontsize\">\n        {{fieldlabel}}\n      </label>\n\n      <input type=\"hidden\" [(ngModel)]=\"value\" [name]=\"name\" #model=\"ngModel\" required (ngModelChange)=\"onChange($event)\">\n  \n\n      <div class=\"input-container\">\n              <input type=\"text\" class=\"input-control\"\n                      [ngClass]=\"{'input-control-error': ((model.dirty || model.touched || (value && value.length>0)) && !model.valid),\n                      'input-disabled' : disabled}\"\n                      [required]=\"!allowblank\" \n                      [value]=\"displayValue\"\n                      [attr.placeholder]=\"placeholder\"\n                      [attr.disabled] = \"disabled ? true: null\"\n                      (focus)=\"focus($event)\"\n                      (input)=\"input($event)\"\n                      (keyup)=\"keyup($event)\"\n                      (blur)=\"blur($event)\"/>\n              <em *ngIf=\"(iconfeedback && (model.dirty || model.touched) && model.valid)\" class=\"fa fa-check\"></em>\n              <em *ngIf=\"(iconfeedback && (model.dirty || model.touched) && !model.valid)\" class=\"fa fa-times icon-error\"></em>\n      </div>\n\n      <input-help *ngIf=\"(enablepopover)\" \n                      [error-msg]=\"errormsg\" \n                      [min-msg]=\"minmsg\" \n                      [max-msg]=\"maxmsg\">\n      </input-help>\n  \n      <dropdown-list-item class=\"dropdown\" [ngStyle]=\"dropdownstyle\"  \n                          [data]=\"viewdata\" [display-field]=\"displayfield\" [value-field]=\"valuefield\" \n                          [highlight-row]=\"rowindex\" [display-value]=\"displayValue\" \n                          (itemclick)=\"onDropDownListItemClick($event)\">\n      </dropdown-list-item>\n    </div>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: AmexioTypeAheadComponent,\n    multi: true,\n  }, {\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => AmexioTypeAheadComponent), multi: true,\n}],\n})\nexport class AmexioTypeAheadComponent extends ListBaseComponent<string> implements OnChanges, OnInit, AfterViewInit, Validators {\n\n  private _fieldlabel: string;\n  private _haslabel: boolean;\n  private _data: any;\n  private _key: any;\n  public viewdata: any;\n  public displayValue = '';\n  private componentLoaded: boolean;\n\n  /*\n   Properties\n   name : field-label\n   datatype : string\n   version : 4.0 onwards\n   default :\n   description : The label of this field\n   */\n  @Input('field-label')\n  set fieldlabel(v: string) {\n    if (v != null && v.length > 0) {\n      this._fieldlabel = v;\n      this.initComponent();\n    }\n  }\n  get fieldlabel() {\n    return this._fieldlabel;\n  }\n\n  /*\n   Properties\n   name : has-label\n   datatype : boolean\n   version : 4.0 onwards\n   default : false\n   description : Flag to set label\n   */\n  @Input('has-label')\n  set haslabel(v: boolean) {\n    this._haslabel = v;\n  }\n  get haslabel(): boolean {\n    return this._haslabel;\n  }\n\n  /*\n   Properties\n   name : data\n   datatype : any\n   version : 4.0 onwards\n   default :\n   description : Local data for dropdown.\n   */\n  @Input('data') data: any;\n\n  @Input('key')\n  set key(v: any) {\n    this._key = v;\n    this.displayfield = this._key;\n  }\n  get key(): any {\n    return this._key;\n  }\n\n  @Input('allow-blank') allowblank: boolean;\n\n  @Input('data-reader') datareader: string;\n\n  @Input('http-method') httpmethod: string;\n\n  @Input('http-url') httpurl: string;\n\n  @Input('display-field') displayfield: string;\n\n  @Input('value-field') valuefield: string;\n\n  @Input('error-msg') errormsg: string;\n\n  @Input('place-holder') placeholder: string;\n\n  @Input('icon-feedback') iconfeedback: boolean;\n\n  @Input('font-style') fontstyle: string;\n\n  @Input('font-family') fontfamily: string;\n\n  @Input('font-size') fontsize: string;\n\n  @Input('enable-popover') enablepopover: boolean;\n\n  @Input('trigger-char') triggerchar: number;\n\n  @Input() name: string;\n\n  @Input() disabled: boolean;\n\n  @Output() onBlur: any = new EventEmitter<any>();\n\n  @Output('input') onInputOutput: any = new EventEmitter<any>();\n\n  @Output('focus') onFocusOutput: any = new EventEmitter<any>();\n\n  @Output() change: any = new EventEmitter<any>();\n\n  @Output() onClick: any = new EventEmitter<any>();\n\n  @Output() isComponentValid: any = new EventEmitter<any>();\n\n  @ViewChild(NgModel) model: NgModel;\n\n  @ViewChildren(DropDownListComponent)\n  private dropdownlist: QueryList<DropDownListComponent>;\n\n  dropdown: DropDownListComponent[];\n\n  @ContentChild('amexioBodyTmpl') bodyTemplate: TemplateRef<any>;\n\n  rowindex = 0;\n\n  maskloader = true;\n\n  isValid: boolean;\n\n  responseData: any;\n\n  previousData: any;\n\n  constructor(public dataService: CommonDataService, public element: ElementRef, renderer: Renderer2, cd: ChangeDetectorRef) {\n    super(renderer, element, cd);\n  }\n\n  ngAfterViewInit() {\n    this.dropdown = this.dropdownlist.toArray();\n    setTimeout(() => {\n      this.dropdown.forEach((dropdown) => {\n        dropdown.template = this.bodyTemplate;\n      });\n    }, 200);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.placeholder && !changes.placeholder.isFirstChange()) {\n      this.placeholder = changes.placeholder.currentValue;\n    }\n  }\n\n  ngOnInit() {\n    this.name = this.generateName(this.name, this.fieldlabel, 'typeaheadinput');\n    if (!this.valuefield) {\n      this.valuefield = this.displayfield;\n    }\n    this.isValid = this.allowblank;\n    this.isComponentValid.emit(this.allowblank);\n\n    if (this.placeholder === '' || this.placeholder == null) {\n      this.placeholder = 'Choose Option';\n    }\n\n    if (!this.triggerchar) {\n      this.triggerchar = 1;\n    }\n\n    if (this.httpmethod && this.httpurl) {\n      this.dataService.fetchData(this.httpurl, this.httpmethod).subscribe((response) => {\n        this.responseData = response;\n      }, (error) => {\n      }, () => {\n        this.setData(this.responseData);\n      });\n\n    } else if (this.data) {\n      this.previousData = JSON.parse(JSON.stringify(this.data));\n      this.setData(this.data);\n    }\n    this.componentLoaded = true;\n  }\n\n  input(event: any) {\n    this.displayValue = event.target.value;\n    this.rowindex = 0;\n    if (this.displayValue.length >= 0 && !this.self && this.displayValue.length >= this.triggerchar) {\n      this.dropdownstyle = { visibility: 'visible' };\n      this.bindDocumentClickListener();\n    } else {\n      this.dropdownstyle = { visibility: 'hidden' };\n    }\n    this.onInputOutput.emit(event);\n  }\n\n  focus(event: any) {\n    this.self = true;\n    this.dropdownstyle = { visibility: 'hidden' };\n    this.bindDocumentClickListener();\n    this.onFocusOutput.emit(event);\n  }\n  keyup(event: any) {\n    const keycode: number = event.keyCode;\n    if (keycode === 40) {\n      this.rowindex++;\n    } else if (keycode === 38) {\n      this.rowindex--;\n    } else if (keycode === 40 || keycode === 38) {\n      this.rowindex = 0;\n    }\n    if (this.rowindex < 0) {\n      this.rowindex = 0;\n    } else if (this.rowindex >= this.viewdata.value.length) {\n      this.rowindex = this.viewdata.value.length - 1;\n    }\n\n    if (keycode === 13) {\n      const data = this.dropdown[0].selectedItem();\n      this.value = data[0].attributes['valuefield'].value;\n      this.displayValue = data[0].attributes['displayfield'].value;\n      this.itemClicked();\n      this.isComponentValid.emit(true);\n    } else if (keycode === 40 || keycode === 38) {\n      this.dropdown[0].scroll(this.rowindex);\n    }\n  }\n\n  // METHOS FOR BLUR EVENT\n  blur(event: any) {\n    super.blur(event);\n    const userinput: string = event.target.value;\n    const listitems: any[] = this.viewdata.value;\n    listitems.forEach((item) => {\n      if ((item[this.displayfield] + '').toLowerCase() === userinput.toLowerCase()) {\n        this.displayValue = item[this.displayfield];\n        this.value = item[this.valuefield];\n        this.isComponentValid.emit(true);\n      }\n    });\n    this.onBlur.emit(event);\n  }\n\n  // METHOD TO DISPLAY ITEM WHEN SELECTED\n  onDropDownListItemClick(data: any) {\n    if (this.valuefield) {\n      this.value = data[this.valuefield];\n    }else {\n      this.value = data[this.displayfield];\n    }\n    this.displayValue = data[this.displayfield];\n    this.onClick.emit(data);\n  }\n\n  writeValue(v: any) {\n    super.writeValue(v);\n    if (v && this.viewdata) {\n      this.showValue();\n    }\n  }\n\n  private showValue() {\n    const listitems: any[] = this.viewdata.value;\n    listitems.forEach((item) => {\n      if (item[this.valuefield] === this.value) {\n        this.displayValue = item[this.displayfield];\n        this.isComponentValid.emit(true);\n      }\n    });\n  }\n\n  // METHOD TO INITIALIZE COMPONENT\n  initComponent() {\n    if (this.fieldlabel != null && this.fieldlabel.length > 0) {\n      this.haslabel = true;\n    }\n  }\n\n  // METHOS TO EMIT CHANGE EVENT\n  onChange(event: any) {\n    if (event != null) {\n      this.change.emit(event);\n    }\n  }\n\n  // METHOD TO SET DATA IN DROPDOWN\n  setData(httpResponse: any) {\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    this.viewdata = of(responsedata);\n\n    // SET USER SELECTION\n    if (this.value != null) {\n      const valueKey = this.valuefield;\n      const displayKey = this.displayfield;\n      const val = this.value;\n\n      this.viewdata.forEach((item: any) => {\n        if (item[valueKey] === val) {\n          this.isValid = true;\n          this.displayValue = item[displayKey];\n        }\n      });\n    }\n    this.maskloader = false;\n  }\n\n  public validate(c: FormControl) {\n    return ((!this.allowblank && this.value) || this.allowblank) ? null : {\n        jsonParseError: {\n            valid: true,\n        },\n    };\n }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'input-help',\n    template: `\n      <div class=\"input-helper\">\n          {{errormsg}} <br/>\n          {{minmsg}} <br/>\n          {{maxmsg}} <br/>\n      </div>\n    `,\n    styles: [`\n      .input-helper{background-color:#d3d3d3;display:block;z-index:1;overflow:auto;position:absolute;width:100%;max-height:200px;opacity:1;-webkit-box-shadow:0 1px 3px 0 #ced4da;box-shadow:0 1px 3px 0 #ced4da}\n    `],\n})\nexport class AmexioInputHelperComponent {\n    public _errormsg: string;\n    public _minmsg: string;\n    public _maxmsg: string;\n    public help: string[];\n    constructor() {\n        this.help = [];\n    }\n\n    @Input('error-msg')\n    set errormsg(v: string) {\n        this._errormsg = v;\n    }\n    get errormsg() {\n        return this._errormsg;\n    }\n\n    @Input('min-msg')\n    set minmsg(v: string) {\n        this._minmsg = v;\n    }\n    get minmsg() {\n        return this._minmsg;\n    }\n\n    @Input('max-msg')\n    set maxmsg(v: string) {\n        this._maxmsg = v;\n    }\n    get maxmsg() {\n        return this._maxmsg;\n    }\n\n    private createHelpMsg() {\n        if (this.errormsg && this.errormsg.length > 0) {\n            this.help.push(this.errormsg);\n        }\n        if (this.errormsg && this.errormsg.length > 0) {\n            this.help.push(this.errormsg);\n        }\n        if (this.errormsg && this.errormsg.length > 0) {\n            this.help.push(this.errormsg);\n        }\n    }\n\n}\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'filterpipe',\n})\n@Injectable()\nexport class FilterPipe implements PipeTransform {\n    transform(items: any[], field: string, value: string): any[] {\n        if (!items) {\n            return [];\n        }\n        if (!field || !value) {\n            return items;\n        }\n\n        return items.filter((singleItem) =>\n            singleItem[field].toLowerCase().startsWith(value.toLowerCase()),\n        );\n    }\n}\n","/**\n * Created by pratik on 27/11/17.\n */\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AmexioSearchAdvanceComponent } from './advancesearch/searchadvance.component';\nimport { SearchboxtoolComponent } from './advancesearch/searchboxtool.component';\nimport { AmexioButtonDropdownComponent } from './button-dropdown/button.dropdown';\nimport { AmexioButtonDropDownItemComponent } from './button-dropdown/button.dropdown.item';\nimport { AmexioSpiltButtonDropdownComponent } from './button-dropdown/split.button.dropdown';\nimport { AmexioButtonGroupComponent } from './buttongroup/button.group.component';\nimport { AmexioButtonComponent } from './buttons/button.component';\nimport { CheckboxComponent } from './checkbox-group/checkbox.component';\nimport { AmexioCheckBoxGroupComponent } from './checkbox-group/checkbox.group.component';\nimport { AmexioCheckBoxComponent } from './checkbox/checkbox.component';\nimport { AmexioChipComponent } from './chip/chip.component';\nimport { AmexioChipsComponent } from './chips/chips.component';\nimport { AmexioCreditcardComponent } from './creditcard/creditcard.component';\nimport { AmexioDateTimePickerComponent } from './datetimepicker/datetimepicker.component';\nimport { AmexioDropDownMenuComponent } from './dropdown-menu/dropdownmenu.component';\nimport { AmexioDropDownitemsComponent } from './dropdown-menu/dropdownmenu.component.items';\nimport { AmexioDropDownComponent } from './dropdown/dropdown.component';\nimport { AmexioEmailInputComponent } from './emailinput/emailinput.component';\nimport { AmexioFileUploadComponent } from './fileupload/fileupload.component';\nimport { AmexioFloatingButtonComponent } from './floatingbutton/floatingbutton.component';\nimport { AmexioFloatingGroupButtonComponent } from './floatinggroupbutton/floatinggroupbutton.component';\nimport { AmexioFormIconComponent } from './icon/icon.component';\nimport { AmexioLabelComponent } from './label/label.component';\nimport { AmexioNumberInputComponent } from './numberinput/numberinput.component';\nimport { AmexioPasswordComponent } from './passwordinput/passwordinput.component';\nimport { AmexioRadioGroupComponent } from './radio/radiogroup.component';\nimport { AmexioRatingComponent } from './rating/rating.component';\nimport { RecaptchaComponent } from './recaptcha/recaptcha.component';\nimport { AmexioSliderComponent } from './slider/slider.component';\nimport { DomHandler } from './slider/slider.handler';\nimport { AmexioSpinnerComponent } from './spinner/spinner.component';\nimport { AmexioTagsInputComponent } from './tagsinput/tags.input.component';\nimport { AmexioTextAreaComponent } from './textarea/textarea.component';\nimport { AmexioTextInputComponent } from './textinput/textinput.component';\nimport { AmexioToggleComponent } from './toggle/toggle.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { ToolBarActionComponent } from './toolbar/toolbaraction.component';\nimport { ToolbaroneComponent } from './toolbar/toolbarone.component';\nimport { AmexioTypeAheadComponent } from './typeahead/typeahead.component';\n\nimport {DropDownListComponent} from '../base/dropdownlist.component';\nimport {AmexioInputHelperComponent} from '../base/input.helper.component';\nimport { AmexioLayoutModule } from '../layout/amexio.layout.module';\nimport {FilterPipe} from '../pipe/filter.pipe';\n\nimport { CommonDataService } from '../services/data/common.data.service';\nimport { IconLoaderService } from '../services/icon/icon.service';\n\nimport { LoadRecaptchaService } from './recaptcha/load.recaptcha.service';\nexport * from '../services/data/common.data.service';\nexport * from '../services/icon/icon.service';\nexport * from './recaptcha/load.recaptcha.service';\nexport * from './buttons/button.component';\nexport * from './buttongroup/button.group.component';\n\nconst FORM_COMPONENTS = [\n  AmexioTextInputComponent,\n  AmexioCheckBoxComponent,\n  AmexioDropDownComponent,\n  AmexioTypeAheadComponent,\n  AmexioInputHelperComponent,\n  AmexioRadioGroupComponent,\n  AmexioEmailInputComponent,\n  AmexioNumberInputComponent,\n  AmexioPasswordComponent,\n  AmexioTextAreaComponent,\n  AmexioToggleComponent,\n  AmexioRatingComponent,\n  AmexioButtonComponent,\n  AmexioButtonGroupComponent,\n  AmexioButtonDropdownComponent,\n  AmexioSpiltButtonDropdownComponent,\n  AmexioButtonDropDownItemComponent,\n  AmexioCheckBoxGroupComponent,\n  CheckboxComponent,\n  AmexioFormIconComponent,\n  AmexioSliderComponent,\n  AmexioTagsInputComponent,\n  AmexioDateTimePickerComponent,\n  AmexioButtonDropDownItemComponent,\n  AmexioButtonDropdownComponent,\n  AmexioSpiltButtonDropdownComponent,\n  AmexioFileUploadComponent,\n  AmexioLabelComponent,\n  AmexioFloatingButtonComponent,\n  AmexioFloatingGroupButtonComponent,\n  DropDownListComponent,\n  AmexioDropDownitemsComponent,\n  AmexioDropDownMenuComponent,\n  ToolbarComponent,\n  ToolbaroneComponent,\n  ToolBarActionComponent,\n  SearchboxtoolComponent,\n  AmexioSearchAdvanceComponent,\n  RecaptchaComponent,\n  AmexioSpinnerComponent,\n  AmexioCreditcardComponent,\n  AmexioChipComponent,\n  AmexioChipsComponent,\n  FilterPipe,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    AmexioLayoutModule,\n    HttpClientModule,\n  ],\n  exports: FORM_COMPONENTS,\n  declarations: FORM_COMPONENTS,\n  providers: [CommonDataService, IconLoaderService, DomHandler,\n  ],\n})\nexport class AmexioFormsModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AmexioFormsModule,\n      providers: [CommonDataService, IconLoaderService, LoadRecaptchaService],\n    };\n  }\n}\n","/**\n * Created by pratik on 16/1/18.\n */\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AmexioFooterComponent } from './action/pane.action.footer';\nimport { AmexioBodyComponent } from './body/pane.action.body';\nimport { AmexioCarouselComponent } from './carousel/carousel.component';\nimport { AmexioTemplateDirective } from './carousel/carousel.template.directive';\nimport { AmexioTemplateWrapperDirective } from './carousel/carousel.wrapper.template.directive';\nimport { AmexiodialoguePaneComponent } from './dialogue/dialogue.pane.component';\nimport { AmexioFieldSetComponent } from './fieldset/fieldset.component';\nimport { AmexioFormActionComponent } from './form/form.action.component';\nimport { AmexioFormBodyComponent } from './form/form.body.component';\nimport { AmexioFormComponent } from './form/form.component';\nimport { AmexioFormHeaderComponent } from './form/form.header.component';\nimport { AmexioHeaderComponent } from './header/pane.action.header';\nimport { AmexioIconPaneComponent } from './icon/icon.component';\nimport { AmexioPanelComponent } from './panel/panel.component';\nimport { AmexioPanelHeaderComponent} from './panel/panel.header.component';\nimport { StepBlockComponent } from './steps/step-block';\nimport { AmexioStepsComponent } from './steps/steps.component';\nimport { AmexioRightVerticalTabComponent } from './tab/right-vertical-tab/right.vertical.component';\nimport { AmexioTabActionComponent } from './tab/tab.action';\nimport { AmexioTabComponent } from './tab/tab.component';\nimport { AmexioTabPillComponent } from './tab/tab.pill.component';\nimport { AmexioVerticalTabComponent } from './tab/vertical-tab/vertical.tab.component';\nimport { AmexiotimelineComponent} from './timeline/amexiotimeline.component';\nimport { AmexiotimelineeventComponent} from './timeline/amexiotimelineevent.component';\nimport { AmexioWindowPaneComponent } from './window/window.pane.component';\nimport { AmexioWindowHeaderComponent } from './window/window.pane.header.component';\n\nimport { AmexioFormsModule } from '../forms/amexio.forms.module';\nimport { CommonDataService } from '../services/data/common.data.service';\nimport { DeviceQueryService } from '../services/device/device.query.service';\nimport { IconLoaderService } from '../services/icon/icon.service';\nimport { AmexioFormGroupDirective } from './form/form.group.directive';\n\nexport * from './action/pane.action.footer';\nexport * from './body/pane.action.body';\nexport * from './carousel/carousel.component';\nexport * from './carousel/carousel.template.directive';\nexport * from './carousel/carousel.wrapper.template.directive';\nexport * from './dialogue/dialogue.pane.component';\nexport * from './fieldset/fieldset.component';\nexport * from './form/form.action.component';\nexport * from './form/form.body.component';\nexport * from './form/form.component';\nexport * from './form/form.header.component';\nexport * from './header/pane.action.header';\nexport * from './panel/panel.header.component';\nexport * from './steps/steps.component';\nexport * from './steps/step-block';\nexport * from './tab/right-vertical-tab/right.vertical.component';\nexport * from './tab/tab.action';\nexport * from './tab/tab.component';\nexport * from './tab/tab.pill.component';\nexport * from './tab/vertical-tab/vertical.tab.component';\nexport * from './timeline/amexiotimeline.component';\nexport * from './timeline/amexiotimelineevent.component';\nexport * from './window/window.pane.component';\nexport * from './window/window.pane.header.component';\n\nexport * from '../services/icon/icon.service';\n\nconst PANE_COMPONENTS = [\n  AmexioHeaderComponent,\n  AmexioFooterComponent,\n  AmexioBodyComponent,\n  AmexioFieldSetComponent,\n  AmexioWindowPaneComponent,\n  AmexioWindowHeaderComponent,\n  AmexioStepsComponent,\n  AmexioTabPillComponent,\n  AmexioTabComponent,\n  AmexioVerticalTabComponent,\n  AmexioRightVerticalTabComponent,\n  AmexioCarouselComponent,\n  AmexioTemplateDirective,\n  AmexioTemplateWrapperDirective,\n  StepBlockComponent,\n  AmexioPanelComponent,\n  AmexioPanelHeaderComponent,\n  AmexioIconPaneComponent,\n  AmexiodialoguePaneComponent,\n  AmexioFormComponent,\n  AmexioFormActionComponent,\n  AmexioFormHeaderComponent,\n  AmexioFormBodyComponent,\n  AmexioFormGroupDirective,\n  AmexioTabActionComponent,\n  AmexiotimelineComponent,\n  AmexiotimelineeventComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AmexioFormsModule,\n    HttpClientModule,\n  ],\n  entryComponents: [AmexioTabPillComponent],\n  exports: PANE_COMPONENTS,\n  declarations: PANE_COMPONENTS,\n  providers: [CommonDataService, DeviceQueryService, IconLoaderService],\n})\nexport class AmexioPaneModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AmexioPaneModule,\n      providers: [CommonDataService, DeviceQueryService, IconLoaderService],\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {AmexioGridColumnComponent} from './datagrid/data.grid.column';\nimport {AmexioDatagridComponent} from './datagrid/datagrid.component';\nimport {DataGridFilterComponent} from './datagrid/datagrid.filter.component';\nimport {AmexioDataGridHeaderComponent} from './datagrid/datagrid.header.component';\nimport {AmexioDataIconComponent} from './icon/icon.component';\nimport {AmexioItemSelectorComponent} from './itemselector/item.selector.component';\nimport {AmexioListBoxComponent} from './listbox/listbox.component';\nimport {AmexioPaginatorComponent} from './paginator/paginator.component';\nimport {AmexioProgressMultiBarComponent} from './progress/bar.component';\nimport {AmexioProgressBarComponent} from './progress/progress.component';\nimport {AmexioFilterTreeComponent} from './tree/filter.tree.component';\nimport {HorizontalTreeViewNodeComponent} from './tree/horizontalnode.component';\nimport {HorizontalTreeViewComponent} from './tree/horizontaltreeview.component';\nimport {AmexioTreeViewComponent} from './tree/tree.component';\nimport {TreeDataTableComponent} from './treegrid/treedatatable.component';\n\nimport {AmexioLayoutModule} from '../layout/amexio.layout.module';\nimport {AmexioPaneModule} from '../panes/amexio.pane.module';\n\nimport {CommonDataService} from '../services/data/common.data.service';\nimport {IconLoaderService} from '../services/icon/icon.service';\n\nexport * from '../services/data/common.data.service';\nexport * from './listbox/listbox.component';\nexport * from './tree/tree.component';\nexport * from './paginator/paginator.component';\nexport * from '../services/icon/icon.service';\nexport * from './treegrid/treedatatable.component';\n\nconst DATA_COMPONENTS = [\n  AmexioTreeViewComponent,\n  AmexioListBoxComponent,\n  AmexioDatagridComponent,\n  AmexioDataGridHeaderComponent,\n  DataGridFilterComponent,\n  AmexioPaginatorComponent,\n  AmexioGridColumnComponent,\n  AmexioProgressMultiBarComponent,\n  AmexioProgressBarComponent,\n  HorizontalTreeViewNodeComponent,\n  HorizontalTreeViewComponent,\n  AmexioFilterTreeComponent,\n  TreeDataTableComponent,\n  AmexioDataIconComponent,\n  AmexioItemSelectorComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    AmexioPaneModule,\n    AmexioLayoutModule,\n    HttpClientModule,\n  ],\n  exports: DATA_COMPONENTS,\n  declarations: DATA_COMPONENTS,\n  providers: [CommonDataService, IconLoaderService],\n})\nexport class AmexioDataModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AmexioDataModule,\n      providers: [CommonDataService, IconLoaderService],\n    };\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Pratik Kelwalkar\n *\n */\n/*\n Component Name : Amexio video player\n Component Selector : <amexio-video-player>\n Component Description : Video player component support all types of videos.\n*/\nimport {Component, Input, OnInit, ViewChild} from '@angular/core';\n@Component({\n  selector: 'amexio-video-player',\n  template: `\n\n      <video [style.width.px]=\"width\" controls>\n          <source [attr.src]=\"path\">\n          Your browser does not support HTML5 video.\n      </video>\n  `,\n  styles: [`\n    video{border:1px solid #4682b4;width:420px;height:231px;background:#000}progress{color:#4682b4;font-size:12px;width:220px;height:16px;border:none;margin-right:10px;background:#434343;border-radius:9px;vertical-align:middle}progress::-moz-progress-bar{color:#4682b4;background:#434343}progress[value]::-webkit-progress-bar{background-color:#434343;border-radius:2px;-webkit-box-shadow:0 2px 5px rgba(0,0,0,.25) inset;box-shadow:inset 0 2px 5px rgba(0,0,0,.25)}progress[value]::-webkit-progress-value{background-color:#4682b4}@media screen and (max-width:600px){video{border:1px solid #4682b4;width:98%;height:231px;background:#000}}\n  `],\n})\nexport class AmexioVideoPlayerComponent implements OnInit {\n/*\nProperties\nname : path\ndatatype :  any\nversion : 4.0 onwards\ndefault :\ndescription : Path of video\n*/\n  @Input() path: any;\n/*\nProperties\nname : extension\ndatatype :  any\nversion : 4.0 onwards\ndefault :\ndescription : Video extension\n*/\n  @Input() extension: any;\n/*\nProperties\nname : width\ndatatype :  any\nversion : 4.0 onwards\ndefault :\ndescription :  Width of the video player window\n*/\n  @Input() width: any;\n\n  @ViewChild('videoRef') videoPlayer: any;\n\n  @ViewChild('progressbar') progressBar: any;\n\n  @ViewChild('volumebar') volumebar: any;\n\n  isPlaying: boolean;\n\n  isMuted: boolean;\n\n  currentVolume = 1;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onVolumeChange(event: any) {\n    this.videoPlayer.nativeElement.volume = this.currentVolume = event.target.value;\n  }\n\n  updateMuteUI() {\n    if (this.videoPlayer.nativeElement.muted) {\n      this.isMuted = true;\n    } else {\n      this.isMuted = false;\n   }\n   }\nonPlay() {\n    if (!this.isPlaying) {\n      this.videoPlayer.nativeElement.play();\n      this.isPlaying = true;\n    } else {\n      this.videoPlayer.nativeElement.pause();\n      this.isPlaying = false;\n    }\n  }\n\n  onTimeUpdate() {\n    const percentage = Math.floor((100 / this.videoPlayer.nativeElement.duration) * this.videoPlayer.nativeElement.currentTime);\n    this.progressBar.nativeElement.value = percentage;\n    // Update the progress bar's text (for browsers that don't support the progress element)\n    this.progressBar.nativeElement.innerHTML = percentage + '% played';\n    if (percentage === 100) {\n      this.isPlaying = false;\n    }\n  }\n\n  replayVideo() {\n    this.resetPlayer();\n    this.onPlay();\n  }\n\n  resetPlayer() {\n    this.videoPlayer.nativeElement.pause();\n    this.progressBar.nativeElement.value = 0;\n    this.videoPlayer.nativeElement.currentTime = 0;\n    this.isPlaying = false;\n  }\n\n  onFullScreen() {\n    const elem = this.videoPlayer.nativeElement;\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      elem.webkitRequestFullscreen();\n    }\n  }\n\n  onMute() {\n    if (!this.isMuted) {\n      this.videoPlayer.nativeElement.muted = true;\n      this.isMuted = true;\n      this.volumebar.nativeElement.value = 0;\n    } else {\n      this.videoPlayer.nativeElement.muted = false;\n      this.isMuted = false;\n      this.volumebar.nativeElement.value = this.currentVolume;\n    }\n  }\n\n}\n","/**\n * Created by pratik on 27/11/17.\n */\nimport { CommonModule } from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {AmexioImageComponent} from './image/image.component';\nimport {AmexioVideoPlayerComponent} from './video-player/video.player.component';\n\nimport {CommonDataService} from '../services/data/common.data.service';\nimport {DeviceQueryService} from '../services/device/device.query.service';\nimport {IconLoaderService} from '../services/icon/icon.service';\n\nexport * from './video-player/video.player.component';\nconst MEDIA_COMPONENTS = [\n  AmexioVideoPlayerComponent,\n  AmexioImageComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  exports: MEDIA_COMPONENTS,\n  declarations: MEDIA_COMPONENTS,\n  providers: [CommonDataService, DeviceQueryService, IconLoaderService],\n})\nexport class AmexioMediaModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AmexioMediaModule,\n      providers: [CommonDataService, DeviceQueryService],\n    };\n  }\n}\n","/**\n * Created by kedarkokil on 26/09/18.\n */\n\n/*\nComponent Name : Amexio breadcrumb\nComponent Selector : <amexio-breadcrumb>\nComponent Description : Simple list box which allows user to select one of\nmore items from list based on configuration. User can provide custom template to\nchange look and feel.\n*/\nimport { Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { CommonDataService } from '../../services/data/common.data.service';\n\n@Component({\n  selector: 'amexio-breadcrumb', template: `\n    <ng-container *ngIf=\"data \">\n\n        <div *ngFor=\"let nodeObject of data\">\n\n            <div class=\"breadcrum-rightshift-css\">\n                <div class=\"breadcrumb-group\">\n                    <label (click)=\"onButtonClick(nodeObject)\" class=\"label-icon-css\">\n                        <ng-container *ngIf=\"nodeObject && nodeObject.icon\">\n                            <span [ngClass]=\"nodeObject.icon\"></span>\n                        </ng-container>&nbsp;\n                        <span>{{nodeObject[displaykey]}} &nbsp;&nbsp;</span>\n                    </label>\n                    <ng-container *ngIf=\"nodeObject[childarraykey]\">\n                        <amexio-form-icon (click)=\"onArrowClick(nodeObject)\" class=\"arrow-group-css\" [key]=\"arrowKey\"></amexio-form-icon>\n                    </ng-container>\n\n\n                    <div class=\"context-menu-list1\" *ngIf=\"nodeObject.expand\">\n                        <ng-container *ngFor=\"let node of nodeObject[childarraykey]\">\n                            <div class=\"context-menu-list-items1\" [ngStyle]=\"{'cursor': node.disabled ? 'not-allowed':'pointer'}\"\n                                (click)=\"getSelectedItem({data:node,parentRef:nodeObject})\">\n                                <div class=\"dropdown-icon-css\"> \n                                    <ng-container *ngIf=\"node.icon\">\n                                        <amexio-form-icon [ngClass]=\"node.icon\"></amexio-form-icon>\n                                    </ng-container>&nbsp;\n                                </div>\n                                <div class=\"dropdown-label-css\">\n                                    <span>{{node[displaykey]}}&nbsp;</span>\n                                </div>\n                            </div>\n                        </ng-container>\n                    </div>\n\n\n\n\n                </div>\n\n                <ng-container *ngIf=\"nodeObject.show\">\n                    <amexio-breadcrumb [data]=\"childItem\" [display-key]=\"displaykey\" [childarray-key]=\"childarraykey\"\n                        (onListItemClick)=\"getEventEmitClick($event)\" (onClick)=\"onButtonClick($event)\">\n                    </amexio-breadcrumb>\n                </ng-container>\n            </div>\n        </div>\n\n    </ng-container>\n  `,\n})\nexport class AmexioBreadcrumbComponent implements OnInit {\n\n  /*\nProperties\nname : data\ndatatype : any\nversion : 5.2.1onwards\ndefault : none\ndescription : Local Data binding.\n*/\n  @Input() data: any[];\n  /*\nProperties\nname : http-url\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : REST url for fetching data.\n*/\n  @Input('http-url') httpurl: string;\n\n  /*\nProperties\nname : data-reader\ndatatype : string\nversion : 5.0 onwards\ndefault : none\ndescription : Key in JSON Datasource for records.\n*/\n  @Input('data-reader') datareader: string;\n\n  /*\nProperties\nname : http-method\ndatatype : string\nversion : 5.0 onwards\ndefault : none\ndescription : Type of HTTP call, POST,GET etc.\n*/\n  @Input('http-method') httpmethod: string;\n\n  /*\n    Properties\n  name : display-key\n  datatype : string\n  version : 5.2.0 onwards\n  default : text\n  description : Name of key inside response data to display on ui.\n  */\n  @Input('display-key') displaykey: string;\n\n  /*\n Properties\n name : childarray-key\n datatype : string\n version : 5.2.0 onwards\n default : children\n description : Name of key for child array name inside response data to display on ui.\n */\n  @Input('childarray-key') childarraykey: string;\n\n  /*\n   Events\n   name : onListItemClick\n   datatype : any\n   version : none\n   default :\n   description : On click event\n   */\n  @Output() onListItemClick: any = new EventEmitter<any>();\n  /*\n   Events\n   name : onClick\n   datatype : any\n   version : none\n   default :\n   description : On click event\n   */\n  @Output() onClick: any = new EventEmitter<any>();\n\n  label: string;\n\n  responseData: any;\n\n  icon: string;\n\n  childItem: any;\n\n  arrowKey: string;\n\n  previousData: any;\n\n  buttonAngleRightCss = 'button_angle-right';\n\n  constructor(public element: ElementRef, private dataService: CommonDataService) {\n    this.displaykey = 'text';\n    this.childarraykey = 'children';\n  }\n\n  ngOnInit() {\n\n    this.arrowKey = this.buttonAngleRightCss;\n    if (this.httpmethod && this.httpurl) {\n      this.dataService.fetchData(this.httpurl, this.httpmethod).subscribe((response) => {\n        this.responseData = response;\n      }, (error) => {\n      }, () => {\n        this.setData(this.responseData);\n      });\n    } else if (this.data) {\n      this.setData(this.data);\n    }\n\n  }\n  // ICON ADDED WHEN THE ICON IS NOT GIVEN\n\n  iconAddedMethod(nodeArray: any) {\n    if (nodeArray && nodeArray.length > 0) {\n      nodeArray.forEach((node: any) => {\n        if (node[this.childarraykey]) {\n          node[this.childarraykey].forEach((element: any) => {\n            this.childIconCheckMethod(element);\n          });\n        }\n      });\n    }\n  }\n\n  childIconCheckMethod(element: any) {\n    if (element.hasOwnProperty([this.childarraykey])) {\n      element[this.childarraykey].forEach((childIcon: any) => {\n        if (childIcon.icon == null || childIcon.icon === '') {\n          childIcon.icon = 'fa fa-file-o';\n        }\n      });\n      if (element.icon == null || element.icon === '') {\n        element.icon = 'fa fa-folder-o';\n      }\n      this.iconAddedMethod(element);\n    }\n  }\n  // THIS METHOD   IS USED FOR ADDING CHILDREN IN OPTIONS\n  getSelectedItem(event: any) {\n    const arrayOnly = [event.data];\n    this.childItem = arrayOnly;\n    event.parentRef.show = true;\n    event.parentRef.expand = false;\n    this.arrowKey = this.buttonAngleRightCss;\n    this.onListItemClick.emit(event.data);\n  }\n\n  getEventEmitClick(event: any) {\n    this.onListItemClick.emit(event);\n  }\n\n  onArrowClick(item: any) {\n    item.expand = !item.expand;\n    if (item.expand) {\n      this.arrowKey = 'button_angle-down';\n    } else {\n      this.arrowKey = this.buttonAngleRightCss;\n    }\n  }\n\n  onButtonClick(event: any) {\n    event.show = false;\n    event.expand = false;\n    this.onClick.emit(event);\n  }\n\n  setData(httpResponse: any) {\n    let responsedata = httpResponse;\n    // Check if key is added?\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    this.data = responsedata;\n    this.iconAddedMethod(this.data);\n  }\n\n  @HostListener('document:click', ['$event.target'])\n  @HostListener('document: touchstart', ['$event.target'])\n  public onElementOutClick(targetElement: HTMLElement) {\n    let parentFound = false;\n    while (targetElement !== null && !parentFound) {\n      if (targetElement === this.element.nativeElement) {\n        parentFound = true;\n      }\n      targetElement = targetElement.parentElement;\n    }\n    if (!parentFound) {\n      let expandData: any;\n      this.data.forEach((dataObject: any) => {\n        if (dataObject) {\n          expandData = dataObject;\n        }\n        if (expandData && expandData.expand != null) {\n          expandData.expand = false;\n        }\n      });\n    }\n  }\n}\n","/**\n * Created by sagar on 6/9/17.\n */\n\n /*\n Component Name : Amexio Dockbar\n Component Selector : <amexio-dockbar-item>\n Component Description : describes dockar items\n*/\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-dockbar-item', template: `\n    <div *ngIf=\"active\"  [style.width]=\"width\"\n    class=\"dockbar-active-content dockbar-height\"\n    [style.min-height]=\"height\"  [style.max-height]=\"height\">\n      <ng-container *ngIf=\"active && title\">\n        <div class=\"dockbar-title\">\n          {{title}}\n          <span class=\"dockbar-item-close-bar\" (click)=\"onBarIconClick()\">\n            <amexio-nav-icon key=\"dockbar_close\"></amexio-nav-icon>\n            <!--\n                        <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n            -->\n          </span>\n        </div>\n      </ng-container>\n      <ng-content>\n      </ng-content>\n    </div>\n  `,\n})\n\nexport class DockbarComponent implements OnInit {\n\n  /*\nProperties\nname : active\ndatatype : boolean\nversion : 4.0 onwards\ndefault : none\ndescription : sets dockbar item active\n*/\n  @Input() active: boolean;\n\n  /*\nProperties\nname : label\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets label name for dockbar item\n*/\n  @Input() label: string;\n\n  /*\nProperties\nname : icon\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Icon for link, button and menu header\n*/\n  @Input() icon: string;\n\n  /* not in use */\n  @Input() mda: string;\n\n  /*\nProperties\nname : sets width\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Width of dockbar item.\n*/\n  @Input() width: string;\n\n  /*\nProperties\nname : title\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Title of dockbar item.\n*/\n  @Input() title: string;\n\n  /*\nProperties\nname: path\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : Specifies the URL of an image.Use this attribute only for images.\n*/\n  @Input() path: any;\n\n  /*\nProperties\nname : height\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : Height of dockbar item\n*/\n  @Input() height: string;\n\n  elementId: string;\n\n  // Close the  dockbar item\n  onBarIconClick() {\n    this.active = false;\n  }\n\n  constructor() {\n    this.elementId = 'dockbar-item-id' + Math.floor(Math.random() * 90000) + 10000;\n  }\n\n  ngOnInit() {\n  }\n}\n","/**\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Created by Ketan Gote on 8/21/17.\n */\n\nimport {AfterContentInit, Component, ContentChildren, Input, OnInit, QueryList} from '@angular/core';\nimport {DockbarComponent} from './dockbaritem';\n\n@Component({\n  selector: 'amexio-dockbar', template: `\n    <div class=\"dockbar\" [style.min-height]=\"height\">\n      <ng-container *ngFor=\"let dockbar of dockbarArray\">\n        <button [ngClass]=\"{'active':dockbar.active}\" (click)=\"onClick(dockbar)\">\n\n          <!--Normal image-->\n          <ng-container *ngIf=\"dockbar.path\">\n            <img [src]=\"dockbar.path\">\n          </ng-container>\n\n          <!--this is for fontawesome-->\n          <ng-container *ngIf=\"(!(dockbar.icon && dockbar.mda) && dockbar.icon)\">\n            <amexio-image [icon-class]=\"dockbar.icon\" [c-class]=\"\"></amexio-image>\n            <!--<i [ngClass]=\"dockbar.icon\"></i>-->\n          </ng-container>\n\n          <!--if dockbar have label instead of icon -->\n          <ng-container *ngIf=\"dockbar.label && dockbar.active\">\n            <p><strong class=\"dockbar-label-highlight\">{{dockbar.label}}</strong></p>\n          </ng-container>\n\n          <ng-container *ngIf=\"dockbar.label && !dockbar.active\">\n            <p>{{dockbar.label}}</p>\n          </ng-container>\n\n        </button>\n      </ng-container>\n    </div>\n    <div class=\"dockbar-content\" [style.min-height]=\"height\">\n      <ng-content></ng-content>\n    </div>\n\n  `,\n\n})\nexport class DockedBarToolComponent implements AfterContentInit, OnInit {\n\n  @ContentChildren(DockbarComponent) dockbars: QueryList<DockbarComponent>;\n\n  dockbarArray: DockbarComponent[];\n\n  /*\nProperties\nname : height\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Height of dockbar.\n*/\n  @Input() height: string;\n\n  constructor() {\n\n  }\n\n  // on docker bar click event\n  onClick(event: any) {\n    const tabs = this.dockbarArray;\n    tabs.forEach((tab) => {\n      tab.active = false;\n      if (tab.elementId === event.elementId) {\n        tab.active = true;\n      }\n    });\n  }\n\n  ngAfterContentInit() {\n    this.dockbarArray = this.dockbars.toArray();\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","/**\n * Created by pratik on 21/12/17.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { IconLoaderService } from '../../services/icon/icon.service';\n\n@Component({\n  selector: 'amexio-nav-icon', template: `\n    <ng-container *ngIf=\"iconLoaderService.iconToUse == 'fa'\">\n\n      <ng-container *ngIf=\"customclass != null\">\n        <i class=\"{{customclass}}\" aria-hidden=\"true\" (click)=\"onClick.emit($event)\"></i>\n      </ng-container>\n      <ng-container *ngIf=\"customclass == null\">\n        <i class=\"{{iconClass}}\" aria-hidden=\"true\" (click)=\"onClick.emit($event)\"></i>\n      </ng-container>\n\n    </ng-container>\n\n    <ng-container *ngIf=\"iconLoaderService.iconToUse == 'mat'\">\n\n      <ng-container *ngIf=\"customclass != null\">\n        <i class=\"material-icons\" (click)=\"onClick.emit($event)\">{{customclass}}</i>\n      </ng-container>\n\n      <ng-container *ngIf=\"customclass == null\">\n        <i class=\"material-icons\" (click)=\"onClick.emit($event)\">{{iconClass}}</i>\n      </ng-container>\n\n\n    </ng-container>\n  `,\n})\n\nexport class AmexioNavIconPaneComponent implements OnInit, OnChanges {\n\n  @Input() key: string;\n\n  @Input() customclass: string;\n\n  @Output() onClick: EventEmitter<any> = new EventEmitter<any>();\n\n  iconClass: string;\n\n  constructor(public iconLoaderService: IconLoaderService) {\n\n  }\n\n  ngOnInit() {\n    this.iconClass = this.getIconClass();\n  }\n\n  getIconClass(): string {\n    if (this.iconLoaderService.iconMappings != null) {\n\n      const iconObject = this.iconLoaderService.iconMappings.find((obj: any) => obj.component === this.key);\n      if (iconObject != null) {\n        return iconObject[this.iconLoaderService.iconToUse.toString()];\n      } else {\n        return '';\n      }\n    }\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['key']) {\n      this.key = changes.key.currentValue;\n      this.iconClass = this.getIconClass();\n    }\n  }\n}\n","/**\n * Created by ketangote on 12/8/17.\n */\n\n/*\nComponent Name : Amexio menubar\nComponent Selector : <amexio-menu>\nComponent Description : Menu bar component show menu list on top.\n*/\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CommonDataService } from '../../services/data/common.data.service';\nimport { DeviceQueryService } from '../../services/device/device.query.service';\n@Component({\n  selector: 'amexio-menu',\n  template: `\n    <div class=\"menu-container\">\n      <div class=\"menubar\">\n        <ul class=\"menuheader\">\n          <li class=\"menulink\">{{label}}</li>\n          <div>\n            <li *ngFor=\"let node of data\" class=\"menulink\">\n              <a (click)=\"onClick(node)\"  (mouseover)=\"onMouseOver($event)\">\n                <amexio-nav-icon *ngIf=\"node.icon\" [customclass]=\"node.icon\"></amexio-nav-icon>&nbsp;&nbsp;{{node.text}}</a>\n              <!--<i *ngIf=\"node.icon\" [ngClass]=\"node.icon\" aria-hidden=\"true\"></i>-->\n              <ng-container *ngIf=\"(node.children && node.children[0].children)\">\n\n                <div *ngIf=\"(node.children && node.children.length>0)\" class=\"menu-content\"\n                     [ngClass]=\"{'menu-content-display':node.expand,\n                     ' menu-content-left': (node.children && node.children.length>3),'menu-right':xposition}\">\n                  <ul class=\"menu-content-cols\">\n\n                    <li class=\"col-menu-nodes\"\n                        [ngClass]=\"{'col-menu-nodes-fixed': (node.children && node.children.length<4),\n                      'col-menu-nodes-percentage': (node.children && node.children.length>3)}\"\n                        *ngFor=\"let subnode of node.children\">\n                      <div class=\"content\">\n                        <div *ngIf=\"(subnode.text && subnode.text.length>0)\" class=\"menu-links-header\">\n                          <amexio-nav-icon *ngIf=\"subnode.icon\" [customclass]=\"subnode.icon\"></amexio-nav-icon>&nbsp;&nbsp;{{subnode.text}}\n                          <!--<i *ngIf=\"subnode.icon\" [ngClass]=\"subnode.icon\" aria-hidden=\"true\"></i>-->\n                        </div>\n                        <div *ngIf=\"subnode.image\" style=\"padding: 10px;\">\n                          <img [attr.src]=\"subnode.image\">\n                        </div>\n                        <ul class=\"menu-content-cols\">\n                          <li *ngFor=\"let subinnernode of subnode.children\" class=\"menulinks\">\n                            <div *ngIf=\"subinnernode.image\" style=\"padding: 10px;\">\n                              <img [attr.src]=\"subinnernode.image\">\n                            </div>\n                            <!--<i *ngIf=\"subinnernode.icon\" class=\"fa fa-ravelry\"\n                            aria-hidden=\"true\"></i>-->\n                            <amexio-nav-icon *ngIf=\"subinnernode.icon\" key=\"menubar_ravelry\">\n                            </amexio-nav-icon>\n                            &nbsp;&nbsp;{{subinnernode.text}}{{subinnernode.template}}\n                          </li>\n                        </ul>\n                      </div>\n                    </li>\n\n                  </ul>\n                </div>\n\n              </ng-container>\n\n\n              <ng-container *ngIf=\"(node.children && !node.children[0].children)\">\n                <div class=\"menu-content\" [ngClass]=\"{'menu-content-display':node.expand}\">\n                  <ul class=\"menu-content-cols\">\n                    <li class=\"col-menu-nodes col-menu-nodes-fixed\">\n                      <div class=\"content\">\n                        <ul class=\"menu-content-cols\">\n                          <li *ngFor=\"let subnode of node.children\" class=\"menulinks\">\n                            <div *ngIf=\"subnode.image\" style=\"padding: 10px;\">\n                              <img [attr.src]=\"subnode.image\">\n                            </div>\n                            <!--<i *ngIf=\"subnode.icon\" class=\"fa fa-ravelry\" aria-hidden=\"true\"></i>-->\n                            <amexio-nav-icon *ngIf=\"subnode.icon\"\n                                             key=\"menubar_ravelry\"></amexio-nav-icon>&nbsp;&nbsp;{{subnode.text}}\n                          </li>\n                        </ul>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </ng-container>\n\n\n            </li>\n          </div>\n\n        </ul>\n      </div>\n    </div>\n\n  `, providers: [CommonDataService],\n})\nexport class AmexioMenuBarComponent implements OnInit {\n\n  /*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : Local data for menubar.\n*/\n  @Input() data: any[];\n\n  /*\nProperties\nname : label\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : label to menubar\n*/\n  @Input() label: any;\n\n  /*\n  Properties\n  name : http-url\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description : REST url for fetching datasource.\n  */\n  @Input('http-url') httpurl: string;\n\n  /*\nProperties\nname : http-method\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Type of HTTP call, POST,GET.\n*/\n  @Input('http-method') httpmethod: string;\n\n  /*\nProperties\nname : data-reader\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Key in JSON datasource for records\n*/\n  @Input('data-reader') datareader: string;\n\n  /*\nEvents\nname : nodeClick\ndatatype : any\nversion : none\ndefault : none\ndescription : Fire when menubar bar click.\n*/\n  @Output() nodeClick: any = new EventEmitter<any>();\n\n  xposition = false;\n\n  responseData: any;\n\n  expand: boolean;\n\n  constructor(public matchMediaService: DeviceQueryService, public dataService: CommonDataService) {\n    this.expand = false;\n  }\n\n  ngOnInit() {\n    if (this.httpmethod && this.httpurl) {\n      this.dataService.fetchData(this.httpurl, this.httpmethod).subscribe((response) => {\n        this.responseData = response;\n      }, (error) => {\n      }, () => {\n        this.setData(this.responseData);\n      });\n    }\n  }\n\n  onClick(node: any) {\n    if (this.matchMediaService.IsPhone() || this.matchMediaService.IsTablet()) {\n      for (const i of 'length') {\n        if (this.data[i] === node) {\n          this.data[i].expand = !this.data[i].expand;\n        } else {\n          this.data[i].expand = false;\n        }\n      }\n    }\n    this.nodeClick.emit(node);\n\n  }\n\n  setData(httpResponse: any) {\n    // Check if key is added?\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of 'length') {\n        responsedata = responsedata[dr[ir]];\n      }\n    }\n    this.data = httpResponse;\n  }\n\n  onMouseOver(event: any) {\n    if (!(this.matchMediaService.IsPhone() || this.matchMediaService.IsTablet())) {\n      if ((this.matchMediaService.browserWindow().innerWidth - event.clientX) < 200) {\n        this.xposition = true;\n      } else {\n        this.xposition = false;\n      }\n    } else {\n      this.xposition = false;\n    }\n  }\n}\n","/**\n * Created by ketangote on 1/4/18.\n */\n\n /*\n Component Name : Amexio Navbar\n Component Selector : <amexio-nav-action>\n Component Description : The Nav Bar Component is a familiar top navigation pattern for users.\nNav bar has Logo/Title left align, than link, text field, button and menus on right side.\nv4.1 Nav bar is not backward compatible of v4.0, for v4.0 refer link\n*/\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'amexio-nav-action',\n  template:\n  `\n    <a *ngIf=\"(type=='link')\" class=\"top-nav-link\" (click)=\"onClick($event)\"><i *ngIf=\"icon\" [ngClass]=\"icon\"></i>{{title}}</a>\n\n    <button *ngIf=\"(type=='button')\" class=\"top-nav-button\" (click)=\"onClick($event)\">\n    <i *ngIf=\"icon\" [ngClass]=\"icon\"></i>{{title}}</button>\n  `,\n})\nexport class AmexioNavActionComponent implements OnInit {\n\n  /*\nProperties\nname : type\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Indicate the type of menu-items (link / button / textfield /menu )\n*/\n  @Input() type: string;\n\n  /*\nProperties\nname : title\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Title for link, button and menu header\n*/\n  @Input() title: string;\n\n  @Input() icon: string;\n\n  /*\nEvents\nname : navLinkClick\ndatatype : any\nversion : none\ndefault : none\ndescription : Fire when nav item is clicked, This event is fired when nav item type is defined as 'link/button/menu'\n\n*/\n  @Output() navLinkClick: any = new EventEmitter<any>();\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n  }\n\n  onClick(event: any) {\n      const node = {\n        // 'title': this.title,\n        // 'type' : this.type,\n        // 'icon' : this.icon,\n      };\n      this.navLinkClick.emit({ node, event});\n\n  }\n\n}\n","/**\n * Created by ketangote on 1/4/18.\n */\n\n /*\n Component Name : Amexio Navbar\n Component Selector : <amexio-nav-item>\n Component Description : The Nav Bar Component is a familiar top navigation pattern for users.\nNav bar has Logo/Title left align, than link, text field, button and menus on right side.\nv4.1 Nav bar is not backward compatible of v4.0, for v4.0 refer link\n*/\nimport { AfterContentInit, AfterViewInit, Component, ContentChildren, ElementRef, EventEmitter, forwardRef, Input, OnInit, Output,\n  QueryList, ViewEncapsulation} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport { AmexioNavMenuComponent } from './navmenu.component';\n\nconst noop = () => {\n};\n\n@Component({\n  selector: 'amexio-nav-item',\n  template: `\n\n    <div class=\"topnavmainbarinneritems\"  \n    [ngClass]=\"{'topnavmainbarinneritems-mobile':mobilemode,\n     'nav-dropdown-content-right':enablerightclass}\" >\n        <amexio-nav-action *ngIf=\"isAction\" [type]=\"type\" [title]=\"title\" [icon]=\"icon\" (navLinkClick)=\"navItemClick($event)\"></amexio-nav-action>\n        <amexio-nav-textfield *ngIf=\"isTextField\" [(ngModel)]=\"value\"  [title]=\"title\"></amexio-nav-textfield>\n        <amexio-nav-menu *ngIf=\"isMenu\" [title]=\"title\" [icon]=\"icon\" [data]=\"data\"  (navLinkClick)=\"navItemClick($event)\">\n        </amexio-nav-menu>\n        <amexio-nav-menu *ngIf=\"isMenuContainer\" [title]=\"title\" [icon]=\"icon\" [type]=\"type\" (navLinkClick)=\"navItemClick($event)\">\n            <ng-content></ng-content>\n        </amexio-nav-menu>\n    </div>\n  `,\n  providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AmexioNavItemComponent), multi: true,\n  }],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AmexioNavItemComponent implements OnInit , ControlValueAccessor, AfterViewInit, AfterContentInit {\n\n  /*\nProperties\nname : type\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Indicate the type of menu-items (link / button / textfield /menu )\n*/\n  @Input() type: string;\n\n  /*\nProperties\nname : title\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Title for link, button and menu header\n*/\n  @Input() title: string;\n\n  /*\nProperties\nname : icon\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Icon for link, button and menu header\n*/\n  @Input() icon: string;\n\n  /*\nProperties\nname : data\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Standard JSON format array data which is used for rendering menus. This is used when type=menu is defined.\n*/\n  @Input() data: any[];\n\n  /*\nEvents\nname : onNavItemClick\ndatatype : any\nversion : none\ndefault : none\ndescription : Fire when nav item is clicked, This event is fired when nav item type is defined as 'link/button/menu'\n\n*/\n  @Output() onNavItemClick: any = new EventEmitter<any>();\n\n  mobilemode = false;\n\n  isAction = false;\n  isTextField = false;\n  isMenu = false;\n  isMenuContainer = false;\n  right: number;\n  navbarwidth: number;\n  enablerightclass: boolean;\n  private innerValue = '';\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n  constructor(private elementref: ElementRef) {\n\n  }\n\n  ngOnInit() {\n    if (this.type === 'link' || this.type === 'button') {\n      this.isAction = true;\n    }else if (this.type === 'textfield') {\n      this.isTextField = true;\n    }else if (this.type === 'menu') {\n      this.isMenu = true;\n    }else if (this.type === 'menucontainer') {\n      this.isMenuContainer = true;\n    }\n  }\n\n  ngAfterViewInit() {\n   this.right = this.elementref.nativeElement.getBoundingClientRect().right;\n  }\n  ngAfterContentInit() {\n\n  }\n\n  navItemClick(event: any) {\n    this.onNavItemClick.emit(event);\n  }\n\n  setMobileMode(flag: boolean) {\n    this.mobilemode = flag;\n  }\n\n  setNavbarWidth(navbarwidth: number) {\n    this.navbarwidth = navbarwidth;\n    if (( this.navbarwidth - this.elementref.nativeElement.getBoundingClientRect().left) < 165) {\n      this.enablerightclass = true; }\n  }\n//  MODEL BINDING FOR TEXT FIELD\n// The internal dataviews model\n\n  // Placeholders for the callbacks which are later provided\n  // by the Control Value Accessor\n\n  // get accessor\n  get value(): any {\n    return this.innerValue;\n  }\n\n  // set accessor including call the onchange callback\n  set value(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value !== this.innerValue) {\n      this.innerValue = value;\n    }\n  }\n\n  // From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n}\n","/**\n * Created by ketangote on 12/8/17.\n */\n\n/*\n Component Name : Amexio Navbar\n Component Selector : <amexio-nav>\n Component Description : The Nav Bar Component is a familiar top navigation pattern for users.\nNav bar has Logo/Title left align, than link, text field, button and menus on right side.\nv4.1 Nav bar is not backward compatible of v4.0, for v4.0 refer link\n*/\nimport {AfterContentInit, AfterViewInit, Component, ContentChildren, ElementRef, EventEmitter,\n  Input, OnInit, Output, QueryList, ViewChild} from '@angular/core';\nimport {AmexioNavActionComponent } from './navaction.component';\nimport {AmexioNavItemComponent } from './navitem.component';\nimport {AmexioNavMenuComponent } from './navmenu.component';\n\nimport {DeviceQueryService} from '../../services/device/device.query.service';\n\n@Component({\n  selector: 'amexio-nav', template: `\n\n    <nav #navbar class=\"topnav\" [ngClass]=\"{'topnav-mobile':mobilemode}\" (window:resize)=\"resize($event)\">\n        <div #navbarfixed class=\"topnavbarunit1\" [ngClass]=\"{'topnavbarunit1-mobile':mobilemode}\" >\n            <div class=\"float-left\"  [ngStyle]=\"{'padding-left':sidenav ? '40px':'0px'}\">\n                <img alt=\"title\" style=\"cursor: pointer\" (click)=\"onNavLogoClick.emit($event)\"  (load)=\"onImageLoad()\" *ngIf=\"logo\" [attr.src]=\"logo\" class=\"navbar-logo\">\n                <amexio-label (onClick)=\"onNavTitleClick.emit($event)\" [enable-click]=\"true\"  size=\"medium-bold\">{{title}}</amexio-label>\n            </div>\n            <div *ngIf=\"mobilemode\" class=\"float-right mobilebar\" (click)=\"toggleDrawerPanel($event)\">\n                <em *ngIf=\"!toggle\"  class=\"fa fa-caret-down fa-2x\"></em>\n                <em *ngIf=\"toggle\"  class=\"fa fa-caret-up fa-2x\"></em>\n            </div>\n        </div>\n        <div #navbaritems *ngIf=\"toggle\" class=\"topnavbarunit2\"  [ngClass]=\"{'topnavbarunit2-mobile':mobilemode}\" >\n            <div class=\"topnavmainbar\"    [ngClass]=\"{'topnavmainbar-mobile':mobilemode}\" >\n                <div #navbaritems1 class=\"topnavmainbaritems\" [ngClass]=\"{'topnavmainbaritems-mobile':mobilemode}\" >\n                    <ng-content select=\"[position-left]\"></ng-content>\n                </div>\n                <div #navbaritems2 class=\"topnavmainbaritems\"  [ngClass]=\"{'topnavmainbaritems-mobile':mobilemode}\" >\n                    <ng-content select=\"[position-center]\"></ng-content>\n                </div>\n                <div #navbaritems3 class=\"topnavmainbaritems\"   [ngClass]=\"{'topnavmainbaritems-mobile':mobilemode}\" >\n                  <ng-content select=\"[position-right]\"></ng-content>\n                </div>\n\n              </div>\n        </div>\n\n      </nav>\n  `,\n})\nexport class AmexioNavBarComponent implements OnInit, AfterViewInit, AfterContentInit {\n\n  /*\nProperties\nname : title\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Title for link, button and menu header\n*/\n  @Input() title: string;\n\n  /*\nProperties\nname : logo\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Logo of navbar.\n*/\n  @Input() logo: string;\n\n  /*\nProperties\nname : enable-side-nav-position\ndatatype : boolean\nversion : 4.0 onwards\ndefault : none\ndescription : Indicate if side-nav-bar is present\n*/\n  @Input('enable-side-nav-position') sidenavspace = false;\n\n  @Output() onNavLogoClick: any = new EventEmitter<any>();\n\n  @Output() onNavTitleClick: any = new EventEmitter<any>();\n\n  @ContentChildren(AmexioNavItemComponent) navitems: QueryList<AmexioNavItemComponent>;\n\n  navItemComponents: AmexioNavItemComponent[];\n\n  @ViewChild('navbar', {read: ElementRef}) public navbar: ElementRef;\n  @ViewChild('navbarfixed', {read: ElementRef}) public navbarfixed: ElementRef;\n  @ViewChild('navbaritems', {read: ElementRef}) public navbaritems: ElementRef;\n  @ViewChild('navbaritems1', {read: ElementRef}) public navbaritems1: ElementRef;\n  @ViewChild('navbaritems2', {read: ElementRef}) public navbaritems2: ElementRef;\n  @ViewChild('navbaritems3', {read: ElementRef}) public navbaritems3: ElementRef;\n\n  navclass: string;\n  toggle = true;\n  mobilemode = false;\n  navitemwidth: number;\n  navfixeditem: number;\n  sidenav = false;\n\n  constructor(public matchMediaService: DeviceQueryService) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    if (!this.logo) {\n      this.loadNavItems(); }\n  }\n\n  ngAfterContentInit() {\n  }\n\n  onImageLoad() {\n    this.loadNavItems();\n  }\n\n  loadNavItems() {\n    this.handleNavItems();\n    this.navitemwidth = (5 +\n    (this.navbaritems2.nativeElement.offsetWidth) +\n    (this.navbaritems2.nativeElement.offsetWidth) +\n    (this.navbaritems3.nativeElement.offsetWidth));\n    this.handleDeviceSetting();\n  }\n\n  toggleDrawerPanel(event: any) {\n    this.toggle = !this.toggle;\n  }\n\n  handleNavItems() {\n    this.navItemComponents = this.navitems.toArray();\n    this.navItemComponents.forEach((node) => node.onNavItemClick.subscribe((eventdata: any) => this.handleNavItemEvent(eventdata)));\n  }\n\n  handleNavItemEvent(event: any) {\n    if (event && event.data && event.data.node && !event.data.node.header && this.mobilemode) {\n      this.toggle = false;\n    }\n  }\n\n  notifyNavItems(navbarwidth: number) {\n    this.navItemComponents.forEach((node) => {\n      node.setMobileMode(this.mobilemode);\n      node.setNavbarWidth(navbarwidth);\n    });\n  }\n\n  handleDeviceSetting() {\n\n    if (this.sidenavspace) {\n      this.sideNavbar();\n    }\n\n    const navbarwidth = this.navbar.nativeElement.offsetWidth;\n    const navbarheight = this.navbar.nativeElement.offsetHeight;\n\n    if (!this.navfixeditem) {\n      this.navfixeditem = this.navbarfixed.nativeElement.offsetWidth;\n    }\n\n    if (!this.navitemwidth) {\n      let navbaritems1Width = 0;\n      let navbaritems2Width = 0;\n      let navbaritems3Width = 0;\n\n      if (this.navbaritems1) {\n        navbaritems1Width = this.navbaritems1.nativeElement.offsetWidth;\n      }\n      if (this.navbaritems2) {\n        navbaritems2Width = this.navbaritems2.nativeElement.offsetWidth;\n      }\n\n      if (this.navbaritems3) {\n        navbaritems3Width = this.navbaritems3.nativeElement.offsetWidth;\n      }\n      this.navitemwidth = (this.navfixeditem + navbaritems1Width + navbaritems2Width + navbaritems3Width);\n    }\n\n    const navbaravailablewidth = (navbarwidth - (this.navfixeditem + this.navitemwidth));\n\n    if ((navbaravailablewidth < 100 || navbarheight > 100)) {\n      this.mobilemode = true;\n      this.toggle = false;\n      this.notifyNavItems(navbarwidth);\n    }else {\n      this.mobilemode = false;\n      this.toggle = true;\n      this.notifyNavItems(navbarwidth);\n    }\n\n  }\n  sideNavbar() {\n    if (this.matchMediaService.IsTablet() || this.matchMediaService.IsPhone()) {\n        this.sidenav = true;\n      }else {\n        this.sidenav = false;\n      }\n  }\n\n  resize(event: any) {\n     this.handleDeviceSetting();\n  }\n}\n","/**\n * Created by ketangote on 1/4/18.\n */\n\n/*\n Component Name: Amexio Navbar\n Component Selector: <amexio-nav-menu>\n Component Description: The Nav Bar Component is a familiar top navigation pattern for users.\nNav bar has Logo/Title left align, than link, text field, button and menus on right side.\nv4.1 Nav bar is not backward compatible of v4.0, for v4.0 refer link\n*/\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'amexio-nav-menu',\n  template:\n  `\n  <div class=\"nav-dropdown\">\n    <a class=\"nav-dropbtn\"  (click)=\"onHeaderClick($event)\">\n      <i *ngIf=\"icon\" [ngClass]=\"icon\"></i>{{title}}<i class=\"dropdownicon fa fa-angle-down\"></i>\n    </a>\n    <div class=\"nav-dropdown-content\">\n      <a *ngFor=\"let node of data\" (click)=\"onClick(node, $event)\">\n      <i *ngIf=\"icon\" [ngClass]=\"node.icon\"></i>&nbsp;{{node.text}}</a>\n\n      <div *ngIf=\"type==='menucontainer'\" class=\"nav-menu-container\" >\n      <a *ngFor=\"let node of data\" (click)=\"onClick(node, $event)\">\n      <i *ngIf=\"icon\" [ngClass]=\"node.icon\"></i>&nbsp;{{node.text}}</a>\n      <ng-content ></ng-content>\n      </div>\n    </div>\n  </div>\n\n\n\n  `,\n})\nexport class AmexioNavMenuComponent implements OnInit {\n\n  /*\nProperties\nname : type\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Indicate the type of menu-items (link / button / textfield /menu )\n*/\n  @Input() type: string;\n\n  /*\nProperties\nname : title\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Title for link, button and menu header\n*/\n  @Input() title: string;\n\n  /*\nProperties\nname : data\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Standard JSON format array data which is used for rendering menus. This is used when type=menu is defined.\n*/\n  @Input() data: string;\n\n  /*\nProperties\nname : icon\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Icon for link, button and menu header\n*/\n  @Input() icon: string;\n\n  /*\nEvents\nname : navLinkClick\ndatatype : any\nversion : none\ndefault : none\ndescription : Fire when nav item is clicked, This event is fired when nav item type is defined as 'link/button/menu'\n\n*/\n  @Output() navLinkClick: any = new EventEmitter<any>();\n\n  mobilemode = false;\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n  }\n\n  setMobileMode(flag: boolean) {\n    this.mobilemode = flag;\n  }\n  onClick(_node: any, _event: any) {\n    const n = {\n    title: this.title,\n    data: this.data,\n    icon: this.icon,\n    node: _node,\n    mobilemode: this.mobilemode,\n    };\n    this.navLinkClick.emit(this.dataObject(n, _event));\n    }\n    dataObject(n: any, _event: any): any {\n      return {data: n, event: _event};\n    }\n    onHeaderClick(event: any) {\n    const node = {\n    header: true,\n    title : this.title,\n    icon : this.icon,\n    } ;\n    this.onClick(node, event);\n    }\n}\n","import {\n  Component, ElementRef, EventEmitter, forwardRef, Input, OnInit, Output, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nconst noop = () => {\n};\n\n@Component({\n  selector: 'amexio-nav-textfield',\n  template:\n  `\n  <input type=\"text\" class=\"top-nav-input-control\" [(ngModel)]=\"value\"/>\n\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AmexioNavTextFieldComponent), multi: true,\n  }],\n  encapsulation: ViewEncapsulation.None,\n})\n\nexport class AmexioNavTextFieldComponent implements ControlValueAccessor, OnInit {\n  private innerValue: any = '';\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n  // The internal dataviews model\n  // Placeholders for the callbacks which are later provided\n  // by the Control Value Accessor\n  // get accessor\n  get value(): any {\n    return this.innerValue;\n  }\n\n  // set accessor including call the onchange callback\n  set value(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value !== this.innerValue) {\n      this.innerValue = value;\n    }\n  }\n\n  // From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n}\n","/**\n * Created by ketangote on 12/18/17.\n */\nimport {\n  AfterContentInit, ChangeDetectorRef, Component, ContentChild, EventEmitter, HostListener, Input, OnInit, Output, QueryList,\n  TemplateRef,\n} from '@angular/core';\n\nexport enum KEY_CODE_notify {\n  esc = 27,\n}\n\n@Component({\n  selector: 'amexio-notification', template: `\n    <div class=\"notification-content\" [ngClass]=\"positionclass\">\n\n      <ng-container *ngIf=\"!notificationTemplate\">\n        <div class=\"notification\" *ngFor=\"let msg of messageData\" [style.color]=\"foregroundColor\" [style.background-color]=\"backgroundColor\">\n          <span class=\"float-right\" (click)=\"closeNotification(msg)\">\n            <ng-container *ngIf=\"closable\">\n              <amexio-nav-icon key=\"notify_close\"></amexio-nav-icon>\n            </ng-container>\n          </span>\n\n          <table>\n            <ng-container *ngIf=\"icon\">\n              <th>\n                <amexio-nav-icon style=\" padding-right: 18px;\" [ngClass]=\"icon\">\n                </amexio-nav-icon>\n              </th>\n            </ng-container>\n\n            <th style=\" text-align: left;\">\n\n              <span>{{msg}}</span>&nbsp;&nbsp;&nbsp;&nbsp;\n            </th>\n\n          </table>\n\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"notificationTemplate\">\n        <div class=\"notification\" *ngFor=\"let msg of messageData\" [style.color]=\"foregroundColor\" [style.background-color]=\"backgroundColor\">\n\n          <span class=\"float-right\" (click)=\"closeNotification(msg)\">\n            <ng-container *ngIf=\"closable\">\n              <amexio-nav-icon key=\"notify_close\"></amexio-nav-icon>\n            </ng-container>\n          </span>\n\n          <table>\n            <ng-container *ngIf=\"icon\">\n              <th>\n                <amexio-nav-icon style=\" padding-right: 18px;\" [ngClass]=\"icon\">\n                </amexio-nav-icon>\n              </th>\n            </ng-container>\n            <th style=\" text-align: left;\">\n              <ng-template [ngTemplateOutlet]=\"notificationTemplate\" [ngTemplateOutletContext]=\"{data:msg}\">\n              </ng-template>\n            </th>\n          </table>\n        </div>\n      </ng-container>\n    </div>\n  `,\n})\nexport class AmexioNotificationComponent implements OnInit {\n\n  /*\n Properties\n name : data\n datatype : any\n version : 4.2 onwards\n default : none\n description :  what you want to display on notification window by using data.\n */\n  @Input('data') messageData: any[];\n  /*\nProperties\nname : icon\ndatatype : any\nversion : 5.3.1 onwards\ndefault : none\ndescription : icon to the notification .\n*/\n  @Input('icon') icon: any;\n  /*\nProperties\nname : closable\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : User can close the window.\n*/\n  @Input() closable = true;\n\n  /*\nProperties\nname : vertical-position\ndatatype : string\nversion : 4.2 onwards\ndefault : none\ndescription : Position of notification window vertically:\n top or bottom or center. This attribute is ignored if user specify\n  position explicitly (using position-top/position-bottom/position-center/position-right/position-left)\n*/\n\n  @Input('vertical-position') verticalposition: string;\n  /*\n  Properties\n  name : horizontal-position\n  datatype : string\n  version : 4.2 onwards\n  default : none\n  description : Position of notification Window horizontally:\n  left or right or center. This attribute is ignored if user specify\n   position explicitly (using position-top/position-bottom/position-center/position-left/position-right)\n  */\n\n  @Input('horizontal-position') horizontalposition: string;\n\n  /*\n   Properties\n   name : auto-dismiss-msg\n   datatype : boolean\n   version : 4.2 onwards\n   default : none\n   description :notification message will dismiss automatically.\n   */\n  @Input('auto-dismiss-msg') autodismissmsg: boolean;\n  /*\n    Properties\n    name : auto-dismiss-msg-interval\n    datatype : number\n    version : 4.2 onwards\n    default : none\n    description :notification message will dismiss after some user define interval.\n    */\n  @Input('auto-dismiss-msg-interval') autodismissmsginterval: number;\n  /*\n    Properties\n    name : close-on-escape\n    datatype : boolean\n    version : 4.2 onwards\n    default : none\n    description : close the notification window on click on ESC button.\n    */\n  @Input('close-on-escape') closeonescape: boolean;\n  /*\n    Properties\n    name : background-color\n    datatype : string\n    version : 4.2 onwards\n    default : none\n    description : background color to the notification window .\n    */\n  @Input('background-color') backgroundColor: string;\n  /*\n    Properties\n    name : foreground-color\n    datatype : string\n    version : 4.2 onwards\n    default : none\n    description : foreground color to the notification window text .\n    */\n  @Input('foreground-color') foregroundColor: string;\n\n  data: any[];\n\n  positionclass: string;\n\n  customClass: boolean;\n\n  private notificationVertialCss = 'notification-vertical-';\n\n  private notificationHorizontalCss = ' notification-horizontal-';\n\n  @ContentChild('amexioNotificationTemp') notificationTemplate: TemplateRef<any>;\n\n  // Escape Key Functionality\n  @HostListener('window:keyup.esc', ['$event']) keyEvent(event: KeyboardEvent) {\n    if (this.closeonescape === true) {\n      this.messageData.length = 0;\n    }\n  }\n  constructor(private ref: ChangeDetectorRef) {\n  }\n  ngOnInit() {\n\n    if (this.autodismissmsg) {\n      if (!this.autodismissmsginterval) {\n        this.autodismissmsginterval = 1500;\n      }\n      if (this.messageData !== null) {\n        setInterval(() => {\n          this.messageData.shift();\n          this.ref.markForCheck();\n        }, this.autodismissmsginterval);\n      }\n    }\n    if (this.verticalposition === null) {\n      this.verticalposition = 'top';\n    } else if (this.horizontalposition === null) {\n      this.horizontalposition = 'right';\n    }\n    this.positionclass = this.notificationVertialCss + this.verticalposition + this.notificationHorizontalCss + this.horizontalposition;\n  }\n  closeNotification(msg: any) {\n    const count = this.messageData.length;\n    for (let i = 0; i < count; i++) {\n      if (this.messageData[i] === msg) {\n        this.messageData.splice(msg, 1);\n      }\n    }\n  }\n}\n","/**\n * Created by ketangote on 12/1/17.\n */\n\n/*\n Component Name : Amexio sidenav bar\n Component Selector : <amexio-side-nav>\n Component Description : The Side Nav Bar Component is a familiar side\n navigation pattern for users. Side nav bar can be placed on left or right side.\n It can fit as many navigation links as needed, scrolling when the content exceeds the viewport.\n Take a look at Datastructure format which this component can consume in datasource tab.\n*/\nimport { Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { CommonDataService } from '../../services/data/common.data.service';\nimport { DeviceQueryService } from '../../services/device/device.query.service';\n\n@Component({\n  selector: 'amexio-side-nav', template: `\n    <div *ngIf=\"(position !='relative' && smalldevice)\"\n         [ngClass]=\"{'sidenav-mobile-bar-left':(position=='left' && position!='relative'),'sidenav-mobile-bar-right':(position=='right' && position!='relative')}\"\n         class=\"sidenav-mobile-bar\" (click)=\"toggleSideNav()\">\n      <amexio-nav-icon key=\"sidenav_bar\"></amexio-nav-icon>\n    </div>\n    <div [ngStyle]=\"{'width':width}\" style=\"height: 100%\" [ngClass]=\"{'left':(position=='left' && position!='relative'),'right':(position=='right' && position!='relative')}\">\n      <div class=\"sidenav\" [ngStyle]=\"{'height':height}\">\n        <ul>\n          <li>\n            <div *ngIf=\"sidenavtitle\" class=\"title\">\n              <ng-container *ngIf=\"titleimage\">\n                <p><img [attr.src]=\"titleimage\" alt=\" Title image\" style=\"width: 60px;height: 60px;padding-left: 80px;\"/></p>\n              </ng-container>\n              <ng-container *ngIf=\"sidenavtitle\">\n                <p>{{sidenavtitle}}</p>\n              </ng-container>\n              <span *ngIf=\"sidenavexpandedinsmalldevice\" style=\"padding-right: 10px; float: right\" (click)=\"close()\">\n                <amexio-nav-icon key=\"sidenav_close\"></amexio-nav-icon>\n              </span>\n            </div>\n          </li>\n\n          <amexio-sidenav-node  *ngFor=\"let node of data\" \n                                [enable-border]=\"(node && node[childarraykey] && (node[childarraykey].length>0))\" \n                                [active]=\"(node && node.active)\" \n                                [icon]=\"node.icon\"\n                                [badge]=\"node.badge\"\n                                [enable-drag]=\"enabledrag\"\n                                (nodeClick)=\"onClick($event)\"\n                                (onDrag)=\"getNodeDragEvent($event)\"\n                                [expand]=\"node?.expand\"\n                                [label]=\"node[displaykey]\"\n                                [node]=\"node\"\n                                [data]=\"node[childarraykey]\">\n          </amexio-sidenav-node>\n\n\n          <ng-content></ng-content>\n        </ul>\n      </div>\n    </div>\n  `,\n})\nexport class AmexioSideNavComponent implements OnInit {\n\n  /*\n   Properties\n   name : data\n   datatype : any\n   version : 4.0 onwards\n   default : none\n   description : Local data for sidenav.\n   */\n  @Input() data: any[];\n  /*\n   Properties\n   name : http-url\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : REST url for fetching datasource.\n   */\n  @Input('http-url') httpurl: string;\n\n  /*\n   Properties\n   name : http-url\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : Type of HTTP call, POST,GET.\n   */\n  @Input('http-method') httpmethod: string;\n\n  /*\n   Properties\n   name : data-reader\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : Key in JSON datasource for records\n   */\n  @Input('data-reader') datareader: string;\n\n  /*\n   Properties\n   name : position\n   datatype : any\n   version : 4.0 onwards\n   default : none\n   description : Sidenav bar rendering position. example position='relative','right'\n   */\n  @Input() position: any;\n\n  /*\n   Properties\n   name : titleimage\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : Title image of sidenav bar\n   */\n  @Input() titleimage: string;\n\n  /*\n   Events\n   name : nodeClick\n   datatype : none\n   version : none\n   default : none\n   description : Fire when sidenav bar menu click\n   */\n  @Output() nodeClick: any = new EventEmitter<any>();\n\n  /*\n   Events\n   name : onDrag\n   datatype : none\n   version : 4.2.9\n   default : none\n   description : Fire when you drag node\n   */\n  @Output() onDrag: any = new EventEmitter<any>();\n\n  /*\n   Properties\n   name : width\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : Width of sidenav\n   */\n  @Input() width: string;\n\n  /*\n   Properties\n   name : height\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : height of sidenav\n   */\n  @Input() height: string;\n\n  /*\n   Properties\n   name : title\n   datatype : string\n   version : 4.0 onwards\n   default : none\n   description : Title of sidenav bar\n   */\n  @Input('title') sidenavtitle: string;\n\n  /*\n   Properties\n   name : enable-drag\n   datatype : boolean\n   version : 5.0.0 onwards\n   default : false\n   description : nodes can be dragged\n   */\n  @Input('enable-drag') enabledrag: boolean;\n\n  /*\n   Properties\n   name : display-key\n   datatype : string\n   version : 5.2.0 onwards\n   default : text\n   description : Name of key inside response data to display on ui.\n   */\n  @Input('display-key') displaykey: string;\n  /*\n   Properties\n   name : child-array-key\n   datatype : string\n   version : 5.2.0 onwards\n   default : children\n   description : Name of key for child array name inside response data to display on ui.\n   */\n  @Input('child-array-key') childarraykey: string;\n\n  smalldevice: boolean;\n\n  sidenavexpandedinsmalldevice: boolean;\n\n  responseData: any;\n\n  isSideNavExpand: boolean;\n\n  constructor(public dataService: CommonDataService, public matchMediaService: DeviceQueryService, public element: ElementRef) {\n    this.position = 'left';\n    this.smalldevice = false;\n    this.sidenavexpandedinsmalldevice = false;\n    this.width = '20%';\n    const that = this;\n    this.displaykey = 'text';\n    this.childarraykey = 'children';\n\n    /*---------------------------------------------------\n     TAP INTO LISTENERS FOR WHEN DEVICE WIDTH CHANGES\n     ---------------------------------------------------*/\n    this.matchMediaService.OnPhone((mediaQueryList: MediaQueryList) => {\n      that.handleDeviceSettings(false);\n    });\n\n    this.matchMediaService.OnTablet((mediaQueryList: MediaQueryList) => {\n      that.handleDeviceSettings(false);\n    });\n\n    this.matchMediaService.OnDesktop((mediaQueryList: MediaQueryList) => {\n      that.handleDeviceSettings(false);\n    });\n  }\n\n  ngOnInit() {\n    if (this.httpmethod && this.httpurl) {\n      this.dataService.fetchData(this.httpurl, this.httpmethod).subscribe((response) => {\n        this.responseData = response;\n      }, (error) => {\n      }, () => {\n        this.setData(this.responseData);\n      });\n    }\n\n    if (this.position == null) {\n      this.position = 'left';\n    }\n\n    if (!this.height) {\n      this.height = '100%';\n    }\n  }\n\n  onClick(node: any) {\n    this.nodeClick.emit(node);\n    this.activateNode(this.data, node);\n  }\n\n  setData(httpResponse: any) {\n    // Check if key is added?\n    let responsedata = httpResponse;\n    if (this.datareader != null) {\n      const dr = this.datareader.split('.');\n      for (const ir of dr) {\n        responsedata = responsedata[ir];\n      }\n    } else {\n      responsedata = httpResponse;\n    }\n    this.data = responsedata;\n    this.activateNode(this.data, null);\n    this.handleDeviceSettings(false);\n  }\n\n  activateNode(data: any[], node: any) {\n    for (const i of data) {\n      if (node === i && !i[this.childarraykey]) {\n        i['active'] = true;\n      } else {\n        i['active'] = false;\n      }\n\n      if (i[this.childarraykey]) {\n        this.activateNode(i[this.childarraykey], node);\n      }\n    }\n  }\n\n  toggleSideNav() {\n    this.handleDeviceSettings(!this.isSideNavExpand);\n  }\n\n  close() {\n    this.handleDeviceSettings(false);\n  }\n\n  handleDeviceSettings(expand: boolean) {\n    if (this.position !== 'relative') {\n      if (this.matchMediaService.IsTablet() || this.matchMediaService.IsPhone()) {\n        this.smalldevice = true;\n        if (expand) {\n          this.width = '80%';\n          this.isSideNavExpand = true;\n          this.sidenavexpandedinsmalldevice = true;\n        } else {\n          this.width = '0%';\n          this.isSideNavExpand = false;\n          this.sidenavexpandedinsmalldevice = false;\n        }\n      } else {\n        this.width = '20%';\n        this.smalldevice = false;\n      }\n    }\n  }\n\n  getNodeDragEvent(event: any) {\n   this.onDrag.emit(event);\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'amexio-sidenav-innernode',\n  template: `\n    <ul>\n      <li *ngFor=\"let node of data\">\n\n        <div [attr.draggable]=\"enabledrag\" (dragstart)=\"dragStartEvent({event:$event,data:node})\" class=\"defaultnode\"\n          [ngClass]=\"{'activenode':node.active}\" (click)=\"onNodeClick(node)\">\n          <span *ngIf=\"node.icon\">\n            <amexio-nav-icon class=\"node-icon\" [customclass]=\"node.icon\"></amexio-nav-icon>\n          </span>\n          <span>{{node[displaykey]}}</span>\n          <ng-container *ngIf=\"node.badge\">\n            <span class=\"nav-badge\">{{node.badge}}</span>\n          </ng-container>\n          <ng-container *ngIf=\"node[childarraykey] && (node[childarraykey].length>0)\">\n            <span style=\"padding-right: 10px; float: right\" *ngIf=\"node.expand\">\n              <amexio-nav-icon key=\"itemselector_caretup\"></amexio-nav-icon>\n            </span>\n\n            <span style=\"padding-right: 10px;float: right;\" *ngIf=\"!node.expand\">\n              <amexio-nav-icon key=\"itemselector_caretdown\"></amexio-nav-icon>\n            </span>\n          </ng-container>\n        </div>\n        <div class=\"submenu-details\" [ngClass]=\"{'sidenav-submenu-expanded':node.expand}\">\n          <amexio-sidenav-innernode *ngIf=\"node[childarraykey] && (node[childarraykey].length>0)\" \n              [enable-drag]=\"enabledrag\" \n              (onDrag)=\"dragStartEvent($event)\"  \n            [display-key]=\"displaykey\"\n            [child-array-key]=\"childarraykey\" [data]=\"node[childarraykey]\" (onDrag)=\"dragStartEvent($event)\" (onClick)=\"getOnClick($event)\">\n          </amexio-sidenav-innernode>\n        </div>\n      </li>\n    </ul>\n  `,\n})\nexport class AmexioSideNavInnerNodeComponent implements OnInit {\n\n  @Input('display-key') displaykey: string;\n\n  @Input('icon') icon: string;\n\n  @Input('child-array-key') childarraykey: string;\n\n  @Input('data') data: any;\n\n  @Output() onClick: any = new EventEmitter<any>();\n\n  @Input('enable-drag') enabledrag: boolean;\n\n  @Output() onDrag: any = new EventEmitter<any>();\n\n  ngOnInit() {\n  }\n\n  onNodeClick(node: any) {\n    node.expand = !node.expand;\n    this.getOnClick(node);\n  }\n\n  getOnClick(node: any) {\n    this.onClick.emit(node);\n    this.activateNode(this.data, node);\n  }\n  activateNode(data: any[], node: any) {\n    for (const i of data) {\n      if (node === i && !i[this.childarraykey]) {\n        i['active'] = true;\n      } else {\n        i['active'] = false;\n      }\n\n      if (i[this.childarraykey]) {\n        this.activateNode(i[this.childarraykey], node);\n      }\n    }\n  }\n\n  dragStartEvent(event: any) {\n    if (this.enabledrag) {\n      event.event.dataTransfer.setData('dragData', JSON.stringify(event.data));\n      this.onDrag.emit(event);\n    }\n  }\n}\n","/**\n * Created by ketangote on 12/1/17.\n */\n\n/*\n Component Name : Amexio sidenav node\n Component Selector : <amexio-sidenav-node>\n Component Description : The Side Nav Bar Component is a familiar side\n navigation pattern for users. Side nav bar can be placed on left or right side.\n It can fit as many navigation links as needed, scrolling when the content\n exceeds the viewport. Take a look at Datastructure format which this component can consume in datasource tab.\n*/\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'amexio-sidenav-node', template: `\n    <li>\n      <div *ngIf=\"enableborder\" class=\"border\"></div>\n      <div *ngIf=\"label || badge || icon\" [attr.draggable]=\"enabledrag\" (dragstart)=\"dragStartEvent({event:$event,data:node})\" class=\"headernode\" [ngClass]=\"{'activenode':active}\"\n         (click)=\"onClick(nodedata)\">\n        <amexio-nav-icon  *ngIf=\"icon\" class=\"node-icon\" [customclass]=\"icon\"></amexio-nav-icon>\n        <span>{{label}} </span>\n\n          <span *ngIf=\"badge\" class=\"nav-badge\" >{{badge}}</span>\n\n        <ng-container *ngIf=\"(node  && (node.length>0)) || collapsable\" >\n          <span style=\"padding-right: 10px; float: right\" *ngIf=\"expand\" ><amexio-nav-icon key=\"sidenav-angle-up\"></amexio-nav-icon></span>\n          <span style=\"padding-right: 10px;float: right\" *ngIf=\"!expand\" ><amexio-nav-icon key=\"sidenav-angle-down\"></amexio-nav-icon></span>\n        </ng-container>\n   \n      </div>\n      <div *ngIf=\"node\"  class=\"sidenav-submenu-details sidenav-submenu-expanded\"  [ngClass]=\"{'sidenav-submenu-expanded':expand}\">\n        <amexio-sidenav-innernode *ngIf=\"node && (node.length>0)\" \n            (onClick)=\"onNodeClick($event)\"\n            [display-key]=\"displaykey\" \n            [child-array-key]=\"childarraykey\"  \n            [enable-drag]=\"enabledrag\" \n            (onDrag)=\"dragStartEvent($event)\"  \n            [data]=\"node\">\n        </amexio-sidenav-innernode>\n      </div>\n\n      <div class=\"sidenav-submenu-details\" style=\"padding-right: 20px;\"  [ngClass]=\"{'sidenav-submenu-expanded':expand}\" >\n          <ng-content></ng-content>\n      </div> \n    </li>\n  `,\n})\nexport class SideNavNodeComponent implements OnInit {\n  /*\n     Properties\n     name : nodedata\n     datatype : any\n     version : 5.2.0 onwards\n     default :\n     description : node data pass on click event.\n     */\n  @Input('node') nodedata: any;\n  /*\n   Properties\n   name : badge\n   datatype : string\n   version : 5.2.0 onwards\n   default :\n   description : badge Input for the side nav.\n   */\n  @Input('badge') badge: string;\n  /*\n    Properties\n    name : icon\n    datatype : string\n    version : 5.2.0 onwards\n    default :\n    description :  icon Input for the side nav.\n    */\n  @Input('icon') icon: string;\n  /*\n    Properties\n    name : label\n    datatype : string\n    version : 5.2.0 onwards\n    default :\n    description :  label Input for the side nav.\n    */\n  @Input('label') label: string;\n\n  /*\n   Properties\n   name : enableborder\n   datatype : boolean\n   version : 5.2.0 onwards\n   default : false\n   description :  border for the side nav .\n   */\n  @Input('enable-border') enableborder: boolean;\n\n  /*\n  Properties\n  name : active\n  datatype : boolean\n  version : 5.2.0 onwards\n  default : false\n  description :  active the data in the side nav .\n  */\n  @Input('active') active: boolean;\n\n  /*\n   Properties\n   name : collapsable\n   datatype : boolean\n   version : 5.2.0 onwards\n   default : false\n   description :  collapsable arrow at right side of side nav .\n   */\n  @Input('collapsable') collapsable: boolean;\n  /*\n   Properties\n   name : data\n   datatype : any\n   version : 4.0 onwards\n   default : none\n   description : Local data for sidenav.\n   */\n  @Input('data') node: any[];\n  /*\n   Properties\n   name : enable-drag\n   datatype : boolean\n   version : 5.0.0 onwards\n   default : false\n   description : nodes can be dragged\n   */\n  @Input('enable-drag') enabledrag: boolean;\n\n  /*\n   Events\n   name : nodeClick\n   datatype : none\n   version : none\n   default : none\n   description : Fire when sidenav bar menu click\n   */\n  @Output() nodeClick: any = new EventEmitter<any>();\n  /*\n   Events\n   name : onDrag\n   datatype : none\n   version : 4.2.9\n   default : none\n   description : Fire when you drag node\n   */\n  @Output() onDrag: any = new EventEmitter<any>();\n\n  /*\n   Properties\n   name : display-key\n   datatype : string\n   version : 5.2.0 onwards\n   default : text\n   description : Name of key inside response data to display on ui.\n   */\n  @Input('display-key') displaykey: string;\n  /*\n   Properties\n   name : child-array-key\n   datatype : string\n   version : 5.2.0 onwards\n   default : children\n   description : Name of key for child array name inside response data to display on ui.\n   */\n  @Input('child-array-key') childarraykey: string;\n  @Input() expand = false;\n  constructor() {\n    this.displaykey = 'text';\n    this.childarraykey = 'children';\n  }\n\n  ngOnInit() {\n    if (!this.node && !this.label) {\n      this.expand = true;\n      this.collapsable = false;\n    }\n  }\n\n  onClick(node: any) {\n    this.expand = !this.expand;\n    this.nodeClick.emit(node);\n  }\n\n  onNodeClick(node: any) {\n    this.nodeClick.emit(node);\n  }\n\n  dragStartEvent(event: any) {\n    if (this.enabledrag) {\n      event.event.dataTransfer.setData('dragData', JSON.stringify(event.data));\n      this.onDrag.emit(event);\n    }\n  }\n\n}\n","/**\n * Created by pratik on 27/11/17.\n */\nimport { CommonModule } from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ModuleWithProviders, NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {CommonDataService} from '../services/data/common.data.service';\nimport {DeviceQueryService} from '../services/device/device.query.service';\nimport {IconLoaderService} from '../services/icon/icon.service';\n\nimport {AmexioFormsModule} from '../forms/amexio.forms.module';\nimport {AmexioLayoutModule} from '../layout/amexio.layout.module';\nimport {AmexioMediaModule} from '../media/amexio.media.module';\n\nimport {AmexioBreadcrumbComponent} from './breadcrumb/breadcrumb.component';\nimport {DockbarComponent} from './dockedbar/dockbaritem';\nimport {DockedBarToolComponent} from './dockedbar/dockettoolbar.component';\nimport {AmexioNavIconPaneComponent} from './icon/icon.component';\nimport {AmexioMenuBarComponent} from './menubar/menubar.component';\nimport {AmexioNavActionComponent } from './navbar/navaction.component';\nimport {AmexioNavBarComponent} from './navbar/navbar.component';\nimport {AmexioNavItemComponent} from './navbar/navitem.component';\nimport {AmexioNavMenuComponent} from './navbar/navmenu.component';\nimport {AmexioNavTextFieldComponent } from './navbar/navtextfield.component';\nimport {AmexioNotificationComponent} from './notification/notification.component';\nimport {AmexioSideNavComponent} from './sidenav/sidenav.component';\nimport {AmexioSideNavInnerNodeComponent} from './sidenav/sidenavinnernode.component';\nimport {SideNavNodeComponent} from './sidenav/sidenavnode.component';\n\nexport * from '../services/data/common.data.service';\nexport * from '../services/device/device.query.service';\nexport * from './sidenav/sidenav.component';\nexport * from './sidenav/sidenavnode.component';\nexport * from './navbar/navbar.component';\nexport * from './notification/notification.component';\n\nconst NAV_COMPONENTS = [\n  AmexioSideNavComponent,\n  SideNavNodeComponent,\n  AmexioNavBarComponent,\n  AmexioNavItemComponent,\n  AmexioNotificationComponent,\n  AmexioNavActionComponent,\n  AmexioNavTextFieldComponent,\n  AmexioNavMenuComponent,\n  AmexioNavItemComponent,\n  DockbarComponent,\n  DockedBarToolComponent,\n  AmexioMenuBarComponent,\n  AmexioNavIconPaneComponent,\n  AmexioBreadcrumbComponent,\n  AmexioSideNavInnerNodeComponent,\n\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    AmexioMediaModule,\n    AmexioLayoutModule,\n    AmexioFormsModule,\n    HttpClientModule,\n  ],\n  exports: NAV_COMPONENTS,\n  declarations: NAV_COMPONENTS,\n  providers: [CommonDataService, DeviceQueryService, IconLoaderService],\n})\nexport class AmexioNavModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AmexioNavModule,\n      providers: [CommonDataService, DeviceQueryService, IconLoaderService],\n    };\n  }\n}\n","\nexport class GridConstants {\n    static readonly Tablet = 'tab';\n    static readonly Desktop = 'desktop';\n    static readonly Mobile = 'mobile';\n  }\n","export class AmexioGridModel {\n  name: string;\n  desktop: any[];\n  mobile: any[];\n  tab: any[];\n  layoutType: string;\n  constructor() {\n    this.name = '';\n    this.desktop = [];\n    this.mobile = [];\n    this.tab = [];\n    this.layoutType = '';\n  }\n}\n","import { GridConstants } from './GridConstants';\n\nimport { AmexioGridModel } from '../module/layout/gridlayout/gridmodel.component';\n\nexport class GridConfig {\n     amexiogridmodel: AmexioGridModel;\n    devicevar: any;\n    count: number;\n\n    constructor(layoutName: string, layoutType: string) {\n        this.amexiogridmodel = new AmexioGridModel();\n        this.amexiogridmodel.layoutType = layoutType;\n        this.amexiogridmodel.name = layoutName;\n        return this;\n    }\n\n    addlayout(layout: any[]): any {\n        this.count = layout.length;\n        if (this.amexiogridmodel.layoutType === '') {\n            this.amexiogridmodel.layoutType = GridConstants.Desktop ;\n        }\n        this.amexiogridmodel[this.amexiogridmodel.layoutType].push(layout);\n        return this;\n    }\n\n    getLayout() {\n     return this.amexiogridmodel;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {AmexioDataModule} from './data/amexio.data.module';\nimport {AmexioFormsModule} from './forms/amexio.forms.module';\nimport {AmexioLayoutModule} from './layout/amexio.layout.module';\nimport {AmexioMediaModule} from './media/amexio.media.module';\nimport {AmexioNavModule} from './navigation/amexio.nav.module';\nimport {AmexioPaneModule} from './panes/amexio.pane.module';\nimport {CommonDataService} from './services/data/common.data.service';\nimport {DeviceQueryService} from './services/device/device.query.service';\nimport {IconLoaderService} from './services/icon/icon.service';\n\nimport { AmexioTabPillComponent } from '../index';\n\nexport * from './services/data/common.data.service';\nexport * from './services/device/device.query.service';\nexport * from './services/icon/icon.service';\nexport * from './services/icon/icon.mapping.config';\nexport * from '../models/creditcardmodel.component';\nexport * from '../models/GridConfig';\nexport * from '../models/GridConstants';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AmexioFormsModule,\n    AmexioNavModule,\n    AmexioDataModule,\n    AmexioLayoutModule,\n    AmexioMediaModule,\n    AmexioPaneModule,\n    HttpClientModule,\n  ],\n  entryComponents: [AmexioTabPillComponent],\n  exports: [\n    AmexioFormsModule,\n    AmexioNavModule,\n    AmexioDataModule,\n    AmexioLayoutModule,\n    AmexioMediaModule,\n    AmexioPaneModule,\n  ],\n  declarations: [],\n  providers: [CommonDataService, DeviceQueryService, IconLoaderService],\n})\nexport class AmexioWidgetModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AmexioWidgetModule,\n      providers: [CommonDataService, DeviceQueryService, IconLoaderService],\n    };\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n /*\n Component Name : Amexio dashboard\n Component Selector : <amexio-dashboard-title>\n Component Description : create dasshboard component\n*/\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-dashboard-title', template: ` `,\n})\n\nexport class DashBoardTitleComponent implements OnInit {\n\n/*\nProperties\nname : title\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : set title\n*/\n@Input() title: string;\n\n/*\nProperties\nname : position\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : sets the position\n*/\n@Input() position: string;\n\n/*\nProperties\nname : color\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : sets the color\n*/\n@Input() color: string;\n\n/*\nProperties\nname : font-name\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : sets the font family name\n*/\n@Input('font-name') fontname: string;\n\n/*\nProperties\nname : font-size\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : sets the font size\n*/\n@Input('font-size') fontsize: number;\n\n/*\nProperties\nname : bold\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : sets the font style to bold\n*/\n@Input() bold: boolean;\n\n/*\nProperties\nname : italic\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : sets the font style to italic\n*/\n@Input() italic: boolean;\n\nconstructor() {}\n\nngOnInit() {}\n}\n","/**\n * Created by ketangote on 7/25/17.\n */\n\n/*\n Component Name : Amexio center datapoints\n Component Selector : <amexio-center>\n Component Description : Represent the summary of the data in bullet point format.\n*/\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-center', template: `\n\n    <div [ngClass]=\"cclass\" [attr.align]=\"contentalign\" [style.background-color]=\"backgroundcolor\"\n         [style.color]=\"fontcolor\" [style.width]=\"width\" [style.height]=\"height\">\n      <ng-content></ng-content>\n    </div>`,\n})\n\nexport class DataPointCenterComponent implements OnInit {\n\n  /*\nProperties\nname : content-align\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription :  Set content align like : center,left,right\n*/\n  @Input('content-align') contentalign: string;\n\n  /*\nProperties\nname : background-color\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set background color\n*/\n  @Input('background-color') backgroundcolor: string;\n\n  /*\nProperties\nname : font-color\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set font color\n*/\n  @Input('font-color') fontcolor: string;\n\n  /*\nProperties\nname : width\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : \tSet width\n*/\n  @Input() width: string;\n\n  /*\nProperties\nname : height\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set height\n*/\n  @Input() height: string;\n\n  /*\nProperties\nname : c-class\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : To use custom css class\n*/\n  @Input('c-class') cclass: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","/**\n * Created by ketangote on 8/16/17.\n */\n\n/*\n Component Name : Amexio datapoints\n Component Selector : < amexio-center >\n Component Description : create datapoints\n*/\nimport {\n  Component, Input, OnInit,\n} from '@angular/core';\n\n@Component({\n  selector: 'amexio-datapoints', template: `\n\n  <div class=\"datapoints\" [ngClass]=\"dpClass\">\n      <table width=\"100%\" [style.background-color]=\"backgroundcolor\" [style.color]=\"fontcolor\">\n        <tr *ngIf=\"north\">\n          <td [attr.colspan]=\"colspan\">\n            <ng-content select=\"amexio-north\"></ng-content>\n          </td>\n        </tr>\n        <tr>\n          <td *ngIf=\"west\">\n            <ng-content select=\"amexio-west\"></ng-content>\n          </td>\n          <td *ngIf=\"center\">\n            <ng-content select=\"amexio-center\"></ng-content>\n          </td>\n          <td *ngIf=\"east\">\n            <ng-content select=\"amexio-east\"></ng-content>\n          </td>\n        </tr>\n        <tr *ngIf=\"south\">\n          <td [attr.colspan]=\"colspan\">\n            <ng-content select=\"amexio-south\"></ng-content>\n          </td>\n        </tr>\n      </table>\n    </div>\n\n\n  `, styles: [`\n    .amexio-datapoints {\n\n    }\n  `],\n})\n\nexport class DataPointsComponent implements OnInit {\n\n  /*\nProperties\nname : north\ndatatype :  boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Enable north position\n*/\n  @Input() north: boolean;\n\n  /*\nProperties\nname : south\ndatatype :  boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Enable south position\n*/\n  @Input() south: boolean;\n\n   /*\nProperties\nname : west\ndatatype :  boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Enable west position\n*/\n  @Input() west: boolean;\n\n    /*\nProperties\nname : center\ndatatype :  boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Enable center position\n*/\n  @Input() center: boolean;\n\n  /*\nProperties\nname : east\ndatatype :  boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Enable east position\n*/\n  @Input() east: boolean;\n\n   /*\nProperties\nname : background-color\ndatatype :  string\nversion : 4.0 onwards\ndefault :\ndescription : Set background color\n*/\n  @Input('background-color') backgroundcolor: string;\n\n  /*\nProperties\nname : font-color\ndatatype :  string\nversion : 4.0 onwards\ndefault :\ndescription : Set font color\n*/\n  @Input('font-color') fontcolor: string;\n\n  /*\nProperties\nname : amexio-color\ndatatype :  string\nversion : 4.1 onwards\ndefault :\ndescription : Set font color\n*/\n  @Input('amexio-color') amexiocolor: '';\n\n  colspan: number;\n\n  dpClass: 'datapoint';\n\n  constructor() {\n    this.colspan = 1;\n  }\n\n  ngOnInit() {\n\n    if (this.amexiocolor !== '') {\n      this.dpClass = this.amexiocolor;\n    }\n    if (this.west) {\n      this.colspan++;\n    }\n\n    if (this.east) {\n      this.colspan++;\n    }\n\n  }\n\n}\n","/**\n * Created by ketangote on 7/25/17.\n */\n\n/*\n Component Name : Amexio east datapoints\n Component Selector : <amexio-east>\n Component Description : Represent the summary of the data in bullet point format.\n*/\nimport {\n  Component, Input, OnInit,\n} from '@angular/core';\n\n@Component({\n  selector: 'amexio-east', template: `\n\n    <div [ngClass]=\"cclass\" class=\"datapoint-east\" [attr.align]=\"contentalign\" [style.background-color]=\"backgroundcolor\"\n         [style.color]=\"fontcolor\" [style.width]=\"width\" [style.height]=\"height\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\n\nexport class DataPointEastComponent implements OnInit {\n\n   /*\nProperties\nname : content-align\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription :  Set content align like : center,left,right\n*/\n  @Input('content-align') contentalign: string;\n\n    /*\nProperties\nname : background-color\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set background color\n*/\n  @Input('background-color') backgroundcolor: string;\n\n   /*\nProperties\nname : font-color\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set font color\n*/\n  @Input('font-color') fontcolor: string;\n\n  /*\nProperties\nname : width\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : \tSet width\n*/\n  @Input() width: string;\n\n    /*\nProperties\nname : height\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set height\n*/\n  @Input() height: string;\n\n  /*\nProperties\nname : c-class\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : To use custom css class\n*/\n  @Input('c-class') cclass: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    if (this.cclass == null) {\n      this.cclass = 'datapoint-east';\n    }\n  }\n\n}\n","/**\n * Created by ketangote on 7/25/17.\n */\n\n/*\n Component Name : Amexio north datapoints\n Component Selector : <amexio-east>\n Component Description : Represent the summary of the data in bullet point format.\n*/\nimport {\n  Component, Input, OnInit,\n} from '@angular/core';\n\n@Component({\n  selector: 'amexio-north', template: `\n\n    <div [ngClass]=\"cclass\" [attr.align]=\"contentalign\" [style.background-color]=\"backgroundcolor\"\n         [style.color]=\"fontcolor\" [style.width]=\"width\" [style.height]=\"height\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\n\nexport class DataPointNorthComponent implements OnInit {\n\n   /*\nProperties\nname : content-align\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription :  Set content align like : center,left,right\n*/\n  @Input('content-align') contentalign: string;\n\n    /*\nProperties\nname : background-color\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set background color\n*/\n  @Input('background-color') backgroundcolor: string;\n\n  /*\nProperties\nname : font-color\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set font color\n*/\n  @Input('font-color') fontcolor: string;\n\n  /*\nProperties\nname : width\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : \tSet width\n*/\n  @Input() width: string;\n\n   /*\nProperties\nname : height\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set height\n*/\n  @Input() height: string;\n\n    /*\nProperties\nname : c-class\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : To use custom css class\n*/\n  @Input('c-class') cclass: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    if (this.cclass == null) {\n      this.cclass = 'datapoints-north';\n    }\n  }\n}\n","/**\n * Created by ketangote on 7/25/17.\n */\n\n/*\n Component Name : Amexio south datapoints\n Component Selector : <amexio-south>\n Component Description : Represent the summary of the data in bullet point format.\n*/\nimport {\n  Component, Input, OnInit,\n} from '@angular/core';\n\n@Component({\n  selector: 'amexio-south', template: `\n\n    <div [ngClass]=\"cclass\" [attr.align]=\"contentalign\" [style.background-color]=\"backgroundcolor\"\n         [style.color]=\"fontcolor\" [style.width]=\"width\" [style.height]=\"height\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\n\nexport class DataPointSouthComponent implements OnInit {\n\n    /*\nProperties\nname : content-align\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription :  Set content align like : center,left,right\n*/\n  @Input('content-align') contentalign: string;\n\n    /*\nProperties\nname : background-color\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set background color\n*/\n  @Input('background-color') backgroundcolor: string;\n\n  /*\nProperties\nname : font-color\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set font color\n*/\n  @Input('font-color') fontcolor: string;\n\n  /*\nProperties\nname : width\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : \tSet width\n*/\n  @Input() width: string;\n\n  /*\nProperties\nname : height\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set height\n*/\n  @Input() height: string;\n\n  /*\nProperties\nname : c-class\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : To use custom css class\n*/\n  @Input('c-class') cclass: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    if (this.cclass == null) {\n      this.cclass = 'datapoint-south';\n    }\n  }\n\n}\n","/**\n * Created by ketangote on 7/25/17.\n */\n\n/*\n Component Name : Amexio west datapoints\n Component Selector : <amexio-west>\n Component Description : Represent the summary of the data in bullet point format.\n*/\nimport {\n  Component, Input, OnInit,\n} from '@angular/core';\n\n@Component({\n  selector: 'amexio-west', template: `\n\n    <div [ngClass]=\"cclass\" [attr.align]=\"contentalign\" [style.background-color]=\"backgroundcolor\"\n         [style.color]=\"fontcolor\" [style.width]=\"width\" [style.height]=\"height\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\n\nexport class DataPointWestComponent implements OnInit {\n\n    /*\nProperties\nname : content-align\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription :  Set content align like : center,left,right\n*/\n  @Input('content-align') contentalign: string;\n\n    /*\nProperties\nname : background-color\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set background color\n*/\n  @Input('background-color') backgroundcolor: string;\n\n  /*\nProperties\nname : font-color\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set font color\n*/\n  @Input('font-color') fontcolor: string;\n\n   /*\nProperties\nname : width\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : \tSet width\n*/\n  @Input() width: string;\n\n   /*\nProperties\nname : height\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set height\n*/\n  @Input() height: string;\n\n  /*\nProperties\nname : c-class\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : To use custom css class\n*/\n  @Input('c-class') cclass: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    if (this.cclass == null) {\n      this.cclass = 'datapoint-west';\n    }\n  }\n\n}\n","/**\n * Created by pratik on 17/8/17.\n */\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/index';\ndeclare var google: any;\n@Injectable()\nexport class DashboardLoaderService {\n    private chartPackage: { [id: string]: string; } = {\n        AreaChart: 'corechart',\n        Bar: 'bar',\n        BarChart: 'corechart',\n        ColumnChart: 'corechart',\n        PieChart: 'corechart',\n        Gantt: 'gantt',\n        Gauge: 'gauge',\n        GeoChart: 'geochart',\n        Histogram: 'corechart',\n        Line: 'line',\n        LineChart: 'corechart',\n        Map: 'map',\n        Timeline: 'timeline',\n        BubbleChart: 'corechart',\n        CandlestickChart: 'corechart',\n        ComboChart: 'corechart',\n        TreeMap: 'treemap',\n    };\n    isScriptLoading: boolean;\n    private googleScriptLoadingNotifier: EventEmitter<boolean>;\n    constructor() {\n        this.googleScriptLoadingNotifier = new EventEmitter();\n        this.isScriptLoading = false;\n    }\n    loadCharts(chartName: string): Observable<any> {\n        return new Observable(\n            (observer) => {\n                this.loadScript().subscribe(\n                    (val) => console.log(),\n                    (error: any) => console.error(error),\n                    () => {\n                        this.loadRequiredChart(observer, chartName);\n                    },\n                );\n            },\n        );\n    }\n    loadScript(): Observable<any> {\n        return new Observable(\n            (observer) => {\n                if (!this.isScriptLoading) {\n                    // check if previously its loaded\n                    if (typeof google !== 'undefined' && google.charts) {\n                        // check if chart package has been loaded using chartPackagename ?\n                        this.loadBaseChart(observer);\n                    } else {\n                        this.isScriptLoading = true;\n                        const script = document.createElement('script');\n                        script.type = 'text/javascript';\n                        script.src = 'https://www.gstatic.com/charts/loader.js';\n                        script.async = true;\n                        script.defer = true;\n                        script.onload = () => {\n                            this.isScriptLoading = false;\n                            this.googleScriptLoadingNotifier.emit(true);\n                            this.loadBaseChart(observer);\n                        };\n                        script.onerror = () => {\n                            observer.error('Could Not Load google Script');\n                        };\n                        document.getElementsByTagName('head')[0].appendChild(script);\n                    }\n                } else {\n                    this.googleScriptLoadingNotifier.subscribe((loaded: boolean) => {\n                        if (loaded) {\n                            this.loadBaseChart(observer);\n                        }\n                    });\n                }\n            },\n        );\n    }\n    /**\n     * Load Base Chart\n     * @param observer\n     */\n    loadBaseChart(observer: any) {\n        google.charts.load('current', {packages: ['corechart']});\n        google.charts.setOnLoadCallback(() => {\n            observer.complete();\n        });\n    }\n    /**\n     * Load the required charts\n     * @param chartName\n     */\n    loadRequiredChart(observer: any, chartName: string) {\n        if (google.visualization.hasOwnProperty(chartName)) {\n            observer.complete();\n        } else {\n            google.charts.load('current', {packages: [this.chartPackage[chartName]]});\n            google.charts.setOnLoadCallback(() => {\n                observer.complete();\n            });\n        }\n    }\n\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n/*\n Component Name : Amexio gaugechart\n Component Selector : <amexio-dashboard-gauge>\n Component Description : A gauge with a dial,rendered within the browser using SVG.\n Gauges are available under AmexioDashboardModule from amexio-ng-extensions/dashboard\n*/\nimport {AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild} from '@angular/core';\nimport {DashboardLoaderService} from '../chart.loader.service';\nimport {DashBoardTitleComponent} from '../dashboardtitle/dashboard.title.component';\ndeclare var google: any;\n@Component({\n  selector: 'amexio-dashboard-gauge', template: `\n    <div *ngIf=\"showChart\" #gaugedashboard\n         [style.width]=\"width\"\n         [style.height]=\"height\" (window:resize)=\"onResize($event)\">\n      <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n      </div>\n    </div>\n  `, styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n\n  .lmask.fixed {\n    position: fixed;\n  }\n\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  ` ] ,\n})\n\nexport class GaugeChartComponent implements AfterContentInit, OnInit {\n\n  private options: any;\n  private gaugeData: any;\n  private chart: any;\n\n  id: any;\n  hasLoaded: boolean;\n\n  elementId: string;\n\n  /*\nProperties\nname : width\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription :  Width of chart\n*/\n  @Input() width: string;\n\n  /*\nProperties\nname : height\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription :  Height of chart\n*/\n  @Input() height: string;\n\n  showChart: boolean;\n  _data: any;\n\n  get data(): any{\n    return this._data;\n  }\n\n/*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : Local data for gauge chart\n*/\n  @Input('data')\n  set data(data: any){\n    if (data) {\n    this._data = data;\n    this.showChart = true;\n    } else {\n    this.showChart = false;\n    }\n  }\n\n/*\nProperties\nname : red-color-from\ndatatype : number\nversion : 4.0 onwards\ndefault : none\ndescription : The lowest value for a range marked by a red color.\n*/\n  @Input('red-color-from') redcolorfrom: number;\n\n  /*\nProperties\nname : red-color-from\ndatatype : number\nversion : 4.0 onwards\ndefault : none\ndescription : The highest value for a range marked by a red color.\n*/\n  @Input('red-color-to') redcolorto: number;\n\n   /*\nProperties\nname : yellow-color-from\ndatatype : number\nversion : 4.0 onwards\ndefault : none\ndescription : The lowest value for a range marked by a yellow color.\n*/\n  @Input('yellow-color-from') yellowcolorfrom: number;\n\n   /*\nProperties\nname : yellow-color-to\ndatatype : number\nversion : 4.0 onwards\ndefault : none\ndescription : The highest value for a range marked by a yellow color.\n*/\n  @Input('yellow-color-to') yellowcolorto: number;\n\n  // allow to show minor ticks\n     /*\nProperties\nname : scale-value\ndatatype : number\nversion : 4.0 onwards\ndefault : none\ndescription : The number of minor tick section in each major tick section.\n*/\n  @Input('scale-value') scalevalue: number;\n\n  @ContentChildren(DashBoardTitleComponent) chartTitleComp: QueryList<DashBoardTitleComponent>;\n\n  chartTitleArray: DashBoardTitleComponent[];\n\n  chartTitleComponent: DashBoardTitleComponent;\n\n  @ViewChild('gaugedashboard') private gaugedashboard: ElementRef;\n\n  constructor(private loader: DashboardLoaderService) {\n    this.width = '100%';\n  }\n\n  drawChart() {\n    if (this.showChart) {\n      this.gaugeData = google.visualization.arrayToDataTable(this._data);\n      this.options = {\n        width: this.width,\n        height: this.height,\n        redFrom: this.redcolorfrom,\n        redTo: this.redcolorto,\n        yellowFrom: this.yellowcolorfrom,\n        yellowTo: this.yellowcolorto,\n        scalevalue: this.scalevalue,\n      };\n      if (this.gaugeData) {\n        this.chart = new google.visualization.Gauge(this.gaugedashboard.nativeElement);\n        this.hasLoaded = true;\n        this.chart.draw(this.gaugeData, this.options);\n      }\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.chartTitleArray = this.chartTitleComp.toArray();\n    // take first component\n    if (this.chartTitleArray.length === 1) {\n      this.chartTitleComponent = this.chartTitleArray.pop();\n    }\n  }\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('Gauge').subscribe((value: any) => console.log(), (errror: any) => console.error(errror), () => {\n      this.drawChart();\n    });\n  }\n\n  onResize(event: any) {\n    this.drawChart();\n  }\n}\n","import {CommonModule } from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {DashBoardTitleComponent} from './dashboardtitle/dashboard.title.component';\nimport {DataPointCenterComponent} from './datapoints/center.component';\nimport {DataPointsComponent} from './datapoints/datapoints.component';\nimport {DataPointEastComponent} from './datapoints/east.component';\nimport {DataPointNorthComponent} from './datapoints/north.component';\nimport {DataPointSouthComponent} from './datapoints/south.component';\nimport {DataPointWestComponent} from './datapoints/west.component';\nimport {GaugeChartComponent} from './gaugechart/gauge.chart.component';\n\nimport {CommonDataService} from '../services/data/common.data.service';\nimport {DashboardLoaderService} from './chart.loader.service';\n\nexport * from './chart.loader.service';\nexport * from './dashboardtitle/dashboard.title.component';\nexport * from './datapoints/center.component';\nexport * from './datapoints/datapoints.component';\nexport * from './datapoints/east.component';\nexport * from './datapoints/north.component';\nexport * from './datapoints/south.component';\nexport * from './datapoints/west.component';\nexport * from './gaugechart/gauge.chart.component';\nexport * from '../services/data/common.data.service';\n\nconst DASHBOARD = [\n  DashBoardTitleComponent,\n  DataPointCenterComponent,\n  DataPointsComponent,\n  DataPointEastComponent,\n  DataPointNorthComponent,\n  DataPointSouthComponent,\n  DataPointWestComponent,\n  GaugeChartComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  exports: DASHBOARD,\n  declarations: DASHBOARD,\n  providers: [CommonDataService, DashboardLoaderService],\n})\nexport class AmexioDashBoardModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AmexioDashBoardModule,\n      providers: [CommonDataService, DashboardLoaderService],\n    };\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n/*\nComponent Name : Amexio area chart properties\nComponent Selector : <amexio-chart-area-properties>\nComponent Description : An area chart that is rendered within the browser using SVG .Displays tips when hovering over points.\n*/\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'amexio-chart-area-properties', template: ``,\n})\nexport class ChartAreaComponent implements OnInit {\n\n/*\nProperties\nname : chart-background-color\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets chart background color\n*/\n  @Input('chart-background-color') chartbackgroundcolor: string;\n\n  /*\n  not in use\n*/\n  @Input('left-position') leftposition: number;\n\n  /*\n  not in use\n*/\n  @Input('top-position') topposition: number;\n\n  /*\nProperties\nname : chart-width\ndatatype : number\nversion : 4.0 onwards\ndefault : none\ndescription : sets chart width\n*/\n  @Input('chart-width') chartwidth: number;\n\n  /*\n  Properties\n  name : chart-height\n  datatype : number\n  version : 4.0 onwards\n  default : none\n  description : sets chart height\n  */\n\n  @Input('chart-height') chartheight: number;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n/*\nComponent Name : Amexio chart legend\nComponent Selector : <amexio-chart-legend>\nComponent Description : describes chart legend properties\n*/\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'amexio-chart-legend', template: ` `,\n})\nexport class ChartLegendComponent implements OnInit {\n\n/*\nProperties\nname : position\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Position of the legend.'bottom' - Below the chart.'top' - Above the chart.\n*/\n@Input() position: string;\n\n  // start,center,end\n/*\nProperties\nname : alignment\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Alignment of the legend.'start' - Aligned to the start of the area allocated for the legend.'center' -\nCentered in the area allocated for the legend 'end' - Aligned to the end of the area allocated for the legend.\n*/\n@Input() alignment: string;\n\n/*\nProperties\nname : color\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Color of chart legend. for example: 'red' or '#00cc00'.\n*/\n@Input() color: string;\n\n/*\nProperties\nname : font-name\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Font name of chart legend\n*/\n@Input('font-name') fontname: string;\n\n/*\nProperties\nname : font-size\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Font size of chart legend\n*/\n  @Input('font-size') fontsize: string;\n\n/*\nProperties\nname : bold\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Set true for Legend text in bold\n*/\n  @Input() bold = false;\n\n  // this work only in chart position is top\n  /*\nProperties\nname : max-lines\ndatatype : number\nversion : 4.0 onwards\ndefault :\ndescription : Maximum number of lines in the legend. Set this to a number greater than one to add lines to your legend.\n*/\n  @Input('max-lines') maxlines: number;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n /*\nComponent Name : Amexio chart title\nComponent Selector : <amexio-chart-title>\nComponent Description : describes chart title properties\n*/\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-chart-title', template: ` `,\n})\n\nexport class ChartTitleComponent implements OnInit {\n\n /*\nProperties\nname : title\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Title to display above the chart.\n*/\n@Input() title: string;\n\n /*\nProperties\nname : position\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Position of chart title\n*/\n@Input() position: string;\n\n /*\nProperties\nname : color\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Color of chart title.\n*/\n@Input() color: string;\n\n /*\nProperties\nname : font-name\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Font name of chart title.\n*/\n@Input('font-name') fontname: string;\n\n /*\nProperties\nname : font-size\ndatatype : number\nversion : 4.0 onwards\ndefault :\ndescription : Font size of chart title.\n*/\n@Input('font-size') fontsize: number;\n\n /*\nProperties\nname : bold\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : Set true for title in bold font.\n*/\n@Input() bold: boolean;\n\n /*\nProperties\nname : italic\ndatatype : boolean\nversion : 4.0 onwards\ndefault :false\ndescription : Set true for title text in italic style.\n*/\n@Input() italic: boolean;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","/**\n * Created by pratik on 17/8/17.\n */\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/index';\ndeclare var google: any;\n@Injectable()\nexport class ChartLoaderService {\n    private chartPackage: { [id: string]: string; } = {\n        AreaChart: 'corechart',\n        Bar: 'bar',\n        BarChart: 'corechart',\n        ColumnChart: 'corechart',\n        PieChart: 'corechart',\n        Gantt: 'gantt',\n        Gauge: 'gauge',\n        GeoChart: 'geochart',\n        Histogram: 'corechart',\n        Line: 'line',\n        LineChart: 'corechart',\n        Map: 'map',\n        Timeline: 'timeline',\n        BubbleChart: 'corechart',\n        CandlestickChart: 'corechart',\n        ComboChart: 'corechart',\n        TreeMap: 'treemap',\n    };\n    isScriptLoading: boolean;\n    private googleScriptLoadingNotifier: EventEmitter<boolean>;\n    constructor() {\n        this.googleScriptLoadingNotifier = new EventEmitter();\n        this.isScriptLoading = false;\n    }\n\n    loadCharts(chartName: string): Observable<any> {\n        return new Observable(\n            (observer) => {\n                this.loadScript().subscribe(\n                    (val) => console.log(),\n                    (error) => console.error(error),\n                    () => {\n                        this.loadRequiredChart(observer, chartName);\n                    },\n                );\n            },\n        );\n    }\n\n    loadScript(): Observable<any> {\n        return new Observable(\n            (observer) => {\n\n                if (!this.isScriptLoading) {\n                    // check if previously its loaded\n                    if (typeof google !== 'undefined' && google.charts) {\n                        // check if chart package has been loaded using chartPackagename ?\n                        this.loadBaseChart(observer);\n                    } else {\n                        this.isScriptLoading = true;\n                        const script = document.createElement('script');\n                        script.type = 'text/javascript';\n                        script.src = 'https://www.gstatic.com/charts/loader.js';\n                        script.async = true;\n                        script.defer = true;\n                        script.onload = () => {\n                            this.isScriptLoading = false;\n                            this.googleScriptLoadingNotifier.emit(true);\n                            this.loadBaseChart(observer);\n                        };\n                        script.onerror = () => {\n                            observer.error('Could Not Load google Script');\n                        };\n                        document.getElementsByTagName('head')[0].appendChild(script);\n                    }\n                } else {\n                    this.googleScriptLoadingNotifier.subscribe((loaded: boolean) => {\n                        if (loaded) {\n                            this.loadBaseChart(observer);\n                        }\n                    });\n                }\n            },\n        );\n    }\n\n    /**\n     * Load Base Chart\n     * @param observer\n     */\n    loadBaseChart(observer: any) {\n        google.charts.load('current', { packages : ['corechart']});\n        google.charts.setOnLoadCallback(() => {\n            observer.complete();\n        });\n    }\n\n    /**\n     * Load the required charts\n     * @param chartName\n     */\n    loadRequiredChart(observer: any, chartName: string) {\n        if (google.visualization.hasOwnProperty(chartName)) {\n            observer.complete();\n        } else {\n            google.charts.load('current', {packages : [this.chartPackage[chartName]]});\n            google.charts.setOnLoadCallback(() => {\n                observer.complete();\n            });\n        }\n    }\n\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n /*\n Component Name : Amexio area chart\n Component Selector : <amexio-chart-area>\n Component Description : An area chart that is rendered within the browser using SVG.\n Displays tips when hovering over points.\n*/\nimport {AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild} from '@angular/core';\nimport {ChartAreaComponent} from '../chartarea/chart.area.component';\nimport {ChartLegendComponent} from '../chartlegend/chart.legend.component';\nimport {ChartTitleComponent} from '../charttitle/chart.title.component';\n\nimport {ChartLoaderService} from '../chart.loader.service';\n\ndeclare var google: any;\n@Component({\n  selector: 'amexio-chart-area', template: `\n    <div *ngIf=\"showChart\" #areachart\n         [style.width]=\"width\"\n         [style.height]=\"height\" (window:resize)=\"onResize($event)\">\n      <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n      </div>\n    </div>\n  `, styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n\n  .lmask.fixed {\n    position: fixed;\n  }\n\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  `],\n})\n\nexport class AreaChartComponent implements AfterContentInit, OnInit {\n\n  private options: any;\n  private areaData: any;\n  private chart: any;\n  hasLoaded: boolean;\n  id: any;\n\n  /*\nProperties\nname : width\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Width of chart\n*/\n  @Input() width: string;\n\n  /*\nProperties\nname : height\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Height of chart\n*/\n  @Input() height: string;\n\n  showChart: boolean;\n  _data: any;\n\n  get data(): any{\n    return this._data;\n  }\n\n  /*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault :\ndescription : Local data for AreaChart\n*/\n  @Input('data')\n  set data(data: any){\n    if (data) {\n      this._data = data;\n      this.showChart = true;\n    } else {\n      this.showChart = false;\n    }\n  }\n\n  /*\nProperties\nname : background-color\ndatatype : any\nversion : 4.0 onwards\ndefault :\ndescription : Sets background color to chart\n*/\n  @Input('background-color') backgroundcolor: string;\n\n  @ContentChildren(ChartLegendComponent) chartLegendComp: QueryList<ChartLegendComponent>;\n\n  @ContentChildren(ChartTitleComponent) chartTitleComp: QueryList<ChartTitleComponent>;\n\n  @ContentChildren(ChartAreaComponent) chartAreaComp: QueryList<ChartAreaComponent>;\n\n  chartAreaArray: ChartAreaComponent[];\n\n  chartAreaComponent: ChartAreaComponent;\n\n  chartLegendArray: ChartLegendComponent[];\n\n  chartLengendComponent: ChartLegendComponent;\n\n  chartTitleArray: ChartTitleComponent[];\n\n  chartTitleComponent: ChartTitleComponent;\n\n  @ViewChild('areachart') public areachart: ElementRef;\n\n  constructor(private loader: ChartLoaderService) {\n    this.width = '100%';\n  }\n\n  drawChart() {\n    if (this.showChart) {\n      this.areaData = google.visualization.arrayToDataTable(this._data);\n      this.options = {\n        title: this.chartTitleComponent ? this.chartTitleComponent.title : null,\n        titleTextStyle: this.chartTitleComponent ? this.createTitleTextStyle() : null,\n        backgroundcolor: this.backgroundcolor,\n        legend: this.chartLengendComponent ? this.createChartLegend() : 'none',\n        chartArea: this.chartAreaComponent ? this.createChartArea() : null,\n      };\n\n      if (this.areaData) {\n        this.chart = new google.visualization.AreaChart(this.areachart.nativeElement);\n        this.hasLoaded = true;\n        this.chart.draw(this.areaData, this.options);\n        google.visualization.events.addListener(this.chart, 'click', this.click);\n      }\n    }\n\n  }\n\n  createTitleTextStyle(): any {\n    return {\n      color: this.chartTitleComponent.color ? this.chartTitleComponent.color : null,\n      fontName: this.chartTitleComponent.fontname ? this.chartTitleComponent.fontname : null,\n      fontsize: this.chartTitleComponent.fontsize ? this.chartTitleComponent.fontsize : null,\n      bold: this.chartTitleComponent.bold ? this.chartTitleComponent.bold : null,\n      italic: this.chartTitleComponent.italic ? this.chartTitleComponent.italic : null,\n    };\n  }\n\n  createChartLegend(): any {\n    return {\n      position: this.chartLengendComponent.position ? this.chartLengendComponent.position : null,\n      // this work only in chart position is top\n      maxLines: this.chartLengendComponent.maxlines ? this.chartLengendComponent.maxlines : null, textStyle: {\n        color: this.chartLengendComponent.color ? this.chartLengendComponent.color : null,\n        fontsize: this.chartLengendComponent.fontsize ? this.chartLengendComponent.fontsize : null,\n        fontName: this.chartLengendComponent.fontname ? this.chartLengendComponent.fontname : null,\n        bold: this.chartLengendComponent.bold ? this.chartLengendComponent.bold : null,\n        alignment: this.chartLengendComponent.alignment ? this.chartLengendComponent.alignment : null,\n      },\n    };\n  }\n\n  createChartArea(): any {\n    return {\n      backgroundcolor: this.chartAreaComponent.chartbackgroundcolor ? this.chartAreaComponent.chartbackgroundcolor : null,\n      left: this.chartAreaComponent.leftposition ? this.chartAreaComponent.leftposition : null,\n      top: this.chartAreaComponent.topposition ? this.chartAreaComponent.topposition : null,\n      height: this.chartAreaComponent.chartheight ? this.chartAreaComponent.chartheight : null,\n      width: this.chartAreaComponent.chartwidth ? this.chartAreaComponent.chartwidth : null,\n    };\n  }\n  click(e: any) {\n\n  }\n\n  // after content init for inner directive is run\n  ngAfterContentInit(): void {\n    this.chartLegendArray = this.chartLegendComp.toArray();\n    this.chartTitleArray = this.chartTitleComp.toArray();\n    this.chartAreaArray = this.chartAreaComp.toArray();\n    // take first component\n    if (this.chartLegendArray.length === 1) {\n      this.chartLengendComponent = this.chartLegendArray.pop();\n    }\n    if (this.chartTitleArray.length ===  1) {\n      this.chartTitleComponent = this.chartTitleArray.pop();\n    }\n    if (this.chartAreaArray.length ===  1) {\n      this.chartAreaComponent = this.chartAreaArray.pop();\n    }\n  }\n\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('AreaChart').subscribe((value) => console.log(), (errror) => console.error(errror), () => {\n      this.drawChart();\n    });\n  }\n\n  onResize(event: any) {\n    this.drawChart();\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n/*\nComponent Name : Amexio bar chart\nComponent Selector : <amexio-chart-bar>\nComponent Description : An bar chart that is rendered within the browser using SVG.\nA bar chart is a chart that presents grouped data with rectangular bars with lengths proportional to the values that they represent.\n*/\nimport { AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild } from '@angular/core';\nimport { ChartAreaComponent } from '../chartarea/chart.area.component';\nimport { ChartLegendComponent } from '../chartlegend/chart.legend.component';\nimport { ChartTitleComponent } from '../charttitle/chart.title.component';\n\nimport { ChartLoaderService } from '../chart.loader.service';\n\ndeclare var google: any;\n@Component({\n  selector: 'amexio-chart-bar', template: `\n    <div *ngIf=\"showChart\" #barchart\n         [style.width]=\"width\"\n         [style.height]=\"height\" (window:resize)=\"onResize($event)\">\n      <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n      </div>\n    </div>\n  `, styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n\n  .lmask.fixed {\n    position: fixed;\n  }\n\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  `],\n})\nexport class BarChartComponent implements AfterContentInit, OnInit {\n\n  private options: any;\n  private barData: any;\n  private chart: any;\n\n  hasLoaded: boolean;\n  id: any;\n  showChart: boolean;\n  _data: any;\n\n  get data(): any {\n    return this._data;\n  }\n\n  /*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault :\ndescription : Local data for AreaChart\n*/\n  @Input('data')\n  set data(data: any) {\n    if (data) {\n      this.showChart = true;\n      this._data = data;\n    } else {\n      this.showChart = false;\n    }\n  }\n\n  /*\nProperties\nname : width\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Width of chart\n*/\n  @Input() width: string;\n\n  /*\nProperties\nname : height\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Height of chart\n*/\n  @Input() height: string;\n\n  // showing stack chart\n  /*\nProperties\nname : stacked\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : If set to true, stacks the elements for all series at each domain value.default value is false\n*/\n  @Input() stacked = false;\n\n  /*\nProperties\nname : x-axis-title\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Sets title for x axis\n*/\n  @Input('x-axis-title') xaxistitle: string;\n\n  /*\nProperties\nname : y-axis-title\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Sets title for y axis\n*/\n  @Input('y-axis-title') yaxistitle: string;\n\n  /*\nProperties\nname : background-color\ndatatype : string\nversion : 4.0 onwards\ndefault :\ndescription : Sets background-color\n*/\n  @Input('background-color') backgroundcolor: string;\n\n  @ContentChildren(ChartLegendComponent) chartLegendComp: QueryList<ChartLegendComponent>;\n\n  @ContentChildren(ChartTitleComponent) chartTitleComp: QueryList<ChartTitleComponent>;\n\n  @ContentChildren(ChartAreaComponent) chartAreaComp: QueryList<ChartAreaComponent>;\n\n  chartAreaArray: ChartAreaComponent[];\n\n  chartAreaComponent: ChartAreaComponent;\n\n  chartLegendArray: ChartLegendComponent[];\n\n  chartLengendComponent: ChartLegendComponent;\n\n  chartTitleArray: ChartTitleComponent[];\n\n  chartTitleComponent: ChartTitleComponent;\n\n  @ViewChild('barchart') private barchart: ElementRef;\n\n  constructor(private loader: ChartLoaderService) {\n\n    this.width = '100%';\n  }\n\n  drawChart() {\n    if (this.showChart) {\n      // bind the data\n      this.barData = google.visualization.arrayToDataTable(this._data);\n      this.options = {\n        title: this.chartTitleComponent ? this.chartTitleComponent.title : null,\n        titleTextStyle: this.chartTitleComponent ? this.chartTitleTextStyle() : null,\n        isStacked: this.stacked,\n        backgroundcolor: this.backgroundcolor,\n        legend: this.chartLengendComponent ? this.createChartLegend() : 'none',\n        chartArea: this.chartAreaComponent ? this.createChartBar() : null,\n        hAxis: {\n          title: this.xaxistitle, minvalue: 0,\n        },\n        vAxis: {\n          title: this.yaxistitle,\n        },\n      };\n      if (this.barData) {\n        this.chart = new google.visualization.BarChart(this.barchart.nativeElement);\n        this.hasLoaded = true;\n        this.chart.draw(this.barData, this.options);\n      }\n    }\n  }\nchartTitleTextStyle() {\n  return{\n    color: this.chartTitleComponent.color ? this.chartTitleComponent.color : null,\n          fontName: this.chartTitleComponent.fontname ? this.chartTitleComponent.fontname : null,\n          fontsize: this.chartTitleComponent.fontsize ? this.chartTitleComponent.fontsize : null,\n          bold: this.chartTitleComponent.bold ? this.chartTitleComponent.bold : null,\n          italic: this.chartTitleComponent.italic ? this.chartTitleComponent.italic : null,\n    };\n}\ncreateChartLegend() {\n  return{\n    position: this.chartLengendComponent.position ? this.chartLengendComponent.position : null,\n    maxLines: this.chartLengendComponent.maxlines ? this.chartLengendComponent.maxlines : null,\n    textStyle: {\n      color: this.chartLengendComponent.color ? this.chartLengendComponent.color : null,\n      fontsize: this.chartLengendComponent.fontsize ? this.chartLengendComponent.fontsize : null,\n      fontName: this.chartLengendComponent.fontname ? this.chartLengendComponent.fontname : null,\n      bold: this.chartLengendComponent.bold ? this.chartLengendComponent.bold : null,\n      alignment: this.chartLengendComponent.alignment ? this.chartLengendComponent.alignment : null,\n    },\n  };\n }\ncreateChartBar() {\nreturn{\n  backgroundcolor: this.chartAreaComponent.chartbackgroundcolor ? this.chartAreaComponent.chartbackgroundcolor : null,\n  left: this.chartAreaComponent.leftposition ? this.chartAreaComponent.leftposition : null,\n  top: this.chartAreaComponent.topposition ? this.chartAreaComponent.topposition : null,\n  height: this.chartAreaComponent.chartheight ? this.chartAreaComponent.chartheight : null,\n  width: this.chartAreaComponent.chartwidth ? this.chartAreaComponent.chartwidth : null,\n  };\n}\n  ngAfterContentInit(): void {\n    this.chartLegendArray = this.chartLegendComp.toArray();\n    this.chartTitleArray = this.chartTitleComp.toArray();\n    this.chartAreaArray = this.chartAreaComp.toArray();\n    // take first component\n    if (this.chartLegendArray.length === 1) {\n      this.chartLengendComponent = this.chartLegendArray.pop();\n    }\n    if (this.chartTitleArray.length === 1) {\n      this.chartTitleComponent = this.chartTitleArray.pop();\n    }\n    if (this.chartAreaArray.length === 1) {\n      this.chartAreaComponent = this.chartAreaArray.pop();\n    }\n  }\n\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('BarChart').subscribe((value) => console.log(), (errror) => console.error(errror), () => {\n      this.drawChart();\n    });\n  }\n\n  onResize(event: any) {\n    this.drawChart();\n  }\n\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n/*\nComponent Name : Amexio chart horizontal axis\nComponent Selector : <amexio-chart-horizontal-axis>\nComponent Description : it describes horizontal axis properties of chart.\n*/\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-chart-horizontal-axis', template: ` `,\n})\nexport class HorizontalAxisComponent implements OnInit {\n\n/*\nProperties\nname : title\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : title of horizontal axis\n*/\n@Input() title: string;\n\n/*\nProperties\nname : title-color\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : set color to horizontal axis title\n*/\n@Input('title-color') titlecolor: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n/*\nComponent Name : Amexio chart vertical axis\nComponent Selector : <amexio-chart-vertical-axis>\nComponent Description : it describes vertical axis properties of chart.\n*/\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-chart-vertical-axis', template: ` `,\n})\nexport class VerticalAxisComponent implements OnInit {\n\n/*\nProperties\nname : title\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : title of vertical axis\n*/\n@Input() title: string;\n\n/*\nProperties\nname : title-color\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : set color to vertical axis title\n*/\n@Input('title-color') titlecolor: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n/*\nComponent Name : Amexio bubble chart\nComponent Selector : <amexio-chart-bubble>\nComponent Description : A bubble chart is used to visualize a data set with two to four dimensions.\nThe first two dimensions are visualized as coordinates, the third as color and the fourth as size.\n*/\nimport { AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild } from '@angular/core';\nimport { ChartAreaComponent } from '../chartarea/chart.area.component';\nimport { ChartLegendComponent } from '../chartlegend/chart.legend.component';\nimport { ChartTitleComponent } from '../charttitle/chart.title.component';\nimport { HorizontalAxisComponent } from '../horizontalaxis/chart.horizontalaxis.component';\nimport { VerticalAxisComponent } from '../verticalaxis/chart.verticalaxis.component';\n\nimport { ChartLoaderService } from '../chart.loader.service';\n\ndeclare var google: any;\n@Component({\n  selector: 'amexio-chart-bubble',\n  template: `\n      <div *ngIf=\"showChart\" #bubblechart\n           [style.width]=\"width\"\n           [style.height]=\"height\" (window:resize)=\"onResize($event)\">\n        <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n        </div>\n      </div>\n  `,\n  styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  `],\n})\n\nexport class BubbleChartComponent implements AfterContentInit, OnInit {\n\n  private options: any;\n  private bubbleData: any;\n  private chart: any;\n\n  id: any;\n\n  /*\nProperties\nname : width\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : width of chart\n*/\n  @Input() width: string;\n\n  /*\nProperties\nname : height\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : height of chart\n*/\n  @Input() height: string;\n\n  showChart: boolean;\n  _data: any;\n\n  get data(): any {\n    return this._data;\n  }\n\n  /*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : Local data for AreaChart\n*/\n  @Input('data')\n  set data(data: any) {\n    if (data) {\n      this._data = data;\n      this.showChart = true;\n    } else {\n      this.showChart = false;\n    }\n  }\n\n  /*\nProperties\nname : axis-color\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : An object that specifies a mapping between color column values and\ncolors or a gradient scale.example:['#FF0000', '#00FF00'] or ['yellow', 'red']\n*/\n  @Input('axis-color') axiscolor: any = [];\n\n  /*\nProperties\nname : background-color\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets background color\n*/\n  @Input('background-color') backgroundcolor: string;\n\n  hasLoaded: boolean;\n\n  @ContentChildren(ChartLegendComponent) chartLegendComp: QueryList<ChartLegendComponent>;\n\n  @ContentChildren(ChartTitleComponent) chartTitleComp: QueryList<ChartTitleComponent>;\n\n  @ContentChildren(ChartAreaComponent) chartAreaComp: QueryList<ChartAreaComponent>;\n\n  @ContentChildren(HorizontalAxisComponent) horizontalComp: QueryList<HorizontalAxisComponent>;\n\n  horizontalArray: HorizontalAxisComponent[];\n\n  horizontalComponent: HorizontalAxisComponent;\n\n  @ContentChildren(VerticalAxisComponent) verticalComp: QueryList<VerticalAxisComponent>;\n\n  verticalArray: HorizontalAxisComponent[];\n\n  verticalComponent: HorizontalAxisComponent;\n\n  chartAreaArray: ChartAreaComponent[];\n\n  chartAreaComponent: ChartAreaComponent;\n\n  chartLegendArray: ChartLegendComponent[];\n\n  chartLengendComponent: ChartLegendComponent;\n\n  chartTitleArray: ChartTitleComponent[];\n\n  chartTitleComponent: ChartTitleComponent;\n\n  @ViewChild('bubblechart') private bubblechart: ElementRef;\n\n  constructor(private loader: ChartLoaderService) {\n    this.width = '100%';\n  }\n\n  drawChart() {\n    if (this.showChart) {\n      this.bubbleData = google.visualization.arrayToDataTable(this._data);\n      this.options = {\n        title: this.chartTitleComponent ? this.chartTitleComponent.title : null,\n        titleTextStyle: this.chartTitleComponent ? this.createTitleTextStyle() : null,\n        backgroundcolor: this.backgroundcolor,\n        legend: this.chartLengendComponent ? this.createChartLegend() : 'none',\n        chartArea: this.chartAreaComponent ? this.createChartBackground() : null,\n        vAxis: this.verticalComponent ? this.createChartVertical() : null,\n        hAxis: this.horizontalComponent ? this.createchartHorizontal() : null,\n        bubble: { textStyle: { fontsize: 11 } },\n        axiscolor: { colors: this.axiscolor },\n      };\n      if (this.bubbleData) {\n        this.chart = new google.visualization.BubbleChart(this.bubblechart.nativeElement);\n        this.hasLoaded = true;\n        this.chart.draw(this.bubbleData, this.options);\n        google.visualization.events.addListener(this.chart, 'click', this.click);\n      }\n\n    }\n\n  }\n  createTitleTextStyle() {\n    return {\n      color: this.chartTitleComponent.color ? this.chartTitleComponent.color : null,\n      fontName: this.chartTitleComponent.fontname ? this.chartTitleComponent.fontname : null,\n      fontsize: this.chartTitleComponent.fontsize ? this.chartTitleComponent.fontsize : null,\n      bold: this.chartTitleComponent.bold ? this.chartTitleComponent.bold : null,\n      italic: this.chartTitleComponent.italic ? this.chartTitleComponent.italic : null,\n\n    };\n  }\n  createChartLegend() {\n    return {\n      position: this.chartLengendComponent.position ? this.chartLengendComponent.position : null,\n      // this work only in chart position is top\n      maxLines: this.chartLengendComponent.maxlines ? this.chartLengendComponent.maxlines : null,\n      textStyle: {\n        color: this.chartLengendComponent.color ? this.chartLengendComponent.color : null,\n        fontsize: this.chartLengendComponent.fontsize ? this.chartLengendComponent.fontsize : null,\n        fontName: this.chartLengendComponent.fontname ? this.chartLengendComponent.fontname : null,\n        bold: this.chartLengendComponent.bold ? this.chartLengendComponent.bold : null,\n        alignment: this.chartLengendComponent.alignment ? this.chartLengendComponent.alignment : null,\n      },\n    };\n\n  }\n  createChartBackground() {\n    return {\n      backgroundcolor: this.chartAreaComponent.chartbackgroundcolor ? this.chartAreaComponent.chartbackgroundcolor : null,\n      left: this.chartAreaComponent.leftposition ? this.chartAreaComponent.leftposition : null,\n      top: this.chartAreaComponent.topposition ? this.chartAreaComponent.topposition : null,\n      height: this.chartAreaComponent.chartheight ? this.chartAreaComponent.chartheight : null,\n      width: this.chartAreaComponent.chartwidth ? this.chartAreaComponent.chartwidth : null,\n    };\n  }\n  createChartVertical() {\n    return{\n      title: this.verticalComponent.title ? this.verticalComponent.title : null,\n      titleTextStyle: { color: this.verticalComponent.titlecolor ? this.verticalComponent.titlecolor : null },\n    };\n  }\n  createchartHorizontal() {\n    return{\n      title: this.horizontalComponent.title ? this.horizontalComponent.title : null,\n      titleTextStyle: { color: this.horizontalComponent.titlecolor ? this.horizontalComponent.titlecolor : null },\n    };\n  }\n\n  click(e: any) {\n\n  }\n\n  // after content init for inner directive is run\n  ngAfterContentInit(): void {\n    this.chartLegendArray = this.chartLegendComp.toArray();\n    this.chartTitleArray = this.chartTitleComp.toArray();\n    this.chartAreaArray = this.chartAreaComp.toArray();\n    this.horizontalArray = this.horizontalComp.toArray();\n    this.verticalArray = this.verticalComp.toArray();\n    // take first component\n    if (this.chartLegendArray.length === 1) {\n      this.chartLengendComponent = this.chartLegendArray.pop();\n    }\n    if (this.chartTitleArray.length === 1) {\n      this.chartTitleComponent = this.chartTitleArray.pop();\n    }\n    if (this.chartAreaArray.length === 1) {\n      this.chartAreaComponent = this.chartAreaArray.pop();\n    }\n    if (this.horizontalArray.length === 1) {\n      this.horizontalComponent = this.horizontalArray.pop();\n    }\n    if (this.verticalArray.length === 1) {\n      this.verticalComponent = this.verticalArray.pop();\n    }\n  }\n\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('BubbleChart').subscribe(\n      (value) => console.log(),\n      (errror) => console.error(errror),\n      () => {\n        this.drawChart();\n      },\n    );\n  }\n  onResize(event: any) {\n    this.drawChart();\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n/*\n Component Name : Amexio candlestick chart\n Component Selector : <amexio-chart-candlestick>\n Component Description : A candlestick chart is used to show an opening and closing value overlaid on top of a total variance.\n Candlestick charts are often used to show stock value behavior.\n*/\nimport {AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild} from '@angular/core';\nimport {ChartAreaComponent} from '../chartarea/chart.area.component';\nimport {ChartTitleComponent} from '../charttitle/chart.title.component';\nimport {HorizontalAxisComponent} from '../horizontalaxis/chart.horizontalaxis.component';\nimport {VerticalAxisComponent} from '../verticalaxis/chart.verticalaxis.component';\n\nimport {ChartLoaderService} from '../chart.loader.service';\n\ndeclare var google: any;\n@Component({\n  selector: 'amexio-chart-candlestick', template: `\n    <div *ngIf=\"showChart\" #candlestick\n         [style.width]=\"width\"\n         [style.height]=\"height\" (window:resize)=\"onResize($event)\">\n      <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n      </div>\n    </div>\n  `, styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n\n  .lmask.fixed {\n    position: fixed;\n  }\n\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  ` ],\n\n})\n\nexport class CandlestickChartComponent implements AfterContentInit, OnInit {\n\n  private options: any;\n  private candlestickData: any;\n  private chart: any;\n\n  id: any;\n\n  /*\nProperties\nname : width\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : width of chart\n*/\n  @Input() width: string;\n\n  /*\nProperties\nname : height\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : height of chart\n*/\n  @Input() height: string;\n\n  showChart: boolean;\n  _data: any;\n\n  get data(): any {\n    return this._data;\n  }\n\n  /*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : Local data for AreaChart\n*/\n  @Input('data')\n  set data(data: any) {\n    if (data) {\n      this._data = data;\n      this.showChart = true;\n    } else {\n      this.showChart = false;\n    }\n  }\n/*\nProperties\nname : background-color\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets background color\n*/\n  @Input('background-color') backgroundcolor: string;\n\n  hasLoaded: boolean;\n\n  @ContentChildren(ChartAreaComponent) chartAreaComp: QueryList<ChartAreaComponent>;\n\n  @ContentChildren(ChartTitleComponent) chartTitleComp: QueryList<ChartTitleComponent>;\n\n  @ContentChildren(HorizontalAxisComponent) horizontalComp: QueryList<HorizontalAxisComponent>;\n\n  horizontalArray: HorizontalAxisComponent[];\n\n  horizontalComponent: HorizontalAxisComponent;\n\n  @ContentChildren(VerticalAxisComponent) verticalComp: QueryList<VerticalAxisComponent>;\n\n  verticalArray: HorizontalAxisComponent[];\n\n  verticalComponent: HorizontalAxisComponent;\n\n  chartAreaArray: ChartAreaComponent[];\n\n  chartAreaComponent: ChartAreaComponent;\n\n  chartTitleArray: ChartTitleComponent[];\n\n  chartTitleComponent: ChartTitleComponent;\n\n  @ViewChild('candlestick') private candlestick: ElementRef;\n\n  constructor(private loader: ChartLoaderService) {\n    this.width = '100%';\n  }\n\n  drawChart() {\n    if (this.showChart) {\n      this.candlestickData = google.visualization.arrayToDataTable(this._data, true);\n      this.options = {\n        title: this.chartTitleComponent ? this.chartTitleComponent.title : null,\n        titleTextStyle: this.chartTitleComponent ? this.chartTileTextStyle() : null,\n        backgroundcolor: this.backgroundcolor,\n        legend: 'none',\n        chartArea: this.chartAreaComponent ? this.chartLegendStyle() : null,\n        vAxis: this.verticalComponent ? this.chartVerticalStyle() : null,\n        hAxis: this.horizontalComponent ? this.chartHorizontalStyle() : null,\n      };\n      if (this.candlestickData) {\n        this.chart = new google.visualization.CandlestickChart(this.candlestick.nativeElement);\n        this.hasLoaded = true;\n        this.chart.draw(this.candlestickData, this.options);\n        google.visualization.events.addListener(this.chart, 'click', this.click);\n      }\n\n    }\n\n  }\n  chartTileTextStyle() {\n    return{\n      color: this.chartTitleComponent.color ? this.chartTitleComponent.color : null,\n      fontName: this.chartTitleComponent.fontname ? this.chartTitleComponent.fontname : null,\n      fontsize: this.chartTitleComponent.fontsize ? this.chartTitleComponent.fontsize : null,\n      bold: this.chartTitleComponent.bold ? this.chartTitleComponent.bold : null,\n      italic: this.chartTitleComponent.italic ? this.chartTitleComponent.italic : null,\n    };\n  }\n  chartLegendStyle() {\n    return{\n      backgroundcolor: this.chartAreaComponent.chartbackgroundcolor ? this.chartAreaComponent.chartbackgroundcolor : null,\n      left: this.chartAreaComponent.leftposition ? this.chartAreaComponent.leftposition : null,\n      top: this.chartAreaComponent.topposition ? this.chartAreaComponent.topposition : null,\n      height: this.chartAreaComponent.chartheight ? this.chartAreaComponent.chartheight : null,\n      width: this.chartAreaComponent.chartwidth ? this.chartAreaComponent.chartwidth : null,\n    };\n  }\n  chartVerticalStyle() {\n    return{\n      title: this.verticalComponent.title ? this.verticalComponent.title : null,\n      titleTextStyle: {color: this.verticalComponent.titlecolor ? this.verticalComponent.titlecolor : null},\n\n    };\n  }\n  chartHorizontalStyle() {\n    return{\n      title: this.horizontalComponent.title ? this.horizontalComponent.title : null,\n          titleTextStyle: {color: this.horizontalComponent.titlecolor ? this.horizontalComponent.titlecolor : null},\n    };\n  }\nclick(e: any) {\n\n  }\n\n  // after content init for inner directive is run\n  ngAfterContentInit(): void {\n    this.chartAreaArray = this.chartAreaComp.toArray();\n    this.horizontalArray = this.horizontalComp.toArray();\n    this.verticalArray = this.verticalComp.toArray();\n    this.chartTitleArray = this.chartTitleComp.toArray();\n\n    // take first component\n    if (this.chartTitleArray.length === 1) {\n      this.chartTitleComponent = this.chartTitleArray.pop();\n    }\n    if (this.chartAreaArray.length === 1) {\n      this.chartAreaComponent = this.chartAreaArray.pop();\n    }\n    if (this.horizontalArray.length === 1) {\n      this.horizontalComponent = this.horizontalArray.pop();\n    }\n    if (this.verticalArray.length === 1) {\n      this.verticalComponent = this.verticalArray.pop();\n    }\n  }\n\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('CandlestickChart').subscribe((value) => console.log(), (errror) => console.error(errror), () => {\n      this.drawChart();\n    });\n  }\n\n  onResize(event: any) {\n    this.drawChart();\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n/*\n Component Name : Amexio candlestick waterfall chart\n Component Selector : <amexio-chart-candlestick-waterfall>\n Component Description : A candlestick waterfall chart is used to show an opening and closing\n value overlaid on top of a total variance. Candlestick charts are often used to show stock value behavior.\n*/\nimport {AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild} from '@angular/core';\nimport {ChartAreaComponent} from '../chartarea/chart.area.component';\nimport {ChartTitleComponent} from '../charttitle/chart.title.component';\nimport {HorizontalAxisComponent} from '../horizontalaxis/chart.horizontalaxis.component';\nimport {VerticalAxisComponent} from '../verticalaxis/chart.verticalaxis.component';\n\nimport {ChartLoaderService} from '../chart.loader.service';\n\ndeclare var google: any;\n@Component({\n  selector: 'amexio-chart-candlestick-waterfall', template: `\n    <div *ngIf=\"showChart\" #candlestickwaterfall\n         [style.width]=\"width\"\n         [style.height]=\"height\" (window:resize)=\"onResize($event)\">\n      <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n      </div>\n    </div>\n  `, styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n\n  .lmask.fixed {\n    position: fixed;\n  }\n\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  ` ],\n})\n\nexport class CandlestickWaterfallChartComponent implements AfterContentInit, OnInit {\n\n  private options: any;\n  private candlestickData: any;\n  private chart: any;\n\n  id: any;\n\n  /*\nProperties\nname : width\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : width of chart\n*/\n  @Input() width: string;\n\n  /*\nProperties\nname : height\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : height of chart\n*/\n  @Input() height: string;\n\n  showChart: boolean;\n  _data: any;\n\n  get data(): any {\n    return this._data;\n  }\n\n  /*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : Local data for AreaChart\n*/\n  @Input('data')\n  set data(data: any) {\n    if (data) {\n      this._data = data;\n      this.showChart = true;\n    } else {\n      this.showChart = false;\n    }\n  }\n\n  /*\nProperties\nname : background-color\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets background color\n*/\n  @Input('background-color') backgroundcolor: string;\n\n  /*\nProperties\nname : bar-width\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : To remove the space between the bars.\n*/\n  @Input('bar-width') barwidth: string;\n\n  /*\nProperties\nname : falling-color\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : The fill color of falling candles, as an HTML color string.Example:'#FF0000' or 'red'\n*/\n  @Input('falling-color') fallingcolor: string;\n\n  /*\nProperties\nname : rising-color\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : The fill color of rising candles, as an HTML color string.Example:'#0f9d58' or 'green'\n*/\n  @Input('rising-color') risingcolor: string;\n\n  hasLoaded: boolean;\n\n  @ContentChildren(ChartAreaComponent) chartAreaComp: QueryList<ChartAreaComponent>;\n\n  @ContentChildren(ChartTitleComponent) chartTitleComp: QueryList<ChartTitleComponent>;\n\n  @ContentChildren(HorizontalAxisComponent) horizontalComp: QueryList<HorizontalAxisComponent>;\n\n  horizontalArray: HorizontalAxisComponent[];\n\n  horizontalComponent: HorizontalAxisComponent;\n\n  @ContentChildren(VerticalAxisComponent) verticalComp: QueryList<VerticalAxisComponent>;\n\n  verticalArray: HorizontalAxisComponent[];\n\n  verticalComponent: HorizontalAxisComponent;\n\n  chartAreaArray: ChartAreaComponent[];\n\n  chartAreaComponent: ChartAreaComponent;\n\n  chartTitleArray: ChartTitleComponent[];\n\n  chartTitleComponent: ChartTitleComponent;\n\n  @ViewChild('candlestickwaterfall') private candlestickwaterfall: ElementRef;\n\n  constructor(private loader: ChartLoaderService) {\n    this.width = '100%';\n  }\n\n  drawChart() {\n    if (this.showChart) {\n      this.candlestickData = google.visualization.arrayToDataTable(this._data, true);\n      this.options = {\n        title: this.chartTitleComponent ? this.chartTitleComponent.title : null,\n        titleTextStyle: this.chartTitleComponent ? this.chartTitleTextStyle() : null,\n        backgroundcolor: this.backgroundcolor,\n        legend: 'none',\n        chartArea: this.chartAreaComponent ? this.chartLegendStyle() : null,\n        vAxis: this.verticalComponent ? this.chartVerticalComponent() : null,\n        hAxis: this.horizontalComponent ? this.chartHorizontalComponent() : null,\n        bar: {groupWidth: this.barwidth ? this.barwidth : null},\n         // Remove space between bars.\n        candlestick: this.chartColorStyle(),\n      };\n      if (this.candlestickData) {\n        this.chart = new google.visualization.CandlestickChart(this.candlestickwaterfall.nativeElement);\n        this.hasLoaded = true;\n        this.chart.draw(this.candlestickData, this.options);\n        google.visualization.events.addListener(this.chart, 'click', this.click);\n      }\n\n    }\n\n  }\n  chartTitleTextStyle() {\n    return{\n      color: this.chartTitleComponent.color ? this.chartTitleComponent.color : null,\n      fontName: this.chartTitleComponent.fontname ? this.chartTitleComponent.fontname : null,\n      fontsize: this.chartTitleComponent.fontsize ? this.chartTitleComponent.fontsize : null,\n      bold: this.chartTitleComponent.bold ? this.chartTitleComponent.bold : null,\n      italic: this.chartTitleComponent.italic ? this.chartTitleComponent.italic : null,\n    };\n  }\n  chartLegendStyle() {\n    return{\n      backgroundcolor: this.chartAreaComponent.chartbackgroundcolor ? this.chartAreaComponent.chartbackgroundcolor : null,\n      left: this.chartAreaComponent.leftposition ? this.chartAreaComponent.leftposition : null,\n      top: this.chartAreaComponent.topposition ? this.chartAreaComponent.topposition : null,\n      height: this.chartAreaComponent.chartheight ? this.chartAreaComponent.chartheight : null,\n      width: this.chartAreaComponent.chartwidth ? this.chartAreaComponent.chartwidth : null,\n    };\n  }\n  chartVerticalComponent() {\n    return{\n      title: this.verticalComponent.title ? this.verticalComponent.title : null,\n          titleTextStyle: {color: this.verticalComponent.titlecolor ? this.verticalComponent.titlecolor : null},\n    };\n  }\nchartHorizontalComponent() {\n  return{\n    title: this.horizontalComponent.title ? this.horizontalComponent.title : null,\n    titleTextStyle: {color: this.horizontalComponent.titlecolor ? this.horizontalComponent.titlecolor : null},\n  };\n}\nchartColorStyle() {\n  return{\n    fallingColor: this.fallingcolor ? {strokeWidth: 0, fill: this.fallingcolor ? this.fallingcolor : null} : null, // red\n    risingColor: this.risingcolor ? {strokeWidth: 0, fill: this.risingcolor ? this.risingcolor : null} : null,  // green\n\n  };\n}\n  click(e: any) {\n\n  }\n\n  // after content init for inner directive is run\n  ngAfterContentInit(): void {\n    this.chartAreaArray = this.chartAreaComp.toArray();\n    this.horizontalArray = this.horizontalComp.toArray();\n    this.verticalArray = this.verticalComp.toArray();\n    this.chartTitleArray = this.chartTitleComp.toArray();\n\n    // take first component\n    if (this.chartTitleArray.length === 1) {\n      this.chartTitleComponent = this.chartTitleArray.pop();\n    }\n    if (this.chartAreaArray.length === 1) {\n      this.chartAreaComponent = this.chartAreaArray.pop();\n    }\n    if (this.horizontalArray.length === 1) {\n      this.horizontalComponent = this.horizontalArray.pop();\n    }\n    if (this.verticalArray.length === 1) {\n      this.verticalComponent = this.verticalArray.pop();\n    }\n  }\n\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('CandlestickChart').subscribe((value) => console.log(), (errror) => console.error(errror), () => {\n      this.drawChart();\n    });\n  }\n\n  onResize(event: any) {\n    this.drawChart();\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n/*\nComponent Name : Amexio column chart\nComponent Selector : <amexio-chart-column>\nComponent Description : A column chart is a vertical bar chart rendered in the browser using SVG.\n*/\n\nimport {AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit,  QueryList, ViewChild} from '@angular/core';\nimport {ChartAreaComponent} from '../chartarea/chart.area.component';\nimport {ChartLegendComponent} from '../chartlegend/chart.legend.component';\nimport {ChartTitleComponent} from '../charttitle/chart.title.component';\n\nimport {ChartLoaderService} from '../chart.loader.service';\n\ndeclare var google: any;\n@Component({\n  selector: 'amexio-chart-column', template: `\n    <div  *ngIf=\"showChart\" #columnchart\n         [style.width]=\"width\"\n         [style.height]=\"height\"\n         (window:resize)=\"onResize($event)\">\n      <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n      </div>\n    </div>\n  `, styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n\n  .lmask.fixed {\n    position: fixed;\n  }\n\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  ` ],\n})\n\nexport class ColumnChartComponent implements AfterContentInit, OnInit {\n\n  private options: any;\n  private columnData: any;\n  private chart: any;\n\n  id: any;\n /*\nProperties\nname : width\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Width of chart\n*/\n@Input() width: string;\n\n /*\nProperties\nname : height\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : height of chart\n*/\n@Input() height: string;\n\n  showChart: boolean;\n  _data: any;\n\n  get data(): any {\n    return this._data;\n  }\n\n /*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : For the use of local data\n*/\n@Input('data')\n  set data(data: any) {\n    if (data) {\n      this._data = data;\n      this.showChart = true;\n    } else {\n      this.showChart = false;\n    }\n  }\n\n// showing stack chart\n\n /*\nProperties\nname : stacked\ndatatype : boolean\nversion : 4.0 onwards\ndefault : false\ndescription : If set to true, stacks the elements for all series at each domain value.default value is false\n*/\n@Input() stacked = false;\n\n /*\nProperties\nname : background-color\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets background color\n*/\n@Input('background-color') backgroundcolor: string;\n\n  hasLoaded: boolean;\n\n  @ContentChildren(ChartLegendComponent) chartLegendComp: QueryList<ChartLegendComponent>;\n\n  @ContentChildren(ChartTitleComponent) chartTitleComp: QueryList<ChartTitleComponent>;\n\n  @ContentChildren(ChartAreaComponent) chartAreaComp: QueryList<ChartAreaComponent>;\n\n  chartAreaArray: ChartAreaComponent[];\n\n  chartAreaComponent: ChartAreaComponent;\n\n  chartLegendArray: ChartLegendComponent[];\n\n  chartLengendComponent: ChartLegendComponent;\n\n  chartTitleArray: ChartTitleComponent[];\n\n  chartTitleComponent: ChartTitleComponent;\n\n  @ViewChild('columnchart') private columnchart: ElementRef;\n\n  constructor(private loader: ChartLoaderService) {\n    this.width = '100%';\n  }\n\n  drawChart() {\n    if (this.showChart) {\n      this.columnData = this.createTable(this._data);\n      this.options = {\n        title: this.chartTitleComponent ? this.chartTitleComponent.title : null,\n        titleTextStyle: this.chartTitleComponent ? this.chartTitleTextStyle() : null,\n        isStacked: this.stacked,\n        backgroundcolor: this.backgroundcolor,\n        legend: this.chartLengendComponent ? this.chartLegendStyle() : 'none',\n        chartArea: this.chartAreaComponent ? this.chartBackGroundColor() : null,\n      };\n      if (this.columnData) {\n        this.chart = new google.visualization.ColumnChart(this.columnchart.nativeElement);\n        this.hasLoaded = true;\n        this.chart.draw(this.columnData, this.options);\n        google.visualization.events.addListener(this.chart, 'click', this.onClick);\n      }\n    }\n  }\n  chartTitleTextStyle() {\n    return{\n      color: this.chartTitleComponent.color ? this.chartTitleComponent.color : null,\n      fontName: this.chartTitleComponent.fontname ? this.chartTitleComponent.fontname : null,\n      fontsize: this.chartTitleComponent.fontsize ? this.chartTitleComponent.fontsize : null,\n      bold: this.chartTitleComponent.bold ? this.chartTitleComponent.bold : null,\n      italic: this.chartTitleComponent.italic ? this.chartTitleComponent.italic : null,\n    };\n  }\n  chartLegendStyle() {\n    return{\n      position: this.chartLengendComponent.position ? this.chartLengendComponent.position : null,\n           // this work only in chart position is top\n          maxLines: this.chartLengendComponent.maxlines ? this.chartLengendComponent.maxlines : null,\n          textStyle: {\n            color: this.chartLengendComponent.color ? this.chartLengendComponent.color : null,\n            fontsize: this.chartLengendComponent.fontsize ? this.chartLengendComponent.fontsize : null,\n            fontName: this.chartLengendComponent.fontname ? this.chartLengendComponent.fontname : null,\n            bold: this.chartLengendComponent.bold ? this.chartLengendComponent.bold : null,\n            alignment: this.chartLengendComponent.alignment ? this.chartLengendComponent.alignment : null,\n          },\n        };\n    }\n  chartBackGroundColor() {\n    return{\n      backgroundcolor: this.chartAreaComponent.chartbackgroundcolor ? this.chartAreaComponent.chartbackgroundcolor : null,\n          left: this.chartAreaComponent.leftposition ? this.chartAreaComponent.leftposition : null,\n          top: this.chartAreaComponent.topposition ? this.chartAreaComponent.topposition : null,\n          height: this.chartAreaComponent.chartheight ? this.chartAreaComponent.chartheight : null,\n          width: this.chartAreaComponent.chartwidth ? this.chartAreaComponent.chartwidth : null,\n    };\n  }\n\n  onClick(e: any) {\n\n  }\n\n  // after content init for inner directive is run\n  ngAfterContentInit(): void {\n    this.chartLegendArray = this.chartLegendComp.toArray();\n    this.chartTitleArray = this.chartTitleComp.toArray();\n    this.chartAreaArray = this.chartAreaComp.toArray();\n    // take first component\n    if (this.chartLegendArray.length === 1) {\n      this.chartLengendComponent = this.chartLegendArray.pop();\n    }\n    if (this.chartTitleArray.length === 1) {\n      this.chartTitleComponent = this.chartTitleArray.pop();\n    }\n    if (this.chartAreaArray.length === 1) {\n      this.chartAreaComponent = this.chartAreaArray.pop();\n    }\n  }\n\n  // This method create data table structure of array and return in required chart data\n  createTable(array: any[]): any {\n    // create Duplicate Array for data arrangement\n    const dupArray = array.slice();\n    const data = new google.visualization.DataTable();\n    const labelObject = dupArray[0];\n    // remove first object of array\n    dupArray.shift();\n\n    labelObject.forEach((datatypeObject: any) => {\n      data.addColumn(datatypeObject.datatype, datatypeObject.label);\n    });\n    const finalArray: any[] = [];\n    dupArray.forEach((rowObject) => {\n      finalArray.push(rowObject);\n    });\n    data.addRows(finalArray);\n    return data;\n  }\n\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('ColumnChart').subscribe((value) => console.log(), (errror) => console.error(errror), () => {\n      this.drawChart();\n    });\n  }\n\n  onResize(event: any) {\n    this.drawChart();\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n/*\nComponent Name : Amexio combo chart\nComponent Selector : <amexio-chart-combo>\nComponent Description : A chart that lets you render each series as a different marker type from the following list: line,bars\n*/\nimport {AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild} from '@angular/core';\nimport {ChartAreaComponent} from '../chartarea/chart.area.component';\nimport {ChartLegendComponent} from '../chartlegend/chart.legend.component';\nimport {ChartTitleComponent} from '../charttitle/chart.title.component';\nimport {HorizontalAxisComponent} from '../horizontalaxis/chart.horizontalaxis.component';\nimport {VerticalAxisComponent} from '../verticalaxis/chart.verticalaxis.component';\n\nimport {ChartLoaderService} from '../chart.loader.service';\n\ndeclare var google: any;\n@Component({\n  selector: 'amexio-chart-combo', template: `\n    <div *ngIf=\"showChart\" #combochart\n         [style.width]=\"width\"\n         [style.height]=\"height\" (window:resize)=\"onResize($event)\">\n      <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n      </div>\n    </div>\n  `, styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n\n  .lmask.fixed {\n    position: fixed;\n  }\n\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  ` ],\n})\n\nexport class ComboChartComponent implements AfterContentInit, OnInit {\n\n  private options: any;\n  private comboData: any;\n  private chart: any;\n\n  id: any;\n  /*\nProperties\nname : width\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Width of chart\n*/\n@Input() width: string;\n  /*\nProperties\nname : height\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : height of chart\n*/\n@Input() height: string;\n\n  showChart: boolean;\n  _data: any;\n\n  get data(): any {\n    return this._data;\n  }\n\n/*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : For the use of local data\n*/\n@Input('data')\n  set data(data: any) {\n    if (data) {\n      this._data = data;\n      this.showChart = true;\n    } else {\n      this.showChart = false;\n    }\n  }\n\n/*\nProperties\nname : background-color\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets background color to chart\n*/\n@Input('background-color') backgroundcolor: string;\n\n  hasLoaded: boolean;\n\n  @ContentChildren(ChartLegendComponent) chartLegendComp: QueryList<ChartLegendComponent>;\n\n  @ContentChildren(ChartTitleComponent) chartTitleComp: QueryList<ChartTitleComponent>;\n\n  @ContentChildren(ChartAreaComponent) chartAreaComp: QueryList<ChartAreaComponent>;\n\n  @ContentChildren(HorizontalAxisComponent) horizontalComp: QueryList<HorizontalAxisComponent>;\n\n  horizontalArray: HorizontalAxisComponent[];\n\n  horizontalComponent: HorizontalAxisComponent;\n\n  @ContentChildren(VerticalAxisComponent) verticalComp: QueryList<VerticalAxisComponent>;\n\n  verticalArray: HorizontalAxisComponent[];\n\n  verticalComponent: HorizontalAxisComponent;\n\n  chartAreaArray: ChartAreaComponent[];\n\n  chartAreaComponent: ChartAreaComponent;\n\n  chartLegendArray: ChartLegendComponent[];\n\n  chartLengendComponent: ChartLegendComponent;\n\n  chartTitleArray: ChartTitleComponent[];\n\n  chartTitleComponent: ChartTitleComponent;\n\n  @ViewChild('combochart') private combochart: ElementRef;\n\n  constructor(private loader: ChartLoaderService) {\n    this.width = '100%';\n  }\n\n  drawChart() {\n    if (this.showChart) {\n      this.comboData = google.visualization.arrayToDataTable(this._data);\n      this.options = {\n        title: this.chartTitleComponent ? this.chartTitleComponent.title : null,\n        titleTextStyle: this.chartTitleComponent ? this.chartTitleStyle() : null,\n        backgroundcolor: this.backgroundcolor,\n        legend: this.chartLengendComponent ? this.chartLegendStyle() : 'none',\n        chartArea: this.chartAreaComponent ? this.chartBackground() : null,\n        vAxis: this.verticalComponent ? this.chartVerticalStyle() : null,\n        hAxis: this.horizontalComponent ? this.chartHorizontalStyle() : null,\n        seriesType: 'bars',\n        series: {4: {type: 'line'}},\n      };\n      if (this.comboData) {\n        this.chart = new google.visualization.ComboChart(this.combochart.nativeElement);\n        this.hasLoaded = true;\n        this.chart.draw(this.comboData, this.options);\n        google.visualization.events.addListener(this.chart, 'click', this.click);\n      }\n\n    }\n\n  }\n  click(e: any) {\n\n  }\n  chartTitleStyle() {\n    return{\n      color: this.chartTitleComponent.color ? this.chartTitleComponent.color : null,\n      fontName: this.chartTitleComponent.fontname ? this.chartTitleComponent.fontname : null,\n      fontsize: this.chartTitleComponent.fontsize ? this.chartTitleComponent.fontsize : null,\n      bold: this.chartTitleComponent.bold ? this.chartTitleComponent.bold : null,\n      italic: this.chartTitleComponent.italic ? this.chartTitleComponent.italic : null,\n    };\n  }\n  chartLegendStyle() {\n    return{\n      position: this.chartLengendComponent.position ? this.chartLengendComponent.position : null,\n      // this work only in chart position is top\n      maxLines: this.chartLengendComponent.maxlines ? this.chartLengendComponent.maxlines : null, textStyle: {\n        color: this.chartLengendComponent.color ? this.chartLengendComponent.color : null,\n        fontsize: this.chartLengendComponent.fontsize ? this.chartLengendComponent.fontsize : null,\n        fontName: this.chartLengendComponent.fontname ? this.chartLengendComponent.fontname : null,\n        bold: this.chartLengendComponent.bold ? this.chartLengendComponent.bold : null,\n        alignment: this.chartLengendComponent.alignment ? this.chartLengendComponent.alignment : null,\n      },\n    };\n  }\n  chartBackground() {\n    return{\n          backgroundcolor: this.chartAreaComponent.chartbackgroundcolor ? this.chartAreaComponent.chartbackgroundcolor : null,\n          left: this.chartAreaComponent.leftposition ? this.chartAreaComponent.leftposition : null,\n          top: this.chartAreaComponent.topposition ? this.chartAreaComponent.topposition : null,\n          height: this.chartAreaComponent.chartheight ? this.chartAreaComponent.chartheight : null,\n          width: this.chartAreaComponent.chartwidth ? this.chartAreaComponent.chartwidth : null,\n    };\n  }\n  chartVerticalStyle() {\n    return{\n      title: this.verticalComponent.title ? this.verticalComponent.title : null,\n      titleTextStyle: {color: this.verticalComponent.titlecolor ? this.verticalComponent.titlecolor : null},\n\n    };\n  }\n  chartHorizontalStyle() {\n    return{\n      title: this.horizontalComponent.title ? this.horizontalComponent.title : null,\n      titleTextStyle: {color: this.horizontalComponent.titlecolor ? this.horizontalComponent.titlecolor : null},\n\n    };\n  }\n\n  // after content init for inner directive is run\n  ngAfterContentInit(): void {\n    this.chartLegendArray = this.chartLegendComp.toArray();\n    this.chartTitleArray = this.chartTitleComp.toArray();\n    this.chartAreaArray = this.chartAreaComp.toArray();\n    this.horizontalArray = this.horizontalComp.toArray();\n    this.verticalArray = this.verticalComp.toArray();\n    // take first component\n    if (this.chartLegendArray.length === 1) {\n      this.chartLengendComponent = this.chartLegendArray.pop();\n    }\n    if (this.chartTitleArray.length === 1) {\n      this.chartTitleComponent = this.chartTitleArray.pop();\n    }\n    if (this.chartAreaArray.length === 1) {\n      this.chartAreaComponent = this.chartAreaArray.pop();\n    }\n    if (this.horizontalArray.length === 1) {\n      this.horizontalComponent = this.horizontalArray.pop();\n    }\n    if (this.verticalArray.length === 1) {\n      this.verticalComponent = this.verticalArray.pop();\n    }\n  }\n\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('ComboChart').subscribe((value) => console.log(), (errror) => console.error(errror), () => {\n      this.drawChart();\n    });\n  }\n\n  onResize(event: any) {\n    this.drawChart();\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n/*\nComponent Name : Amexio donut chart\nComponent Selector : <amexio-chart-donut>\nComponent Description : An donut chart that is rendered within the browser using SVG.\nA donut chart is a pie chart with a hole in the center.\n*/\nimport { AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild } from '@angular/core';\nimport { ChartAreaComponent } from '../chartarea/chart.area.component';\nimport { ChartLegendComponent } from '../chartlegend/chart.legend.component';\nimport { ChartTitleComponent } from '../charttitle/chart.title.component';\n\nimport { ChartLoaderService } from '../chart.loader.service';\n\ndeclare var google: any;\n@Component({\n  selector: 'amexio-chart-donut', template: `\n    <div *ngIf=\"showChart\" #donutchart\n         [style.width]=\"width\"\n         [style.height]=\"height\"\n         (window:resize)=\"onResize($event)\">\n      <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n      </div>\n    </div>\n  `, styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n\n  .lmask.fixed {\n    position: fixed;\n  }\n\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  ` ],\n})\n\nexport class DonutChartComponent implements AfterContentInit, OnInit {\n\n  private options: any;\n  private donutData: any;\n  private chart: any;\n\n  id: any;\n\n  /*\n  Properties\n  name : width\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description : width of chart\n  */\n  @Input() width: string;\n\n  /*\n  Properties\n  name : height\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description : height of chart\n  */\n  @Input() height: string;\n\n  showChart: boolean;\n  _data: any;\n\n  get data(): any {\n    return this._data;\n  }\n\n  /*\n  Properties\n  name : data\n  datatype : any\n  version : 4.0 onwards\n  default : none\n  description : For the use of local data\n  */\n  @Input('data')\n  set data(data: any) {\n    if (data) {\n      this._data = data;\n      this.showChart = true;\n    } else {\n      this.showChart = false;\n    }\n  }\n\n  /*\n  Properties\n  name : background-color\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description : sets background-color to chart\n  */\n  @Input('background-color') backgroundcolor: string;\n\n  hasLoaded: boolean;\n\n  @ContentChildren(ChartLegendComponent) chartLegendComp: QueryList<ChartLegendComponent>;\n\n  @ContentChildren(ChartTitleComponent) chartTitleComp: QueryList<ChartTitleComponent>;\n\n  @ContentChildren(ChartAreaComponent) chartAreaComp: QueryList<ChartAreaComponent>;\n\n  chartAreaArray: ChartAreaComponent[];\n\n  chartAreaComponent: ChartAreaComponent;\n\n  chartLegendArray: ChartLegendComponent[];\n\n  chartLengendComponent: ChartLegendComponent;\n\n  chartTitleArray: ChartTitleComponent[];\n\n  chartTitleComponent: ChartTitleComponent;\n\n  @ViewChild('donutchart') private donutchart: ElementRef;\n\n  constructor(private loader: ChartLoaderService) {\n    this.width = '100%';\n  }\n\n  drawChart() {\n    if (this.showChart) {\n      this.donutData = google.visualization.arrayToDataTable(this._data);\n      this.options = {\n        title: this.chartTitleComponent ? this.chartTitleComponent.title : null,\n        titleTextStyle: this.chartTitleComponent ? this.chariTitleTextStyle() : null,\n        pieHole: 0.4,\n        backgroundcolor: this.backgroundcolor,\n        legend: this.chartLengendComponent ? this.chartLegendStyle() : 'none',\n        chartArea: this.chartAreaComponent ? this.chartBackgroundColor() : null,\n      };\n      if (this.donutData) {\n        this.chart = new google.visualization.PieChart(this.donutchart.nativeElement);\n        this.hasLoaded = true;\n        this.chart.draw(this.donutData, this.options);\n        google.visualization.events.addListener(this.chart, 'click', this.onClick);\n      }\n\n    }\n\n  }\n  chariTitleTextStyle() {\n    return {\n      color: this.chartTitleComponent.color ? this.chartTitleComponent.color : null,\n      fontName: this.chartTitleComponent.fontname ? this.chartTitleComponent.fontname : null,\n      fontsize: this.chartTitleComponent.fontsize ? this.chartTitleComponent.fontsize : null,\n      bold: this.chartTitleComponent.bold ? this.chartTitleComponent.bold : null,\n      italic: this.chartTitleComponent.italic ? this.chartTitleComponent.italic : null,\n    };\n  }\n  chartLegendStyle() {\n    return {\n      position: this.chartLengendComponent.position ? this.chartLengendComponent.position : null,\n      // this work only in chart position is top\n      maxLines: this.chartLengendComponent.maxlines ? this.chartLengendComponent.maxlines : null, textStyle: {\n        color: this.chartLengendComponent.color ? this.chartLengendComponent.color : null,\n        fontsize: this.chartLengendComponent.fontsize ? this.chartLengendComponent.fontsize : null,\n        fontName: this.chartLengendComponent.fontname ? this.chartLengendComponent.fontname : null,\n        bold: this.chartLengendComponent.bold ? this.chartLengendComponent.bold : null,\n        alignment: this.chartLengendComponent.alignment ? this.chartLengendComponent.alignment : null,\n      },\n    };\n  }\n  chartBackgroundColor() {\n    return{ backgroundcolor: this.chartAreaComponent.chartbackgroundcolor ? this.chartAreaComponent.chartbackgroundcolor : null,\n      left: this.chartAreaComponent.leftposition ? this.chartAreaComponent.leftposition : null,\n      top: this.chartAreaComponent.topposition ? this.chartAreaComponent.topposition : null,\n      height: this.chartAreaComponent.chartheight ? this.chartAreaComponent.chartheight : null,\n      width: this.chartAreaComponent.chartwidth ? this.chartAreaComponent.chartwidth : null,\n    };\n  }\n\n  onClick(e: any) {\n\n  }\n\n  // after content init for inner directive is run\n  ngAfterContentInit(): void {\n    this.chartLegendArray = this.chartLegendComp.toArray();\n    this.chartTitleArray = this.chartTitleComp.toArray();\n    this.chartAreaArray = this.chartAreaComp.toArray();\n    // take first component\n    if (this.chartLegendArray.length === 1) {\n      this.chartLengendComponent = this.chartLegendArray.pop();\n    }\n    if (this.chartTitleArray.length === 1) {\n      this.chartTitleComponent = this.chartTitleArray.pop();\n    }\n    if (this.chartAreaArray.length === 1) {\n      this.chartAreaComponent = this.chartAreaArray.pop();\n    }\n  }\n\n  ngOnInit() {\n    this.hasLoaded = false;\n    this.loader.loadCharts('PieChart').subscribe((value) => console.log(), (errror) => console.error(errror), () => {\n      this.drawChart();\n    });\n  }\n\n  onResize(event: any) {\n    this.drawChart();\n  }\n}\n","/*\n * Copyright 2017-2018 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n /*\nComponent Name : Amexio Gantt chart\nComponent Selector : <amexio-chart-gantt>\nComponent Description : A timeline is a chart that depicts how a set of resources are used over time.\n*/\n\nimport {Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild} from '@angular/core';\nimport {ChartLoaderService} from '../chart.loader.service';\ndeclare var google: any;\n@Component({\n  selector: 'amexio-chart-gantt', template: `\n    <div *ngIf='showChart' #gantt\n         [style.width]='width'\n    >\n      <div *ngIf='!hasLoaded' class='lmask'>\n      </div>\n    </div>\n  `, styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n\n  .lmask.fixed {\n    position: fixed;\n  }\n\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  `],\n})\nexport class GanttChartComponent implements OnInit {\n\n  private chart: any;\n\n  id: any;\n\n/*\nProperties\nname : width\ndatatype : string\nversion : 4.3 onwards\ndefault : none\ndescription : width of chart\n*/\n@Input() width: string;\n\n  showChart: boolean;\n  _data: any;\n\n  get data(): any {\n    return this._data;\n  }\n\n/*\nProperties\nname : data\ndatatype : any\nversion : 4.3 onwards\ndefault : none\ndescription : For the use of local data\n*/\n@Input('data')\n  set data(data: any) {\n    if (data) {\n      this._data = data;\n      this.showChart = true;\n    } else {\n      this.showChart = false;\n    }\n  }\n\n  /*\nProperties\nname : critical-path-enabled\ndatatype : boolean\nversion : 4.3 onwards\ndefault : false\ndescription : If you set the criticalPathEnabled option to true, it show critical path line\n*/\n@Input('critical-path-enabled') criticalPathEnabled = false;\n\n  /*\nProperties\nname : critical-path-enabled\ndatatype : boolean\nversion : 4.3 onwards\ndefault : false\ndescription : inner-grid-track-color set inner grid color\n*/\n@Input('inner-grid-track-color') innerGridTrackColor: string;\n\n  /*\nProperties\nname : inner-grid-dark-track-color\ndatatype : string\nversion : 4.3 onwards\ndefault : false\ndescription : inner-grid-dark-track-color set inner grid dark color\n*/\n@Input('inner-grid-dark-track-color') innerGridDarkTrack: string;\n\n  hasLoaded: boolean;\n\n  private options: any;\n\n  @ViewChild('gantt') private ganttchart: ElementRef;\n\n  constructor(private loader: ChartLoaderService) {\n    this.width = '100%';\n  }\n\n  drawChart() {\n    if (this.data && this.showChart) {\n      this.hasLoaded = true;\n      this.options = {gantt: {criticalPathEnabled: this.criticalPathEnabled,\n          criticalPathStyle: {stroke: '#e64a19',\n            strokeWidth: 5}},\n        innerGridTrack: {fill: this.innerGridTrackColor ? this.innerGridTrackColor : ''},\n        innerGridDarkTrack: {fill: this.innerGridDarkTrack ? this.innerGridDarkTrack : ''},\n      };\n      if ( google && google.visualization) {\n        this.chart = new google.visualization.Gantt(this.ganttchart.nativeElement);\n        this.chart.draw(this.createTable(this._data), this.options);\n        google.visualization.events.addListener(this.chart, 'click', this.onClick);\n\n      } else {\n        this.hasLoaded = false;\n      }\n    }\n  }\n\n  onClick(e: any) {\n  }\n\n createTable(array: any[]): any {\n    const copyOfArray = array.slice();\n    const data = new google.visualization.DataTable();\n    const labelObject = copyOfArray[0];\n    copyOfArray.shift();\n    labelObject.forEach((datatypeObject: any) => {\n      data.addColumn(datatypeObject.datatype, datatypeObject.label);\n    });\n    const newArray: any[] = [];\n    copyOfArray.forEach((rowObject: any) => {\n      newArray.push(rowObject);\n    });\n    data.addRows(newArray);\n    return data;\n  }\n\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('Gantt').subscribe((value) => console.log(), (errror) => console.error(errror), () => {\n      this.drawChart();\n    });\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n/*\nComponent Name : Amexio histogram chart\nComponent Selector : <amexio-chart-histogram>\nComponent Description : A histogram is a chart that groups numeric data into bins, displaying the bins as segmented columns.\n*/\nimport {AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild} from '@angular/core';\nimport {ChartAreaComponent} from '../chartarea/chart.area.component';\nimport {ChartLegendComponent} from '../chartlegend/chart.legend.component';\nimport {ChartTitleComponent} from '../charttitle/chart.title.component';\n\nimport {ChartLoaderService} from '../chart.loader.service';\n\ndeclare var google: any;\n\n@Component({\n  selector: 'amexio-chart-histogram',\n  template: `\n      <div *ngIf=\"showChart\" #histogramchart\n           [style.width]=\"width\"\n           [style.height]=\"height\"\n      >\n        <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n        </div>\n      </div>\n  `,\n  styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  ` ],\n})\n\nexport class HistogramChartComponent implements AfterContentInit, OnInit {\n\n  private options: any;\n  private histogramData: any;\n  private chart: any;\n\n  hasLoaded: boolean;\n\n  id: any;\n\n/*\nProperties\nname : width\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : width of chart\n*/\n@Input() width: string;\n\n/*\nProperties\nname : height\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : height of chart\n*/\n@Input() height: string;\n\n  showChart: boolean;\n  _data: any;\n\n  get data(): any {\n    return this._data;\n  }\n\n/*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : For the use of local data\n*/\n@Input('data')\n  set data(data: any) {\n    if (data) {\n      this._data = data;\n      this.showChart = true;\n    } else {\n      this.showChart = false;\n    }\n  }\n\n/*\nProperties\nname : background-color\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets background color\n*/\n@Input('background-color') backgroundcolor: string;\n\n  @ContentChildren(ChartLegendComponent) chartLegendComp: QueryList<ChartLegendComponent>;\n\n  @ContentChildren(ChartTitleComponent) chartTitleComp: QueryList<ChartTitleComponent>;\n\n  @ContentChildren(ChartAreaComponent)  chartAreaComp: QueryList<ChartAreaComponent>;\n\n  chartAreaArray: ChartAreaComponent[];\n\n  chartAreaComponent: ChartAreaComponent;\n\n  chartLegendArray: ChartLegendComponent[];\n\n  chartLengendComponent: ChartLegendComponent;\n\n  chartTitleArray: ChartTitleComponent[];\n\n  chartTitleComponent: ChartTitleComponent;\n\n  @ViewChild('histogramchart') private histogramchart: ElementRef;\n\n  constructor(private loader: ChartLoaderService) {\n    this.width = '100%';\n  }\n\n  drawChart() {\n    if (this.showChart) {\n      this.histogramData = google.visualization.arrayToDataTable(this._data);\n      this.options = {\n        title: this.chartTitleComponent ? this.chartTitleComponent.title : null,\n        titleTextStyle: this.chartTitleComponent ? this. charttitleTextStyle() : null,\n        backgroundcolor: this.backgroundcolor,\n        legend: this.chartLengendComponent ? this.chartegendStyle() : 'none',\n        chartArea: this.chartAreaComponent ? this.chartBackground() : null,\n      };\n      if (this.histogramData) {\n        this.chart = new google.visualization.Histogram(this.histogramchart.nativeElement);\n        this.hasLoaded = true;\n        this.chart.draw(this.histogramData, this.options);\n        google.visualization.events.addListener(this.chart, 'click', this.onClick);\n      }\n\n    }\n\n  }\n\n  onClick(e: any) {\n\n  }\n  charttitleTextStyle() {\n    return{\n      color: this.chartTitleComponent.color ? this.chartTitleComponent.color : null,\n      fontName: this.chartTitleComponent.fontname ? this.chartTitleComponent.fontname : null,\n      fontsize: this.chartTitleComponent.fontsize ? this.chartTitleComponent.fontsize : null,\n      bold: this.chartTitleComponent.bold ? this.chartTitleComponent.bold : null,\n      italic: this.chartTitleComponent.italic ? this.chartTitleComponent.italic : null,\n    };\n  }\n  chartegendStyle() {\n    return{\n      position: this.chartLengendComponent.position ? this.chartLengendComponent.position : null,\n      // this work only in chart position is top\n      maxLines: this.chartLengendComponent.maxlines ? this.chartLengendComponent.maxlines : null,\n      textStyle: {\n        color: this.chartLengendComponent.color ? this.chartLengendComponent.color : null,\n        fontsize: this.chartLengendComponent.fontsize ? this.chartLengendComponent.fontsize : null,\n        fontName: this.chartLengendComponent.fontname ? this.chartLengendComponent.fontname : null,\n        bold: this.chartLengendComponent.bold ? this.chartLengendComponent.bold : null,\n        alignment: this.chartLengendComponent.alignment ? this.chartLengendComponent.alignment : null,\n      },\n    };\n  }\n  chartBackground() {\n    return{\n      backgroundcolor: this.chartAreaComponent.chartbackgroundcolor ? this.chartAreaComponent.chartbackgroundcolor : null,\n      left: this.chartAreaComponent.leftposition ? this.chartAreaComponent.leftposition : null,\n      top: this.chartAreaComponent.topposition ? this.chartAreaComponent.topposition : null,\n      height: this.chartAreaComponent.chartheight ? this.chartAreaComponent.chartheight : null,\n      width: this.chartAreaComponent.chartwidth ? this.chartAreaComponent.chartwidth : null,\n    };\n  }\n  // after content init for inner directive is run\n  ngAfterContentInit(): void {\n    this.chartLegendArray = this.chartLegendComp.toArray();\n    this.chartTitleArray = this.chartTitleComp.toArray();\n    this.chartAreaArray = this.chartAreaComp.toArray();\n    // take first component\n    if (this.chartLegendArray.length === 1) {\n      this.chartLengendComponent = this.chartLegendArray.pop();\n    }\n    if (this.chartTitleArray.length === 1) {\n      this.chartTitleComponent = this.chartTitleArray.pop();\n    }\n    if (this.chartAreaArray.length === 1) {\n      this.chartAreaComponent = this.chartAreaArray.pop();\n    }\n  }\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('Histogram').subscribe(\n      (value) => console.log(),\n      (errror) => console.error(errror),\n      () => {\n        this.drawChart();\n      },\n    );\n   }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n/*\nComponent Name : Amexio line chart\nComponent Selector : <amexio-chart-line>\nComponent Description : A line chart that is rendered within the browser using SVG.\n*/\nimport {AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild} from '@angular/core';\nimport {ChartAreaComponent} from '../chartarea/chart.area.component';\nimport {ChartLegendComponent} from '../chartlegend/chart.legend.component';\nimport {ChartTitleComponent} from '../charttitle/chart.title.component';\n\nimport {ChartLoaderService} from '../chart.loader.service';\n\ndeclare var google: any;\n@Component({\n  selector: 'amexio-chart-line', template: `\n    <div *ngIf=\"showChart\" #linechart\n         [style.width]=\"width\"\n         [style.height]=\"height\"\n         (window:resize)=\"onResize($event)\">\n      <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n      </div>\n    </div>\n\n  `, styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n\n  .lmask.fixed {\n    position: fixed;\n  }\n\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  ` ],\n})\n\nexport class LineChartComponent implements AfterContentInit, OnInit {\n\n  private options: any;\n  private lineData: any;\n  private chart: any;\n\n  id: any;\n\n/*\nProperties\nname : width\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : width of chart\n*/\n@Input() width: string;\n\n/*\nProperties\nname : height\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : height of chart\n*/\n@Input() height: string;\n\n  showChart: boolean;\n  _data: any;\n\n  get data(): any{\n    return this._data;\n  }\n\n/*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : For the use of local data\n*/\n@Input('data')\n  set data(data: any) {\n    if (data) {\n      this._data = data;\n      this.showChart = true;\n    } else {\n      this.showChart = false;\n    }\n  }\n\n/*\nProperties\nname : background-color\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets background-color of chart\n*/\n@Input('background-color') backgroundcolor: string;\n\n  hasLoaded: boolean;\n\n  @ContentChildren(ChartLegendComponent) chartLegendComp: QueryList<ChartLegendComponent>;\n\n  @ContentChildren(ChartTitleComponent) chartTitleComp: QueryList<ChartTitleComponent>;\n\n  @ContentChildren(ChartAreaComponent) chartAreaComp: QueryList<ChartAreaComponent>;\n\n  chartAreaArray: ChartAreaComponent[];\n\n  chartAreaComponent: ChartAreaComponent;\n\n  chartLegendArray: ChartLegendComponent[];\n\n  chartLengendComponent: ChartLegendComponent;\n\n  chartTitleArray: ChartTitleComponent[];\n\n  chartTitleComponent: ChartTitleComponent;\n\n  @ViewChild('linechart') private linechart: ElementRef;\n\n  constructor(private loader: ChartLoaderService) {\n    this.width = '100%';\n  }\n\n  drawChart() {\n    if (this.showChart) {\n      this.lineData = this.createTable(this._data);\n      this.options = {\n        title: this.chartTitleComponent ? this.chartTitleComponent.title : null,\n        titleTextStyle: this.chartTitleComponent ? this.chartTitleTextStyle() : null,\n        backgroundcolor: this.backgroundcolor,\n        legend: this.chartLengendComponent ? this.chartLegendStyle() : 'none',\n        chartArea: this.chartAreaComponent ? this.chartBackgroundStyle() : null,\n      };\n      if (this.lineData) {\n        this.chart = new google.visualization.LineChart(this.linechart.nativeElement);\n        this.hasLoaded = true;\n        this.chart.draw(this.lineData, this.options);\n        google.visualization.events.addListener(this.chart, 'click', this.onClick);\n      }\n\n    }\n\n  }\n  chartTitleTextStyle() {\n    return{\n      color: this.chartTitleComponent.color ? this.chartTitleComponent.color : null,\n          fontName: this.chartTitleComponent.fontname ? this.chartTitleComponent.fontname : null,\n          fontsize: this.chartTitleComponent.fontsize ? this.chartTitleComponent.fontsize : null,\n          bold: this.chartTitleComponent.bold ? this.chartTitleComponent.bold : null,\n          italic: this.chartTitleComponent.italic ? this.chartTitleComponent.italic : null,\n    };\n  }\n  chartLegendStyle() {\n    return{\n      position: this.chartLengendComponent.position ? this.chartLengendComponent.position : null,\n      // this work only in chart position is top\n      maxLines: this.chartLengendComponent.maxlines ? this.chartLengendComponent.maxlines : null, textStyle: {\n        color: this.chartLengendComponent.color ? this.chartLengendComponent.color : null,\n        fontsize: this.chartLengendComponent.fontsize ? this.chartLengendComponent.fontsize : null,\n        fontName: this.chartLengendComponent.fontname ? this.chartLengendComponent.fontname : null,\n        bold: this.chartLengendComponent.bold ? this.chartLengendComponent.bold : null,\n        alignment: this.chartLengendComponent.alignment ? this.chartLengendComponent.alignment : null,\n      },\n    };\n  }\n  chartBackgroundStyle() {\n    return{\n      backgroundcolor: this.chartAreaComponent.chartbackgroundcolor ? this.chartAreaComponent.chartbackgroundcolor : null,\n      left: this.chartAreaComponent.leftposition ? this.chartAreaComponent.leftposition : null,\n      top: this.chartAreaComponent.topposition ? this.chartAreaComponent.topposition : null,\n      height: this.chartAreaComponent.chartheight ? this.chartAreaComponent.chartheight : null,\n      width: this.chartAreaComponent.chartwidth ? this.chartAreaComponent.chartwidth : null,\n    };\n  }\n\n  onClick(e: any) {\n\n  }\n\n  // after content init for inner directive is run\n  ngAfterContentInit(): void {\n    this.chartLegendArray = this.chartLegendComp.toArray();\n    this.chartTitleArray = this.chartTitleComp.toArray();\n    this.chartAreaArray = this.chartAreaComp.toArray();\n    // take first component\n    if (this.chartLegendArray.length === 1) {\n      this.chartLengendComponent = this.chartLegendArray.pop();\n    }\n    if (this.chartTitleArray.length === 1) {\n      this.chartTitleComponent = this.chartTitleArray.pop();\n    }\n    if (this.chartAreaArray.length === 1) {\n      this.chartAreaComponent = this.chartAreaArray.pop();\n    }\n  }\n\n// This method create data table structure of array and return in required chart data\ncreateTable(array: any[]): any {\n    // create Duplicate Array for data arrangement\n    const dupArray = array.slice();\n    const data = new google.visualization.DataTable();\n    const labelObject = dupArray[0];\n    // remove first object of array\n    dupArray.shift();\n\n    labelObject.forEach((datatypeObject: any) => {\n      data.addColumn(datatypeObject.datatype, datatypeObject.label);\n    });\n    const finalArray: any[] = [];\n    dupArray.forEach((rowObject: any) => {\n      finalArray.push(rowObject);\n    });\n    data.addRows(finalArray);\n    return data;\n  }\n\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('LineChart').subscribe((value) => console.log(), (error) => console.error(error), () => {\n      this.drawChart();\n    });\n  }\n\n  onResize(event: any) {\n    this.drawChart();\n  }\n\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n/*\nComponent Name : Amexio pie chart\nComponent Selector : <amexio-chart-pie>\nComponent Description : A pie chart that is rendered within the browser using SVG.\n*/\nimport { AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild } from '@angular/core';\nimport { ChartAreaComponent } from '../chartarea/chart.area.component';\nimport { ChartLegendComponent } from '../chartlegend/chart.legend.component';\nimport { ChartTitleComponent } from '../charttitle/chart.title.component';\n\nimport { ChartLoaderService } from '../chart.loader.service';\n\ndeclare var google: any;\n@Component({\n  selector: 'amexio-chart-pie', template: `\n\n        <div *ngIf=\"showChart\" #piechart\n             [style.width]=\"width\"\n             [style.height]=\"height\"\n             (window:resize)=\"onResize($event)\">\n          <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n          </div>\n        </div>\n  `,\n  styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n  .lmask.fixed {\n    position: fixed;\n  }\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  ` ],\n})\nexport class PieChartComponent implements AfterContentInit, OnInit {\n\n  private options: any;\n  private pieData: any;\n  private chart: any;\n\n  id: any;\n\n  /*\n  Properties\n  name : width\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description : width of chart\n  */\n  @Input() width: string;\n\n  /*\n  Properties\n  name : height\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description : height of chart\n  */\n  @Input() height: string;\n\n  hasLoaded: boolean;\n\n  /*\n  Properties\n  name : is3d\n  datatype : boolean\n  version : 4.0 onwards\n  default : false\n  description : If you set the is3d option to true, your pie chart will be drawn as though it has three dimensions\n  */\n  @Input() is3d: false;\n\n  // this input for hole inside pie chart\n\n  /*\n  Properties\n  name : piehole\n  datatype : number\n  version : 4.0 onwards\n  default : none\n  description : sets the pie hole size\n  */\n  @Input() piehole: number;\n\n  showChart: boolean;\n  _data: any;\n\n  get data(): any {\n    return this._data;\n  }\n\n  /*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : sets the pie hole size\n*/\n  @Input('data')\n  set data(data: any) {\n    if (data) {\n      this._data = data;\n      this.showChart = true;\n    } else {\n      this.showChart = false;\n    }\n  }\n\n  // this input for angle rotation start\n  @Input('start-angle') startangle: number;\n\n  @Input('background-color') backgroundcolor: string;\n\n  @ContentChildren(ChartLegendComponent) chartLegendComp: QueryList<ChartLegendComponent>;\n\n  @ContentChildren(ChartTitleComponent) chartTitleComp: QueryList<ChartTitleComponent>;\n\n  @ContentChildren(ChartAreaComponent) chartAreaComp: QueryList<ChartAreaComponent>;\n\n  chartAreaArray: ChartAreaComponent[];\n\n  chartAreaComponent: ChartAreaComponent;\n\n  chartLegendArray: ChartLegendComponent[];\n\n  chartLengendComponent: ChartLegendComponent;\n\n  chartTitleArray: ChartTitleComponent[];\n\n  chartTitleComponent: ChartTitleComponent;\n\n  @ViewChild('piechart') private piechart: ElementRef;\n\n  constructor(private loader: ChartLoaderService) {\n    this.width = '100%';\n  }\n\n  drawChart() {\n    if (this.showChart) {\n      this.pieData = google.visualization.arrayToDataTable(this._data);\n      this.options = {\n        title: this.chartTitleComponent ? this.chartTitleComponent.title : null,\n        titleTextStyle: this.chartTitleComponent ? this.charttitleTextStyle() : null,\n        is3D: this.is3d,\n        pieHole: this.piehole,\n        startangle: this.startangle,\n        backgroundcolor: this.backgroundcolor,\n        legend: this.chartLengendComponent ? this.chartLengendStyle() : 'none',\n        chartArea: this.chartAreaComponent ? this.chartBackgroundStyle() : null,\n      };\n      if (this.pieData) {\n        this.chart = new google.visualization.PieChart(this.piechart.nativeElement);\n        this.hasLoaded = true;\n        this.chart.draw(this.pieData, this.options);\n        google.visualization.events.addListener(this.chart, 'click', this.onClick);\n      }\n    }\n  }\n  charttitleTextStyle() {\n    return {\n      color: this.chartTitleComponent.color ? this.chartTitleComponent.color : null,\n      fontName: this.chartTitleComponent.fontname ? this.chartTitleComponent.fontname : null,\n      fontsize: this.chartTitleComponent.fontsize ? this.chartTitleComponent.fontsize : null,\n      bold: this.chartTitleComponent.bold ? this.chartTitleComponent.bold : null,\n      italic: this.chartTitleComponent.italic ? this.chartTitleComponent.italic : null,\n    };\n  }\n  chartLengendStyle() {\n    return {\n      position: this.chartLengendComponent.position ? this.chartLengendComponent.position : null,\n      // this work only in chart position is top\n      maxLines: this.chartLengendComponent.maxlines ? this.chartLengendComponent.maxlines : null,\n      textStyle: {\n        color: this.chartLengendComponent.color ? this.chartLengendComponent.color : null,\n        fontsize: this.chartLengendComponent.fontsize ? this.chartLengendComponent.fontsize : null,\n        fontName: this.chartLengendComponent.fontname ? this.chartLengendComponent.fontname : null,\n        bold: this.chartLengendComponent.bold ? this.chartLengendComponent.bold : null,\n        alignment: this.chartLengendComponent.alignment ? this.chartLengendComponent.alignment : null,\n      },\n    };\n  }\n  chartBackgroundStyle() {\n    return {\n      backgroundcolor: this.chartAreaComponent.chartbackgroundcolor ? this.chartAreaComponent.chartbackgroundcolor : null,\n      left: this.chartAreaComponent.leftposition ? this.chartAreaComponent.leftposition : null,\n      top: this.chartAreaComponent.topposition ? this.chartAreaComponent.topposition : null,\n      height: this.chartAreaComponent.chartheight ? this.chartAreaComponent.chartheight : null,\n      width: this.chartAreaComponent.chartwidth ? this.chartAreaComponent.chartwidth : null,\n    };\n  }\n  onClick(e: any) {\n  }\n\n  // after content init for inner directive is run\n  ngAfterContentInit(): void {\n    this.chartLegendArray = this.chartLegendComp.toArray();\n    this.chartTitleArray = this.chartTitleComp.toArray();\n    this.chartAreaArray = this.chartAreaComp.toArray();\n    // take first component\n    if (this.chartLegendArray.length === 1) {\n      this.chartLengendComponent = this.chartLegendArray.pop();\n    }\n    if (this.chartTitleArray.length === 1) {\n      this.chartTitleComponent = this.chartTitleArray.pop();\n    }\n    if (this.chartAreaArray.length === 1) {\n      this.chartAreaComponent = this.chartAreaArray.pop();\n    }\n  }\n\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('PieChart').subscribe(\n      (value) => console.log(),\n      (error) => console.error(error),\n      () => {\n        this.drawChart();\n      },\n    );\n  }\n\n  onResize(event: any) {\n    this.drawChart();\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n /*\nComponent Name : Amexio scatter chart\nComponent Selector : <amexio-chart-scatter>\nComponent Description : Scatter charts plot points on a graph.\nWhen the user hovers over the points, tooltips are displayed with more information.\n*/\nimport {AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild} from '@angular/core';\nimport {ChartAreaComponent} from '../chartarea/chart.area.component';\nimport {ChartLegendComponent} from '../chartlegend/chart.legend.component';\nimport {ChartTitleComponent} from '../charttitle/chart.title.component';\nimport {HorizontalAxisComponent} from '../horizontalaxis/chart.horizontalaxis.component';\nimport {VerticalAxisComponent} from '../verticalaxis/chart.verticalaxis.component';\n\nimport {ChartLoaderService} from '../chart.loader.service';\n\ndeclare var google: any;\n@Component({\n  selector: 'amexio-chart-scatter', template: `\n    <div *ngIf=\"showChart\" #scatterchart\n         [style.width]=\"width\"\n         [style.height]=\"height\" (window:resize)=\"onResize($event)\">\n      <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n      </div>\n    </div>\n  `, styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n\n  .lmask.fixed {\n    position: fixed;\n  }\n\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  ` ],\n})\n\nexport class ScatterChartComponent implements AfterContentInit, OnInit {\n\n  private options: any;\n  private scatterData: any;\n  private chart: any;\n\n  id: any;\n\n/*\nProperties\nname : width\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : width of chart\n*/\n@Input() width: string;\n\n/*\nProperties\nname : height\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : height of chart\n*/\n@Input() height: string;\n\n  showChart: boolean;\n  _data: any;\n\n  get data(): any {\n    return this._data;\n  }\n\n/*\nProperties\nname : data\ndatatype : any\nversion : 4.0 onwards\ndefault : none\ndescription : For the use of local data\n*/\n@Input('data')\n  set data(data: any) {\n    if (data) {\n      this._data = data;\n      this.showChart = true;\n    } else {\n      this.showChart = false;\n    }\n  }\n\n/*\nProperties\nname : background-color\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets background color to chart\n*/\n@Input('background-color') backgroundcolor: string;\n\n  hasLoaded: boolean;\n\n  @ContentChildren(ChartLegendComponent) chartLegendComp: QueryList<ChartLegendComponent>;\n\n  @ContentChildren(ChartTitleComponent) chartTitleComp: QueryList<ChartTitleComponent>;\n\n  @ContentChildren(ChartAreaComponent) chartAreaComp: QueryList<ChartAreaComponent>;\n\n  @ContentChildren(HorizontalAxisComponent) horizontalComp: QueryList<HorizontalAxisComponent>;\n\n  horizontalArray: HorizontalAxisComponent[];\n\n  horizontalComponent: HorizontalAxisComponent;\n\n  @ContentChildren(VerticalAxisComponent) verticalComp: QueryList<VerticalAxisComponent>;\n\n  verticalArray: HorizontalAxisComponent[];\n\n  verticalComponent: HorizontalAxisComponent;\n\n  chartAreaArray: ChartAreaComponent[];\n\n  chartAreaComponent: ChartAreaComponent;\n\n  chartLegendArray: ChartLegendComponent[];\n\n  chartLengendComponent: ChartLegendComponent;\n\n  chartTitleArray: ChartTitleComponent[];\n\n  chartTitleComponent: ChartTitleComponent;\n\n  @ViewChild('scatterchart') private scatterchart: ElementRef;\n\n  constructor(private loader: ChartLoaderService) {\n    this.width = '100%';\n  }\n\n  drawChart() {\n    if (this.showChart) {\n      this.scatterData = google.visualization.arrayToDataTable(this._data);\n      this.options = {\n        title: this.chartTitleComponent ? this.chartTitleComponent.title : null,\n        titleTextStyle: this.chartTitleComponent ? this.chartTitleTextStyle() : null,\n        backgroundcolor: this.backgroundcolor,\n        legend: this.chartLengendComponent ? this.chartLegendStyle() : 'none',\n        chartArea: this.chartAreaComponent ? this.chartBackgroundColor() : null,\n        vAxis: this.verticalComponent ? this.chartVerticalStyle() : null,\n        hAxis: this.horizontalComponent ? this.chartHorizontalStyle() : null,\n      };\n      if (this.scatterData) {\n        this.chart = new google.visualization.ScatterChart(this.scatterchart.nativeElement);\n        this.hasLoaded = true;\n        this.chart.draw(this.scatterData, this.options);\n        google.visualization.events.addListener(this.chart, 'click', this.click);\n      }\n    }\n  }\n  chartTitleTextStyle() {\n    return{\n      color: this.chartTitleComponent.color ? this.chartTitleComponent.color : null,\n      fontName: this.chartTitleComponent.fontname ? this.chartTitleComponent.fontname : null,\n      fontsize: this.chartTitleComponent.fontsize ? this.chartTitleComponent.fontsize : null,\n      bold: this.chartTitleComponent.bold ? this.chartTitleComponent.bold : null,\n      italic: this.chartTitleComponent.italic ? this.chartTitleComponent.italic : null,\n    };\n  }\n  chartLegendStyle() {\n    return{\n      position: this.chartLengendComponent.position ? this.chartLengendComponent.position : null,\n          // this work only in chart position is top\n          maxLines: this.chartLengendComponent.maxlines ? this.chartLengendComponent.maxlines : null, textStyle: {\n            color: this.chartLengendComponent.color ? this.chartLengendComponent.color : null,\n            fontsize: this.chartLengendComponent.fontsize ? this.chartLengendComponent.fontsize : null,\n            fontName: this.chartLengendComponent.fontname ? this.chartLengendComponent.fontname : null,\n            bold: this.chartLengendComponent.bold ? this.chartLengendComponent.bold : null,\n            alignment: this.chartLengendComponent.alignment ? this.chartLengendComponent.alignment : null,\n          },\n    };\n  }\n  chartBackgroundColor() {\n    return{\n      backgroundcolor: this.chartAreaComponent.chartbackgroundcolor ? this.chartAreaComponent.chartbackgroundcolor : null,\n          left: this.chartAreaComponent.leftposition ? this.chartAreaComponent.leftposition : null,\n          top: this.chartAreaComponent.topposition ? this.chartAreaComponent.topposition : null,\n          height: this.chartAreaComponent.chartheight ? this.chartAreaComponent.chartheight : null,\n          width: this.chartAreaComponent.chartwidth ? this.chartAreaComponent.chartwidth : null,\n    };\n  }\n  chartVerticalStyle() {\n    return{\n      title: this.verticalComponent.title ? this.verticalComponent.title : null,\n          titleTextStyle: {color: this.verticalComponent.titlecolor ? this.verticalComponent.titlecolor : null},\n\n    };\n  }\nchartHorizontalStyle() {\n  return{\n    title: this.horizontalComponent.title ? this.horizontalComponent.title : null,\n    titleTextStyle: {color: this.horizontalComponent.titlecolor ? this.horizontalComponent.titlecolor : null},\n  };\n}\n  click(e: any) {\n\n  }\n\n  // after content init for inner directive is run\n  ngAfterContentInit(): void {\n    this.chartLegendArray = this.chartLegendComp.toArray();\n    this.chartTitleArray = this.chartTitleComp.toArray();\n    this.chartAreaArray = this.chartAreaComp.toArray();\n    this.horizontalArray = this.horizontalComp.toArray();\n    this.verticalArray = this.verticalComp.toArray();\n    // take first component\n    if (this.chartLegendArray.length === 1) {\n      this.chartLengendComponent = this.chartLegendArray.pop();\n    }\n    if (this.chartTitleArray.length === 1) {\n      this.chartTitleComponent = this.chartTitleArray.pop();\n    }\n    if (this.chartAreaArray.length === 1) {\n      this.chartAreaComponent = this.chartAreaArray.pop();\n    }\n    if (this.horizontalArray.length === 1) {\n      this.horizontalComponent = this.horizontalArray.pop();\n    }\n    if (this.verticalArray.length === 1) {\n      this.verticalComponent = this.verticalArray.pop();\n    }\n  }\n\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('ScatterChart').subscribe((value) => console.log(), (error) => console.error(error), () => {\n      this.drawChart();\n    });\n  }\n\n  onResize(event: any) {\n    this.drawChart();\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n\n/*\nComponent Name : Amexio timeline chart\nComponent Selector : <amexio-chart-timeline>\nComponent Description : A timeline is a chart that depicts how a set of resources are used over time.\n*/\nimport { AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild } from '@angular/core';\nimport { ChartAreaComponent } from '../chartarea/chart.area.component';\nimport { ChartLegendComponent } from '../chartlegend/chart.legend.component';\nimport { ChartTitleComponent } from '../charttitle/chart.title.component';\n\nimport { ChartLoaderService } from '../chart.loader.service';\n\ndeclare var google: any;\n@Component({\n  selector: 'amexio-chart-timeline', template: `\n    <div *ngIf=\"showChart\" #timelinechart\n         [style.width]=\"width\"\n    >\n      <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n      </div>\n    </div>\n  `, styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n\n  .lmask.fixed {\n    position: fixed;\n  }\n\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  ` ],\n})\nexport class TimeLineChartComponent implements AfterContentInit, OnInit {\n\n  private chart: any;\n\n  id: any;\n\n  /*\n  Properties\n  name : width\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description : width of chart\n  */\n  @Input() width: string;\n\n  showChart: boolean;\n  _data: any;\n\n  get data(): any {\n    return this._data;\n  }\n\n  /*\n  Properties\n  name : data\n  datatype : any\n  version : 4.0 onwards\n  default : none\n  description : For the use of local data\n  */\n  @Input('data')\n  set data(data: any) {\n    if (data) {\n      this._data = data;\n      this.showChart = true;\n    } else {\n      this.showChart = false;\n    }\n  }\n\n  hasLoaded: boolean;\n\n  @ContentChildren(ChartLegendComponent) chartLegendComp: QueryList<ChartLegendComponent>;\n\n  @ContentChildren(ChartTitleComponent) chartTitleComp: QueryList<ChartTitleComponent>;\n\n  @ContentChildren(ChartAreaComponent) chartAreaComp: QueryList<ChartAreaComponent>;\n\n  chartAreaArray: ChartAreaComponent[];\n\n  chartAreaComponent: ChartAreaComponent;\n\n  chartLegendArray: ChartLegendComponent[];\n\n  chartLengendComponent: ChartLegendComponent;\n\n  chartTitleArray: ChartTitleComponent[];\n\n  chartTitleComponent: ChartTitleComponent;\n\n  @ViewChild('timelinechart') private timelinechart: ElementRef;\n\n  constructor(private loader: ChartLoaderService) {\n    this.width = '100%';\n  }\n\n  drawChart() {\n\n    if (this.data && this.showChart) {\n      this.chart = new google.visualization.Timeline(this.timelinechart.nativeElement);\n      this.hasLoaded = true;\n      this.chart.draw(this.createTable(this._data));\n      google.visualization.events.addListener(this.chart, 'click', this.onClick);\n    }\n\n  }\n\n  onClick(e: any) {\n  }\n\n  // after content init for inner directive is run\n  ngAfterContentInit(): void {\n    this.chartLegendArray = this.chartLegendComp.toArray();\n    this.chartTitleArray = this.chartTitleComp.toArray();\n    this.chartAreaArray = this.chartAreaComp.toArray();\n    // take first component\n    if (this.chartLegendArray.length === 1) {\n      this.chartLengendComponent = this.chartLegendArray.pop();\n    }\n    if (this.chartTitleArray.length === 1) {\n      this.chartTitleComponent = this.chartTitleArray.pop();\n    }\n    if (this.chartAreaArray.length === 1) {\n      this.chartAreaComponent = this.chartAreaArray.pop();\n    }\n  }\n\n  // This method create data table structure of array and return in required chart data\n\n  createTable(array: any[]): any {\n    // create Duplicate Array for data arrangement\n    const dupArray = array.slice();\n    const data = new google.visualization.DataTable();\n    const labelObject = dupArray[0];\n    // remove first object of array\n    dupArray.shift();\n\n    labelObject.forEach((datatypeObject: any) => {\n      data.addColumn(datatypeObject.datatype, datatypeObject.label);\n    });\n    const finalArray: any[] = [];\n    dupArray.forEach((rowObject: any) => {\n      finalArray.push(rowObject);\n    });\n    data.addRows(finalArray);\n    return data;\n  }\n\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('Timeline').subscribe((value) => console.log(), (error) => console.error(error), () => {\n      this.drawChart();\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AreaChartComponent } from './areachart/area.chart.component';\nimport { BarChartComponent } from './barchart/bar.chart.component';\nimport { BubbleChartComponent } from './bubblechart/bubble.chart.component';\nimport { CandlestickChartComponent } from './candlestickchart/candlestick.chart.component';\nimport { CandlestickWaterfallChartComponent } from './candlestickwaterfallchart/candlestickwaterfall.chart.component';\nimport { ChartAreaComponent } from './chartarea/chart.area.component';\nimport { ChartLegendComponent } from './chartlegend/chart.legend.component';\nimport { ChartTitleComponent } from './charttitle/chart.title.component';\nimport { ColumnChartComponent } from './columnchart/column.chart.component';\nimport { ComboChartComponent } from './combochart/combo.chart.component';\nimport { DonutChartComponent } from './donutchart/donut.chart.component';\nimport { GanttChartComponent } from './ganttchart/gantt.chart.component';\nimport { HistogramChartComponent } from './histogramchart/histogram.chart.component';\nimport { HorizontalAxisComponent } from './horizontalaxis/chart.horizontalaxis.component';\nimport { LineChartComponent } from './linechart/line.chart.component';\nimport { PieChartComponent } from './piechart/pie.chart.component';\nimport { ScatterChartComponent } from './scatterchart/scatter.chart.component';\nimport { TimeLineChartComponent } from './timelinechart/timeline.chart.component';\nimport { VerticalAxisComponent } from './verticalaxis/chart.verticalaxis.component';\n\nimport { CommonDataService } from '../services/data/common.data.service';\nimport { ChartLoaderService } from './chart.loader.service';\n\nexport * from './areachart/area.chart.component';\nexport * from './barchart/bar.chart.component';\nexport * from './bubblechart/bubble.chart.component';\nexport * from './candlestickchart/candlestick.chart.component';\nexport * from './candlestickwaterfallchart/candlestickwaterfall.chart.component';\nexport * from './chartarea/chart.area.component';\nexport * from './chartlegend/chart.legend.component';\nexport * from './charttitle/chart.title.component';\nexport * from './columnchart/column.chart.component';\nexport * from './combochart/combo.chart.component';\nexport * from './donutchart/donut.chart.component';\nexport * from './ganttchart/gantt.chart.component';\nexport * from './histogramchart/histogram.chart.component';\nexport * from './horizontalaxis/chart.horizontalaxis.component';\nexport * from './linechart/line.chart.component';\nexport * from './piechart/pie.chart.component';\nexport * from './scatterchart/scatter.chart.component';\nexport * from './timelinechart/timeline.chart.component';\nexport * from './verticalaxis/chart.verticalaxis.component';\n\nexport * from '../services/data/common.data.service';\nexport * from './chart.loader.service';\n\nconst CHART_COMPONENTS = [\n  AreaChartComponent, BarChartComponent, ChartAreaComponent,\n  ChartLegendComponent, ChartTitleComponent, ColumnChartComponent,\n  DonutChartComponent, GanttChartComponent, HistogramChartComponent, LineChartComponent,\n  PieChartComponent, TimeLineChartComponent, ComboChartComponent,\n  VerticalAxisComponent,\n  HorizontalAxisComponent,\n  BubbleChartComponent,\n  ScatterChartComponent, CandlestickChartComponent, CandlestickWaterfallChartComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  exports: CHART_COMPONENTS,\n  declarations: CHART_COMPONENTS,\n  providers: [CommonDataService, ChartLoaderService],\n})\nexport class AmexioChartsModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AmexioChartsModule,\n      providers: [CommonDataService, ChartLoaderService],\n    };\n  }\n}\n","/**\n *  Created by pratik on 17/8/17.\n */\nimport {EventEmitter, Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/index';\ndeclare var google: any;\n@Injectable()\nexport class MapLoaderService {\n    private chartPackage: { [id: string]: string; } = {\n        AreaChart: 'corechart',\n        Bar: 'bar',\n        BarChart: 'corechart',\n        ColumnChart: 'corechart',\n        PieChart: 'corechart',\n        Gantt: 'gantt',\n        Gauge: 'gauge',\n        GeoChart: 'geochart',\n        Histogram: 'corechart',\n        Line: 'line',\n        LineChart: 'corechart',\n        Map: 'map',\n        Timeline: 'timeline',\n        BubbleChart: 'corechart',\n        CandlestickChart: 'corechart',\n        ComboChart: 'corechart',\n        TreeMap: 'treemap',\n    };\n    isScriptLoading: boolean;\n    private googleScriptLoadingNotifier: EventEmitter<boolean>;\n    constructor() {\n        this.googleScriptLoadingNotifier = new EventEmitter();\n        this.isScriptLoading = false;\n    }\n     loadCharts(chartName: string): Observable <any> {\n        return new Observable(\n            (observer) => {\n                this.loadScript().subscribe(\n                    (val) => console.log(),\n                    (error) => console.error(error),\n                    () => {\n                        this.loadRequiredChart(observer, chartName);\n                    },\n                );\n            },\n        );\n    }\n    loadScript(): Observable <any> {\n        return new Observable(\n            (observer) => {\n                if (!this.isScriptLoading) {\n                    // check if previously its loaded\n                    if (typeof google !== 'undefined' && google.charts) {\n                        // check if chart package has been loaded using chartPackagename ?\n                        this.loadBaseChart(observer);\n                    } else {\n                        this.isScriptLoading = true;\n                        const script = document.createElement('script');\n                        script.type = 'text/javascript';\n                        script.src = 'https://www.gstatic.com/charts/loader.js';\n                        script.async = true;\n                        script.defer = true;\n                        script.onload = () => {\n                            this.isScriptLoading = false;\n                            this.googleScriptLoadingNotifier.emit(true);\n                            this.loadBaseChart(observer);\n                        };\n                        script.onerror = () => {\n                            observer.error('Could Not Load google Script');\n                        };\n                        document.getElementsByTagName('head')[0].appendChild(script);\n                    }\n                } else {\n                    this.googleScriptLoadingNotifier.subscribe((loaded: boolean) => {\n                        if (loaded) {\n                            this.loadBaseChart(observer);\n                        }\n                    });\n                }\n            },\n        );\n    }\n    /**\n     *  Load Base Chart\n     * @param observer\n     */\n    loadBaseChart(observer: any) {\n        google.charts.load('current', {packages: ['corechart']});\n        google.charts.setOnLoadCallback(() => {\n            observer.complete();\n        });\n    }\n\n    /**\n     *  Load the required charts\n     * @param chartName\n     */\n    loadRequiredChart(observer: any, chartName: string) {\n        if (google.visualization.hasOwnProperty(chartName)) {\n            observer.complete();\n        } else {\n            google.charts.load('current', {packages: [this.chartPackage[chartName]]});\n            google.charts.setOnLoadCallback(() => {\n                observer.complete();\n            });\n        }\n    }\n\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n/*\n Component Name : Amexio Map\n Component Selector : <amexio-map-properties>\n Component Description : Map properties\n*/\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-map-properties', template: ``,\n})\nexport class MapPropertiesComponent implements OnInit {\n /*\nProperties\nname : chart-background-color\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : user can give chart background color\n*/\n  @Input('chart-background-color') chartbackgroundcolor: string;\n/*\nProperties\nname : left-position\ndatatype : number\nversion : 4.0 onwards\ndefault : none\ndescription : position from left\n*/\n  @Input('left-position') leftposition: number;\n /*\nProperties\nname : top-position\ndatatype : number\nversion : 4.0 onwards\ndefault : none\ndescription : position from top\n*/\n  @Input('top-position') topposition: number;\n /*\nProperties\nname : chart-width\ndatatype : number\nversion : 4.0 onwards\ndefault : none\ndescription : Width of chart\n*/\n  @Input('chart-width') chartwidth: number;\n/*\nProperties\nname : chart-height\ndatatype : number\nversion : 4.0 onwards\ndefault : none\ndescription : height of chart\n*/\n  @Input('chart-height') chartheight: number;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","/**\n * Created by sagar on 10/8/17.\n */\n/*\nComponent Name : Amexio Geo chart\nComponent Selector : <amexio-map-geo-chart>\nComponent Description : Data can be plotted on a Map using Amexio's\nAmexioMapModule. All Mapping widgets are available under\namexio-ng-extensions/maps\n */\nimport { AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild} from '@angular/core';\nimport { MapLoaderService } from '../map.loader.service';\nimport { MapPropertiesComponent} from '../mapproperties/map.properties';\n\ndeclare var google: any;\n@Component({\n  selector: 'amexio-map-geo-chart', template: `\n    <div *ngIf=\"showChart\" #geochart\n         [style.width]=\"width\"\n         [style.height]=\"height\"\n    >\n      <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n      </div>\n    </div>\n  `, styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n\n  .lmask.fixed {\n    position: fixed;\n  }\n\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`],\n})\n\nexport class GeoChartComponent implements AfterContentInit, OnInit {\n\n  private options: any;\n  private geomapData: any;\n  private chart: any;\n\n  hasLoaded: boolean;\n  id: any;\n  /*\n  Properties\n  name : width\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description : Width of chart\n  */\n  @Input() width: string;\n  /*\n  Properties\n  name : height\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description : height of chart\n  */\n  @Input() height: string;\n  showChart: boolean;\n  _data: any;\n\n  get data(): any {\n    return this._data;\n  }\n  @Input('data')\n  set data(data: any) {\n    if (data) {\n      this._data = data;\n      this.showChart = true;\n    } else {\n      this.showChart = false;\n    }\n  }\n\n  /*\n  not in use\n*/\n  @Input('country-name') countryname = false;\n\n  /* not in use\n*/\n  @Input('region-code') regioncode: string;\n\n  /* not in use\n*/\n  @Input('background-color') backgroundcolor: string;\n  /* not in use\n  */\n  @Input('unused-region-color') unusedregioncolor: string;\n\n  @ContentChildren(MapPropertiesComponent) chartAreaComp: QueryList<MapPropertiesComponent>;\n\n  chartAreaArray: MapPropertiesComponent[];\n  chartAreaComponent: MapPropertiesComponent;\n  @ViewChild('geochart') private geochart: ElementRef;\n\n  constructor(private loader: MapLoaderService) {\n    this.width = '100%';\n  }\n  drawChart() {\n    if (this.showChart) {\n      this.geomapData = google.visualization.arrayToDataTable(this._data);\n      this.showChartExist();\n\n      if (this.geomapData) {\n        this.chart = new google.visualization.GeoChart(this.geochart.nativeElement);\n        this.hasLoaded = true;\n        this.chart.draw(this.geomapData, this.options);\n        google.visualization.events.addListener(this.chart, 'click', this.click);\n      }\n    }\n  }\n\n  showChartExist() {\n    this.options = {\n      displayMode: this.countryname ? 'text' : null,\n      region: this.regioncode ? this.regioncode : null,\n      backgroundcolor: this.backgroundcolor ? this.backgroundcolor : null,\n      unusedregioncolor: this.unusedregioncolor ? this.unusedregioncolor : null,\n      chartArea: this.chartAreaComponent ? {\n        backgroundcolor: this.chartAreaComponent.chartbackgroundcolor ? this.chartAreaComponent.chartbackgroundcolor : null,\n        left: this.chartAreaComponent.leftposition ? this.chartAreaComponent.leftposition : null,\n        top: this.chartAreaComponent.topposition ? this.chartAreaComponent.topposition : null,\n        height: this.chartAreaComponent.chartheight ? this.chartAreaComponent.chartheight : null,\n        width: this.chartAreaComponent.chartwidth ? this.chartAreaComponent.chartwidth : null,\n      } : null,\n    };\n  }\n\n  click(e: any) {\n  }\n  ngAfterContentInit(): void {\n    this.chartAreaArray = this.chartAreaComp.toArray();\n    if (this.chartAreaArray.length === 1) {\n      this.chartAreaComponent = this.chartAreaArray.pop();\n    }\n  }\n\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('GeoChart').subscribe((value) => console.log(), (errror) => console.error(errror), () => {\n      this.drawChart();\n    });\n  }\n}\n","/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Sagar Jadhav\n *\n */\n/*\n Component Name : Amexio Map\n Component Selector : <amexio-map-title>\n Component Description :  Map title\n*/\nimport {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'amexio-map-title', template: ` `,\n})\nexport class MapTitleComponent implements OnInit {\n/*\nProperties\nname : title\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets title of Map\n*/\n  @Input() title: string;\n/*\nProperties\nname : position\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets position of Map\n*/\n  @Input() position: string;\n/*\nProperties\nname : color\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets color of Map\n*/\n  @Input() color: string;\n/*\nProperties\nname : font-name\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : sets Font family name\n*/\n  @Input('font-name') fontname: string;\n/*\nProperties\nname : bold\ndatatype : boolean\nversion : 4.0 onwards\ndefault : none\ndescription : sets bold style\n*/\n  @Input() bold: boolean;\n/*\nProperties\nname : italic\ndatatype : boolean\nversion : 4.0 onwards\ndefault : none\ndescription : sets italic style\n*/\n  @Input() italic: boolean;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n","/**\n * Created by sagar on 18/8/17.\n */\n\n/*\nComponent Name : Amexio Tree map\nComponent Selector : <amexio-map-treemap>\nComponent Description :  A visual representation of a data tree,\nwhere each node can have zero or more children, and one parent\n(except for the root, which has no parents). Each node is displayed as a rectangle,\nsized and colored according to values that you assign.\n*/\nimport { AfterContentInit, Component, ContentChildren, ElementRef, Input, OnInit, QueryList, ViewChild} from '@angular/core';\n\nimport { MapTitleComponent } from '../maptitle/map.title.component';\n\nimport { MapLoaderService } from '../map.loader.service';\ndeclare var google: any;\n@Component({\n  selector: 'amexio-map-treemap', template: `\n    <div *ngIf=\"showChart\" #treemapmap\n         [style.width]=\"width\"\n         [style.height]=\"height\" (window:resize)=\"onResize($event)\"\n    >\n      <div *ngIf=\"!hasLoaded\" class=\"lmask\">\n      </div>\n    </div>\n  `, styles: [`.lmask {\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background-color: #000;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    top: 0;\n    z-index: 9999;\n    opacity: 0.4;\n  }\n\n  .lmask.fixed {\n    position: fixed;\n  }\n\n  .lmask:before {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-right: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 35px #2187e7;\n    width: 50px;\n    height: 50px;\n    -moz-animation: spinPulse 1s infinite ease-in-out;\n    -webkit-animation: spinPulse 1s infinite linear;\n    margin: -25px 0 0 -25px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  .lmask:after {\n    content: '';\n    background-color: transparent;\n    border: 5px solid rgba(0, 183, 229, 0.9);\n    opacity: .9;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-radius: 50px;\n    box-shadow: 0 0 15px #2187e7;\n    width: 30px;\n    height: 30px;\n    -moz-animation: spinoffPulse 1s infinite linear;\n    -webkit-animation: spinoffPulse 1s infinite linear;\n    margin: -15px 0 0 -15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n  }\n\n  @-moz-keyframes spinPulse {\n    0% {\n      -moz-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -moz-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -moz-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-moz-keyframes spinoffPulse {\n    0% {\n      -moz-transform: rotate(0deg);\n    }\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes spinPulse {\n    0% {\n      -webkit-transform: rotate(160deg);\n      opacity: 0;\n      box-shadow: 0 0 1px #2187e7;\n    }\n    50% {\n      -webkit-transform: rotate(145deg);\n      opacity: 1;\n    }\n    100% {\n      -webkit-transform: rotate(-320deg);\n      opacity: 0;\n    }\n  }\n\n  @-webkit-keyframes spinoffPulse {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  `],\n})\n\nexport class TreeMapComponent implements AfterContentInit, OnInit {\n\n  private options: any;\n  private treemapData: any;\n  private chart: any;\n  hasLoaded: boolean;\n  id: any;\n  /*\n  Properties\n  name : width\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description : Width of chart.\n  */\n  @Input() width: string;\n  /*\n  Properties\n  name : height\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description : height of chart.\n  */\n  @Input() height: string;\n\n  showChart: boolean;\n  _data: any;\n  get data(): any {\n    return this._data;\n  }\n  /*\n  Properties\n  name : data\n  datatype : any\n  version : 4.0 onwards\n  default : none\n  description : Local data for TreeMap.\n  */\n  @Input('data')\n  set data(data: any) {\n    if (data) {\n      this._data = data;\n      this.showChart = true;\n    } else {\n      this.showChart = false;\n    }\n  }\n  /*\n Properties\n name : min-color\n datatype : string\n version : 4.0 onwards\n default : none\n description : The color for a rectangle with the column 3 value of min-colorValue. Specify an HTML color value.\n */\n  @Input('min-color') mincolor: string;\n  /*\n  Properties\n  name : mid-color\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description : The color for a rectangle with a column 3\n  value midway between max-colorValue and min-colorValue.\n  Specify an HTML color value.\n  */\n  @Input('mid-color') midcolor: string;\n  /*\n  Properties\n  name : max-color\n  datatype : string\n  version : 4.0 onwards\n  default : none\n  description : The color for a rectangle with a column 3 value of max-colorValue. Specify an HTML color value.\n  */\n  @Input('max-color') maxcolor: string;\n  /*\n  Properties\n  name : show-scale\n  datatype : boolean\n  version : 4.0 onwards\n  default : none\n  description : Whether or not to show a color gradient scale from\n  min-color to max-color along the top of the chart. Specify true to\n  show the scale.\n  */\n  @Input('show-scale') showscale: boolean;\n  /*\n  Properties\n  name : max-post-depth\n  datatype : number\n  version : 4.0 onwards\n  default : none\n  description : number of levels of nodes beyond maxDepth to show in 'hinted' fashion.\n  */\n  @Input('max-post-depth') maxpostdepth: number;\n\n  @ContentChildren(MapTitleComponent) maptleComp: QueryList<MapTitleComponent>;\n\n  mapTitleArray: MapTitleComponent[];\n\n  mapTitleComponent: MapTitleComponent;\n\n  @ViewChild('treemapmap') private treemapmap: ElementRef;\n\n  constructor(private loader: MapLoaderService) {\n\n    this.width = '100%';\n  }\n\n  drawChart() {\n    if (this.showChart) {\n      this.treemapData = google.visualization.arrayToDataTable(this._data);\n      this.initializeOptions();\n\n      if (this.treemapData) {\n        this.chart = new google.visualization.TreeMap(this.treemapmap.nativeElement);\n        this.hasLoaded = true;\n        this.chart.draw(this.treemapData, this.options);\n        google.visualization.events.addListener(this.chart, 'click', this.click);\n      }\n    }\n  }\n\n  initializeOptions() {\n    this.options = {\n      title: this.mapTitleComponent ? this.mapTitleComponent.title : null,\n      titleTextStyle: this.mapTitleComponent ? this.mapTitleTextStyle() : null,\n      mincolor: this.mincolor ? this.mincolor : null, midcolor: this.midcolor ? this.midcolor : null,\n      maxcolor: this.maxcolor ? this.maxcolor : null, headerHeight: 15, fontcolor: 'black',\n      showscale: this.showscale ? this.showscale : false,\n      maxpostdepth: this.maxpostdepth ? this.maxpostdepth : 1,\n    };\n  }\n  mapTitleTextStyle() {\n    return{\n      color: this.mapTitleComponent.color ? this.mapTitleComponent.color : null,\n        fontName: this.mapTitleComponent.fontname ? this.mapTitleComponent.fontname : null,\n        bold: this.mapTitleComponent.bold ? this.mapTitleComponent.bold : null,\n        italic: this.mapTitleComponent.italic ? this.mapTitleComponent.italic : null,\n      };\n  }\n\n  click(e: any) {\n  }\n\n  ngAfterContentInit(): void {\n    this.mapTitleArray = this.maptleComp.toArray();\n    if (this.mapTitleArray.length === 1) {\n      this.mapTitleComponent = this.mapTitleArray.pop();\n    }\n  }\n\n  ngOnInit(): void {\n    this.hasLoaded = false;\n    this.loader.loadCharts('TreeMap').subscribe((value) => console.log(), (errror) => console.error(errror), () => {\n      this.drawChart();\n    });\n  }\n\n  onResize(event: any) {\n    this.drawChart();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {GeoChartComponent} from './geochart/geo.chart.component';\nimport {MapPropertiesComponent} from './mapproperties/map.properties';\nimport {MapTitleComponent} from './maptitle/map.title.component';\nimport {TreeMapComponent} from './treemap/treemap.map.component';\n\nimport {CommonDataService} from '../services/data/common.data.service';\nimport {MapLoaderService} from './map.loader.service';\nexport * from './mapproperties/map.properties';\nexport * from './geochart/geo.chart.component';\nexport * from './treemap/treemap.map.component';\nexport * from './maptitle/map.title.component';\nexport * from './map.loader.service';\nexport * from '../services/data/common.data.service';\n\nconst MAP_COMPONENTS = [\n  MapPropertiesComponent,\n  GeoChartComponent,\n  TreeMapComponent,\n  MapTitleComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  exports: MAP_COMPONENTS,\n  declarations: MAP_COMPONENTS,\n  providers : [CommonDataService, MapLoaderService],\n})\nexport class AmexioMapModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AmexioMapModule,\n      providers: [CommonDataService, MapLoaderService],\n    };\n  }\n}\n","/**\n * Created by pratik on 18/1/18.\n */\n/*\n * Copyright 2016-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Author - Pratik Kelwalkar\n *\n */\n\n /*\n Component Name: Amexio  Multi item carousel\n Component Selector: <amexio-media-ee-carousel>\n Component Description: Amexio Awesome Multi Item Media Carousel,\n which comes preloaded with video playing and a full blown detailing page embedded in the component itself\n*/\nimport {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\n@Component({\n  selector: 'amexio-media-ee-carousel',\n  template: `\n    <div class=\"section-header\" style=\"z-index: 1;\">{{title}}</div>\n    <div class=\"contain row\">\n\n      <div class=\"left-arrow\" [attr.id]=\"elementId+'leftarrow'\" style=\"cursor: pointer\"> <div [ngClass]=\"{'controls' : carouselStyle=='horizontal','controls-v' : carouselStyle=='vertical'}\" (click)=\"leftClick();\"><em class=\"fa fa-chevron-left fa-2x\" aria-hidden=\"true\"></em></div> </div>\n\n      <div class=\"row1\" [attr.id]=\"elementId\">\n        <div class=\"row__inner\">\n          <ng-container *ngIf=\"data\">\n            <div class=\"tile\" *ngFor=\"let item of data;let i = index\">\n              <div class=\"tile__media\" (click)=\"loadVideo(item)\">\n                <img alt=\"title\" class=\"tile__img\" [attr.src]=\"item.img\" />\n              </div>\n              <div class=\"{{item.selected}}\">\n                <em [ngStyle]=\"{'visibility':item.selected ? 'visible':'hidden'}\" class=\"fa fa-caret-down\" aria-hidden=\"false\"></em>\n              </div>\n              <div [ngClass]=\"{'tile__details' : carouselStyle=='horizontal','tile__details_v' : carouselStyle=='vertical'}\">\n                <div class=\"textonly\">\n\n                  <div class=\"playpanel\">\n                    <div style=\"cursor: pointer\" (click)=\"loadVideo(item)\" class=\"playbutton\"><em class=\"fa fa-play\" aria-hidden=\"true\"></em></div>\n                  </div>\n\n                  <span class=\"carousel-title\" *ngIf=\"item.title\">{{item.title}}</span><br>\n                  <span class=\"match\">{{item.matchPercentage}} Match</span> {{item.releaseYear}} <span class=\"age mini\">{{item.ageLimit}}</span> {{item.seasonNo}}<br>\n                  <div class=\"subtitle\">{{item.desc}}</div>\n\n                </div>\n                <div class=\"actionpanel\"   *ngIf=\"item.content\">\n                  <div style=\"cursor: pointer;\" (click)=\"openDetailsSection(item)\"><em class=\"fa fa-chevron-down fa-2x\" aria-hidden=\"true\"></em></div>\n                </div>\n\n\n              </div>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n\n      <ng-container *ngIf=\"carouselStyle=='horizontal'\">\n        <div class=\"right-arrow\" [attr.id]=\"elementId+'rightarrow'\" style=\"cursor: pointer\"> <div [ngClass]=\"{'controls' : carouselStyle=='horizontal','controls-v' : carouselStyle=='vertical'}\" (click)=\"rightClick();\"><em class=\"fa fa-chevron-right fa-2x\" aria-hidden=\"true\"></em></div></div>\n      </ng-container>\n\n      <ng-container *ngIf=\"carouselStyle=='vertical'\">\n        <div class=\"right-arrow-tall\" [attr.id]=\"elementId+'rightarrow'\" style=\"cursor: pointer\"> <div [ngClass]=\"{'controls' : carouselStyle=='horizontal','controls-v' : carouselStyle=='vertical'}\" (click)=\"rightClick();\"><em class=\"fa fa-chevron-right fa-2x\" aria-hidden=\"true\"></em></div></div>\n      </ng-container>\n\n    </div>\n\n    <div [attr.id]=\"elementId+'carousel-detail-content'\" class=\"collapse\" *ngIf=\"hasDetail && displayDetail\">\n      <amexio-ee-content [bg-image-url]=\"currentDetailsImagePath\"\n                         [title]=\"currentDetailsTitle\" [description]=\"currentDetailsDesc\"\n                         [contents]=\"currentContent\" [link]=\"videoUrl\"\n                         (onWatchClick)=\"playVideo(videoUrl)\" (onCloseClick)=\"closeDetailPage()\"\n                         [rate]=\"rate\" [watch]=\"true\" [my-list]=\"true\"\n                         [close]=\"true\" [season-no]=\"seasonNo\" [release-year]=\"releaseYear\" [age-limit]=\"ageLimit\" [match-percentage]=\"matchPercentage\"\n      ></amexio-ee-content>\n    </div>\n  `,\n})\n\nexport class MultiMediaCarouselComponent implements OnInit, OnChanges {\n\n/*\nProperties\nname : data\ndatatype :  any\nversion : 4.0 onwards\ndefault : none\ndescription : Data Containing Image Path, Information and Video URL Refer the DataSource Tab\n*/\n  @Input() data: any;\n\n      /*\nProperties\nname : carousel-type\ndatatype :  any\nversion : 4.0 onwards\ndefault : none\ndescription : Stlyed Carousel for Vertical or Horizontal Media\n\n*/\n  @Input('carousel-type') carouselStyle: any;\n\n  /*\nProperties\nname : has-details\ndatatype :  boolean\nversion : 4.0 onwards\ndefault : none\ndescription : Provide a embedded view for more information on the media\n\n*/\n  @Input('has-details') hasDetail = true;\n\n  /*\nProperties\nname : title\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : Title for the Carousel\n*/\n  @Input() title: string;\n\n  /*\nEvents\nname : onVideoLoad\ndatatype : none\nversion : none\ndefault : none\ndescription :\n*/\n  @Output() onVideoLoad: EventEmitter<any> = new EventEmitter<any>();\n\n  elementId: any;\n  right = false;\n  left = false;\n\n  currentDetailsImagePath: any;\n  currentDetailsTitle: any;\n  currentDetailsDesc: any;\n  currentContent: any;\n  videoUrl: any;\n  rate: any;\n  seasonNo: any;\n  releaseYear: any;\n  ageLimit: any;\n  matchPercentage: any;\n  displayDetail: boolean;\n\n  constructor() {\n    this.elementId = 'multi-media-ee-carousel-' + Math.floor(Math.random() * 90000) + 10000;\n  }\n\n  ngOnInit() {\n    if (this.carouselStyle == null) {\n      this.carouselStyle = 'horizontal';\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['data'] != null) {\n      this.data = changes['data'].currentValue;\n    }\n  }\n\n  leftClick() {\n    const ts = document.getElementById(this.elementId);\n    ts.scrollLeft -= 350;\n    if (ts.scrollLeft === 0) {\n      document.getElementById(this.elementId + 'leftarrow').style.visibility = 'hidden';\n    }\n    document.getElementById(this.elementId + 'rightarrow').style.visibility = 'visible';\n  }\n\n  rightClick() {\n    const ts = document.getElementById(this.elementId);\n    ts.scrollLeft += 350;\n    if ((ts.scrollWidth - ts.offsetWidth - ts.scrollLeft ) <= 0) {\n      document.getElementById(this.elementId + 'rightarrow').style.visibility = 'hidden';\n    }\n    document.getElementById(this.elementId + 'leftarrow').style.visibility = 'visible';\n  }\n\n  closeDetailPage() {\n    this.data.forEach((item: any) => {\n      item.selected = null;\n    });\n    this.displayDetail = false;\n  }\n\n  openDetailsSection(item: any) {\n    this.videoUrl = item.video;\n    this.currentDetailsImagePath = item.details_img;\n    this.currentDetailsTitle = item.title;\n    this.currentDetailsDesc = item.desc;\n    this.currentContent = item.content;\n    this.seasonNo = item.seasonNo;\n    this.matchPercentage = item.matchPercentage;\n    this.ageLimit = item.ageLimit;\n    this.releaseYear = item.releaseYear;\n\n    this.data.forEach((item1: any) => {\n      item1.selected = null;\n    });\n\n    item.selected = 'selected';\n    this.displayDetail = true;\n  }\n\n  loadVideo(item: any) {\n    this.onVideoLoad.emit(item.video);\n  }\n\n  playVideo(video: any) {\n    this.onVideoLoad.emit(video);\n  }\n}\n","/**\n * Created by dattaram on 23/8/17.\n */\n/*\nComponent Name : Amexio  Media content\nComponent Selector : <amexio-ee-content>\nComponent Description : A simple configurable star rating component with visual feedback.\n\n*/\nimport {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\n@Component({\n  selector: 'amexio-ee-content', template: `\n    <div class=\"main-content\" [ngStyle]=\"{'background-image':'url('+bgImgUrl+')'}\" (window:resize)=\"onResize($event)\">\n       <span *ngIf=\"closeEnable\" class=\"close-button\">\n        <i class=\"fa fa-times fa-lg\" (click)=\"closeDetailPage()\" aria-hidden=\"true\"></i>\n      </span>\n      <div class=\"content-area\" >\n        <span class=\"content-title\">{{title}}</span><br>\n        <span><span class=\"match\" *ngIf=\"matchPercentage\">{{matchPercentage}} Match</span> {{releaseYear}} <span\n          class=\"age\" *ngIf=\"ageLimit\">{{ageLimit}}</span> {{seasonNo}}</span><br>\n        <p style=\"word-wrap: break-word;\">{{description}}<br>\n\n        <ng-container *ngIf=\"contents\">\n              <span>\n                <li *ngFor=\"let data of contents\"><strong\n                  style=\"color: #999;\">{{data.key}}: </strong> <strong>  {{data.value}}</strong></li><br>\n          </span>\n        </ng-container>\n        <ul class=\"inline-list\">\n          <li *ngIf=\"enableWatch\">\n            <span class=\"content-button\" (click)=\"playVideo()\">\n            <i class=\"fa fa-play\"></i> &nbsp;&nbsp; Play</span>\n            <!-- <amexio-ee-btn [cClass]=\"'buttoncustom'\"\n            [label]=\"'Play'\" [type]=\"'danger'\" [icon]=\"'fa fa-play'\"\n            [tooltipMessage]=\"'play'\" [size]=\"size\" (onClick)=\"playVideo()\">\n            </amexio-ee-btn> -->\n          </li>\n          <li *ngIf=\"enableMyList\">\n            <span class=\"content-button\" (click)=\"addToList()\">\n            <i class=\"fa fa-plus\"></i>&nbsp;&nbsp; MY LIST</span>\n            <!-- <amexio-ee-btn [cClass]=\"'secondarybutton'\" [label]=\"'MY LIST'\"\n            [icon]=\"'fa fa-plus'\" [type]=\"'secondary'\" [tooltipMessage]=\"'My List'\"\n            [size]=\"size\" (onClick)=\"addToList()\"></amexio-ee-btn> -->\n          </li>\n          <li>\n            <a style=\"color: white!important;\" [ngClass]=\"getClassName()\" (click)=\"likeClick()\"><i class=\"fa fa-thumbs-o-up fa-lg\"\n                                                                   aria-hidden=\"true\"></i>\n            </a>\n          </li>\n          <li><a style=\"color: white!important;\" [ngClass]=\"getClassName()\" (click)=\"unlikeClick()\"><i class=\"fa fa-thumbs-o-down fa-lg \"\n                                                                       aria-hidden=\"true\"></i></a></li>\n\n        </ul>\n        <ng-container *ngIf=\"rate && max\">\n          <amexio-rating-input [(ngModel)]=\"rate\"\n                               [max]=\"max\" name=\"rate\"\n                               [read-only]=\"isReadonly\">\n          </amexio-rating-input>\n        </ng-container>\n      </div>\n    </div>`,\n})\n\nexport class ContentComponent implements OnInit, OnChanges {\n/*\nProperties\nname : bg-image-url\ndatatype :  any\nversion : 4.0 onwards\ndefault : none\ndescription : Background image from content.\n*/\n  @Input('bg-image-url') bgImgUrl: any;\n\n    /*\nProperties\nname : title\ndatatype : string\nversion : 4.0 onwards\ndefault : none\ndescription : \tSet title.\n*/\n  @Input() title: string;\n\n    /*\nProperties\nname : description\ndatatype :  string\nversion : 4.0 onwards\ndefault : none\ndescription : Set Description.\n*/\n  @Input() description: string;\n\n    /*\nProperties\nname : contents\ndatatype :  any\nversion : 4.0 onwards\ndefault : none\ndescription :  Array of content must be in key value pair.\n*/\n  @Input() contents: any;\n\n    /*\nProperties\nname : link\ndatatype :  any\nversion : 4.0 onwards\ndefault : none\ndescription : Set video link.\n*/\n  @Input('link') videoLink: any;\n\n    /*\nProperties\nname : rate\ndatatype :  any\nversion : 4.0 onwards\ndefault : none\ndescription : Set rating max value(max=5) and current rating(rate=3).\n\n*/\n  @Input() rate: any;\n\n    /*\nProperties\nname : max\ndatatype :  any\nversion : 4.0 onwards\ndefault : none\ndescription :\n*/\n  @Input() max: any;\n\n    /*\nProperties\nname : isReadonly\ndatatype :  boolean\nversion : 4.0 onwards\ndefault : none\ndescription :\n*/\n  @Input() isReadonly: boolean;\n\n    /*\nProperties\nname : watch\ndatatype :  any\nversion : 4.0 onwards\ndefault : false\ndescription : Enable watch button.*/\n  @Input('watch') enableWatch = false;\n\n    /*\nProperties\nname : my-list\ndatatype : none\nversion : 4.0 onwards\ndefault : false\ndescription : Enable MyList button.\n*/\n  @Input('my-list') enableMyList = false;\n\n    /*\nProperties\nname :  age-limit\ndatatype :  any\nversion : 4.0 onwards\ndefault : none\ndescription : Set age limit.\n*/\n  @Input('age-limit') ageLimit: any;\n\n    /*\nProperties\nname : release-year\ndatatype :  any\nversion : 4.0 onwards\ndefault : none\ndescription : Set release Year.\n*/\n  @Input('release-year') releaseYear: any;\n\n    /*\nProperties\nname : season-no\ndatatype :  number\nversion : 4.0 onwards\ndefault : none\ndescription : Season of specific series\n\n*/\n  @Input('season-no') seasonNo: number;\n\n    /*\nProperties\nname : match-percentage\ndatatype :  any\nversion : 4.0 onwards\ndefault : none\ndescription : Match Percentage of media\n\n*/\n  @Input('match-percentage') matchPercentage: any;\n\n    /*\nProperties\nname : close\ndatatype :  boolean\nversion : 4.0 onwards\ndefault : none\ndescription : Enable close content.\n*/\n  @Input('close') closeEnable: boolean;\n\n    /*\nEvents\nname :  onWatchClick\ndatatype :  none\nversion : none\ndefault : none\ndescription : Get watch button click.\n*/\n  @Output() onWatchClick: EventEmitter<any> = new EventEmitter<any>();\n\n    /*\nProperties\nname : onAddListClick\ndatatype :  none\nversion : none\ndefault : none\ndescription : Get add list button click.\n\n*/\n  @Output() onAddListClick: EventEmitter<any> = new EventEmitter<any>();\n\n    /*\nProperties\nname : onLikeClick\ndatatype :  none\nversion : none\ndefault : none\ndescription : Get like click.\n\n*/\n  @Output() onLikeClick: EventEmitter<any> = new EventEmitter<any>();\n\n    /*\nProperties\nname : onUnlikeLikeClick\ndatatype :  none\nversion : none\ndefault : none\ndescription : Get unlike click.\n\n*/\n  @Output() onUnlikeLikeClick: EventEmitter<any> = new EventEmitter<any>();\n\n    /*\nProperties\nname : onCloseClick\ndatatype :  any\nversion :none\ndefault : none\ndescription : Get close content click.\n\n*/\n  @Output() onCloseClick: EventEmitter<any> = new EventEmitter<any>();\n\n  size: string;\n\n  overviewData: any;\n\n  smallScreen: boolean;\n\n  constructor() {\n    this.closeEnable = false;\n    this.smallScreen = false;\n  }\n\n  ngOnInit() {\n    if (window.innerWidth < 768) {\n      this.smallScreen = true;\n      this.size = 'small';\n    } else {\n      this.smallScreen = false;\n      this.size = 'default';\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.videoLink && !changes.videoLink.isFirstChange()) {\n      this.videoLink = changes.videoLink.currentValue;\n    }\n  }\n\n  playVideo() {\n    this.onWatchClick.emit(this.videoLink);\n  }\n\n  addToList() {\n    this.overviewData = {\n      'title': this.title, 'description': this.description, 'Video Link': this.videoLink, 'rate': this.rate,\n    };\n    this.onAddListClick.emit(this.overviewData);\n  }\n\n  onResize(event: any) {\n    if (event.target.innerWidth < 995) {\n      this.size = 'small';\n      this.smallScreen = true;\n    } else {\n      this.size = 'default';\n      this.smallScreen = false;\n    }\n  }\n\n  getClassName() {\n    if (this.smallScreen) {\n      return 'button-small';\n    } else {\n      return 'button';\n    }\n  }\n\n  unlikeClick() {\n    this.overviewData = {\n      title: this.title, rate: this.rate,\n    };\n    this.onUnlikeLikeClick.emit(this.overviewData);\n  }\n\n  likeClick() {\n    this.overviewData = {\n      title: this.title, rate: this.rate,\n    };\n    this.onLikeClick.emit(this.overviewData);\n  }\n\n  closeDetailPage() {\n    this.onCloseClick.emit(this.title);\n  }\n}\n","/**\n * Created by pratik on 18/1/18.\n */\n\n /*\n Component Name : Amexio youtube player\n Component Selector : <amexio-ee-youtube-player>\n Component Description : A simple configurable of video player.\n*/\nimport {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'amexio-ee-youtube-player', template: `\n    <div>\n      <span class=\"close-button\" [ngStyle]=\"{'padding-left':closePadding+'%'}\">\n        <i class=\"fa fa-times fa-lg\" (click)=\"routeBackToApp()\" aria-hidden=\"true\"></i>\n      </span>\n      <div class=\"text-center\">\n        <iframe [height]=\"height+'px'\" [width]=\"width+'%'\"\n                [src]=\"sanitizedUrl\" frameborder=\"0\"\n                allowfullscreen>\n        </iframe>\n      </div>\n    </div>\n  `,\n})\n\nexport class AmexioYoutubePlayerComponent implements OnInit {\n  name: string;\n\n  /*\nProperties\nname : url\ndatatype :  any\nversion : 4.0 onwards\ndefault : none\ndescription :\n*/\n  @Input() url: any;\n\n  /*\nProperties\nname : height\ndatatype : number\nversion : 4.0 onwards\ndefault : none\ndescription : \tHeight should be in Px Ex.500\n*/\n  @Input() height: number;\n\n  /*\nProperties\nname :width\ndatatype : number\nversion : 4.0 onwards\ndefault : none\ndescription : Width should be in percentage Ex.50\n\n*/\n  @Input() width: number;\n\n  /*\nEvents\nname :onCloseVideoPlayer\ndatatype : none\nversion : none\ndefault : none\ndescription : it is fired on video player close event\n\n*/\n  @Output() onCloseVideoPlayer: EventEmitter<any> = new EventEmitter<any>();\n\n  sanitizedUrl: any;\n\n  closePadding: any;\n\n  constructor(private sanitizer: DomSanitizer) {\n\n  }\n\n  ngOnInit() {\n    if (this.height == null) {\n      this.height = 450;\n    }\n    if (this.width == null) {\n      this.width = 98;\n      this.closePadding = 97;\n    } else {\n      this.closePadding = this.width - 1;\n    }\n    if (this.url != null) {\n    this.sanitizedUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.url);\n    }\n  }\n\n  routeBackToApp() {\n    this.onCloseVideoPlayer.emit(this.url);\n  }\n}\n","/**\n * Created by pratik on 27/11/17.\n */\nimport { CommonModule } from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {AmexioFormsModule} from '../forms/amexio.forms.module';\nimport {MultiMediaCarouselComponent} from './ee-carousel/ee.carousel.component';\nimport {ContentComponent} from './ee-content/ee.content';\n\nimport {CommonDataService} from '../services/data/common.data.service';\nimport {DeviceQueryService} from '../services/device/device.query.service';\n\nimport {AmexioYoutubePlayerComponent} from './youtube-player/youtube.player.component';\n\nexport * from './ee-carousel/ee.carousel.component';\nexport * from './ee-content/ee.content';\nexport * from '../services/data/common.data.service';\nexport * from '../services/device/device.query.service';\nexport * from './youtube-player/youtube.player.component';\n\nconst ENTERPRISE_COMPONENTS = [\n  MultiMediaCarouselComponent,\n  ContentComponent,\n  AmexioYoutubePlayerComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    AmexioFormsModule,\n    HttpClientModule,\n  ],\n  exports: ENTERPRISE_COMPONENTS,\n  declarations: ENTERPRISE_COMPONENTS,\n  providers : [CommonDataService, DeviceQueryService],\n})\nexport class AmexioEnterpriseModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AmexioEnterpriseModule,\n      providers: [CommonDataService, DeviceQueryService],\n    };\n  }\n}\n","/**\n * Created by pratik on 22/12/17.\n */\n/**\n * Available Icon Libraries\n */\nexport enum Icon {\n  fontawesome = 'fa',\n  material = 'mat',\n}\n\nconst faFaCaretIcon  = 'fa fa-caret-down';\n\nconst faFaTimesIcon    = 'fa fa-times';\n/**\n * Icon Map Config\n */\nconst ICON_MAPPING =\n[\n  {\n    component: 'datepicker_previous',\n    fa: 'fa fa-chevron-left',\n    mat: 'keyboard_arrow_left',\n  },\n  {\n    component: 'datepicker_calendar',\n    fa: 'fa fa-calendar',\n    mat: 'date_range',\n  },\n  {\n    component: 'datepicker_next',\n    fa: 'fa fa-chevron-right',\n    mat: 'keyboard_arrow_right',\n  },\n  {\n    component: 'datepicker_previous_fast',\n    fa: 'fa fa-step-backward',\n    mat: 'fast_rewind',\n  },\n  {\n    component: 'datepicker_next_fast',\n    fa: 'fa fa-step-forward',\n    mat: 'fast_forward',\n  },\n  {\n    component: 'accordion_expand',\n    fa: 'fa fa-plus',\n    mat: 'add',\n  },\n  {\n    component: 'accordion_collapse',\n    fa: 'fa fa-minus',\n    mat: 'remove',\n  },\n  {\n    component: 'tree_expand',\n    fa: 'fa fa-chevron-down',\n    mat: 'keyboard_arrow_down',\n  },\n  {\n    component: 'tree_collapse',\n    fa: 'fa fa-chevron-right',\n    mat: 'keyboard_arrow_right',\n  },\n  {\n    component: 'dropdown_caret',\n    fa: faFaCaretIcon,\n    mat: 'arrow_drop_down',\n  },\n  {\n    component: 'tab_close',\n    fa: faFaTimesIcon,\n    mat: 'close',\n  },\n  {\n    component: 'window_close',\n    fa: faFaTimesIcon,\n    mat: 'close',\n  },\n  {\n    component: 'window_maximize',\n    fa: 'fa fa-window-maximize',\n    mat: 'open_with',\n  },\n  {\n    component: 'window_restore',\n    fa: 'fa fa-window-restore',\n    mat: 'indeterminate_check_box',\n  },\n  {\n    component: 'paginator_previous',\n    fa: 'fa fa-angle-left',\n    mat: 'keyboard_arrow_left',\n  },\n  {\n    component: 'paginator_next',\n    fa: 'fa fa-angle-right',\n    mat: 'keyboard_arrow_right',\n  },\n  {\n    component: 'paginator_first',\n    fa: 'fa fa-angle-double-left',\n    mat: 'first_page',\n  },\n  {\n    component: 'paginator_last',\n    fa: 'fa fa-angle-double-right',\n    mat: 'last_page',\n  },\n  {\n    component: 'itemselector_caretup',\n    fa: 'fa fa-caret-up',\n    mat: 'arrow_drop_up',\n  },\n  {\n    component: 'itemselector_caretdown',\n    fa: faFaCaretIcon,\n    mat: 'arrow_drop_down',\n  },\n  {\n    component: 'itemselector_arrowup',\n    fa: 'fa fa-arrow-up',\n    mat: 'arrow_upward',\n  },\n  {\n    component: 'itemselector_arrowdown',\n    fa: 'fa fa-arrow-down',\n    mat: 'arrow_downward',\n  },\n  {\n    component: 'itemselector_arrowleft',\n    fa: 'fa fa-arrow-left',\n    mat: 'keyboard_arrow_left',\n  },\n  {\n    component: 'itemselector_arrowright',\n    fa: 'fa fa-arrow-right',\n    mat: 'keyboard_arrow_right',\n  },\n  {\n    component: 'tab_previous',\n    fa: 'fa fa-angle-left fa-2x',\n    mat: 'keyboard_arrow_left',\n  },\n  {\n    component: 'tab_next',\n    fa: 'fa fa-angle-right  fa-2x',\n  },\n  {\n    component: 'tab_close',\n    fa: faFaTimesIcon,\n    mat: 'close',\n  },\n  {\n    component: 'fieldset_expand',\n    fa: 'fa fa-plus',\n    mat: 'add',\n  },\n  {\n    component: 'fieldset_collpase',\n    fa: 'fa fa-minus',\n    mat: 'remove',\n  },\n  {\n    component: 'carousel_previous',\n    fa: 'fa fa-angle-left fa-2x',\n    mat: 'keyboard_arrow_left',\n  },\n  {\n    component: 'carousel_next',\n    fa: 'fa fa-angle-right  fa-2x',\n  },\n  {\n    component: 'dockbar_close',\n    fa: faFaTimesIcon,\n    mat: 'close',\n  },\n  {\n    component: 'notify_close',\n    fa: faFaTimesIcon,\n    mat: 'close',\n  },\n  {\n    component: 'sidenav_bar',\n    fa: 'fa fa-bars fa-2x',\n    mat: 'menu',\n  },\n  {\n    component: 'sidenav_close',\n    fa: faFaTimesIcon,\n    mat: 'close',\n  },\n  {\n    component: 'datagrid_arrowdown',\n    fa: 'fa fa-arrow-down',\n    mat: 'arrow_downward',\n  },\n  {\n    component: 'datagrid_arrowup',\n    fa: 'fa fa-arrow-up',\n    mat: 'arrow_upward',\n  },\n  {\n    component: 'datagrid_list',\n    fa: 'fa fa-th-list',\n    mat: 'view_list',\n  },\n  {\n    component: 'datagrid_expand',\n    fa: 'fa fa-caret-right',\n    mat: '',\n  },\n  {\n    component: 'datagrid_collapse',\n    fa: faFaCaretIcon,\n    mat: 'arrow_drop_down',\n  },\n  {\n    component: 'datagrid_collapse',\n    fa: faFaCaretIcon,\n    mat: 'arrow_drop_down',\n  },\n  {\n    component: 'datagrid_filter',\n    fa: 'fa fa-filter',\n    mat: 'filter_list',\n  },\n  {\n    component: 'tree_filter',\n    fa: 'fa fa-filter',\n    mat: 'filter_list',\n  },\n  {\n    component: 'data_check',\n    fa: 'fa fa-check',\n    mat: 'check',\n  },\n  {\n    component: 'button_caret-down',\n    fa: faFaCaretIcon,\n    mat: 'arrow_drop_down',\n  },\n  {\n    component: 'menubar_ravelry',\n    fa: 'fa fa-ravelry',\n    mat: 'done',\n  },\n  {\n    component: 'sidenav-angle-up',\n    fa: 'fa fa-angle-up',\n    mat: 'keyboard_arrow_up',\n  },\n  {\n    component: 'sidenav-angle-down',\n    fa: 'fa fa-angle-down',\n    mat: 'keyboard_arrow_down',\n  },\n  {\n    component: 'window-msgtype-error',\n    fa: 'fa fa-exclamation-triangle fa-2x fa-fw',\n    mat: 'keyboard_arrow_down',\n  },\n  {\n    component: 'window-msgtype-warning',\n    fa: 'fa fa-exclamation-triangle fa-2x fa-fw',\n    mat: 'keyboard_arrow_down',\n  },\n  {\n    component: 'window-msgtype-help',\n    fa: 'fa fa-question-circle fa-2x fa-fw',\n    mat: 'keyboard_arrow_down',\n  },\n  {\n    component: 'window-msgtype-confirm',\n    fa: 'fa fa-check-circle fa-2x fa-fw',\n    mat: 'keyboard_arrow_down',\n  },\n  {\n    component: 'horizontal-tree-expanded',\n    fa: 'fa fa-caret-right fa-fw',\n    mat: 'keyboard_arrow_right',\n  },\n  {\n    component: 'horizontal-tree-collapse',\n    fa: 'fa fa-caret-left fa-fw',\n    mat: 'keyboard_arrow_left',\n  },\n  {\n    component: 'button-loading-icon',\n    fa: 'fa fa-refresh fa-spin',\n    mat: 'cached',\n  },\n  {\n    component: 'datepicker-clock-icon',\n    fa: 'fa fa-clock-o',\n    mat: 'access_time',\n  },\n];\n\nexport default ICON_MAPPING;\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","config","Promise","closed","isObject","errorObject","tryCatchTarget","fn","UnsubscriptionErrorImpl","Error","errors","name","Subscription","unsubscribe","hasErrors","_parent","_parents","index","isFunction","UnsubscriptionError","isArray","_subscriptions","len","sub","err","teardown","subscription","subscriptions","subscriptionIndex","indexOf","parent","Math","Subscriber","_super","_this","destination","destinationOrNext","syncErrorThrowable","tslib_1.__extends","subscriber","isStopped","_next","_error","_complete","SafeSubscriber","context","observerOrNext","complete","_context","_parentSubscriber","useDeprecatedSynchronousErrorHandling","__tryOrSetError","__tryOrUnsub","syncErrorValue","wrappedComplete","syncErrorThrown","hostReportError","Observable","subscribe","lift","operator","observable","source","sink","nextOrObserver","_subscribe","_a","closed_1","canReportError","forEach","promiseCtor","reject","operations","length","fns","input","toPromise","getPromiseCtor","scheduler","array","add","result","args","_isScalar","project","MapOperator","MapSubscriber","thisArg","count","OuterSubscriber","notifyNext","notifyError","InnerSubscriber","outerValue","subscribeToPromise","iterable","Symbol_iterator","subscribeToObservable","obj","isPromise","Symbol_observable","outerSubscriber","schedule","Number","MergeMapSubscriber","_innerSub","innerSubscriber","undefined","subscribeToResult","hasCompleted","innerValue","notifyComplete","buffer","concurrent","FilterOperator","FilterSubscriber","headers","Map","lazyInit","split","line","name_1","slice","key","toLowerCase","trim","maybeSetNormalizedName","has","get","set","keys","values","HttpHeaders","init","from","normalizedNames","clone","op","lcName","copyFrom","lazyUpdate","update","applyUpdate","other","concat","base","arguments","toDelete_1","existing","filter","delete","HttpUrlEncodingCodec","k","standardEncoding","v","decodeURIComponent","encodeURIComponent","replace","options","rawParams","codec","map","encoder","fromString","fromObject","param","eqIdx","val","list","HttpParams","res","eKey","encodeKey","encodeValue","join","cloneFrom","updates","base_1","idx","splice","ArrayBuffer","Blob","FormData","HttpEventType","method","url","third","fourth","toUpperCase","mightHaveBody","body","reportProgress","withCredentials","responseType","params","toString","urlWithParams","qIdx","sep","HttpRequest","isArrayBuffer","isBlob","isFormData","JSON","stringify","type","setHeaders","reduce","setParams","defaultStatus","defaultStatusText","status","statusText","ok","ResponseHeader","HttpHeaderResponse","HttpResponseBase","Response","HttpResponse","message","observe","handler","HttpClient","first","req","events$","of","pipe","concatMap","handle","res$","event","request","callbackParam","append","addBody","Injectable","HttpHandler","interceptor","HttpInterceptorHandler","intercept","HTTP_INTERCEPTORS","InjectionToken","NoopInterceptor","nextRequestId","callbackMap","document","JsonpClientBackend","observer","callback","nextCallback","node","createElement","src","finished","cancelled","data","cleanup","parentNode","removeChild","onLoad","HttpErrorResponse","onError","addEventListener","appendChild","Sent","removeEventListener","JsonpCallbackContext","Inject","DOCUMENT","XSSI_PREFIX","jsonp","JsonpInterceptor","BrowserXhr","XMLHttpRequest","xhrFactory","HttpXhrBackend","xhr","build","open","setRequestHeader","detectedType","detectContentTypeHeader","reqBody","serializeBody","headerResponse","partialFromXhr","getAllResponseHeaders","responseURL","test","getResponseHeader","response","responseText","originalBody","parse","text","sentHeaders","onDownProgress","progressEvent","DownloadProgress","loaded","lengthComputable","total","partialText","onUpProgress","progress","UploadProgress","upload","send","abort","XhrFactory","XSRF_COOKIE_NAME","XSRF_HEADER_NAME","doc","platform","cookieName","HttpXsrfCookieExtractor","cookieString","cookie","lastCookieString","parseCount","lastToken","parseCookieValue","PLATFORM_ID","tokenService","headerName","HttpXsrfInterceptor","lcUrl","startsWith","token","getToken","HttpXsrfTokenExtractor","backend","injector","HttpInterceptingHandler","chain","interceptors","reduceRight","HttpBackend","Injector","HttpClientXsrfModule","ngModule","providers","provide","useClass","useValue","NgModule","useExisting","multi","imports","withOptions","Component","selector","template","Input","ContentChild","_http","CommonDataService","serviceUrl","methodType","post","requestData","requestJson","element","dataTableService","cd","renderer","EventEmitter","left","top","selectedRows","sortBy","globalFilterOptions","checkedStatus","checkIcon","AmexioDatagridComponent","_data","componentLoaded","updateComponent","_columndefintion","enablecolumnfiter","enablecolumnfilter","isExpanded","iconclassKey","plusIcon","enabledatafilter","globalfilter","selectedrowcolor","httpmethod","httpurl","fetchData","responseData","setData","previousData","checkBoxSelectClass","setCheckBoxSelectClass","setChangeData","columnPreviewData","columndefintion","columns","createConfig","columnRefArray_1","columnRef","toArray","_i","columnConfig","columnData","headerTemplate","bodyTemplate","dataindex","hidden","datatype","width","sort","contextmenu","summarytype","summarycaption","httpResponse","setSelectedFlag","groupby","renderData","totalPages","pageNumbers","mask","viewRows","getResponseData","cloneData","filterCloneData","setColumnData","row","col","groupbydataindex","selectAll","filterValue","removeGlobalFilter","opt","getGlobalFilteredData","checkStatus","showToolTip","filteredObj","option","optvalue","filtervalue","endsWith","includes","pagesize","pagingRegenration","currentPage","maxPage","condition","setstatus","groups","groupName","expanded","isSelected","group","groupData","detectChanges","floor","pageNo","getPageSize","selectedRowNo","rowsTemp","newRows","startIndex","endIndex","responsedata","datareader","dr_1","vr","emitSelectedRows","column","rowData","rowIndex","optChild","rowId","rowSelect","emit","pageNumber","filterOpertion","statusArray","filterOpt","checkStringFilter","checkNumberFilter","classList","checkDefaultIcon","sRows","sr","selectedRowData","sortCol","clickEvent","onHeaderClick","setSortColumn","_sortBy","sortColumn","isColumnSort","sortData","sortColDataIndex_1","sortOrder_1","sortOrderGrpBy","a","x","y","noGrpBySortOrder","sortOrderByNumber","sortOrder","sortColDataIndex","btn","toggle","panel","nextElementSibling","style","maxHeight","scrollHeight","addRows","removeRows","level","random","index1","rows","ref","tempContextMenu","tempSelectedFlag","mouseLocation","clientX","clientY","flag","addListner","posixUp","getListPosition","preventDefault","stopPropagation","rightClickRowData","contextStyle","getContextMenuStyle","itemConfig","disabled","menuData","removeListner","rightClick","cursor","position","display","box-shadow","elementRef","window","screen","height","getBoundingClientRect","bottom","globalClickListenFunc","listen","ElementRef","ChangeDetectorRef","Renderer2","Output","ContentChildren","AmexioGridColumnComponent","filterOptions","DataGridFilterComponent","filterIcon","filterDataObject","removeFilter","filter_1","filteredObject","filterObject","AmexioDataGridHeaderComponent","faFaCaretIcon","faFaTimesIcon","ICON_MAPPING","component","fa","mat","iconMappings","IconLoaderService","_iconToUse","componentKey","newValue","icon","iconLoaderService","AmexioDataIconComponent","iconClass","getIconClass","iconObject","find","iconToUse","changes","currentValue","itemSelectorService","AmexioItemSelectorComponent","previousValue","availableData","right","leftactive","rightactive","switchingObject","objectIndex","ir","valuefield","_c","selectedData","_b","dragDropValidation","dataEmitter","setLeftSwitch","getIndexObject","tempArray","availableRecords","selectedRecords","dragData","acrossitemselector","dataTransfer","onDrag","itemClick","dragOverData","enabledrop","rightSwitch","leftSwitch","dataService","enablecheckbox","searchplaceholder","AmexioListBoxComponent","viewData","orgData","maskloader","tData","nodes","searchTree","filterText","matchingTitle","disp","displayfield","children","f","onRowClick","id","getContextMenu","contextMenuStyle","contextMenuFlag","AmexioPaginatorComponent","size","initializePages","change","isFirstChange","pages","fullPageSet","activePages","pageIndex","calculateRows","setRows","setBoundaries","activePageIndex","currentRowIndex","changeRows","onPageChange","activePage","rowNumber","inDx","currentRow","getCurrentRow","onPageChangeMethod","show","onRowChange","page","loopI","round","bFirst","bLast","AmexioProgressMultiBarComponent","AmexioProgressBarComponent","stripped","progressclass","strippedCss","amexiocolor","toLocaleLowerCase","cdf","treeViewFilterService","filterIndex","triggerchar","filterOptionData","AmexioFilterTreeComponent","parentTmp","templates","treeNodeTemplate","callService","orgTreeData","treeNodes","treeData","isDataFound","onClickSearch","fi","filterActualData","filterData","tdata","getData","renderServiceData","nodeClick","onTreeNodeChecked","HorizontalTreeViewNodeComponent","expand","onNodeClick","HorizontalTreeViewComponent","isNode","acrosstree","displaykey","childarraykey","AmexioTreeViewComponent","setTimeout","expandAllCall","parentRef","childCheck","collapseAllCall","activateNode","data_1","setSelectedFlagInChild","childcom","checkedData","checked","setCheckedStatusFromParent","searchObject","object","childOption","effectAllowed","dropEffect","noDragMethod","dragover","leaf","target","border","getDropNode","child","dropData","setDropAcrosstree","setDropNodeTree","removeNode","onDrop","checkNode","removeDragNode","dragNode","childNode","rightClickData","rightClickNodeData","nodeRightClick","NodeData","resetFlag","treeDataTableService","TreeDataTableComponent","onResize","treedata","nc","setRemovedRows","selectedRecord","h","innerHeight","gridHeader","nativeElement","offsetHeight","ViewChild","read","AmexioAccordionTabComponent","active","emittedEvent","AmexioAccordionComponent","accordionCollections","queryTabs","eventdata","activateAccordionPane","expandAll","isTransparent","angleIcon","tab","AmexioAccordionHeaderComponent","LayoutConstant","start","end","center","space-between","space-around","space-evenly","AmexioLayoutComponent","setLayoutDefination","setorientation","setAlignment","setBorder","setFit","orientation","orientationDirection","alignment","justifyContent","borderstyle","borderboxstyle","fit","styles","HostBinding","AmexioLayoutItemComponent","flexgrow","padding","lipadding","positionClass","AmexioBorderLayoutItemComponent","pos","role","AmexioBorderLayoutComponent","layoutitems","layout","item","borderclass","getClassType","AmexioBoxComponent","borderColor","bgColor","close","closable","AmexioHeaderComponent","AmexioFooterComponent","AmexioBodyComponent","headeralign","footeralign","AmexioCardComponent","headerComponentList","amexioHeader","currentIndex","headerPadding","bodyComponentList","amexioBody","bodyPadding","footerComponentList","amexioFooter","footerPadding","bodyheight","cardHeader","cardFooter","minHeight","colclass","AmexioColumnComponent","size_","AmexioGridLayoutService","dataLayout","findStatus","getLayout","layoutData","layoutType","layoutName","AmexioGridItemComponent","_name","hostname","insertStyleSheetRule","ruleText","sheets","styleSheets","createTextNode","head","sheet","insertRule","rules","cssRules","_gridlayoutService","AmexioGridComponent","colCount","containerClass","className","cssGenreration","getLayoutData","itemCollection","queryItem","deviceName","ele","cssGenerationCommonMethod","screenWidth","deviceType","insertStyleSheetRuleParent","getCssAttribute","dataCreation","AmexioIconLayoutComponent","AmexioRowComponent","platformId","print","phone","tablet","desktop","portrait","landscape","retina","mq","isPlatformBrowser","matchMedia","matches","DeviceQueryService","callBack","mql","mqlMethod","addListener","mql1","exports","_enable_super_gross_mode_that_will_cause_bad_things","console","warn","stack","log","config_1","hostReportError_1","tryCatcher","apply","errorObject_1","_unsubscribe","empty","remove","isFunction_1","tryCatch_1","UnsubscriptionError_1","flattenUnsubscriptionErrors","isArray_1","isObject_1","EMPTY","_addParent","tmp","errs","Observer_1","rxSubscriber_1","_parentSubscription","Subscription_1","bind","Subscriber_1","pipeFromArray","prev","noop_1","toSubscriber_1","_trySubscribe","canReportError_1","resolve","observable_1","pipe_1","ObjectUnsubscribedErrorImpl","subject","SubjectSubscription","observers","subscriberIndex","Subject","SubjectSubscriber","AnonymousSubject","ObjectUnsubscribedError_1","copy","hasError","thrownError","SubjectSubscription_1","Observable_1","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","connect","refCount","sharedConnection","_connection","subjectFactory","ConnectableObservable","getSubject","_subject","_isComplete","ConnectableSubscriber","refCount_1","connectableProto","writable","Subject_1","keySelector","elementSelector","durationSelector","subjectSelector","GroupByOperator","GroupBySubscriber","_group","groupedObservable","GroupedObservable","duration","GroupDurationSubscriber","clear","attemptedToUnsubscribe","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","_value","BehaviorSubject","getValue","work","Action","state","delay","AsyncAction","recycleAsyncId","pending","requestAsyncId","setInterval","flush","clearInterval","_execute","errored","errorValue","actions","Action_1","QueueAction","execute","AsyncAction_1","SchedulerAction","now","Scheduler","Date","Scheduler_1","AsyncScheduler","delegate","action","shift","AsyncScheduler_1","QueueScheduler_1","QueueAction_1","emptyScheduled","subscribeToArray_1","isScheduler_1","pop","empty_1","fromArray_1","scalar_1","dispatch","kind","hasValue","Notification","do","of_1","throwError_1","undefinedValueNotification","completeNotification","ObserveOnOperator","ObserveOnSubscriber","arg","notification","ObserveOnMessage","scheduleMessage","Notification_1","createNext","createError","createComplete","bufferSize","windowTime","POSITIVE_INFINITY","_bufferSize","_windowTime","_infiniteTimeWindow","nextInfiniteTimeWindow","nextTimeWindow","ReplaySubject","_events","ReplayEvent","_getNow","_trimBufferThenGetEvents","observeOn_1","queue_1","eventsCount","spliceCount","time","max","AsyncSubject","hasNext","nextHandle","tasksByHandle","setImmediate","cb","then","clearImmediate","AsapAction","scheduled","Immediate_1","AsapScheduler","AsapScheduler_1","AsapAction_1","AnimationFrameAction","requestAnimationFrame","cancelAnimationFrame","AnimationFrameScheduler","AnimationFrameScheduler_1","AnimationFrameAction_1","maxFrames","VirtualAction","frame","VirtualTimeScheduler","sortActions","ArgumentOutOfRangeErrorImpl","EmptyErrorImpl","TimeoutErrorImpl","TypeError","callbackFunc","AsyncSubject_1","innerArgs","dispatchNext","bindCallback","resultSelector","map_1","dispatchError","bindNodeCallback","outerIndex","innerIndex","innerSub","promise","getSymbolIterator","iterator_1","return","obs","subscribeToObservable_1","isArrayLike_1","isPromise_1","subscribeToPromise_1","subscribeToIterable_1","InnerSubscriber_1","subscribeTo_1","NONE","observables","CombineLatestOperator","CombineLatestSubscriber","toRespond","subscribeToResult_1","unused","oldVal","_tryResultSelector","OuterSubscriber_1","isInteropObservable_1","fromObservable_1","fromPromise_1","isIterable_1","fromIterable_1","mergeMap","from_1","ii","MergeMapOperator","_tryNext","ish","mergeMap_1","identity_1","mergeAll_1","concatAll_1","observableFactory","forkJoin","sources","ForkJoinSubscriber","innerSubscription","_hasValue","haveValues","completed","fromEvent","eventName","setupSubscription","sourceObj","source_1","on","off","source_2","removeListener","source_3","fromEventPattern","addHandler","removeHandler","retValue","needIterate","iterate","conditionResult","initialStateOrOptions","resultSelectorOrObservable","initialState","trueResult","falseResult","defer_1","parseFloat","counter","period","async_1","isNumeric_1","last","onErrorResumeNext","remainder","subNext","RaceOperator","RaceSubscriber","hasFirst","current","dueTime","periodOrScheduler","due","resourceFactory","resource","ZipOperator","ZipSubscriber","iterators","StaticArrayIterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","shouldComplete","_tryresultSelector","nextResult","isComplete","notifyInactive","checkIterators","asap","async","queue","animationFrame","noop","identity","isObservable","ArgumentOutOfRangeError","EmptyError","ObjectUnsubscribedError","TimeoutError","combineLatest","defer","generate","iif","interval","merge","never","pairs","race","range","throwError","timer","using","zip","NEVER","AccordionService","asObservable","LAYOUT_COMPONENTS","AmexioLayoutModule","CommonModule","FormsModule","HttpClientModule","declarations","AmexioTemplateDirective","Directive","TemplateRef","AmexioCarouselComponent","startTimeInterval","itemTemplate","nxt","tabs","scrollLeft","shuffleinterval","timeInterval","carouselItemPosix","scrollWidth","offsetWidth","clearTimeout","viewContainer","AmexioTemplateWrapperDirective","render","_item","view","destroy","createEmbeddedView","templateRef","$implicit","ViewContainerRef","secondaryactionlabel","primaryactionlabel","custom","buttonsize","buttontype","closeonescape","AmexiodialoguePaneComponent","showdialogue","contentalign","defaultStyle","getDefaultStyle","getStyle","globalListenFunc","showChange","onCloseClick","actionStatus","materialDesign","AmexioFieldSetComponent","collapsible","isActive","AmexioButtonComponent","onClick","badgeCssClass","badgeClass","AmexioButtonGroupComponent","_buttonGroupLocalData","buttonGroupPreviewData","buttonGroupLocalData","buttons","setButtonSizes","updateButtonSizes","btnObj","getButton","buttonObject","btns","addBadgeCssClass","button","badgeMoreClass","btnArray","AmexioFormActionComponent","btngrp","AmexioFormBodyComponent","AmexioFormGroupDirective","modelsarray","models","NgModel","descendants","AmexioFormHeaderComponent","formBuilder","checkForm","isFormValid","showDialogue","errorMsgArray","AmexioFormComponent","formHeader","formFooter","ngContentModels","innerModelArray","fb","fbnode","modelarray","fgc","control","grp","form","registerControl","model","isFieldPresentInParentAndChildBoth","valueAccessor","updateValueAndValidity","btnCom","formbind","fname","validateForm","isPresent","innerModel","entries","controls","addErrorMsg","disableButton","FormBuilder","NgForm","AmexioIconPaneComponent","panelstyle","visibility","AmexioPanelComponent","faFaIconUPCss","faFaIconDownCss","updatestyle","AmexioPanelHeaderComponent","StepBlockComponent","AmexioStepsComponent","clickData","ev","getStepBlockData","stepPreviewData","stepBlockArray","stepBlocks","tabId","AmexioTabPillComponent","AmexioRightVerticalTabComponent","tabCollection","tabNode","newTab","tabHighlightIndex","activateTab","ValueAccessorBase","onChangeCallback","onTouchedCallback","fieldlabel","inputType","newName","getRandomString","possibleCharacters","randomString","charAt","httpService","AmexioCheckBoxGroupComponent","viewdata","reponseData","_model","contains","emitCheckboxes","selectedCheckBoxes","selectedCheckBox","onSelection","c","required","jsonParseError","valid","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","AmexioFormValidator","AmexioCheckBoxComponent","generateName","isValid","isComponentValid","BaseInput","checkValidity","EventBaseComponent","hide","self","dropdownstyle","bindDocumentClickListener","onBaseItemClicked","unbindDocumentClickListener","clearClicks","documentClickListener","handleDocumentListener","markForCheck","BaseFormValidator","_cd","AmexioDropDownComponent","_errormsg","helpInfoMsg","allowblank","placeholder","multiselectValues","dr","setResponseData","multiSelection","setUserSelection","filteredOptions","multiselect","preSelectedMultiValues_1","optionsChecked_1","displayValue","setMultiSelect","onMultiSelect","valueKey_1","displayKey_1","val_1","onSingleSelect","selectedItem","optionsChecked_2","modelValue_1","mdValue","setMultiSelectData","multiselectDisplayString","getDisplayText","search","keyword","search_Term_1","keyCode","navigateUsingKey","onBaseFocusEvent","selectedindex","navigateFilterOptions","onItemSelect","prevselectedindex","scrollPositionIndex","selected","dropdownitems","scroll","scrollposition","fvalue","rvalue","onBaseBlurEvent","onBlur","elem","focus","writeChangedValue","status_1","AmexioLabelComponent","styleClass","tempStyleArray","enableclick","AmexioNumberInputComponent","_minerrormsg","_maxerrormsg","_pattern","regEx","RegExp","pattern","isFieldValidate","minvalue","maxvalue","amxHttp","AmexioRadioGroupComponent","defaultSelectedValue","checkSelectedFlag","checkDefaultValidation","AmexioRatingComponent","_max","buildRanges","onChange","onTouched","hovered","hoveredPercent","readonly","onHover","float","relativeX","pageX","offsetLeft","percent","onLeave","ratingRange","foo","AmexioTextInputComponent","isFieldValid","minlength","encapsulation","ViewEncapsulation","None","AmexioToggleComponent","shape","AmexioImageComponent","cclass","imgFluidCss","imageCss","overlayEffect","overlay","overlayText","overlayTextClass","overlayTextCss","textCss","overlayOverlayCss","imgTitle","imageTitleCss","imageTitleBottomCss","showContent","actionComponent","AmexioTabActionComponent","textinput","queryTextinput","haslabel","iconfeedback","checkbox","queryCheckbox","radioGroup","queryRadioGroup","horizontal","label","queryLabel","number","queryNumber","rating","queryRating","queryToggle","queryButton","image","queryImage","dropdown","queryDropDown","checkboxgroup","queryCheckBoxGroup","TOP_COMPONENT_CLASS_MAP","red","green","purple","blue","brown","yellow","black","pink","orange","BOTTOM_COMPONENT_CLASS_MAP","componentFactoryResolver","typeActionAlign","tabPosition","fullPageTabs","AmexioTabComponent","_tabLocalData","updateTabComponent","componentId","clientWidth","adjustWidth","headerWidth","tabAction","tabWidth1","headWidth","widthTabs","tabPreviewData","tabLocalData","tabPositionClass","findTabStyleClass","totalTabs","tWidth","totalElWidth","tabslist","shownext","singleTabWidth","onAdjustHeight","tabNodeProperties","actionComp","queryAction","checkActionComponent","title","tpCF","resolveComponentFactory","tp","createComponent","instance","dynCF","dynCmp","dummyArray","selectTab","closeTab","tabList","asignTabPillClass","tabPillClass","disabledTabInput","disableTabByString","disableTabByNumber","enableTabByString","enableTabByNumber","tab1","tabWidth","header","showprev","getElementById","tabData","defaultContextMenu","obj2","closeOthersConst","seperator","tmpflag","disable","temptab","closeAllTabs","closeOtherTabs","ComponentFactoryResolver","AmexioVerticalTabComponent","AmexioTimeLineModel","timelineevents","contentalignment","matchMediaService","that","OnPhone","mediaQueryList","mobileOrTabletMode","OnTablet","OnDesktop","desktopMode","AmexiotimelineComponent","querylist","initContentAlignment","hasContentAlignment","timeline","timelineModel","originalTimelineEvent1","AmexiotimelineeventComponent","AmexioWindowHeaderComponent","verticalposition","horizontalposition","positionclass","AmexioWindowPaneComponent","isFullWindow","setClass","showWindow","maximize","bodyHeight","setShowFlag","changedValue","AmexioSearchAdvanceComponent","advanceSearchFlag","SearchboxtoolComponent","advanceSearchRef","formwidth","enableAdvnSearch","enableAdvanceSearch","advanceButtonLabel","searchFlag","search_term_1","localData","keyup","navigateKeys","selectedValue","search_term_2","item1","selectedValueOnFocus","navigateKeysCondition","eventKeyCodeCondition","onSearchClick","onSearchItemClick","dr_2","AmexioButtonDropDownItemComponent","AmexioButtonDropdownComponent","dropdownItemData","createDropdownItemConfig","btnCollection","itemRefArray_1","onItemClick","iconStyleClass","badge","onClickRoute","openContent","click","eve","itemData","getLinkData","AmexioSpiltButtonDropdownComponent","colorCode","background-color","checkboxGroup","CheckboxComponent","Host","AmexioChipComponent","closeClick","createObject","labelClick","color","AmexioChipsComponent","emitSelectedLabel","selectedchipsData","AmexioCreditCardModel","owner","cvv","cardnumber","expMonth","expYear","templateFlag","creditCardModel","dummyMonth","dateData","month","cardGroupData","iconName","AmexioCreditcardComponent","modelValue","onChangeCardNumber","onChangeMonth","isNameValid","isCvvValid","cvvRegex","cardRegexMap","isEagarValid","dummyCreditCardNumber","eagarflag","eagarValue","validEagerCard","switchCaseMethod","onCheckValidation","creditCardNumberSpaceRemove","concatCardNumber","replaceSpace","cardPatternMap","isValidFullString","fullPatternflag","fullPatternValue","validPatternCard","inp","inpcvv","fullPatternValue_1","concatValue_1","eagarValue_1","cardNumberValue","newString","stringArray","visaEagerReg","mastereagerPattern","masttroeagerPattern","visaReg","masterpattern","mastropattern","cardName","currentYear","year","getFullYear","yearcount","yearList","match","parts","substring","ListBaseDatepickerComponent","itemClicked","viewmode","yearList1","yearList2","monthList1","num","monthList2","minDate","maxDate","elementId","getTime","selectedDate","currrentDate","curYear","j","daysTitle","daysArray","timepicker","hrs","getHours","min","getMinutes","initDaysTitle","createDaysForCurrentMonths","tmpElement","AmexioDateTimePickerComponent","inlineDatepicker","dateformat","minMaxDateFound","min_1","max_1","disableMinMaxYear","selectedPeriod","date","getMonth","extras","getDay","setDate","getDate","rowDays","day","isCurrentMonth","isDisabled","dateModel","dateObj","hostFlag","setHours","setMinutes","resetSelection","i_1","timeValue","parseInt","mins","setDateData","disableddays","diabledDate","setDateData1","mon","setPlusData","setMinusData","initDate","setMaxFullYear","setMonth","setMinFullYear","validateWriteValue","negateisValid","isNaN","pickerele","days","validateMaxDate","dates","From","To","to","element2","element1","elementFlagMethod","tempFlag","drop","chkMonth","monthNo","yearFlagNegate","yearFlag","yearNo","setFullYear","disableYearFlag","backArrow","rechkYearFlag","backArrowFlag","forwardArrowFlag","resetYearFlag","alterBackArrow","chkYearList1","alterBackForwardArrow","yearFlagDisable","forwardArrow","AmexioDropDownitemsComponent","iconalign","labelalign","AmexioDropDownMenuComponent","optionsCollection","dropdowns","targetElement","parentFound","parentElement","browserWindow","innerWidth","xposition","childposition","parentIconPosition","childPosition","parentLabelPosition","HostListener","AmexioEmailInputComponent","emailpattern","AmexioFileUploadComponent","bytes","decimals","dm","pow","toFixed","dropClass","dt","items","getAsFile","uploadFile","filedata","onRemove","fileData","uploadedFiles","singleFile","formData","paramname","formatBytes","serviceCall","fileList","files","uploadService","fsize","AmexioFloatingButtonComponent","addCSSClasses","absoluteposition","relative","btnPositionCss","block","setCricle","themeColorCss","greenColorType","redColorType","yellowColorType","defaultType","thisObj","changeDetection","ChangeDetectionStrategy","OnPush","elementref","AmexioFloatingGroupButtonComponent","datacount","currentTarget","floatinggroupposition","floatinggroupxposition","floatinggroupyposition","toggleVisibility","togglefloatinggroup","buttonClick","AmexioFormIconComponent","AmexioPasswordComponent","LoadRecaptchaService","script","innerHTML","_loadRecaptchaService","responseStructure","RecaptchaComponent","loadScript","onload","grecaptcha","ready","rendercaptcha","sitekey","onSuccess","onFailure","DomHandler","styles_1","styles_2","querySelectorAll","querySelector","children_1","childNodes","nodeType","elementDimensions","offsetParent","getHiddenElementDimensions","targetHeight","targetWidth","targetOffset","viewport","getViewport","elementOuterHeight","elementOuterWidth","targetOuterHeight","targetOuterWidth","windowScrollTop","getWindowScrollTop","windowScrollLeft","getWindowScrollLeft","elementHeight","elementWidth","dimensions","container","borderTopValue","getComputedStyle","getPropertyValue","borderTop","paddingTopValue","paddingTop","containerRect","offset","scrollTop","clientHeight","itemHeight","getOuterHeight","opacity","ms","gap","fading","documentElement","pageYOffset","clientTop","pageXOffset","clientLeft","Element","webkitMatchesSelector","msMatchesSelector","s","el","margin","marginLeft","marginRight","paddingLeft","paddingRight","paddingBottom","marginTop","marginBottom","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","win","g","getElementsByTagName","rect","navigator","userAgent","ua","isElement","HTMLElement","nodeName","calculatedScrollbarWidth","scrollDiv","scrollbarWidth","methodName","getSelection","removeAllRanges","rangeCount","getRangeAt","getClientRects","browser","matched","resolveUserAgent","version","exec","domHandler","ngZone","AmexioSliderComponent","dragging","updateDomData","sliderHandleClick","handleIndex","bindDragListeners","touchobj","changedTouches","startHandleValue","handleValues","handleValue","startx","barWidth","starty","barHeight","setValueFromHandle","handleChange","calculateHandleValue","runOutsideAngular","dragListener","run","mouseupListener","mouseUpListMethod","onSlideEnd","originalEvent","getValueFromHandle","step","handleStepChange","updateValue","oldValue","diff","ceil","updateHandleValue","onModelChange","onModelTouched","isVertical","initX","initY","pageY","valueEvent","updateValueNoRange","unbindDragListeners","NgZone","AmexioSpinnerComponent","_color","ischanges","assignColor","newColor","inlinecss","alpha","addClass","AmexioTagsInputComponent","filteredResult","keyUpDownMethod","keyUpMethod","activerow","currentActive","inpHandle","onSelections","indexToRemove","selectedVal","AmexioTextAreaComponent","ToolbaroneComponent","toolbarposition","ToolbarComponent","toolCollection","queryTool","getToolbaritemposition","tool","toolnode","cssName","ToolBarActionComponent","navLinkClick","DropDownListComponent","itemclick","rowindex","listitems","getElementsByClassName","scrollIntoView","behavior","ListBaseComponent","AmexioTypeAheadComponent","_fieldlabel","initComponent","_haslabel","_key","dropdownlist","onInputOutput","onFocusOutput","keycode","attributes","blur","userinput","writeValue","showValue","ViewChildren","help","AmexioInputHelperComponent","_minmsg","_maxmsg","errormsg","FilterPipe","field","singleItem","Pipe","FORM_COMPONENTS","AmexioFormsModule","PANE_COMPONENTS","AmexioPaneModule","ReactiveFormsModule","entryComponents","DATA_COMPONENTS","AmexioDataModule","AmexioVideoPlayerComponent","videoPlayer","volume","currentVolume","muted","isMuted","isPlaying","pause","play","percentage","currentTime","progressBar","resetPlayer","onPlay","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","volumebar","MEDIA_COMPONENTS","AmexioMediaModule","AmexioBreadcrumbComponent","arrowKey","buttonAngleRightCss","nodeArray","childIconCheckMethod","childIcon","iconAddedMethod","arrayOnly","childItem","onListItemClick","expandData_1","dataObject","DockbarComponent","DockedBarToolComponent","dockbarArray","dockbars","AmexioNavIconPaneComponent","AmexioMenuBarComponent","IsPhone","IsTablet","AmexioNavActionComponent","AmexioNavItemComponent","isAction","isTextField","isMenu","isMenuContainer","onNavItemClick","mobilemode","navbarwidth","enablerightclass","AmexioNavBarComponent","logo","loadNavItems","handleNavItems","navitemwidth","navbaritems2","navbaritems3","handleDeviceSetting","navItemComponents","navitems","handleNavItemEvent","setMobileMode","setNavbarWidth","sidenavspace","sideNavbar","navbar","navbarheight","navfixeditem","navbarfixed","navbaritems1Width","navbaritems2Width","navbaritems3Width","navbaritems1","navbaravailablewidth","notifyNavItems","sidenav","AmexioNavMenuComponent","_node","_event","AmexioNavTextFieldComponent","AmexioNotificationComponent","messageData","autodismissmsg","autodismissmsginterval","notificationVertialCss","notificationHorizontalCss","msg","smalldevice","sidenavexpandedinsmalldevice","handleDeviceSettings","AmexioSideNavComponent","isSideNavExpand","AmexioSideNavInnerNodeComponent","getOnClick","enabledrag","SideNavNodeComponent","collapsable","NAV_COMPONENTS","AmexioNavModule","AmexioGridModel","mobile","GridConfig","amexiogridmodel","GridConstants","Desktop","AmexioWidgetModule","DashBoardTitleComponent","DataPointCenterComponent","colspan","DataPointsComponent","dpClass","west","east","DataPointEastComponent","DataPointNorthComponent","DataPointSouthComponent","DataPointWestComponent","AreaChart","Bar","BarChart","ColumnChart","PieChart","Gantt","Gauge","GeoChart","Histogram","Line","LineChart","Timeline","BubbleChart","CandlestickChart","ComboChart","TreeMap","googleScriptLoadingNotifier","isScriptLoading","DashboardLoaderService","chartName","loadRequiredChart","loadBaseChart","google","charts","onerror","load","packages","setOnLoadCallback","visualization","chartPackage","loader","GaugeChartComponent","showChart","gaugeData","arrayToDataTable","redFrom","redcolorfrom","redTo","redcolorto","yellowFrom","yellowcolorfrom","yellowTo","yellowcolorto","scalevalue","chart","gaugedashboard","hasLoaded","draw","chartTitleArray","chartTitleComp","chartTitleComponent","loadCharts","errror","drawChart","DASHBOARD","AmexioDashBoardModule","ChartAreaComponent","ChartLegendComponent","ChartTitleComponent","ChartLoaderService","AreaChartComponent","areaData","titleTextStyle","createTitleTextStyle","backgroundcolor","legend","chartLengendComponent","createChartLegend","chartArea","chartAreaComponent","createChartArea","areachart","events","fontName","fontname","fontsize","bold","italic","maxLines","maxlines","textStyle","chartbackgroundcolor","leftposition","topposition","chartheight","chartwidth","chartLegendArray","chartLegendComp","chartAreaArray","chartAreaComp","BarChartComponent","barData","chartTitleTextStyle","isStacked","stacked","createChartBar","hAxis","xaxistitle","vAxis","yaxistitle","barchart","HorizontalAxisComponent","VerticalAxisComponent","BubbleChartComponent","bubbleData","createChartBackground","verticalComponent","createChartVertical","horizontalComponent","createchartHorizontal","bubble","axiscolor","colors","bubblechart","titlecolor","horizontalArray","horizontalComp","verticalArray","verticalComp","CandlestickChartComponent","candlestickData","chartTileTextStyle","chartLegendStyle","chartVerticalStyle","chartHorizontalStyle","candlestick","CandlestickWaterfallChartComponent","chartVerticalComponent","chartHorizontalComponent","bar","groupWidth","barwidth","chartColorStyle","candlestickwaterfall","fallingColor","fallingcolor","strokeWidth","fill","risingColor","risingcolor","ColumnChartComponent","createTable","chartBackGroundColor","columnchart","dupArray","DataTable","labelObject","datatypeObject","addColumn","finalArray","rowObject","ComboChartComponent","comboData","chartTitleStyle","chartBackground","seriesType","series","4","combochart","DonutChartComponent","donutData","chariTitleTextStyle","pieHole","chartBackgroundColor","donutchart","GanttChartComponent","gantt","criticalPathEnabled","criticalPathStyle","stroke","innerGridTrack","innerGridTrackColor","innerGridDarkTrack","ganttchart","copyOfArray","newArray","HistogramChartComponent","histogramData","charttitleTextStyle","chartegendStyle","histogramchart","LineChartComponent","lineData","chartBackgroundStyle","linechart","PieChartComponent","pieData","is3D","is3d","piehole","startangle","chartLengendStyle","piechart","ScatterChartComponent","scatterData","ScatterChart","scatterchart","TimeLineChartComponent","timelinechart","CHART_COMPONENTS","AmexioChartsModule","MapLoaderService","MapPropertiesComponent","GeoChartComponent","geomapData","showChartExist","geochart","displayMode","countryname","region","regioncode","unusedregioncolor","MapTitleComponent","TreeMapComponent","treemapData","initializeOptions","treemapmap","mapTitleComponent","mapTitleTextStyle","mincolor","midcolor","maxcolor","headerHeight","fontcolor","showscale","maxpostdepth","mapTitleArray","maptleComp","MAP_COMPONENTS","AmexioMapModule","MultiMediaCarouselComponent","carouselStyle","ts","displayDetail","videoUrl","video","currentDetailsImagePath","details_img","currentDetailsTitle","currentDetailsDesc","desc","currentContent","content","seasonNo","matchPercentage","ageLimit","releaseYear","onVideoLoad","closeEnable","smallScreen","ContentComponent","videoLink","onWatchClick","overviewData","description","Video Link","rate","onAddListClick","onUnlikeLikeClick","onLikeClick","sanitizer","AmexioYoutubePlayerComponent","closePadding","sanitizedUrl","bypassSecurityTrustResourceUrl","onCloseVideoPlayer","DomSanitizer","ENTERPRISE_COMPONENTS","AmexioEnterpriseModule","primary","secondary"],"mappings":"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U3P,EAAc4P,EAAehmE,GACnC,OAAKo2D,EAGA4P,GAAUhmE,EAIRo2D,EAAM9sD,OAAO,SAAC28D,GACjB,OAAAA,EAAWD,GAAOn+D,cAAc4M,WAAWzU,EAAM6H,iBAJ1CuuD,EAHA,wBAPlB8P,aAAK,CACFtlE,KAAM,sBAETiO,oBCyDKs3D,GAAkB,CACtBroB,GACA1G,GACAmB,GACAosB,GACAgB,GACAlpB,GACAiZ,GACA5Z,GACAid,GACAwK,GACAnlB,GACAvB,GACA3M,GACAI,GACA2Y,GACAc,GACAf,GACA7S,GACAgU,GACA2O,GACA4G,GACAmD,GACA3S,GACAlH,GACAC,GACAc,GACA6L,GACAla,GACA0b,GACAiB,GACA8L,GACA1P,GACAG,GACA8O,GACAF,GACAS,GACArc,GACAF,GACA2R,GACAgJ,GACA3W,GACArB,GACAK,GACAqb,uCAgBOK,UAAP,WACE,MAAO,CACL9wD,SAAU8wD,EACV7wD,UAAW,CAACe,GAAmByN,GAAmBi1C,0BAhBvDrjD,iBAAS,CACRG,QAAS,CACPm3B,eACAC,cACAF,GACAG,IAEFrV,QAASquC,GACT/4B,aAAc+4B,GACd5wD,UAAW,CAACe,GAAmByN,GAAmB+1C,aCjD9CuM,GAAkB,CACtBvzC,GACAC,GACAC,GACA+c,GACAmX,GACAJ,GACArS,GACAQ,GACA4M,GACA6D,GACAxQ,GACA1H,GACAH,GACAgB,GACAmG,GACAL,GACAI,GACAP,GACA5E,GACA+C,GACAd,GACAQ,GACAN,GACAC,GACA8N,GACAgH,GACAO,uCAiBOyf,UAAP,WACE,MAAO,CACLhxD,SAAUgxD,EACV/wD,UAAW,CAACe,GAAmBkhB,GAAoBzT,0BAjBxDpO,iBAAS,CACRG,QAAS,CACPm3B,eACAC,cACAq5B,sBACAH,GACAj5B,IAEFq5B,gBAAiB,CAACvxB,IAClBnd,QAASuuC,GACTj5B,aAAci5B,GACd9wD,UAAW,CAACe,GAAmBkhB,GAAoBzT,aC5E/C0iD,GAAkB,CACtBt6C,GACArF,GACAtP,GACA+L,GACAP,GACAgF,GACAlF,GACA+G,GACAC,GACA6B,G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"}